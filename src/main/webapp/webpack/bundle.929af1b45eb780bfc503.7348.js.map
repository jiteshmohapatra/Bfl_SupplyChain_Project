{"version":3,"file":"bundle.929af1b45eb780bfc503.7348.js","mappings":"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","sources":["webpack://openboxes/./src/js/utils/Select.jsx","webpack://openboxes/./src/js/wrappers/CustomTooltip.jsx"],"sourcesContent":["import React, { Component, isValidElement } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { Overlay } from \"react-overlays\";\nimport { connect } from \"react-redux\";\nimport ReactSelect, { Async, components } from \"react-select\";\nimport { Tooltip } from \"react-tippy\";\n\nimport { selectNullOption } from \"utils/option-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-tippy/dist/tippy.css\";\n\nconst Dropdown = ({ children, style, width }) => (\n  <div\n    style={{\n      ...style,\n      position: \"absolute\",\n      zIndex: 9999,\n      width,\n      backgroundColor: \"white\",\n      border: \"1px solid hsl(0deg 0% 80%)\",\n    }}\n  >\n    {children}\n  </div>\n);\n\nDropdown.propTypes = {\n  children: PropTypes.element.isRequired,\n  style: PropTypes.shape({}).isRequired,\n  width: PropTypes.string.isRequired,\n};\n\nconst Menu = (props) => {\n  const target = document.getElementById(`${props.selectProps.id}-container`);\n  return (\n    <Overlay\n      show\n      placement=\"bottom\"\n      target={target}\n      container={document.getElementById(\"root\")}\n    >\n      <Dropdown width={target.offsetWidth.toString()}>\n        <div\n          role=\"list\"\n          data-testid=\"custom-select-dropdown-menu\"\n          className=\"custom-option\"\n          {...props.innerProps}\n        >\n          {props.selectProps.createNewFromModal && (\n            <div\n              className=\"add-new-button\"\n              onClick={props.selectProps.newOptionModalOpen}\n              onKeyPress={props.selectProps.newOptionModalOpen}\n              role=\"button\"\n              tabIndex={0}\n            >\n              <span>\n                <i className=\"fa fa-plus pr-2\" />\n                <Translate\n                  id={props.selectProps.createNewFromModalLabel}\n                  defaultMessage={props.selectProps.defaultMessage}\n                />\n              </span>\n            </div>\n          )}\n          {props.children}\n        </div>\n      </Dropdown>\n    </Overlay>\n  );\n};\n\nMenu.propTypes = {\n  children: PropTypes.element.isRequired,\n  innerProps: PropTypes.shape({}).isRequired,\n  selectProps: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    createNewFromModal: PropTypes.bool.isRequired,\n    newOptionModalOpen: PropTypes.func.isRequired,\n    createNewFromModalLabel: PropTypes.string.isRequired,\n    defaultMessage: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst Option = (props) => (\n  <components.Option {...props}>\n    <div role=\"listitem\">\n      {props.selectProps.optionRenderer ? (\n        props.selectProps.optionRenderer(props.data)\n      ) : (\n        <div>{props.data.label}</div>\n      )}\n    </div>\n  </components.Option>\n);\n\nOption.propTypes = {\n  data: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n  }).isRequired,\n  selectProps: PropTypes.shape({\n    optionRenderer: PropTypes.func,\n  }).isRequired,\n};\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: props.initialValue === undefined ? null : props.initialValue,\n      id: _.uniqueId(\"select-id_\"),\n      sortedOptionsByChecked: null,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.getTooltipHtml = this.getTooltipHtml.bind(this);\n    this.getValueLabel = this.getValueLabel.bind(this);\n    this.mapOptions = this.mapOptions.bind(this);\n  }\n\n  get options() {\n    const valuesOptions = this.mapOptions(this.props.options);\n    if (this.props.nullOption) {\n      const nullOption = {\n        ...selectNullOption,\n        label: this.props.translate(\n          this.props.nullOptionLabel,\n          this.props.nullOptionDefaultLabel,\n        ),\n      };\n      valuesOptions.unshift(nullOption);\n    }\n    return valuesOptions;\n  }\n\n  getValueLabel() {\n    const { multi, value, labelKey } = this.props;\n\n    if (!value) {\n      return \"\";\n    }\n\n    if (value?.displayNames?.default || value?.displayName) {\n      return value?.name;\n    }\n\n    if (multi) {\n      return this.props.value\n        .map((v) => {\n          const label = v?.[labelKey] ?? v?.label;\n          if (label) {\n            return label;\n          }\n          // if there are no labels on value item\n          // then try to extract these labels from select options\n          const option = this.options.find((it) => it?.id && it?.id === v?.id);\n          return option?.[labelKey] ?? option?.label;\n        })\n        .join(\", \");\n    }\n\n    return value.label ?? value.name;\n  }\n\n  getTooltipHtml() {\n    const {\n      placeholder,\n      showLabelTooltip,\n      defaultPlaceholder,\n      tooltipValue,\n      tooltipDefaultValue,\n    } = this.props;\n\n    if (tooltipValue?.trim()) {\n      const tooltipTranslatedLabel = this.props.translate(\n        tooltipValue,\n        tooltipDefaultValue ?? tooltipValue,\n      );\n      return <div className=\"p-1\">{tooltipTranslatedLabel}</div>;\n    }\n\n    const valueLabel = this.getValueLabel();\n\n    if (showLabelTooltip) {\n      const placeholderTranslatedLabel = this.props.translate(\n        placeholder,\n        defaultPlaceholder ?? placeholder,\n      );\n      return (\n        <div className=\"p-1\">\n          {`${placeholderTranslatedLabel}${valueLabel ? `: ${valueLabel}` : \"\"}`}\n        </div>\n      );\n    }\n\n    return <div className=\"p-1\">{valueLabel}</div>;\n  }\n\n  mapOptions(values) {\n    return _.map(values, (value) => {\n      const newValue = value;\n      if (typeof value === \"string\") {\n        return { value, label: value };\n      }\n      if (value.options) {\n        newValue.options = this.mapOptions(value.options);\n      }\n      if (value && this.props.labelKey && !value.label) {\n        newValue.label = value[this.props.labelKey];\n      }\n      if (value && this.props.valueKey && !value.value) {\n        newValue.value = value[this.props.valueKey];\n      }\n      return newValue;\n    });\n  }\n\n  handleChange(value) {\n    if (value !== null && value !== undefined) {\n      this.props.onChange(value);\n      this.setState({ value });\n    } else {\n      this.props.onChange(null);\n      this.setState({ value: null });\n    }\n  }\n\n  sortOptionsByChecked(options, checkedValues) {\n    const groupByChecked = () => {\n      if (options?.length) {\n        return options.reduce(\n          (acc, curr) => {\n            // If checked values contain current option, add it to checked options\n            if (checkedValues?.some((val) => val.id === curr.id)) {\n              return {\n                ...acc,\n                checked: [...acc.checked, curr],\n              };\n            }\n            // If checked values don't contain current option, add it to unchecked\n            return {\n              ...acc,\n              unchecked: [...acc.unchecked, curr],\n            };\n          },\n          { checked: [], unchecked: [] },\n        );\n      }\n      return { checked: [], unchecked: [] };\n    };\n    const { checked, unchecked } = groupByChecked();\n    // Concat checked and unchecked options in order: checked, unchecked, so checked are at the top\n    this.setState({\n      sortedOptionsByChecked: [...checked, ...unchecked],\n    });\n  }\n\n  render() {\n    const {\n      options: selectOptions,\n      value: selectValue = this.state.value,\n      multi = false,\n      delimiter = \";\",\n      async = false,\n      showValueTooltip,\n      showLabelTooltip,\n      clearable = true,\n      arrowLeft,\n      arrowUp,\n      arrowRight,\n      arrowDown,\n      fieldRef,\n      onTabPress,\n      onEnterPress,\n      customSelectComponents,\n      optionRenderer,\n      classNamePrefix,\n      showSelectedOptionColor,\n      scrollableParentContainerClassName,\n      onKeyDown,\n      ...attributes\n    } = this.props;\n    const { formatValue, className, showLabel = false } = attributes;\n\n    let value = selectValue || null;\n\n    if (selectValue && typeof selectValue === \"string\") {\n      const selectedOption = _.find(\n        this.options,\n        (o) => o.value === selectValue,\n      );\n      value = {\n        value: selectValue,\n        label: selectedOption ? selectedOption.label : \"\",\n      };\n    }\n\n    if (!multi) {\n      if (value && attributes.valueKey && !value.value) {\n        value = { ...value, value: value[attributes.valueKey] };\n      }\n\n      if (value && attributes.labelKey && !value.label) {\n        value = { ...value, label: value[attributes.labelKey] };\n      }\n    }\n\n    const SelectType = async ? Async : ReactSelect;\n\n    const SingleValue = (props) => (\n      <components.SingleValue {...props}>\n        {this.props.valueRenderer ? (\n          this.props.valueRenderer({ ...props.data, showSelectedOptionColor })\n        ) : (\n          <div>{props.data.label}</div>\n        )}\n      </components.SingleValue>\n    );\n\n    if (attributes.disabled && this.props.value && showLabel) {\n      // eslint-disable-next-line no-nested-ternary\n      const formattedValue = formatValue\n        ? formatValue(this.props.value)\n        : this.props.value.label\n          ? this.props.value.label\n          : this.props.value;\n      return (\n        <div id={`${this.state.id}-container`}>\n          <Tooltip\n            html={this.props.value.label}\n            disabled={!showValueTooltip}\n            theme=\"transparent\"\n            delay=\"150\"\n            duration=\"250\"\n            hideDelay=\"50\"\n          >\n            <div title=\"\" className={`font-size-xs text-truncate ${className}`}>\n              {formattedValue}\n            </div>\n          </Tooltip>\n        </div>\n      );\n    }\n\n    const getPlaceholder = () => {\n      if (!attributes.placeholder) {\n        return null;\n      }\n\n      // If we are passing HTML element we would like to use it as placeholder\n      // otherwise it should be an object with attributes for translation\n      if (isValidElement(attributes.placeholder)) {\n        return attributes.placeholder;\n      }\n\n      return (\n        <Translate\n          id={attributes.placeholder}\n          defaultMessage={\n            attributes.defaultPlaceholder ?? attributes.placeholder\n          }\n        />\n      );\n    };\n\n    /* We would like to see the tooltip when an item\n      has displayName or when the showLabelTooltip\n      or showValueTooltip are truthy. We return false\n      when at least one property is true, because we need\n      an information when the tooltip should be disabled.\n     */\n    const isTooltipDisabled = () => {\n      const { value: fieldValue } = this.props;\n\n      if (fieldValue?.displayName || showLabelTooltip) {\n        return false;\n      }\n      const hasFieldValue = Array.isArray(fieldValue)\n        ? fieldValue.length\n        : fieldValue;\n      return !(showValueTooltip && hasFieldValue);\n    };\n\n    const closeMenuOnScroll = (e) => {\n      if (scrollableParentContainerClassName) {\n        return e.target.className === scrollableParentContainerClassName;\n      }\n\n      return false;\n    };\n\n    return (\n      <div\n        id={`${this.state.id}-container`}\n        data-testid=\"custom-select-element\"\n      >\n        <Tooltip\n          html={this.getTooltipHtml()}\n          disabled={isTooltipDisabled()}\n          theme=\"transparent\"\n          arrow=\"true\"\n          delay=\"150\"\n          duration=\"250\"\n          hideDelay=\"50\"\n          title=\" \"\n          classes=\"\"\n        >\n          <SelectType\n            {...attributes}\n            closeMenuOnScroll={closeMenuOnScroll}\n            placeholder={getPlaceholder()}\n            isDisabled={attributes.disabled}\n            options={\n              (value?.length && this.state.sortedOptionsByChecked) ||\n              this.options\n            }\n            isMulti={multi}\n            isClearable={clearable}\n            title=\"\"\n            delimiter={delimiter}\n            onMenuClose={() => {\n              if (multi) this.sortOptionsByChecked(this.options, value);\n              if (this.props.onMenuClose) this.props.onMenuClose();\n            }}\n            value={value}\n            onChange={this.handleChange}\n            components={{\n              ...customSelectComponents,\n              Menu: customSelectComponents.Menu ?? Menu,\n              Option: customSelectComponents.Option ?? Option,\n              SingleValue: customSelectComponents.SingleValue ?? SingleValue,\n            }}\n            ref={fieldRef}\n            classNamePrefix={classNamePrefix}\n            loadingMessage={() =>\n              this.props.translate(\"react.default.loading.label\", \"Loading...\")\n            }\n            noOptionsMessage={() =>\n              async\n                ? this.props.translate(\n                    \"react.default.select.noResultsFound.label\",\n                    \"No results found\",\n                  )\n                : this.props.translate(\n                    \"react.default.select.typeToSearch.label\",\n                    \"Type to search\",\n                  )\n            }\n            onKeyDown={(event) => {\n              if (this.props.onKeyDown) {\n                this.props.onKeyDown(event);\n              }\n\n              switch (event.keyCode) {\n                case 37 /* arrow left */:\n                  if (arrowLeft) {\n                    arrowLeft();\n                    event.preventDefault();\n                    event.stopPropagation();\n                  }\n                  break;\n                case 38 /* arrow up */:\n                  if (arrowUp) {\n                    arrowUp();\n                    event.preventDefault();\n                    event.stopPropagation();\n                  }\n                  break;\n                case 39 /* arrow right */:\n                  if (arrowRight) {\n                    arrowRight();\n                    event.preventDefault();\n                    event.stopPropagation();\n                  }\n                  break;\n                case 40 /* arrow down */:\n                  if (arrowDown) {\n                    arrowDown();\n                    event.preventDefault();\n                    event.stopPropagation();\n                  }\n                  break;\n                case 9 /* Tab key */:\n                  if (onTabPress) {\n                    onTabPress(event);\n                  }\n                  break;\n                case 13 /* Enter key */:\n                  if (onEnterPress) {\n                    onEnterPress(event);\n                  }\n                  break;\n                default:\n              }\n            }}\n            name={this.state.id}\n            id={this.state.id}\n            optionRenderer={optionRenderer}\n          />\n        </Tooltip>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps)(Select);\n\nSelect.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\n  ).isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({}),\n    PropTypes.any,\n  ]),\n  onChange: PropTypes.func,\n  onMenuClose: PropTypes.func,\n  multi: PropTypes.bool,\n  clearable: PropTypes.bool,\n  async: PropTypes.bool,\n  delimiter: PropTypes.string,\n  showValueTooltip: PropTypes.bool,\n  showLabelTooltip: PropTypes.bool,\n  tooltipValue: PropTypes.string,\n  tooltipDefaultValue: PropTypes.string,\n  placeholder: PropTypes.string,\n  initialValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({}),\n    PropTypes.any,\n  ]),\n  arrowLeft: PropTypes.func,\n  arrowUp: PropTypes.func,\n  arrowRight: PropTypes.func,\n  arrowDown: PropTypes.func,\n  fieldRef: PropTypes.func,\n  onTabPress: PropTypes.func,\n  onEnterPress: PropTypes.func,\n  optionRenderer: PropTypes.func,\n  valueRenderer: PropTypes.func,\n  customSelectComponents: PropTypes.shape({}),\n  classNamePrefix: PropTypes.string,\n  translate: PropTypes.func.isRequired,\n  defaultPlaceholder: PropTypes.string,\n  showSelectedOptionColor: PropTypes.bool,\n  labelKey: PropTypes.string,\n  valueKey: PropTypes.string,\n  nullOption: PropTypes.bool,\n  nullOptionLabel: PropTypes.string,\n  nullOptionDefaultLabel: PropTypes.string,\n  scrollableParentContainerClassName: PropTypes.string,\n  onKeyDown: PropTypes.func,\n};\n\nSelect.defaultProps = {\n  value: undefined,\n  onChange: null,\n  onMenuClose: null,\n  multi: false,\n  clearable: true,\n  async: false,\n  delimiter: \";\",\n  placeholder: \"\",\n  defaultPlaceholder: \"\",\n  initialValue: null,\n  showValueTooltip: false,\n  showLabelTooltip: false,\n  tooltipValue: undefined,\n  tooltipDefaultValue: undefined,\n  arrowLeft: null,\n  arrowUp: null,\n  arrowRight: null,\n  arrowDown: null,\n  fieldRef: null,\n  onTabPress: null,\n  onEnterPress: null,\n  optionRenderer: null,\n  valueRenderer: null,\n  showSelectedOptionColor: false,\n  customSelectComponents: {},\n  classNamePrefix: \"react-select\",\n  labelKey: null,\n  valueKey: null,\n  nullOption: false,\n  nullOptionLabel: \"\",\n  nullOptionDefaultLabel: \"null\",\n  scrollableParentContainerClassName: null,\n  onKeyDown: null,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { Tooltip } from \"react-tippy\";\n\nconst CustomTooltip = ({ children, content, className, show, icon: Icon }) =>\n  // This div was added to ensure the tooltip works correctly with absolute positioning\n  show ? (\n    <div className={className}>\n      <Tooltip\n        delay={150}\n        duration={250}\n        hideDelay={50}\n        className=\"w-100\"\n        html={<div className=\"p-2 tooltip-dark-blue\">{content}</div>}\n      >\n        <div className=\"flex items-center\">\n          {Icon && <Icon className=\"mr-2\" />}\n          {children}\n        </div>\n      </Tooltip>\n    </div>\n  ) : (\n    children\n  );\n\nexport default CustomTooltip;\n\nCustomTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  content: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  show: PropTypes.bool,\n  icon: PropTypes.elementType,\n};\n\nCustomTooltip.defaultProps = {\n  className: \"\",\n  icon: null,\n  show: true,\n};\n"],"names":["Dropdown","_ref","children","style","width","React","_objectSpread","position","zIndex","backgroundColor","border","propTypes","PropTypes","isRequired","Menu","props","target","document","getElementById","concat","selectProps","id","Overlay","show","placement","container","offsetWidth","toString","_extends","role","className","innerProps","createNewFromModal","onClick","newOptionModalOpen","onKeyPress","tabIndex","Translate","createNewFromModalLabel","defaultMessage","Option","components","optionRenderer","data","label","Select","_Component","_this","_classCallCheck","_callSuper","state","value","undefined","initialValue","_","sortedOptionsByChecked","handleChange","bind","getTooltipHtml","getValueLabel","mapOptions","_inherits","key","get","valuesOptions","this","options","nullOption","selectNullOption","translate","nullOptionLabel","nullOptionDefaultLabel","unshift","_value$displayNames","_value$label","_this2","_this$props","multi","labelKey","displayNames","displayName","name","map","v","_v$labelKey","_option$labelKey","option","find","it","join","_this$props2","placeholder","showLabelTooltip","defaultPlaceholder","tooltipValue","tooltipDefaultValue","trim","tooltipTranslatedLabel","valueLabel","placeholderTranslatedLabel","values","_this3","newValue","valueKey","onChange","setState","checkedValues","_groupByChecked","length","reduce","acc","curr","some","val","checked","_toConsumableArray","unchecked","_value","_customSelectComponen","_customSelectComponen2","_customSelectComponen3","_this4","_this$props3","_this$props3$value","selectValue","_this$props3$multi","_this$props3$delimite","delimiter","_this$props3$async","async","showValueTooltip","_this$props3$clearabl","clearable","arrowLeft","arrowUp","arrowRight","arrowDown","fieldRef","onTabPress","onEnterPress","customSelectComponents","classNamePrefix","showSelectedOptionColor","scrollableParentContainerClassName","attributes","onKeyDown","_objectWithoutProperties","_excluded","formatValue","_attributes$showLabel","showLabel","selectedOption","o","_attributes$defaultPl","SelectType","Async","ReactSelect","disabled","formattedValue","Tooltip","html","theme","delay","duration","hideDelay","title","fieldValue","hasFieldValue","Array","isArray","isTooltipDisabled","arrow","classes","closeMenuOnScroll","e","isValidElement","isDisabled","isMulti","isClearable","onMenuClose","sortOptionsByChecked","SingleValue","valueRenderer","ref","loadingMessage","noOptionsMessage","event","keyCode","preventDefault","stopPropagation","Component","connect","translateWithDefaultMessage","getTranslate","localize","defaultProps","CustomTooltip","content","Icon","icon"],"sourceRoot":""}