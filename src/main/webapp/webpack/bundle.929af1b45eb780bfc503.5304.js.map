{"version":3,"file":"bundle.929af1b45eb780bfc503.5304.js","mappings":"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","sources":["webpack://openboxes/./src/js/consts/mimeType.js","webpack://openboxes/./node_modules/js-file-download/file-download.js","webpack://openboxes/./src/js/hooks/list-pages/useCommonFiltersCleaner.js","webpack://openboxes/./src/js/components/stock-list/FilterFields.jsx","webpack://openboxes/./src/js/components/stock-list/StockListFilters.jsx","webpack://openboxes/./src/js/components/stock-list/StockListHeader.jsx","webpack://openboxes/./src/js/api/services/StockListApi.js","webpack://openboxes/./src/js/hooks/list-pages/stock-list/useStockListTableData.jsx","webpack://openboxes/./src/js/components/stock-list/StockListTable.jsx","webpack://openboxes/./src/js/hooks/list-pages/stock-list/useStockListFilters.jsx","webpack://openboxes/./src/js/components/stock-list/StockList.jsx","webpack://openboxes/../../node_modules/react/jsx-runtime.js","webpack://openboxes/./src/js/utils/file-download-util.jsx","webpack://openboxes/../../node_modules/react/cjs/react-jsx-runtime.production.js","webpack://openboxes/./src/js/utils/Checkbox.jsx","webpack://openboxes/./src/js/components/form-elements/CheckboxField.jsx","webpack://openboxes/./src/js/hooks/list-pages/useTableData.jsx","webpack://openboxes/./src/js/consts/actionItemType.js","webpack://openboxes/./src/js/hooks/useContextMenu.js","webpack://openboxes/./src/js/utils/ContextMenu.jsx"],"sourcesContent":["const MimeType = {\n  XLS: 'application/vnd.ms-excel',\n  PDF: 'application/pdf',\n};\n\nexport default MimeType;\n","module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setShouldRebuildFilterParams } from 'actions';\n\nconst useCommonFiltersCleaner = ({\n  clearFilterValues,\n  initializeDefaultFilterValues,\n  filtersInitialized,\n}) => {\n  const {\n    currentLocation, shouldRebuildParams,\n  } = useSelector((state) => ({\n    currentLocation: state.session.currentLocation,\n    shouldRebuildParams: state.filterForm.shouldRebuildParams,\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // If FilterForm catches change of the location, it sets shouldRebuildFilterParams flag to true\n    // so this useEffect knows when to rebuild the filter form values reducing amount of refetches\n    // and rebuilds of filter params. After it calls the values builder, set the flag to false\n    if (shouldRebuildParams) {\n      if (filtersInitialized) {\n        clearFilterValues();\n      }\n      if (currentLocation?.id) {\n        initializeDefaultFilterValues();\n      }\n      dispatch(setShouldRebuildFilterParams(false));\n    }\n  }, [shouldRebuildParams]);\n};\n\nexport default useCommonFiltersCleaner;\n","import CheckboxField from \"components/form-elements/CheckboxField\";\nimport FilterSelectField from \"components/form-elements/FilterSelectField\";\n\nexport default {\n  origin: {\n    type: FilterSelectField,\n    attributes: {\n      className: \"location-select\",\n      multi: true,\n      filterElement: true,\n      placeholder: \"react.stocklists.filters.origin.label\",\n      defaultPlaceholder: \"Origin\",\n      showLabelTooltip: true,\n      closeMenuOnSelect: false,\n      blurInputOnSelect: false,\n      valueKey: \"id\",\n      labelKey: \"name\",\n    },\n    getDynamicAttr: ({ locations }) => ({\n      options: locations,\n    }),\n  },\n  destination: {\n    type: FilterSelectField,\n    attributes: {\n      className: \"location-select\",\n      multi: true,\n      filterElement: true,\n      placeholder: \"react.stocklists.filters.destination.label\",\n      defaultPlaceholder: \"Destination\",\n      showLabelTooltip: true,\n      closeMenuOnSelect: false,\n      blurInputOnSelect: false,\n      valueKey: \"id\",\n      labelKey: \"name\",\n    },\n    getDynamicAttr: ({ locations }) => ({\n      options: locations,\n    }),\n  },\n  isPublished: {\n    type: CheckboxField,\n    attributes: {\n      withLabel: true,\n      label: \"react.stocklists.includeUnpublished.label\",\n      defaultMessage: \"Include unpublished stocklists\",\n      filterElement: true,\n    },\n  },\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport FilterForm from \"components/Filter/FilterForm\";\n\nconst StockListFilters = ({\n  setFilterParams,\n  filterFields,\n  defaultValues,\n  formProps,\n}) => (\n  <div className=\"d-flex flex-column list-page-filters\">\n    <FilterForm\n      searchFieldId=\"q\"\n      filterFields={filterFields}\n      updateFilterParams={(values) => setFilterParams({ ...values })}\n      formProps={formProps}\n      allowEmptySubmit\n      searchFieldPlaceholder=\"react.stocklists.filters.search.placeholder.label\"\n      searchFieldDefaultPlaceholder=\"Search by stocklist name\"\n      hidden={false}\n      defaultValues={defaultValues}\n    />\n  </div>\n);\n\nexport default StockListFilters;\n\nStockListFilters.propTypes = {\n  setFilterParams: PropTypes.func.isRequired,\n  defaultValues: PropTypes.shape({}).isRequired,\n  filterFields: PropTypes.shape({}).isRequired,\n  formProps: PropTypes.shape({}).isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { REQUISITION_TEMPLATE_URL } from \"consts/applicationUrls\";\nimport Translate from \"utils/Translate\";\n\nconst StockListHeader = ({ isUserAdmin }) => (\n  <div className=\"d-flex list-page-header\">\n    <span className=\"d-flex align-self-center title\">\n      <Translate\n        id=\"react.stocklists.header.label\"\n        defaultMessage=\"Stock List\"\n      />\n    </span>\n    <div className=\"d-flex justify-content-end buttons align-items-center\">\n      {isUserAdmin && (\n        <a\n          className=\"primary-button\"\n          href={`${REQUISITION_TEMPLATE_URL.create()}?type=STOCK`}\n        >\n          <Translate\n            id=\"react.stocklists.addStockList.label\"\n            defaultMessage=\"Add stocklist\"\n          />\n        </a>\n      )}\n    </div>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  isUserAdmin: state.session.isUserAdmin,\n});\n\nexport default connect(mapStateToProps)(StockListHeader);\n\nStockListHeader.propTypes = {\n  isUserAdmin: PropTypes.bool.isRequired,\n};\n","import {\n  STOCKLIST_API,\n  STOCKLIST_CLEAR,\n  STOCKLIST_CLONE,\n  STOCKLIST_DELETE,\n  STOCKLIST_PUBLISH,\n  STOCKLIST_UNPUBLISH,\n} from 'api/urls';\nimport apiClient from 'utils/apiClient';\n\nexport default {\n  getStockLists: (config) => apiClient.get(STOCKLIST_API, config),\n  deleteStockList: (id) => apiClient.delete(STOCKLIST_DELETE(id)),\n  clearStockList: (id) => apiClient.post(STOCKLIST_CLEAR(id)),\n  cloneStockList: (id) => apiClient.post(STOCKLIST_CLONE(id)),\n  publishStockList: (id) => apiClient.post(STOCKLIST_PUBLISH(id)),\n  unpublishStockList: (id) => apiClient.post(STOCKLIST_UNPUBLISH(id)),\n};\n","import _ from \"lodash\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport stockListApi from \"api/services/StockListApi\";\nimport { STOCKLIST_API, STOCKLIST_EXPORT } from \"api/urls\";\nimport useTableData from \"hooks/list-pages/useTableData\";\nimport exportFileFromAPI from \"utils/file-download-util\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nconst useStockListTableData = (filterParams) => {\n  const errorMessageId = \"react.stocklists.fetch.fail.label\";\n  const defaultErrorMessage = \"Unable to fetch stock transfers\";\n\n  const getParams = ({ offset, state, sortingParams }) => {\n    const { isPublished, origin, destination, ...otherFilterParams } =\n      filterParams;\n    return _.omitBy(\n      {\n        ...otherFilterParams,\n        offset: `${offset}`,\n        max: `${state.pageSize}`,\n        includeUnpublished: isPublished,\n        origin: origin && origin.map(({ id }) => id),\n        destination: destination && destination.map(({ id }) => id),\n        ...sortingParams,\n      },\n      (value) => {\n        if (typeof value === \"object\" && _.isEmpty(value)) return true;\n        return !value;\n      },\n    );\n  };\n\n  const { tableRef, fireFetchData, loading, tableData, onFetchHandler } =\n    useTableData({\n      filterParams,\n      url: STOCKLIST_API,\n      errorMessageId,\n      defaultErrorMessage,\n      getParams,\n    });\n\n  const dispatch = useDispatch();\n  const { translate } = useSelector((state) => ({\n    translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  }));\n\n  const exportStockList = () => {\n    exportFileFromAPI({\n      url: STOCKLIST_API,\n      params: {\n        ...tableData.currentParams,\n      },\n    });\n  };\n\n  const exportStockListItems = (id) => {\n    exportFileFromAPI({\n      url: STOCKLIST_EXPORT(id),\n    });\n  };\n\n  const deleteStocklists = async (id) => {\n    dispatch(showSpinner());\n    try {\n      const { status } = await stockListApi.deleteStockList(id);\n      if (status === 204) {\n        Alert.success(\n          translate(\n            \"react.stocklists.delete.success.label\",\n            \"Stock List has been deleted successfully\",\n          ),\n        );\n        fireFetchData();\n      }\n    } finally {\n      dispatch(hideSpinner());\n    }\n  };\n\n  const onClickDeleteStocklists = (id) => {\n    const confirmButton = {\n      label: translate(\"react.default.yes.label\", \"Yes\"),\n      onClick: () => deleteStocklists(id),\n    };\n    const cancelButton = {\n      label: translate(\"react.default.no.label\", \"No\"),\n    };\n    confirmAlert({\n      title: translate(\n        \"react.stocklists.delete.confirm.title.label\",\n        \"Confirm delete of stock list\",\n      ),\n      message: translate(\n        \"react.stocklists.delete.confirm.message.label\",\n        \"Are you sure you want to delete this stock list ?\",\n      ),\n      buttons: [confirmButton, cancelButton],\n    });\n  };\n\n  const clearStocklists = async (id) => {\n    dispatch(showSpinner());\n    try {\n      const { status } = await stockListApi.clearStockList(id);\n      if (status === 200) {\n        Alert.success(\n          translate(\n            \"react.stocklists.clear.success.label\",\n            \"Stock List has been cleared Stock List has been cloned successfully\",\n          ),\n        );\n        fireFetchData();\n      }\n    } finally {\n      dispatch(hideSpinner());\n    }\n  };\n\n  const onClickClearStocklists = (id) => {\n    const confirmButton = {\n      label: translate(\"react.default.yes.label\", \"Yes\"),\n      onClick: () => clearStocklists(id),\n    };\n    const cancelButton = {\n      label: translate(\"react.default.no.label\", \"No\"),\n    };\n    confirmAlert({\n      title: translate(\n        \"react.stocklists.clear.confirm.title.label\",\n        \"Confirm clear of stock list\",\n      ),\n      message: translate(\n        \"react.stocklists.clear.confirm.message.label\",\n        \"Are you sure you want to clear this stock list ?\",\n      ),\n      buttons: [confirmButton, cancelButton],\n    });\n  };\n\n  const cloneStocklists = async (id) => {\n    dispatch(showSpinner());\n    try {\n      const { status } = await stockListApi.cloneStockList(id);\n      if (status === 200) {\n        Alert.success(\n          translate(\n            \"react.stocklists.clone.success.label\",\n            \"Stock List has been cloned successfully\",\n          ),\n        );\n        fireFetchData();\n      }\n    } finally {\n      dispatch(hideSpinner());\n    }\n  };\n\n  const publishStocklists = async (id) => {\n    dispatch(showSpinner());\n    try {\n      const { status } = await stockListApi.publishStockList(id);\n      if (status === 200) {\n        Alert.success(\n          translate(\n            \"react.stocklists.publish.success.label\",\n            \"Stock List has been published successfully\",\n          ),\n        );\n        fireFetchData();\n      }\n    } finally {\n      dispatch(hideSpinner());\n    }\n  };\n\n  const unpublishStocklists = async (id) => {\n    dispatch(showSpinner());\n    try {\n      const { status } = await stockListApi.unpublishStockList(id);\n      if (status === 200) {\n        Alert.success(\n          translate(\n            \"react.stocklists.unpublish.success.label\",\n            \"Stock List has been unpublished successfully\",\n          ),\n        );\n        fireFetchData();\n      }\n    } finally {\n      dispatch(hideSpinner());\n    }\n  };\n\n  return {\n    tableData,\n    tableRef,\n    loading,\n    onFetchHandler,\n    exportStockList,\n    onClickClearStocklists,\n    onClickDeleteStocklists,\n    unpublishStocklists,\n    publishStocklists,\n    cloneStocklists,\n    exportStockListItems,\n  };\n};\n\nexport default useStockListTableData;\n","import React, { useMemo } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport {\n  RiDeleteBinLine,\n  RiDownload2Line,\n  RiDownloadLine,\n  RiEraserLine,\n  RiFile3Line,\n  RiFileCopyLine,\n  RiFileForbidLine,\n  RiInformationLine,\n  RiListUnordered,\n  RiPencilLine,\n  RiUploadLine,\n} from \"react-icons/ri\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport DataTable, { TableCell } from \"components/DataTable\";\nimport Button from \"components/form-elements/Button\";\nimport { REQUISITION_TEMPLATE_URL } from \"consts/applicationUrls\";\nimport useStockListTableData from \"hooks/list-pages/stock-list/useStockListTableData\";\nimport ContextMenu from \"utils/ContextMenu\";\nimport { findActions } from \"utils/list-utils\";\nimport StatusIndicator from \"utils/StatusIndicator\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst StockListTable = ({ filterParams, translate, highestRole }) => {\n  const {\n    tableData,\n    tableRef,\n    loading,\n    onFetchHandler,\n    exportStockList,\n    onClickClearStocklists,\n    onClickDeleteStocklists,\n    unpublishStocklists,\n    publishStocklists,\n    cloneStocklists,\n    exportStockListItems,\n  } = useStockListTableData(filterParams);\n\n  const customActionFilter = ({ isPublished }, row) => {\n    // skip actions that don't have isPublished property\n    if (isPublished === undefined) return true;\n    // show actions that have same boolean value in row and in action\n    return row.original.isPublished === isPublished;\n  };\n\n  // List of all actions for Stocklists rows\n  const actions = useMemo(\n    () => [\n      {\n        defaultLabel: \"Show stock list\",\n        label: \"react.stocklists.show.label\",\n        leftIcon: <RiInformationLine />,\n        href: REQUISITION_TEMPLATE_URL.show,\n      },\n      {\n        defaultLabel: \"Edit stock list\",\n        label: \"react.stocklists.editStock.label\",\n        leftIcon: <RiPencilLine />,\n        href: REQUISITION_TEMPLATE_URL.editHeader,\n        minimumRequiredRole: \"Admin\",\n      },\n      {\n        defaultLabel: \"Edit stock list items\",\n        label: \"react.stocklists.items.editStock.label\",\n        leftIcon: <RiListUnordered />,\n        href: REQUISITION_TEMPLATE_URL.edit,\n        minimumRequiredRole: \"Admin\",\n      },\n      {\n        defaultLabel: \"Import stock list items\",\n        label: \"react.stocklists.items.import.label\",\n        leftIcon: <RiUploadLine />,\n        href: REQUISITION_TEMPLATE_URL.batch,\n        minimumRequiredRole: \"Admin\",\n      },\n      {\n        defaultLabel: \"Export stock list items\",\n        label: \"react.stocklists.items.export.label\",\n        leftIcon: <RiDownloadLine />,\n        onClick: exportStockListItems,\n        minimumRequiredRole: \"Admin\",\n      },\n      {\n        defaultLabel: \"Clone stock list\",\n        label: \"react.stocklists.clone.label\",\n        leftIcon: <RiFileCopyLine />,\n        onClick: cloneStocklists,\n        minimumRequiredRole: \"Admin\",\n      },\n      {\n        defaultLabel: \"Publish stock list\",\n        label: \"react.stocklists.publish.label\",\n        leftIcon: <RiFile3Line />,\n        isPublished: false,\n        onClick: publishStocklists,\n        minimumRequiredRole: \"Admin\",\n      },\n      {\n        defaultLabel: \"Unpublish stock list\",\n        label: \"react.stocklists.unpubish.label\",\n        leftIcon: <RiFileForbidLine />,\n        isPublished: true,\n        onClick: unpublishStocklists,\n        minimumRequiredRole: \"Admin\",\n      },\n      {\n        defaultLabel: \"Clear stock list items\",\n        label: \"react.stocklists.items.clear.label\",\n        leftIcon: <RiEraserLine />,\n        variant: \"danger\",\n        onClick: onClickClearStocklists,\n        minimumRequiredRole: \"Admin\",\n      },\n      {\n        defaultLabel: \"Delete stock list\",\n        label: \"react.stocklists.delete.label\",\n        leftIcon: <RiDeleteBinLine />,\n        variant: \"danger\",\n        onClick: onClickDeleteStocklists,\n        minimumRequiredRole: \"Admin\",\n      },\n    ],\n    [],\n  );\n\n  // Columns for react-table\n  const columns = useMemo(\n    () => [\n      {\n        Header: \" \",\n        width: 50,\n        sortable: false,\n        style: { overflow: \"visible\", zIndex: 1 },\n        fixed: \"left\",\n        Cell: (row) => (\n          <ContextMenu\n            positions={[\"right\"]}\n            dropdownClasses=\"action-dropdown-offset\"\n            actions={findActions(actions, row, {\n              customFilter: customActionFilter,\n              highestRole,\n            })}\n            id={row.original.id}\n          />\n        ),\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stocklists.column.status.label\"\n            defaultMessage=\"Status\"\n          />\n        ),\n        accessor: \"isPublished\",\n        fixed: \"left\",\n        width: 150,\n        Cell: (row) => (\n          <StatusIndicator\n            status={row.original.isPublished ? \"Published\" : \"Draft\"}\n            variant={row.original.isPublished ? \"success\" : \"danger\"}\n          />\n        ),\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stocklists.column.name.label\"\n            defaultMessage=\"Name\"\n          />\n        ),\n        accessor: \"name\",\n        fixed: \"left\",\n        minWidth: 250,\n        Cell: (row) => (\n          <TableCell\n            {...row}\n            tooltip\n            link={REQUISITION_TEMPLATE_URL.show(row.original.id)}\n          />\n        ),\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stocklists.filters.origin.label\"\n            defaultMessage=\"Origin\"\n          />\n        ),\n        accessor: \"origin\",\n        minWidth: 250,\n        fixed: \"left\",\n        Cell: (row) => <TableCell {...row} tooltip />,\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stocklists.filters.destination.label\"\n            defaultMessage=\"Destination\"\n          />\n        ),\n        accessor: \"destination\",\n        minWidth: 250,\n        fixed: \"left\",\n        Cell: (row) => <TableCell {...row} tooltip />,\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stocklists.column.requisitionItems.label\"\n            defaultMessage=\"Requisition items\"\n          />\n        ),\n        accessor: \"requisitionItemCount\",\n        sortable: false,\n        minWidth: 150,\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stocklists.column.requestedBy.label\"\n            defaultMessage=\"Requested by\"\n          />\n        ),\n        accessor: \"requestedBy\",\n        minWidth: 250,\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stocklists.column.createdBy.label\"\n            defaultMessage=\"Created by\"\n          />\n        ),\n        accessor: \"createdBy\",\n        minWidth: 250,\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stocklists.column.updatedBy.label\"\n            defaultMessage=\"Updated by\"\n          />\n        ),\n        accessor: \"updatedBy\",\n        minWidth: 250,\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stocklists.column.dateCreated.label\"\n            defaultMessage=\"Date Created\"\n          />\n        ),\n        accessor: \"dateCreated\",\n        width: 150,\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stocklists.column.lastUpdated.label\"\n            defaultMessage=\"Last Updated\"\n          />\n        ),\n        accessor: \"lastUpdated\",\n        width: 150,\n      },\n    ],\n    [highestRole],\n  );\n\n  return (\n    <div className=\"list-page-list-section\">\n      <div className=\"title-text p-3 d-flex justify-content-between align-items-center\">\n        <div>\n          <Translate id=\"react.stocklists.label\" defaultMessage=\"Stock Lists\" />\n          <span className=\"ml-1\">{`(${tableData.totalCount})`}</span>\n        </div>\n        <Button\n          label=\"react.default.button.export.label\"\n          defaultLabel=\"Export\"\n          variant=\"secondary\"\n          EndIcon={<RiDownload2Line />}\n          onClick={exportStockList}\n        />\n      </div>\n      <DataTable\n        manual\n        sortable\n        ref={tableRef}\n        columns={columns}\n        data={tableData.data}\n        loading={loading}\n        defaultPageSize={10}\n        pages={tableData.pages}\n        totalData={tableData.totalCount}\n        onFetchData={onFetchHandler}\n        noDataText={translate(\n          \"react.stocklists.empty.label\",\n          \"No stock lists match the given criteria\",\n        )}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  highestRole: state.session.highestRole,\n});\n\nexport default connect(mapStateToProps)(StockListTable);\n\nStockListTable.propTypes = {\n  filterParams: PropTypes.shape({}).isRequired,\n  translate: PropTypes.func.isRequired,\n  highestRole: PropTypes.string.isRequired,\n};\n","import { useEffect, useState } from \"react\";\n\nimport queryString from \"query-string\";\nimport { useHistory } from \"react-router-dom\";\n\nimport filterFields from \"components/stock-list/FilterFields\";\nimport useCommonFiltersCleaner from \"hooks/list-pages/useCommonFiltersCleaner\";\nimport apiClient from \"utils/apiClient\";\nimport { transformFilterParams } from \"utils/list-utils\";\nimport { fetchLocationById } from \"utils/option-utils\";\n\nconst useStockListFilters = () => {\n  const [filterParams, setFilterParams] = useState({});\n  const [defaultFilterValues, setDefaultFilterValues] = useState({});\n  const [filtersInitialized, setFiltersInitialized] = useState(false);\n\n  const [locations, setLocations] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    apiClient.get(\"/api/locations?presentation=toBaseJson\").then((response) => {\n      const { data } = response.data;\n      setLocations(data);\n    });\n  }, []);\n\n  const clearFilterValues = () => {\n    const { pathname } = history.location;\n    history.push({ pathname });\n  };\n\n  const initializeDefaultFilterValues = async () => {\n    // INITIALIZE EMPTY FILTER OBJECT\n    const defaultValues = Object.keys(filterFields).reduce(\n      (acc, key) => ({ ...acc, [key]: \"\" }),\n      {},\n    );\n\n    const queryProps = queryString.parse(history.location.search);\n\n    // SET STATIC DEFAULT VALUES\n    if (queryProps.origin) {\n      const originLocationsIds = Array.isArray(queryProps.origin)\n        ? queryProps.origin\n        : [queryProps.origin];\n      const fetchedLocations = originLocationsIds.map(fetchLocationById);\n      const paramLocations = await Promise.all(fetchedLocations);\n      defaultValues.origin = paramLocations.map(({ id, name }) => ({\n        id,\n        name,\n        value: id,\n        label: name,\n      }));\n    }\n    if (queryProps.destination) {\n      const destinationLocationsIds = Array.isArray(queryProps.destination)\n        ? queryProps.destination\n        : [queryProps.destination];\n      const fetchedLocations = destinationLocationsIds.map(fetchLocationById);\n      const paramLocations = await Promise.all(fetchedLocations);\n      defaultValues.destination = paramLocations.map(({ id, name }) => ({\n        id,\n        name,\n        value: id,\n        label: name,\n      }));\n    }\n    if (queryProps.isPublished) {\n      defaultValues.isPublished = queryProps.isPublished === \"true\";\n    }\n    setDefaultFilterValues(defaultValues);\n    setFiltersInitialized(true);\n  };\n\n  // Custom hook for changing location/filters rebuilding logic\n  useCommonFiltersCleaner({\n    clearFilterValues,\n    initializeDefaultFilterValues,\n    filtersInitialized,\n  });\n\n  const setFilterValues = (values) => {\n    const filterAccessors = {\n      destination: { name: \"destination\", accessor: \"id\" },\n      origin: { name: \"origin\", accessor: \"id\" },\n      isPublished: { name: \"isPublished\" },\n    };\n\n    const transformedParams = transformFilterParams(values, filterAccessors);\n    const queryFilterParams = queryString.stringify(transformedParams);\n    const { pathname } = history.location;\n    if (Object.keys(values).length) {\n      history.push({ pathname, search: queryFilterParams });\n    }\n    setFilterParams(values);\n  };\n\n  return {\n    defaultFilterValues,\n    setFilterValues,\n    locations,\n    filterParams,\n  };\n};\n\nexport default useStockListFilters;\n","import React from \"react\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport filterFields from \"components/stock-list/FilterFields\";\nimport StockListFilters from \"components/stock-list/StockListFilters\";\nimport StockListHeader from \"components/stock-list/StockListHeader\";\nimport StockListTable from \"components/stock-list/StockListTable\";\nimport useStockListFilters from \"hooks/list-pages/stock-list/useStockListFilters\";\nimport useTranslation from \"hooks/useTranslation\";\n\nconst StockList = () => {\n  const { defaultFilterValues, setFilterValues, locations, filterParams } =\n    useStockListFilters();\n\n  useTranslation(\"stocklists\", \"reactTable\");\n\n  return (\n    <div className=\"d-flex flex-column list-page-main\">\n      <StockListHeader />\n      <StockListFilters\n        defaultValues={defaultFilterValues}\n        setFilterParams={setFilterValues}\n        filterFields={filterFields}\n        formProps={{ locations }}\n      />\n      <StockListTable filterParams={filterParams} />\n    </div>\n  );\n};\n\nexport default withRouter(StockList);\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import fileDownload from \"js-file-download\";\nimport queryString from \"query-string\";\n\nimport MimeType from \"consts/mimeType\";\nimport apiClient from \"utils/apiClient\";\n\nconst exportFileFromAPI = ({\n  url,\n  params,\n  format = \"csv\",\n  filename: customFilename,\n  afterExporting,\n}) =>\n  apiClient\n    .get(url, {\n      responseType: \"blob\",\n      params: {\n        format,\n        ...params,\n      },\n      paramsSerializer: queryString.stringify,\n    })\n    .then((res) => {\n      const filenameFromHeader = res.headers[\"content-disposition\"]\n        .split(\"filename=\")[1]\n        .replaceAll('\"', \"\")\n        .split(\".\")[0];\n\n      const filename = customFilename || filenameFromHeader || \"file\";\n\n      fileDownload(res.data, `${filename}.${format}`, MimeType[format]);\n      afterExporting?.();\n      return res;\n    });\n\nexport default exportFileFromAPI;\n\nexport const extractFilenameFromHeader = (header) => {\n  if (!header) {\n    return null;\n  }\n\n  return header.split(\"filename=\")[1]?.split(\";\")[0]?.replaceAll('\"', \"\");\n};\n","/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Translate from \"utils/Translate\";\n\nconst Checkbox = ({\n  value,\n  indeterminate,\n  custom,\n  fieldRef,\n  withLabel,\n  label,\n  defaultMessage,\n  ...props\n}) => {\n  const onChange = (event) => {\n    const { checked } = event.target;\n\n    if (props.onChange) {\n      props.onChange(checked);\n    }\n  };\n\n  if (custom) {\n    return (\n      <div data-testid=\"custom-checkbox\" className=\"custom-checkbox\">\n        <label htmlFor={props.id}>\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            ref={fieldRef}\n            checked={value}\n            {...props}\n            onChange={onChange}\n          />\n        </label>\n      </div>\n    );\n  }\n\n  if (withLabel) {\n    return (\n      <div\n        data-testid=\"with-label-checkbox\"\n        className=\"d-flex align-items-center\"\n      >\n        <input\n          type=\"checkbox\"\n          ref={(elem) => {\n            if (elem) {\n              // eslint-disable-next-line no-param-reassign\n              elem.indeterminate = indeterminate;\n            }\n            if (fieldRef) {\n              fieldRef(elem);\n            }\n          }}\n          checked={value}\n          {...props}\n          onChange={onChange}\n        />\n        <label htmlFor={props.id} style={{ margin: \"0 0 0 5px\" }}>\n          <Translate id={label} defaultMessage={defaultMessage || label} />\n        </label>\n      </div>\n    );\n  }\n\n  return (\n    <input\n      data-testid=\"checkbox\"\n      type=\"checkbox\"\n      ref={(elem) => {\n        if (elem) {\n          // eslint-disable-next-line no-param-reassign\n          elem.indeterminate = indeterminate;\n        }\n        if (fieldRef) {\n          fieldRef(elem);\n        }\n      }}\n      checked={value}\n      {...props}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Checkbox;\n\nCheckbox.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  custom: PropTypes.bool,\n  id: PropTypes.string,\n  fieldRef: PropTypes.func,\n  withLabel: PropTypes.bool,\n  label: PropTypes.string,\n  defaultMessage: PropTypes.string,\n};\n\nCheckbox.defaultProps = {\n  onChange: null,\n  value: null,\n  indeterminate: false,\n  custom: false,\n  id: \"\",\n  fieldRef: undefined,\n  withLabel: false,\n  label: \"\",\n  defaultMessage: \"\",\n};\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Checkbox from \"utils/Checkbox\";\n\nconst CheckboxField = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const renderInput = ({ value, ...attributes }) => (\n    <Checkbox {...attributes} value={value || false} />\n  );\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default CheckboxField;\n","import { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { CancelToken } from \"axios\";\nimport _ from \"lodash\";\nimport queryString from \"query-string\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { useSelector } from \"react-redux\";\n\nimport apiClient from \"utils/apiClient\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\n// Hook for managing data which is later populated in data table component.\nconst useTableData = ({\n  filterParams,\n  url,\n  errorMessageId,\n  defaultErrorMessage,\n  getParams,\n  onFetchedData,\n  defaultSorting,\n}) => {\n  // Util ref for react-table to force the fetch of data\n  const tableRef = useRef(null);\n  // Cancel token/signal for fetching data\n  const sourceRef = useRef(CancelToken.source());\n\n  const [loading, setLoading] = useState(false);\n  const [tableData, setTableData] = useState({\n    data: [],\n    pages: -1,\n    totalCount: 0,\n    currentParams: {},\n  });\n\n  const { currentLocation, translate } = useSelector((state) => ({\n    currentLocation: state.session.currentLocation,\n    translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  }));\n\n  const fireFetchData = () => {\n    // Each time we fetch, we want to 'reset' the token/signal\n    sourceRef.current = CancelToken.source();\n    // reset pagination on each search execution\n    if (tableRef.current?.state?.page > 0) {\n      // onPageChange(pageIndex) triggers fireFetchData() when pageIndex !== currenPage\n      // which is why we are calling onPageChange(0) and fireFetchData() separately\n      // by doing that we are trying to avoid double fetching\n      tableRef.current.onPageChange(0);\n    } else {\n      tableRef.current.fireFetchData();\n    }\n  };\n\n  const onFetchHandler = useCallback(\n    (tableState) => {\n      if (!_.isEmpty(filterParams)) {\n        const offset =\n          tableState.page > 0 ? tableState.page * tableState.pageSize : 0;\n        const sortingParams =\n          tableState.sorted?.length > 0\n            ? {\n                sort: tableState.sorted[0].id,\n                order: tableState.sorted[0].desc ? \"desc\" : \"asc\",\n              }\n            : defaultSorting;\n        const params = getParams({\n          offset,\n          currentLocation,\n          state: tableState,\n          sortingParams,\n        });\n        // Fetch data\n        setLoading(true);\n        apiClient\n          .get(url, {\n            params,\n            paramsSerializer: (parameters) => queryString.stringify(parameters),\n            cancelToken: sourceRef.current?.token,\n          })\n          .then((res) => {\n            setTableData({\n              data: res.data.data,\n              totalCount: res.data.totalCount,\n              pages: Math.ceil(res.data.totalCount / tableState.pageSize),\n              currentParams: params,\n            });\n            if (onFetchedData) {\n              onFetchedData(res.data);\n            }\n          })\n          .catch(() =>\n            Promise.reject(\n              new Error(translate(errorMessageId, defaultErrorMessage)),\n            ),\n          )\n          .finally(() => setLoading(false));\n      }\n    },\n    [filterParams],\n  );\n\n  // If filterParams change, refetch the data with applied filters\n  useEffect(() => {\n    fireFetchData();\n  }, [filterParams]);\n\n  useEffect(\n    () => () => {\n      if (currentLocation?.id) {\n        sourceRef.current.cancel(\"Fetching canceled\");\n      }\n    },\n    [currentLocation?.id],\n  );\n\n  return {\n    sourceRef,\n    tableRef,\n    fireFetchData,\n    loading,\n    setLoading,\n    tableData,\n    setTableData,\n    onFetchHandler,\n  };\n};\n\nexport default useTableData;\n","const actionItemType = {\n  LINK: 'LINK',\n  REACT_LINK: 'REACT_LINK',\n  BUTTON: 'BUTTON',\n};\n\nexport default actionItemType;\n","import { useRef, useState } from 'react';\n\nimport actionItemType from 'consts/actionItemType';\n\nconst useContextMenu = () => {\n  const popoverRef = useRef();\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n\n  const getActionItemType = (action) => {\n    if (action.href) {\n      if (action.reactLink) {\n        return actionItemType.REACT_LINK;\n      }\n      return actionItemType.LINK;\n    }\n    return actionItemType.BUTTON;\n  };\n\n  const buildLink = (action, id) => {\n    if (typeof action.href === 'string') {\n      return `${action.href}/${id}`;\n    }\n    if (typeof action.href === 'function') {\n      return action.href(id);\n    }\n    return null;\n  };\n\n  const getPositionClass = (dropdownPlacement) => {\n    switch (dropdownPlacement) {\n      case 'top':\n        return 'dropup';\n      case 'left':\n        return 'dropleft';\n      case 'right':\n        return 'dropright';\n      default:\n        return '';\n    }\n  };\n\n  return {\n    getActionItemType,\n    buildLink,\n    getPositionClass,\n    popoverRef,\n    isPopoverOpen,\n    setIsPopoverOpen,\n  };\n};\n\nexport default useContextMenu;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { RiMoreLine } from \"react-icons/ri\";\nimport { Link } from \"react-router-dom\";\nimport { Popover } from \"react-tiny-popover\";\n\nimport actionItemType from \"consts/actionItemType\";\nimport useContextMenu from \"hooks/useContextMenu\";\nimport Translate from \"utils/Translate\";\n\nimport \"./utils.scss\";\n\nconst ContextMenu = ({\n  positions,\n  actions,\n  dropdownClasses,\n  popoverClasses,\n  id,\n}) => {\n  const {\n    getActionItemType,\n    buildLink,\n    popoverRef,\n    isPopoverOpen,\n    setIsPopoverOpen,\n  } = useContextMenu();\n\n  return (\n    <Popover\n      data-testid=\"action-dots-component\"\n      isOpen={isPopoverOpen}\n      positions={positions}\n      padding={10}\n      onClickOutside={() => setIsPopoverOpen(false)}\n      ref={popoverRef}\n      content={() =>\n        actions && (\n          <div\n            className={`${popoverClasses} context-menu padding-8`}\n            data-testid=\"dropdown-menu\"\n          >\n            {actions.map((action) => {\n              const itemClasses = `${dropdownClasses} d-flex align-items-center gap-8 dropdown-item ${action.variant === \"danger\" ? \"font-red-ob\" : \"\"}`;\n              const itemValue = (\n                <>\n                  {action.leftIcon && action.leftIcon}\n                  {action.label && (\n                    <Translate\n                      id={action.label}\n                      defaultMessage={action.defaultLabel}\n                    />\n                  )}\n                </>\n              );\n              const elementType = getActionItemType(action);\n              const link =\n                elementType === actionItemType.LINK || actionItemType.REACT_LINK\n                  ? buildLink(action, id)\n                  : \"\";\n\n              return (\n                <React.Fragment key={action.label}>\n                  {elementType === actionItemType.BUTTON && (\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        action.onClick(id);\n                        setIsPopoverOpen(false);\n                      }}\n                      className={itemClasses}\n                    >\n                      {itemValue}\n                    </button>\n                  )}\n                  {elementType === actionItemType.LINK && (\n                    <a href={link} className={itemClasses}>\n                      {itemValue}\n                    </a>\n                  )}\n                  {elementType === actionItemType.REACT_LINK && (\n                    <Link to={link} className={itemClasses}>\n                      {itemValue}\n                    </Link>\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </div>\n        )\n      }\n    >\n      <button\n        data-testid=\"dropdown-toggle\"\n        className=\"action-dots dropdown-toggle d-flex align-items-center justify-content-center\"\n        type=\"button\"\n        onClick={() => setIsPopoverOpen((isOpen) => !isOpen)}\n      >\n        <RiMoreLine />\n      </button>\n    </Popover>\n  );\n};\n\nexport default ContextMenu;\n\nContextMenu.propTypes = {\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      leftIcon: PropTypes.element.isRequired,\n      label: PropTypes.string.isRequired,\n      defaultLabel: PropTypes.string.isRequired,\n      href: PropTypes.string,\n      reactLink: PropTypes.bool,\n      variant: PropTypes.string,\n      onClick: PropTypes.func,\n    }),\n  ).isRequired,\n  positions: PropTypes.arrayOf(PropTypes.string),\n  id: PropTypes.string.isRequired,\n  dropdownClasses: PropTypes.string,\n  popoverClasses: PropTypes.string,\n};\n\nContextMenu.defaultProps = {\n  positions: [\"top\", \"right\", \"left\", \"bottom\"],\n  dropdownClasses: \"\",\n  popoverClasses: \"\",\n};\n"],"names":["XLS","PDF","module","exports","data","filename","mime","bom","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","_ref","clearFilterValues","initializeDefaultFilterValues","filtersInitialized","_useSelector","useSelector","state","currentLocation","session","shouldRebuildParams","filterForm","dispatch","useDispatch","useEffect","id","setShouldRebuildFilterParams","origin","FilterSelectField","attributes","className","multi","filterElement","placeholder","defaultPlaceholder","showLabelTooltip","closeMenuOnSelect","blurInputOnSelect","valueKey","labelKey","getDynamicAttr","options","locations","destination","_ref2","isPublished","CheckboxField","withLabel","label","defaultMessage","StockListFilters","setFilterParams","filterFields","defaultValues","formProps","React","FilterForm","searchFieldId","updateFilterParams","values","_objectSpread","allowEmptySubmit","searchFieldPlaceholder","searchFieldDefaultPlaceholder","hidden","propTypes","PropTypes","isRequired","StockListHeader","isUserAdmin","Translate","concat","REQUISITION_TEMPLATE_URL","create","connect","apiClient","STOCKLIST_DELETE","post","STOCKLIST_CLEAR","STOCKLIST_CLONE","STOCKLIST_PUBLISH","STOCKLIST_UNPUBLISH","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","filterParams","_useTableData","useTableData","url","STOCKLIST_API","errorMessageId","defaultErrorMessage","getParams","offset","sortingParams","otherFilterParams","indexOf","_objectWithoutPropertiesLoose","propertyIsEnumerable","_objectWithoutProperties","_excluded","_","max","pageSize","includeUnpublished","map","_ref3","tableRef","fireFetchData","loading","tableData","onFetchHandler","translate","translateWithDefaultMessage","getTranslate","localize","deleteStocklists","_ref4","_callee","_context","showSpinner","stockListApi","status","Alert","hideSpinner","_x","clearStocklists","_ref5","_callee2","_context2","_x2","cloneStocklists","_ref6","_callee3","_context3","_x3","publishStocklists","_ref7","_callee4","_context4","_x4","unpublishStocklists","_ref8","_callee5","_context5","_x5","exportStockList","exportFileFromAPI","params","currentParams","onClickClearStocklists","confirmButton","onClick","cancelButton","confirmAlert","title","message","buttons","onClickDeleteStocklists","exportStockListItems","STOCKLIST_EXPORT","StockListTable","highestRole","_useStockListTableDat","useStockListTableData","customActionFilter","row","undefined","original","actions","useMemo","defaultLabel","leftIcon","RiInformationLine","show","RiPencilLine","editHeader","minimumRequiredRole","RiListUnordered","edit","RiUploadLine","batch","RiDownloadLine","RiFileCopyLine","RiFile3Line","RiFileForbidLine","RiEraserLine","variant","RiDeleteBinLine","columns","Header","width","sortable","overflow","zIndex","fixed","Cell","ContextMenu","positions","dropdownClasses","findActions","customFilter","accessor","StatusIndicator","minWidth","TableCell","_extends","tooltip","link","totalCount","Button","EndIcon","RiDownload2Line","DataTable","manual","ref","defaultPageSize","pages","totalData","onFetchData","noDataText","_slicedToArray","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","withRouter","_useStockListFilters","_useState2","useState","_useState4","defaultFilterValues","setDefaultFilterValues","_useState6","setFiltersInitialized","_useState8","setLocations","history","useHistory","get","response","queryProps","originLocationsIds","fetchedLocations","paramLocations","destinationLocationsIds","_fetchedLocations","_paramLocations","reduce","acc","key","queryString","parse","location","search","fetchLocationById","all","useCommonFiltersCleaner","pathname","setFilterValues","transformedParams","transformFilterParams","queryFilterParams","stringify","useStockListFilters","useTranslation","_ref$format","format","customFilename","afterExporting","responseType","paramsSerializer","res","filenameFromHeader","headers","split","replaceAll","fileDownload","MimeType","extractFilenameFromHeader","header","_header$split$","REACT_ELEMENT_TYPE","for","REACT_FRAGMENT_TYPE","jsxProd","config","maybeKey","propName","$$typeof","props","Fragment","jsx","jsxs","Checkbox","indeterminate","custom","fieldRef","onChange","event","checked","target","htmlFor","elem","margin","defaultProps","BaseField","renderInput","onFetchedData","defaultSorting","useRef","sourceRef","CancelToken","source","setLoading","setTableData","_tableRef$current","current","page","onPageChange","useCallback","tableState","_tableState$sorted","_sourceRef$current","sorted","sort","order","desc","parameters","cancelToken","token","Math","ceil","reject","cancel","popoverRef","getActionItemType","action","reactLink","actionItemType","buildLink","getPositionClass","dropdownPlacement","isPopoverOpen","setIsPopoverOpen","popoverClasses","_useContextMenu","useContextMenu","Popover","isOpen","padding","onClickOutside","content","itemClasses","itemValue","elementType","Link","to","RiMoreLine"],"sourceRoot":""}