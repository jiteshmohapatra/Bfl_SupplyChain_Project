{"version":3,"file":"bundle.929af1b45eb780bfc503.8901.js","mappings":"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","sources":["webpack://openboxes/./src/js/utils/permissionUtils.js","webpack://openboxes/./src/js/consts/requisitionStatus.js","webpack://openboxes/./src/js/consts/stockMovementStatus.js","webpack://openboxes/./src/js/utils/supportedActivitiesUtils.js","webpack://openboxes/./src/js/components/stock-movement-wizard/request/EditPage.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/StockMovementVerifyRequest.jsx"],"sourcesContent":["import ActivityCode from 'consts/activityCode';\nimport StockMovementStatus from 'consts/stockMovementStatus';\nimport { supports } from 'utils/supportedActivitiesUtils';\n\nconst canEditRequest = (currentUser, request, location) => {\n  const isUserRequestor = currentUser?.id === request?.requestedBy?.id;\n  const isLocationOrigin = location.id === request?.origin?.id;\n  const isLocationDestination = location.id === request?.destination?.id;\n  const isApprovalRequired = supports(\n    location?.supportedActivities,\n    ActivityCode.APPROVE_REQUEST,\n  );\n\n  if (isApprovalRequired) {\n    // If the location supports request approval, only the requestor is able to edit\n    // If the request is rejected, then it cannot be edited\n    const statusesWithAbilityToEdit = [\n      StockMovementStatus.APPROVED,\n      StockMovementStatus.PACKED,\n      StockMovementStatus.PICKED,\n      StockMovementStatus.PICKING,\n    ];\n    if (!statusesWithAbilityToEdit.includes(request?.statusCode)) {\n      return isUserRequestor\n        && (isLocationDestination || isLocationOrigin)\n        && request.statusCode !== StockMovementStatus.REJECTED;\n    }\n    // If the request is approved, everyone from the fulfilling location can edit\n    return isLocationOrigin;\n  }\n\n  // If request approval is not supported by the location we have to check if the\n  // location is destination or origin\n  // If we are in verifying/fulfilling location (origin), allow to add items for any person\n  // verifying the request\n  if (isLocationOrigin) {\n    return true;\n  }\n  // If we are in requesting location (destination), allow to add items only for a person\n  // who created a stock request\n  return isLocationDestination && isUserRequestor;\n};\n\nexport const hasRole = (user, role) => user?.roles?.includes(role);\n\nexport default canEditRequest;\n","const RequisitionStatus = {\n  CREATED: 'CREATED',\n  EDITING: 'EDITING',\n  VERIFYING: 'VERIFYING',\n  PICKING: 'PICKING',\n  PICKED: 'PICKED',\n  PENDING: 'PENDING',\n  CHECKING: 'CHECKING',\n  ISSUED: 'ISSUED',\n  RECEIVED: 'RECEIVED',\n  CANCELED: 'CANCELED',\n  DELETED: 'DELETED',\n  ERROR: 'ERROR',\n  DISPATCHED: 'DISPATCHED',\n  REQUESTED: 'REQUESTED',\n  OPEN: 'OPEN',\n  FULFILLED: 'FULFILLED',\n  REVIEWING: 'REVIEWING',\n  CONFIRMING: 'CONFIRMING',\n  PENDING_APPROVAL: 'PENDING_APPROVAL',\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED',\n};\n\nexport default RequisitionStatus;\n","const StockMovementStatus = {\n  CREATED: 'CREATED',\n  REQUESTING: 'REQUESTING',\n  REQUESTED: 'REQUESTED',\n  PENDING_APPROVAL: 'PENDING_APPROVAL',\n  VALIDATING: 'VALIDATING',\n  VALIDATED: 'VALIDATED',\n  APPROVED: 'APPROVED',\n  PICKING: 'PICKING',\n  PICKED: 'PICKED',\n  CHECKING: 'CHECKING',\n  CHECKED: 'CHECKED',\n  PACKED: 'PACKED',\n  REVIEWING: 'REVIEWING',\n  DISPATCHED: 'DISPATCHED',\n  CANCELED: 'CANCELED',\n  REJECTED: 'REJECTED',\n};\n\nexport default StockMovementStatus;\n","import ActivityCode from 'consts/activityCode';\n\n/**\n * Request from Ward = request from any location (not only ward),\n * that does not support MANAGE INVENTORY activity but, it supports SUBMIT REQUEST\n * */\nexport const isRequestFromWard = (currentLocationId, destinationId, supportedActivities) =>\n  currentLocationId === destinationId\n  && !supportedActivities.includes(ActivityCode.MANAGE_INVENTORY)\n  && supportedActivities.includes(ActivityCode.SUBMIT_REQUEST);\n\nexport const supports = (locationSupportedActivities, activity) =>\n  locationSupportedActivities?.includes(activity);\n\nexport const checkBinLocationSupport = (supportedActivities) =>\n  supports(supportedActivities, ActivityCode.PUTAWAY_STOCK)\n  && supports(supportedActivities, ActivityCode.PICK_STOCK);\n","import React, { Component } from \"react\";\n\nimport arrayMutators from \"final-form-arrays\";\nimport update from \"immutability-helper\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Alert from \"react-s-alert\";\nimport { Tooltip } from \"react-tippy\";\n\nimport { fetchReasonCodes, hideSpinner, showSpinner } from \"actions\";\nimport ArrayField from \"components/form-elements/ArrayField\";\nimport Button from \"components/form-elements/Button\";\nimport ButtonField from \"components/form-elements/ButtonField\";\nimport LabelField from \"components/form-elements/LabelField\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TableRowWithSubfields from \"components/form-elements/TableRowWithSubfields\";\nimport TextField from \"components/form-elements/TextField\";\nimport DetailsModal from \"components/stock-movement-wizard/modals/DetailsModal\";\nimport SubstitutionsModal from \"components/stock-movement-wizard/modals/SubstitutionsModal\";\nimport { DASHBOARD_URL, STOCK_MOVEMENT_URL } from \"consts/applicationUrls\";\nimport RequisitionStatus from \"consts/requisitionStatus\";\nimport apiClient from \"utils/apiClient\";\nimport { renderFormField } from \"utils/form-utils\";\nimport {\n  formatProductDisplayName,\n  showOutboundEditValidationErrors,\n} from \"utils/form-values-utils\";\nimport canEditRequest from \"utils/permissionUtils\";\nimport renderHandlingIcons from \"utils/product-handling-icons\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst BTN_CLASS_MAPPER = {\n  YES: \"btn btn-outline-success\",\n  NO: \"btn btn-outline-secondary\",\n  EARLIER: \"btn btn-outline-warning\",\n  HIDDEN: \"btn invisible\",\n};\n\nconst AD_HOCK_FIELDS = {\n  editPageItems: {\n    type: ArrayField,\n    arrowsNavigation: true,\n    virtualized: true,\n    totalCount: ({ totalCount }) => totalCount,\n    isRowLoaded: ({ isRowLoaded }) => isRowLoaded,\n    isFirstPageLoaded: ({ isFirstPageLoaded }) => isFirstPageLoaded,\n    loadMoreRows: ({ loadMoreRows }) => loadMoreRows(),\n    rowComponent: TableRowWithSubfields,\n    getDynamicRowAttr: ({ rowValues, showOnlyErroredItems, itemFilter }) => {\n      let className =\n        rowValues.statusCode === \"SUBSTITUTED\" ? \"crossed-out \" : \"\";\n      if (rowValues.quantityAvailable < rowValues.quantityRequested) {\n        className += \"font-weight-bold\";\n      }\n      const filterOutItems =\n        itemFilter &&\n        !(\n          rowValues.product.name\n            .toLowerCase()\n            .includes(itemFilter.toLowerCase()) ||\n          rowValues.productCode.toLowerCase().includes(itemFilter.toLowerCase())\n        );\n      const hideRow =\n        (showOnlyErroredItems && !rowValues.hasError) || filterOutItems;\n      return { className, hideRow };\n    },\n    subfieldKey: \"substitutionItems\",\n    headerGroupings: {\n      requestInformation: {\n        label: \"react.verifyRequest.requestInformation.label\",\n        defaultLabel: \"Request Information\",\n        flexWidth: 0.5 + 3 + 1 + 1 + 1, // = Sum of fields flexWidth\n      },\n      availability: {\n        label: \"react.verifyRequest.availability.label\",\n        defaultLabel: \"Availability\",\n        flexWidth: 1 + 1 + 1 + 1, // = Sum of fields flexWidth\n      },\n      edit: {\n        label: \"react.verifyRequest.edit.label\",\n        defaultLabel: \"Edit\",\n        flexWidth: 1 + 1 + 1 + 0.5, // = Sum of fields flexWidth\n      },\n    },\n    fields: {\n      productCode: {\n        type: LabelField,\n        headerAlign: \"left\",\n        flexWidth: \"0.5\",\n        getDynamicAttr: ({ subfield }) => ({\n          className: subfield ? \"text-center\" : \"text-left ml-1\",\n        }),\n        label: \"react.stockMovement.code.label\",\n        defaultMessage: \"Code\",\n        attributes: {\n          showValueTooltip: true,\n        },\n      },\n      product: {\n        type: LabelField,\n        headerAlign: \"left\",\n        flexWidth: \"3\",\n        label: \"react.stockMovement.productName.label\",\n        defaultMessage: \"Product name\",\n        attributes: {\n          formatValue: (value) => (\n            <Tooltip\n              html={<div className=\"text-truncate\">{value.name}</div>}\n              theme=\"dark\"\n              disabled={!value.displayNames?.default}\n              position=\"top-start\"\n            >\n              <span className=\"d-flex align-items-center\">\n                <span className=\"text-truncate\">\n                  {value.displayNames?.default ?? value.name}\n                </span>\n                {renderHandlingIcons(value ? value.handlingIcons : null)}\n              </span>\n            </Tooltip>\n          ),\n        },\n        getDynamicAttr: ({ fieldValue, subfield }) => ({\n          className: subfield ? \"text-center\" : \"text-left ml-1\",\n          color: fieldValue?.color,\n        }),\n      },\n      quantityOnHandRequesting: {\n        type: LabelField,\n        label: \"react.stockMovement.requesterQuantityOnHand.label\",\n        defaultMessage: \"Requester QOH\",\n        flexWidth: \"1\",\n        attributes: {\n          formatValue: (value) =>\n            value ? value.toLocaleString(\"en-US\") : value,\n          numberField: true,\n        },\n      },\n      quantityDemandRequesting: {\n        type: LabelField,\n        label: \"react.stockMovement.quantityDemand.label\",\n        defaultMessage: \"Demand\",\n        flexWidth: \"1\",\n        attributes: {\n          formatValue: (value) =>\n            value ? value.toLocaleString(\"en-US\") : value,\n          numberField: true,\n        },\n      },\n      quantityRequested: {\n        type: (params) => {\n          const { fieldName, values } = params;\n          const fieldNameParts = _.split(fieldName, \".\");\n          if (fieldNameParts.length === 2) {\n            const rowIdx = fieldNameParts[0];\n            const rowValues = _.get(values, rowIdx);\n            if (rowValues.comments) {\n              return (\n                <div className=\"d-flex align-items-center\">\n                  {/* flex: 1 to center qty label, marginLeft: 14px to mitigate icon font size */}\n                  <div style={{ flex: 1, marginLeft: \"14px\" }}>\n                    <LabelField {...params} />\n                  </div>\n                  <Tooltip\n                    html={rowValues.comments}\n                    theme=\"transparent\"\n                    delay=\"150\"\n                    duration=\"250\"\n                    hideDelay=\"50\"\n                  >\n                    <i className=\"fa fa-sticky-note pr-2\" />\n                  </Tooltip>\n                </div>\n              );\n            }\n          }\n          return <LabelField {...params} />;\n        },\n        label: \"react.verifyRequest.quantityRequested.label\",\n        defaultMessage: \"Qty Requested\",\n        flexWidth: \"1\",\n        attributes: {\n          formatValue: (value) =>\n            value ? value.toLocaleString(\"en-US\") : value,\n          numberField: true,\n        },\n      },\n      quantityOnHand: {\n        type: LabelField,\n        label: \"react.stockMovement.quantityOnHand.label\",\n        defaultMessage: \"QOH\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        headerClassName: \"left-border\",\n        attributes: {\n          formatValue: (value) =>\n            value.quantityOnHand\n              ? value.quantityOnHand.toLocaleString(\"en-US\")\n              : value.quantityOnHand,\n          numberField: true,\n          className: \"left-border\",\n        },\n      },\n      quantityAvailable: {\n        type: LabelField,\n        label: \"react.stockMovement.available.label\",\n        defaultMessage: \"Available\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        getDynamicAttr: ({ fieldValue }) => {\n          let className = \"\";\n          if (\n            fieldValue &&\n            (!fieldValue.quantityAvailable ||\n              fieldValue.quantityAvailable < fieldValue.quantityRequested)\n          ) {\n            className += \"text-danger\";\n          }\n          return {\n            className,\n          };\n        },\n        attributes: {\n          formatValue: (value) =>\n            value.quantityAvailable\n              ? value.quantityAvailable.toLocaleString(\"en-US\")\n              : value.quantityAvailable,\n          numberField: true,\n        },\n      },\n      quantityDemandFulfilling: {\n        type: LabelField,\n        label: \"react.stockMovement.demandPerMonth.label\",\n        defaultMessage: \"Demand per Month\",\n        flexWidth: \"1\",\n        getDynamicAttr: () => ({\n          formatValue: (value) => {\n            if (value && value !== \"0\") {\n              return value.toLocaleString(\"en-US\");\n            }\n\n            return \"0\";\n          },\n          showValueTooltip: true,\n        }),\n        attributes: {\n          numberField: true,\n        },\n      },\n      detailsButton: {\n        label: \"react.stockMovement.details.label\",\n        defaultMessage: \"Details\",\n        type: DetailsModal,\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        attributes: {\n          title: \"react.stockMovement.pendingRequisitionDetails.label\",\n          defaultTitleMessage: \"Pending Requisition Details\",\n        },\n        getDynamicAttr: ({ fieldValue, stockMovementId, values }) => ({\n          productId: fieldValue && fieldValue.product && fieldValue.product.id,\n          productCode:\n            fieldValue && fieldValue.product && fieldValue.product.productCode,\n          productName:\n            fieldValue && fieldValue.product && fieldValue.product.name,\n          displayName: fieldValue?.product?.displayNames?.default,\n          originId: values && values.origin && values.origin.id,\n          stockMovementId,\n          quantityRequested: fieldValue && fieldValue.quantityRequested,\n          quantityOnHand: fieldValue && fieldValue.quantityOnHand,\n          quantityAvailable: fieldValue && fieldValue.quantityAvailable,\n          btnOpenText: \"react.stockMovement.details.label\",\n          btnOpenDefaultText: \"Details\",\n          btnCancelText: \"Close\",\n          btnSaveStyle: { display: \"none\" },\n          btnContainerClassName: \"float-right\",\n          btnOpenAsIcon: true,\n          btnOpenStyle: { border: \"none\", cursor: \"pointer\" },\n          btnOpenIcon: \"fa-search\",\n        }),\n      },\n      substituteButton: {\n        label: \"react.stockMovement.substitution.label\",\n        defaultMessage: \"Substitution\",\n        type: SubstitutionsModal,\n        fieldKey: \"\",\n        flexWidth: \"1\",\n        headerClassName: \"left-border\",\n        attributes: {\n          cellClassName: \"left-border\",\n          title: \"react.stockMovement.substitutes.label\",\n          defaultTitleMessage: \"Substitutes\",\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          stockMovementId,\n          onResponse,\n          reviseRequisitionItems,\n          values,\n          reasonCodes,\n          showOnly,\n        }) => ({\n          onOpen: () => reviseRequisitionItems(values),\n          productCode: fieldValue && fieldValue.productCode,\n          btnOpenText: `react.stockMovement.${fieldValue && fieldValue.substitutionStatus}.label`,\n          btnOpenDefaultText: `${fieldValue && fieldValue.substitutionStatus}`,\n          btnOpenDisabled:\n            (fieldValue && fieldValue.statusCode === \"SUBSTITUTED\") || showOnly,\n          btnOpenClassName:\n            BTN_CLASS_MAPPER[\n              (fieldValue && fieldValue.substitutionStatus) || \"HIDDEN\"\n            ],\n          rowIndex,\n          lineItem: fieldValue,\n          stockMovementId,\n          onResponse,\n          reasonCodes,\n        }),\n      },\n      quantityRevised: {\n        label: \"react.stockMovement.quantityRevised.label\",\n        defaultMessage: \"Qty revised\",\n        type: TextField,\n        fieldKey: \"statusCode\",\n        flexWidth: \"1\",\n        attributes: {\n          type: \"number\",\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          subfield,\n          showOnly,\n          updateRow,\n          values,\n          rowIndex,\n        }) => ({\n          disabled:\n            (fieldValue && fieldValue === \"SUBSTITUTED\") ||\n            subfield ||\n            showOnly,\n          onBlur: () => updateRow(values, rowIndex),\n        }),\n      },\n      reasonCode: {\n        type: SelectField,\n        label: \"react.stockMovement.reasonCode.label\",\n        defaultMessage: \"Reason code\",\n        flexWidth: \"1\",\n        fieldKey: \"quantityRevised\",\n        getDynamicAttr: ({\n          fieldValue,\n          subfield,\n          reasonCodes,\n          updateRow,\n          values,\n          rowIndex,\n          showOnly,\n        }) => {\n          const isSubstituted =\n            fieldValue && fieldValue.statusCode === \"SUBSTITUTED\";\n          return {\n            disabled:\n              fieldValue === null ||\n              fieldValue === undefined ||\n              subfield ||\n              isSubstituted ||\n              showOnly,\n            options: reasonCodes,\n            showValueTooltip: true,\n            onBlur: () => updateRow(values, rowIndex),\n          };\n        },\n      },\n      revert: {\n        type: ButtonField,\n        label: \"react.default.button.undo.label\",\n        defaultMessage: \"Undo\",\n        flexWidth: \"0.5\",\n        fieldKey: \"\",\n        buttonLabel: \"react.default.button.undo.label\",\n        buttonDefaultMessage: \"Undo\",\n        getDynamicAttr: ({ fieldValue, revertItem, values, showOnly }) => ({\n          onClick:\n            fieldValue && fieldValue.requisitionItemId\n              ? () => revertItem(values, fieldValue.requisitionItemId)\n              : () => null,\n          hidden:\n            fieldValue && fieldValue.statusCode\n              ? !_.includes([\"CHANGED\", \"CANCELED\"], fieldValue.statusCode)\n              : false,\n          disabled: showOnly,\n        }),\n        attributes: {\n          className: \"btn btn-outline-danger\",\n        },\n      },\n    },\n  },\n};\n\nconst STOCKLIST_FIELDS_PUSH_TYPE = {\n  editPageItems: {\n    type: ArrayField,\n    arrowsNavigation: true,\n    virtualized: true,\n    totalCount: ({ totalCount }) => totalCount,\n    isRowLoaded: ({ isRowLoaded }) => isRowLoaded,\n    isFirstPageLoaded: ({ isFirstPageLoaded }) => isFirstPageLoaded,\n    loadMoreRows: ({ loadMoreRows }) => loadMoreRows(),\n    rowComponent: TableRowWithSubfields,\n    getDynamicRowAttr: ({ rowValues, showOnlyErroredItems, itemFilter }) => {\n      let className =\n        rowValues.statusCode === \"SUBSTITUTED\" ? \"crossed-out \" : \"\";\n      if (rowValues.quantityAvailable < rowValues.quantityRequested) {\n        className += \"font-weight-bold\";\n      }\n      const filterOutItems =\n        itemFilter &&\n        !(\n          rowValues.product.name\n            .toLowerCase()\n            .includes(itemFilter.toLowerCase()) ||\n          rowValues.productCode.toLowerCase().includes(itemFilter.toLowerCase())\n        );\n      const hideRow =\n        (showOnlyErroredItems && !rowValues.hasError) || filterOutItems;\n      return { className, hideRow };\n    },\n    subfieldKey: \"substitutionItems\",\n    headerGroupings: {\n      requestInformation: {\n        label: \"react.verifyRequest.requestInformation.label\",\n        defaultLabel: \"Request Information\",\n        flexWidth: 0.5 + 3 + 1 + 1 + 1, // = Sum of fields flexWidth\n      },\n      availability: {\n        label: \"react.verifyRequest.availability.label\",\n        defaultLabel: \"Availability\",\n        flexWidth: 1 + 1 + 1 + 1, // = Sum of fields flexWidth\n      },\n      edit: {\n        label: \"react.verifyRequest.edit.label\",\n        defaultLabel: \"Edit\",\n        flexWidth: 1 + 1 + 1 + 0.5, // = Sum of fields flexWidth\n      },\n    },\n    fields: {\n      productCode: {\n        type: LabelField,\n        headerAlign: \"left\",\n        flexWidth: \"0.5\",\n        getDynamicAttr: ({ subfield }) => ({\n          className: subfield ? \"text-center\" : \"text-left ml-1\",\n        }),\n        label: \"react.stockMovement.code.label\",\n        defaultMessage: \"Code\",\n        attributes: {\n          showValueTooltip: true,\n        },\n      },\n      product: {\n        type: LabelField,\n        headerAlign: \"left\",\n        flexWidth: \"3\",\n        label: \"react.stockMovement.productName.label\",\n        defaultMessage: \"Product name\",\n        attributes: {\n          formatValue: formatProductDisplayName,\n        },\n        getDynamicAttr: ({ subfield, fieldValue }) => ({\n          className: subfield ? \"text-center\" : \"text-left ml-1\",\n          showValueTooltip: !!fieldValue?.displayNames?.default,\n          tooltipValue: fieldValue?.name,\n          color: fieldValue?.color,\n        }),\n      },\n      quantityOnStocklist: {\n        type: LabelField,\n        label: \"react.stockMovement.quantityOnStocklist.label\",\n        defaultMessage: \"Stocklist QTY\",\n        flexWidth: \"1\",\n        attributes: {\n          formatValue: (value) =>\n            value ? value.toLocaleString(\"en-US\") : value,\n          numberField: true,\n        },\n      },\n      quantityOnHandRequesting: {\n        type: LabelField,\n        label: \"react.stockMovement.requesterQuantityOnHand.label\",\n        defaultMessage: \"Requester QOH\",\n        flexWidth: \"1\",\n        attributes: {\n          formatValue: (value) =>\n            value ? value.toLocaleString(\"en-US\") : value,\n          numberField: true,\n        },\n      },\n      quantityRequested: {\n        type: (params) => {\n          const { fieldName, values } = params;\n          const fieldNameParts = _.split(fieldName, \".\");\n          if (fieldNameParts.length === 2) {\n            const rowIdx = fieldNameParts[0];\n            const rowValues = _.get(values, rowIdx);\n            if (rowValues.comments) {\n              return (\n                <div className=\"d-flex align-items-center\">\n                  {/* flex: 1 to center qty label, marginLeft: 14px to mitigate icon font size */}\n                  <div style={{ flex: 1, marginLeft: \"14px\" }}>\n                    <LabelField {...params} />\n                  </div>\n                  <Tooltip\n                    html={rowValues.comments}\n                    theme=\"transparent\"\n                    delay=\"150\"\n                    duration=\"250\"\n                    hideDelay=\"50\"\n                  >\n                    <i className=\"fa fa-sticky-note pr-2\" />\n                  </Tooltip>\n                </div>\n              );\n            }\n          }\n          return <LabelField {...params} />;\n        },\n        label: \"react.verifyRequest.quantityRequested.label\",\n        defaultMessage: \"Qty Requested\",\n        flexWidth: \"1\",\n        attributes: {\n          formatValue: (value) =>\n            value ? value.toLocaleString(\"en-US\") : value,\n          numberField: true,\n        },\n      },\n      quantityOnHand: {\n        type: LabelField,\n        label: \"react.stockMovement.quantityOnHand.label\",\n        defaultMessage: \"QOH\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        headerClassName: \"left-border\",\n        attributes: {\n          formatValue: (value) =>\n            value.quantityOnHand\n              ? value.quantityOnHand.toLocaleString(\"en-US\")\n              : value.quantityOnHand,\n          numberField: true,\n          className: \"left-border\",\n        },\n      },\n      quantityAvailable: {\n        type: LabelField,\n        label: \"react.stockMovement.available.label\",\n        defaultMessage: \"Available\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        getDynamicAttr: ({ fieldValue }) => {\n          let className = \"\";\n          if (\n            fieldValue &&\n            (!fieldValue.quantityAvailable ||\n              fieldValue.quantityAvailable < fieldValue.quantityRequested)\n          ) {\n            className += \"text-danger\";\n          }\n          return {\n            className,\n          };\n        },\n        attributes: {\n          formatValue: (value) =>\n            value.quantityAvailable\n              ? value.quantityAvailable.toLocaleString(\"en-US\")\n              : value.quantityAvailable,\n          numberField: true,\n        },\n      },\n      quantityDemandFulfilling: {\n        type: LabelField,\n        label: \"react.stockMovement.demandPerMonth.label\",\n        defaultMessage: \"Demand per Month\",\n        flexWidth: \"1\",\n        getDynamicAttr: () => ({\n          formatValue: (value) => {\n            if (value && value !== \"0\") {\n              return value.toLocaleString(\"en-US\");\n            }\n\n            return \"0\";\n          },\n          showValueTooltip: true,\n        }),\n        attributes: {\n          numberField: true,\n        },\n      },\n      detailsButton: {\n        label: \"react.stockMovement.details.label\",\n        defaultMessage: \"Details\",\n        type: DetailsModal,\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        attributes: {\n          title: \"react.stockMovement.pendingRequisitionDetails.label\",\n          defaultTitleMessage: \"Pending Requisition Details\",\n        },\n        getDynamicAttr: ({ fieldValue, stockMovementId, values }) => ({\n          productId: fieldValue && fieldValue.product && fieldValue.product.id,\n          productCode:\n            fieldValue && fieldValue.product && fieldValue.product.productCode,\n          productName:\n            fieldValue && fieldValue.product && fieldValue.product.name,\n          displayName: fieldValue?.product?.displayNames?.default,\n          originId: values && values.origin && values.origin.id,\n          stockMovementId,\n          quantityRequested: fieldValue && fieldValue.quantityRequested,\n          quantityOnHand: fieldValue && fieldValue.quantityOnHand,\n          quantityAvailable: fieldValue && fieldValue.quantityAvailable,\n          btnOpenText: \"react.stockMovement.details.label\",\n          btnOpenDefaultText: \"Details\",\n          btnCancelText: \"Close\",\n          btnSaveStyle: { display: \"none\" },\n          btnContainerClassName: \"float-right\",\n          btnOpenAsIcon: true,\n          btnOpenStyle: { border: \"none\", cursor: \"pointer\" },\n          btnOpenIcon: \"fa-search\",\n        }),\n      },\n      substituteButton: {\n        label: \"react.stockMovement.substitution.label\",\n        defaultMessage: \"Substitution\",\n        type: SubstitutionsModal,\n        fieldKey: \"\",\n        flexWidth: \"1\",\n        headerClassName: \"left-border\",\n        attributes: {\n          cellClassName: \"left-border\",\n          title: \"react.stockMovement.substitutes.label\",\n          defaultTitleMessage: \"Substitutes\",\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          stockMovementId,\n          onResponse,\n          reviseRequisitionItems,\n          values,\n          reasonCodes,\n          showOnly,\n        }) => ({\n          onOpen: () => reviseRequisitionItems(values),\n          productCode: fieldValue && fieldValue.productCode,\n          btnOpenText: `react.stockMovement.${fieldValue && fieldValue.substitutionStatus}.label`,\n          btnOpenDefaultText: `${fieldValue && fieldValue.substitutionStatus}`,\n          btnOpenDisabled:\n            (fieldValue && fieldValue.statusCode === \"SUBSTITUTED\") || showOnly,\n          btnOpenClassName:\n            BTN_CLASS_MAPPER[\n              (fieldValue && fieldValue.substitutionStatus) || \"HIDDEN\"\n            ],\n          rowIndex,\n          lineItem: fieldValue,\n          stockMovementId,\n          onResponse,\n          reasonCodes,\n        }),\n      },\n      quantityRevised: {\n        label: \"react.stockMovement.quantityRevised.label\",\n        defaultMessage: \"Qty revised\",\n        type: TextField,\n        fieldKey: \"statusCode\",\n        flexWidth: \"1\",\n        attributes: {\n          type: \"number\",\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          subfield,\n          showOnly,\n          updateRow,\n          values,\n          rowIndex,\n        }) => ({\n          disabled:\n            (fieldValue && fieldValue === \"SUBSTITUTED\") ||\n            subfield ||\n            showOnly,\n          onBlur: () => updateRow(values, rowIndex),\n        }),\n      },\n      reasonCode: {\n        type: SelectField,\n        label: \"react.stockMovement.reasonCode.label\",\n        defaultMessage: \"Reason code\",\n        flexWidth: \"1\",\n        fieldKey: \"quantityRevised\",\n        getDynamicAttr: ({\n          fieldValue,\n          subfield,\n          reasonCodes,\n          updateRow,\n          values,\n          rowIndex,\n          showOnly,\n        }) => {\n          const isSubstituted =\n            fieldValue && fieldValue.statusCode === \"SUBSTITUTED\";\n          return {\n            disabled:\n              fieldValue === null ||\n              fieldValue === undefined ||\n              subfield ||\n              isSubstituted ||\n              showOnly,\n            options: reasonCodes,\n            showValueTooltip: true,\n            onBlur: () => updateRow(values, rowIndex),\n          };\n        },\n      },\n      revert: {\n        type: ButtonField,\n        label: \"react.default.button.undo.label\",\n        defaultMessage: \"Undo\",\n        flexWidth: \"0.5\",\n        fieldKey: \"\",\n        buttonLabel: \"react.default.button.undo.label\",\n        buttonDefaultMessage: \"Undo\",\n        getDynamicAttr: ({ fieldValue, revertItem, values, showOnly }) => ({\n          onClick:\n            fieldValue && fieldValue.requisitionItemId\n              ? () => revertItem(values, fieldValue.requisitionItemId)\n              : () => null,\n          hidden:\n            fieldValue && fieldValue.statusCode\n              ? !_.includes([\"CHANGED\", \"CANCELED\"], fieldValue.statusCode)\n              : false,\n          disabled: showOnly,\n        }),\n        attributes: {\n          className: \"btn btn-outline-danger\",\n        },\n      },\n    },\n  },\n};\n\nconst STOCKLIST_FIELDS_PULL_TYPE = {\n  editPageItems: {\n    type: ArrayField,\n    arrowsNavigation: true,\n    virtualized: true,\n    totalCount: ({ totalCount }) => totalCount,\n    isRowLoaded: ({ isRowLoaded }) => isRowLoaded,\n    isFirstPageLoaded: ({ isFirstPageLoaded }) => isFirstPageLoaded,\n    loadMoreRows: ({ loadMoreRows }) => loadMoreRows(),\n    rowComponent: TableRowWithSubfields,\n    getDynamicRowAttr: ({ rowValues, showOnlyErroredItems, itemFilter }) => {\n      let className =\n        rowValues.statusCode === \"SUBSTITUTED\" ? \"crossed-out \" : \"\";\n      if (rowValues.quantityAvailable < rowValues.quantityRequested) {\n        className += \"font-weight-bold\";\n      }\n      const filterOutItems =\n        itemFilter &&\n        !(\n          rowValues.product.name\n            .toLowerCase()\n            .includes(itemFilter.toLowerCase()) ||\n          rowValues.productCode.toLowerCase().includes(itemFilter.toLowerCase())\n        );\n      const hideRow =\n        (showOnlyErroredItems && !rowValues.hasError) || filterOutItems;\n      return { className, hideRow };\n    },\n    subfieldKey: \"substitutionItems\",\n    headerGroupings: {\n      requestInformation: {\n        label: \"react.verifyRequest.requestInformation.label\",\n        defaultLabel: \"Request Information\",\n        flexWidth: 0.5 + 3.5 + 1 + 1 + 1, // = Sum of fields flexWidth\n      },\n      availability: {\n        label: \"react.verifyRequest.availability.label\",\n        defaultLabel: \"Availability\",\n        flexWidth: 1 + 1 + 1 + 1, // = Sum of fields flexWidth\n      },\n      edit: {\n        label: \"react.verifyRequest.edit.label\",\n        defaultLabel: \"Edit\",\n        flexWidth: 1 + 1 + 1.5 + 0.5, // = Sum of fields flexWidth\n      },\n    },\n    fields: {\n      productCode: {\n        type: LabelField,\n        headerAlign: \"left\",\n        flexWidth: \"0.5\",\n        getDynamicAttr: ({ subfield }) => ({\n          className: subfield ? \"text-center\" : \"text-left ml-1\",\n        }),\n        label: \"react.stockMovement.code.label\",\n        defaultMessage: \"Code\",\n        attributes: {\n          showValueTooltip: true,\n        },\n      },\n      product: {\n        type: LabelField,\n        headerAlign: \"left\",\n        flexWidth: \"3.5\",\n        label: \"react.stockMovement.productName.label\",\n        defaultMessage: \"Product name\",\n        attributes: {\n          formatValue: formatProductDisplayName,\n        },\n        getDynamicAttr: ({ subfield, fieldValue }) => ({\n          className: subfield ? \"text-center\" : \"text-left ml-1\",\n          showValueTooltip: !!fieldValue?.displayNames?.default,\n          tooltipValue: fieldValue?.name,\n          color: fieldValue?.color,\n        }),\n      },\n      demandPerReplenishmentPeriod: {\n        type: LabelField,\n        label: \"react.stockMovement.demandPerReplenishmentPeriod.label\",\n        defaultMessage: \"Demand per Replenishment Period\",\n        flexWidth: \"1\",\n        attributes: {\n          formatValue: (value) =>\n            value ? value.toLocaleString(\"en-US\") : value,\n          numberField: true,\n        },\n      },\n      quantityOnHandRequesting: {\n        type: LabelField,\n        label: \"react.stockMovement.requesterQuantityOnHand.label\",\n        defaultMessage: \"Requester QOH\",\n        flexWidth: \"1\",\n        attributes: {\n          formatValue: (value) =>\n            value ? value.toLocaleString(\"en-US\") : value,\n          numberField: true,\n        },\n      },\n      quantityRequested: {\n        type: (params) => {\n          const { fieldName, values } = params;\n          const fieldNameParts = _.split(fieldName, \".\");\n          if (fieldNameParts.length === 2) {\n            const rowIdx = fieldNameParts[0];\n            const rowValues = _.get(values, rowIdx);\n            if (rowValues.comments) {\n              return (\n                <div className=\"d-flex align-items-center\">\n                  {/* flex: 1 to center qty label, marginLeft: 14px to mitigate icon font size */}\n                  <div style={{ flex: 1, marginLeft: \"14px\" }}>\n                    <LabelField {...params} />\n                  </div>\n                  <Tooltip\n                    html={rowValues.comments}\n                    theme=\"transparent\"\n                    delay=\"150\"\n                    duration=\"250\"\n                    hideDelay=\"50\"\n                  >\n                    <i className=\"fa fa-sticky-note pr-2\" />\n                  </Tooltip>\n                </div>\n              );\n            }\n          }\n          return <LabelField {...params} />;\n        },\n        label: \"react.verifyRequest.quantityRequested.label\",\n        defaultMessage: \"Qty Requested\",\n        flexWidth: \"1\",\n        attributes: {\n          formatValue: (value) =>\n            value ? value.toLocaleString(\"en-US\") : value,\n          numberField: true,\n        },\n      },\n      quantityOnHand: {\n        type: LabelField,\n        label: \"react.stockMovement.quantityOnHand.label\",\n        defaultMessage: \"QOH\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        headerClassName: \"left-border\",\n        attributes: {\n          formatValue: (value) =>\n            value.quantityOnHand\n              ? value.quantityOnHand.toLocaleString(\"en-US\")\n              : value.quantityOnHand,\n          numberField: true,\n          className: \"left-border\",\n        },\n      },\n      quantityAvailable: {\n        type: LabelField,\n        label: \"react.stockMovement.available.label\",\n        defaultMessage: \"Available\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        getDynamicAttr: ({ fieldValue }) => {\n          let className = \"\";\n          if (\n            fieldValue &&\n            (!fieldValue.quantityAvailable ||\n              fieldValue.quantityAvailable < fieldValue.quantityRequested)\n          ) {\n            className += \"text-danger\";\n          }\n          return {\n            className,\n          };\n        },\n        attributes: {\n          formatValue: (value) =>\n            value.quantityAvailable\n              ? value.quantityAvailable.toLocaleString(\"en-US\")\n              : value.quantityAvailable,\n          numberField: true,\n        },\n      },\n      quantityDemandFulfilling: {\n        type: LabelField,\n        label: \"react.stockMovement.demandPerMonth.labe\",\n        defaultMessage: \"Demand per Month\",\n        flexWidth: \"1\",\n        getDynamicAttr: () => ({\n          formatValue: (value) => {\n            if (value && value !== \"0\") {\n              return value.toLocaleString(\"en-US\");\n            }\n\n            return \"0\";\n          },\n          showValueTooltip: true,\n        }),\n        attributes: {\n          numberField: true,\n        },\n      },\n      detailsButton: {\n        label: \"react.stockMovement.details.label\",\n        defaultMessage: \"Details\",\n        type: DetailsModal,\n        fieldKey: \"\",\n        flexWidth: \"1\",\n        attributes: {\n          title: \"react.stockMovement.pendingRequisitionDetails.label\",\n          defaultTitleMessage: \"Pending Requisition Details\",\n        },\n        getDynamicAttr: ({ fieldValue, stockMovementId, values }) => ({\n          productId: fieldValue && fieldValue.product && fieldValue.product.id,\n          productCode:\n            fieldValue && fieldValue.product && fieldValue.product.productCode,\n          productName:\n            fieldValue && fieldValue.product && fieldValue.product.name,\n          displayName: fieldValue?.product?.displayNames?.default,\n          originId: values && values.origin && values.origin.id,\n          stockMovementId,\n          quantityRequested: fieldValue && fieldValue.quantityRequested,\n          quantityOnHand: fieldValue && fieldValue.quantityOnHand,\n          quantityAvailable: fieldValue && fieldValue.quantityAvailable,\n          btnOpenText: \"react.stockMovement.details.label\",\n          btnOpenDefaultText: \"Details\",\n          btnCancelText: \"Close\",\n          btnSaveStyle: { display: \"none\" },\n          btnContainerClassName: \"float-right\",\n          btnOpenAsIcon: true,\n          btnOpenStyle: { border: \"none\", cursor: \"pointer\" },\n          btnOpenIcon: \"fa-search\",\n        }),\n      },\n      substituteButton: {\n        label: \"react.stockMovement.substitution.label\",\n        defaultMessage: \"Substitution\",\n        type: SubstitutionsModal,\n        fieldKey: \"\",\n        flexWidth: \"1\",\n        headerClassName: \"left-border\",\n        attributes: {\n          cellClassName: \"left-border\",\n          title: \"react.stockMovement.substitutes.label\",\n          defaultTitleMessage: \"Substitutes\",\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          stockMovementId,\n          onResponse,\n          reviseRequisitionItems,\n          values,\n          reasonCodes,\n          showOnly,\n        }) => ({\n          onOpen: () => reviseRequisitionItems(values),\n          productCode: fieldValue && fieldValue.productCode,\n          btnOpenText: `react.stockMovement.${fieldValue && fieldValue.substitutionStatus}.label`,\n          btnOpenDefaultText: `${fieldValue && fieldValue.substitutionStatus}`,\n          btnOpenDisabled:\n            (fieldValue && fieldValue.statusCode === \"SUBSTITUTED\") || showOnly,\n          btnOpenClassName:\n            BTN_CLASS_MAPPER[\n              (fieldValue && fieldValue.substitutionStatus) || \"HIDDEN\"\n            ],\n          rowIndex,\n          lineItem: fieldValue,\n          stockMovementId,\n          onResponse,\n          reasonCodes,\n        }),\n      },\n      quantityRevised: {\n        label: \"react.stockMovement.quantityRevised.label\",\n        defaultMessage: \"Qty revised\",\n        type: TextField,\n        fieldKey: \"statusCode\",\n        flexWidth: \"1\",\n        attributes: {\n          type: \"number\",\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          subfield,\n          showOnly,\n          updateRow,\n          values,\n          rowIndex,\n        }) => ({\n          disabled:\n            (fieldValue && fieldValue === \"SUBSTITUTED\") ||\n            subfield ||\n            showOnly,\n          onBlur: () => updateRow(values, rowIndex),\n        }),\n      },\n      reasonCode: {\n        type: SelectField,\n        label: \"react.stockMovement.reasonCode.label\",\n        defaultMessage: \"Reason code\",\n        flexWidth: \"1.5\",\n        fieldKey: \"quantityRevised\",\n        getDynamicAttr: ({\n          fieldValue,\n          subfield,\n          reasonCodes,\n          updateRow,\n          values,\n          rowIndex,\n          showOnly,\n        }) => {\n          const isSubstituted =\n            fieldValue && fieldValue.statusCode === \"SUBSTITUTED\";\n          return {\n            disabled:\n              fieldValue === null ||\n              fieldValue === undefined ||\n              subfield ||\n              isSubstituted ||\n              showOnly,\n            options: reasonCodes,\n            showValueTooltip: true,\n            onBlur: () => updateRow(values, rowIndex),\n          };\n        },\n      },\n      revert: {\n        type: ButtonField,\n        label: \"react.default.button.undo.label\",\n        defaultMessage: \"Undo\",\n        flexWidth: \"0.5\",\n        fieldKey: \"\",\n        buttonLabel: \"react.default.button.undo.label\",\n        buttonDefaultMessage: \"Undo\",\n        getDynamicAttr: ({ fieldValue, revertItem, values, showOnly }) => ({\n          onClick:\n            fieldValue && fieldValue.requisitionItemId\n              ? () => revertItem(values, fieldValue.requisitionItemId)\n              : () => null,\n          hidden:\n            fieldValue && fieldValue.statusCode\n              ? !_.includes([\"CHANGED\", \"CANCELED\"], fieldValue.statusCode)\n              : false,\n          disabled: showOnly,\n        }),\n        attributes: {\n          className: \"btn btn-outline-danger\",\n        },\n      },\n    },\n  },\n};\n\nconst REPLENISHMENT_TYPE_PULL = \"PULL\";\n\nfunction validateForSave(values) {\n  const errors = {};\n  errors.editPageItems = [];\n\n  _.forEach(values.editPageItems, (item, key) => {\n    if (!_.isEmpty(item.quantityRevised) && _.isEmpty(item.reasonCode)) {\n      errors.editPageItems[key] = {\n        reasonCode: \"react.stockMovement.errors.reasonCodeRequired.label\",\n      };\n    } else if (\n      _.isNil(item.quantityRevised) &&\n      !_.isEmpty(item.reasonCode) &&\n      item.statusCode !== \"SUBSTITUTED\"\n    ) {\n      errors.editPageItems[key] = {\n        quantityRevised:\n          \"react.stockMovement.errors.revisedQuantityRequired.label\",\n      };\n    }\n    if (parseInt(item.quantityRevised, 10) === item.quantityRequested) {\n      errors.editPageItems[key] = {\n        quantityRevised: \"react.stockMovement.errors.sameRevisedQty.label\",\n      };\n    }\n    if (\n      !_.isEmpty(item.quantityRevised) &&\n      item.quantityAvailable >= 0 &&\n      item.quantityRevised > item.quantityAvailable\n    ) {\n      errors.editPageItems[key] = {\n        quantityRevised: \"react.stockMovement.errors.higherQty.label\",\n      };\n    }\n    if (!_.isEmpty(item.quantityRevised) && item.quantityRevised < 0) {\n      errors.editPageItems[key] = {\n        quantityRevised: \"react.stockMovement.errors.negativeQty.label\",\n      };\n    }\n  });\n  return errors;\n}\n\n/**\n * The third step of stock movement(for stock requests) where user can see the\n * stock available and adjust quantities or make substitutions based on that information.\n * or validate the current status of a request\n */\nclass EditItemsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      statusCode: \"\",\n      revisedItems: [],\n      values: { ...this.props.initialValues, editPageItems: [] },\n      hasItemsLoaded: false,\n      totalCount: 0,\n      isFirstPageLoaded: false,\n      showOnlyErroredItems: false,\n      itemFilter: \"\",\n    };\n\n    this.revertItem = this.revertItem.bind(this);\n    this.fetchEditPageItems = this.fetchEditPageItems.bind(this);\n    this.reviseRequisitionItems = this.reviseRequisitionItems.bind(this);\n    this.isRowLoaded = this.isRowLoaded.bind(this);\n    this.loadMoreRows = this.loadMoreRows.bind(this);\n    this.updateRow = this.updateRow.bind(this);\n    this.markErroredLines = this.markErroredLines.bind(this);\n    this.validate = this.validate.bind(this);\n    this.props.showSpinner();\n  }\n\n  componentDidMount() {\n    if (this.props.stockMovementTranslationsFetched) {\n      this.dataFetched = true;\n\n      this.fetchAllData(false);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.stockMovementTranslationsFetched && !this.dataFetched) {\n      this.dataFetched = true;\n\n      this.fetchAllData(false);\n    }\n\n    // If we change the language, refetch the reason codes\n    if (nextProps.currentLocale !== this.props.currentLocale) {\n      this.props.fetchReasonCodes();\n    }\n  }\n\n  setEditPageItems(response, startIndex) {\n    this.props.showSpinner();\n    const { data } = response.data;\n    const editPageItems = _.map(data, (val) => ({\n      ...val,\n      disabled: true,\n      quantityOnHand: val.quantityOnHand > 0 ? val.quantityOnHand : 0,\n      quantityAvailable: val.quantityAvailable > 0 ? val.quantityAvailable : 0,\n      quantityOnHandRequesting: val.quantityCounted,\n      product: {\n        ...val.product,\n        label: `${val.productCode} ${val.productName}`,\n      },\n      // eslint-disable-next-line max-len\n      reasonCode: _.find(this.props.reasonCodes, ({ value }) =>\n        _.includes(val.reasonCode, value),\n      ),\n      substitutionItems: _.map(val.substitutionItems, (sub) => ({\n        ...sub,\n        requisitionItemId: val.requisitionItemId,\n        product: {\n          ...sub.product,\n          label: `${sub.productCode} ${sub.productName}`,\n        },\n        // eslint-disable-next-line max-len\n        reasonCode: _.find(this.props.reasonCodes, ({ value }) =>\n          _.includes(val.reasonCode, value),\n        ),\n      })),\n    }));\n\n    this.setState(\n      (prev) => ({\n        revisedItems: _.filter(\n          editPageItems,\n          (item) => item.statusCode === \"CHANGED\",\n        ),\n        values: {\n          ...prev.values,\n          editPageItems: _.uniqBy(\n            _.concat(prev.values.editPageItems, editPageItems),\n            \"requisitionItemId\",\n          ),\n        },\n        hasItemsLoaded:\n          prev.hasItemsLoaded ||\n          prev.totalCount ===\n            _.uniqBy(\n              _.concat(prev.values.editPageItems, editPageItems),\n              \"requisitionItemId\",\n            ).length,\n      }),\n      () => {\n        // eslint-disable-next-line max-len\n        if (\n          !_.isNull(startIndex) &&\n          this.state.values.editPageItems.length !== this.state.totalCount\n        ) {\n          this.loadMoreRows({ startIndex: startIndex + this.props.pageSize });\n        }\n        this.props.hideSpinner();\n      },\n    );\n  }\n\n  getFields() {\n    if (_.get(this.state.values.stocklist, \"id\")) {\n      if (\n        _.get(this.state.values.replenishmentType, \"name\") ===\n        REPLENISHMENT_TYPE_PULL\n      ) {\n        return STOCKLIST_FIELDS_PULL_TYPE;\n      }\n      return STOCKLIST_FIELDS_PUSH_TYPE;\n    }\n\n    return AD_HOCK_FIELDS;\n  }\n\n  validate(values) {\n    const errors = validateForSave(values);\n\n    _.forEach(values.editPageItems, (item, key) => {\n      if (\n        _.isNil(item.quantityRevised) &&\n        item.quantityRequested > item.quantityAvailable &&\n        item.statusCode !== \"SUBSTITUTED\"\n      ) {\n        errors.editPageItems[key] = {\n          quantityRevised: \"react.stockMovement.errors.lowerQty.label\",\n        };\n      }\n    });\n\n    this.markErroredLines(values, errors);\n\n    return errors;\n  }\n\n  markErroredLines(values, errors) {\n    let updatedValues = values;\n\n    _.forEach(this.state.values.editPageItems, (item, itemIdx) => {\n      updatedValues = update(updatedValues, {\n        editPageItems: {\n          [itemIdx]: {\n            hasError: {\n              $set: !!_.find(\n                errors.editPageItems,\n                (error, errorIdx) => itemIdx === errorIdx,\n              ),\n            },\n          },\n        },\n      });\n    });\n\n    this.setState((prev) => ({\n      values: updatedValues,\n      showOnlyErroredItems: !errors.editPageItems.length\n        ? false\n        : prev.showOnlyErroredItems,\n    }));\n  }\n\n  dataFetched = false;\n\n  /**\n   * Fetches all required data.\n   * @param {boolean} forceFetch\n   * @public\n   */\n  fetchAllData(forceFetch) {\n    this.props.showSpinner();\n    // TODO: When having full React, fetch only if not fetched yet or language changed\n    this.props.fetchReasonCodes();\n\n    this.fetchEditPageData()\n      .then((resp) => {\n        const { statusCode, associations } = resp.data.data;\n        const { totalCount } = resp.data;\n\n        this.setState(\n          (prev) => ({\n            statusCode,\n            totalCount,\n            values: {\n              ...prev.values,\n              associations,\n            },\n          }),\n          () => {\n            if (!this.props.isPaginated || forceFetch) {\n              this.fetchItems();\n            }\n          },\n        );\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n      });\n  }\n\n  fetchItems() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?stepNumber=3`;\n    apiClient.get(url).then((response) => {\n      this.setEditPageItems(response, null);\n      this.setState({\n        hasItemsLoaded: true,\n      });\n    });\n  }\n\n  fetchEditPageItems() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?stepNumber=3`;\n    apiClient\n      .get(url)\n      .then((response) => {\n        const { data } = response.data;\n        this.setState(\n          (prev) => ({\n            hasItemsLoaded: true,\n            values: {\n              ...prev.values,\n              associations: data?.associations,\n              editPageItems: _.map(data, (item) => ({\n                ...item,\n                quantityOnHandRequesting: item.quantityCounted,\n                quantityOnHand: item.quantityOnHand || 0,\n                // eslint-disable-next-line max-len\n                reasonCode: _.find(this.props.reasonCodes, ({ value }) =>\n                  _.includes(item.reasonCode, value),\n                ),\n                substitutionItems: _.map(item.substitutionItems, (sub) => ({\n                  ...sub,\n                  requisitionItemId: item.requisitionItemId,\n                  // eslint-disable-next-line max-len\n                  reasonCode: _.find(this.props.reasonCodes, ({ value }) =>\n                    _.includes(item.reasonCode, value),\n                  ),\n                })),\n              })),\n            },\n          }),\n          () => {\n            this.fetchAllData(false);\n            this.props.hideSpinner();\n          },\n        );\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n      });\n  }\n\n  loadMoreRows({ startIndex }) {\n    if (this.state.totalCount) {\n      this.setState({\n        isFirstPageLoaded: true,\n      });\n      const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?offset=${startIndex}&max=${this.props.pageSize}&stepNumber=3`;\n      apiClient.get(url).then((response) => {\n        this.setEditPageItems(response, startIndex);\n      });\n    }\n  }\n\n  isRowLoaded({ index }) {\n    return !!this.state.values.editPageItems[index];\n  }\n\n  /**\n   * Sends data of revised items with post method.\n   * @param {object} values\n   * @public\n   */\n  reviseRequisitionItems(values) {\n    const itemsToRevise = _.filter(values.editPageItems, (item) => {\n      if (item.quantityRevised && item.reasonCode) {\n        const oldRevision = _.find(\n          this.state.revisedItems,\n          (revision) => revision.requisitionItemId === item.requisitionItemId,\n        );\n        return _.isEmpty(oldRevision)\n          ? true\n          : _.toInteger(oldRevision.quantityRevised) !==\n              _.toInteger(item.quantityRevised) ||\n              oldRevision.reasonCode !== item.reasonCode;\n      }\n      return false;\n    });\n\n    let updatedValues = values;\n\n    _.forEach(itemsToRevise, (item) => {\n      const editPageItemIndex = _.findIndex(\n        this.state.values.editPageItems,\n        (editPageItem) =>\n          item.requisitionItemId === editPageItem.requisitionItemId,\n      );\n\n      updatedValues = update(updatedValues, {\n        editPageItems: {\n          [editPageItemIndex]: {\n            statusCode: {\n              $set: \"CHANGED\",\n            },\n          },\n        },\n      });\n    });\n\n    this.setState({\n      values: updatedValues,\n    });\n\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/reviseItems`;\n    const payload = {\n      lineItems: _.map(itemsToRevise, (item) => ({\n        id: item.requisitionItemId,\n        quantityRevised: item.quantityRevised,\n        reasonCode: item.reasonCode.value,\n      })),\n    };\n\n    if (payload.lineItems.length) {\n      return apiClient.post(url, payload);\n    }\n\n    return Promise.resolve();\n  }\n\n  updateRow(values, index) {\n    const item = values.editPageItems[index];\n    let val = values;\n    val = update(values, {\n      editPageItems: { [index]: { $set: item } },\n    });\n    this.setState({\n      values: val,\n    });\n  }\n\n  /**\n   * Saves list of requisition items in current step (without step change).\n   * @param {object} formValues\n   * @public\n   */\n  save(formValues) {\n    this.props.showSpinner();\n\n    const errors = validateForSave(formValues).editPageItems;\n\n    if (errors.length) {\n      showOutboundEditValidationErrors({\n        translate: this.props.translate,\n        errors,\n      });\n\n      this.props.hideSpinner();\n      return null;\n    }\n\n    return this.reviseRequisitionItems(formValues)\n      .then((resp) => {\n        // If reponse 200, then save revise items taken from the payload\n        const payload = JSON.parse(resp.config.data);\n        if (payload.lineItems && payload.lineItems.length) {\n          const savedItemIds = payload.lineItems.map((item) => item.id);\n          // Map to have the required field\n          // (requisitionItemId, quantityRevised and reasonCode as obj)\n          const savedItems = payload.lineItems.map((item) => ({\n            ...item,\n            requisitionItemId: item.id,\n            reasonCode: _.find(this.props.reasonCodes, ({ value }) =>\n              _.includes(item.reasonCode, value),\n            ),\n          }));\n          // Get old revise items, that were not changed in this request\n          const oldItems = _.filter(\n            this.state.values.editPageItems,\n            (item) => savedItemIds.indexOf(item.requisitionItemId) < 0,\n          );\n          this.setState({\n            revisedItems: [...oldItems, ...savedItems],\n          });\n        }\n\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.stockMovement.alert.saveSuccess.label\",\n            \"Changes saved successfully\",\n          ),\n          { timeout: 3000 },\n        );\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Refetch the data, all not saved changes will be lost.\n   * @public\n   */\n  refresh() {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.message.confirmRefresh.label\",\n        \"Confirm refresh\",\n      ),\n      message: this.props.translate(\n        \"react.stockMovement.confirmRefresh.message\",\n        \"Are you sure you want to refresh? Your progress since last save will be lost.\",\n      ),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: () => {\n            this.setState({\n              revisedItems: [],\n              values: { ...this.props.initialValues, editPageItems: [] },\n              hasItemsLoaded: false,\n              totalCount: 0,\n              isFirstPageLoaded: false,\n            });\n            this.fetchAllData(true);\n          },\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  }\n\n  /**\n   * Transition to next stock movement status (PICKING)\n   * after sending createPicklist: 'true' to backend autopick functionality is invoked.\n   * @public\n   */\n  transitionToNextStep() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/status`;\n    const payload = {\n      status: \"PICKING\",\n      createPicklist: this.state.statusCode === \"REQUESTED\" ? \"true\" : \"false\",\n    };\n\n    return apiClient.post(url, payload);\n  }\n\n  /**\n   * Fetches 3rd step data from current stock movement.\n   * @public\n   */\n  fetchEditPageData() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}`;\n\n    return apiClient\n      .get(url)\n      .then((resp) => resp)\n      .catch((err) => err);\n  }\n\n  /**\n   * Saves current stock movement progress (line items) and goes to the next stock movement step.\n   * @param {object} formValues\n   * @public\n   */\n  nextPage(formValues) {\n    this.props.showSpinner();\n    this.reviseRequisitionItems(formValues)\n      .then(() => {\n        this.transitionToNextStep()\n          .then(() => this.props.nextPage(formValues))\n          .catch(() => this.props.hideSpinner());\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Saves changes made when item reverted.\n   * @param {object} editPageItem\n   * @public\n   */\n  updateEditPageItem(values, editPageItem) {\n    const editPageItemIndex = _.findIndex(\n      this.state.values.editPageItems,\n      (item) => item.requisitionItemId === editPageItem.requisitionItemId,\n    );\n    const revisedItemIndex = _.findIndex(\n      this.state.revisedItems,\n      (item) => item.requisitionItemId === editPageItem.requisitionItemId,\n    );\n\n    this.setState((prev) => ({\n      values: {\n        ...values,\n        editPageItems: update(values.editPageItems, {\n          [editPageItemIndex]: {\n            $set: {\n              ...values.editPageItems[editPageItemIndex],\n              ...editPageItem,\n              quantityOnHandRequesting: editPageItem.quantityCounted,\n              quantityOnHand: editPageItem.quantityOnHand || 0,\n              quantityAvailable: editPageItem.quantityAvailable || 0,\n              substitutionItems: _.map(\n                editPageItem.substitutionItems,\n                (sub) => ({\n                  ...sub,\n                  requisitionItemId: editPageItem.requisitionItemId,\n                }),\n              ),\n            },\n          },\n        }),\n      },\n      revisedItems: update(\n        prev.revisedItems,\n        revisedItemIndex > -1\n          ? {\n              $splice: [[revisedItemIndex, 1]],\n            }\n          : {},\n      ),\n    }));\n  }\n\n  /**\n   * Saves changes made by user in this step and redirects to the shipment view page\n   * @param {object} formValues\n   * @public\n   */\n  saveAndExit(formValues) {\n    const errors = validateForSave(formValues).editPageItems;\n\n    if (errors.length) {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.confirmExit.label\",\n          \"Confirm save\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmExit.message\",\n          \"Validation errors occurred. Are you sure you want to exit and lose unsaved data?\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n            onClick: () => {\n              window.location = STOCK_MOVEMENT_URL.show(\n                formValues.stockMovementId,\n              );\n            },\n          },\n          {\n            label: this.props.translate(\"react.default.no.label\", \"No\"),\n          },\n        ],\n      });\n      this.props.hideSpinner();\n    } else {\n      this.reviseRequisitionItems(formValues).then(() => {\n        window.location = STOCK_MOVEMENT_URL.show(formValues.stockMovementId);\n      });\n    }\n  }\n\n  /**\n   * Reverts to previous state of requisition item (reverts substitutions and quantity revisions)\n   * @param {string} itemId\n   * @public\n   */\n  revertItem(values, itemId) {\n    this.props.showSpinner();\n    const revertItemsUrl = `/api/stockMovementItems/${itemId}/revertItem`;\n    const itemsUrl = `/api/stockMovementItems/${itemId}?stepNumber=3`;\n\n    return apiClient\n      .post(revertItemsUrl)\n      .then(() =>\n        apiClient\n          .get(itemsUrl)\n          .then((response) => {\n            const editPageItem = response.data.data;\n            this.updateEditPageItem(values, editPageItem);\n            this.props.hideSpinner();\n          })\n          .catch(() => {\n            this.props.hideSpinner();\n            return Promise.reject(\n              new Error(\n                this.props.translate(\n                  \"react.stockMovement.error.revertRequisitionItem.label\",\n                  \"Could not revert requisition items\",\n                ),\n              ),\n            );\n          }),\n      )\n      .catch(() => {\n        this.props.hideSpinner();\n        return Promise.reject(\n          new Error(\n            this.props.translate(\n              \"react.stockMovement.error.revertRequisitionItem.label\",\n              \"Could not revert requisition items\",\n            ),\n          ),\n        );\n      });\n  }\n\n  isAddingItemsAllowed() {\n    const { currentUser, currentLocation } = this.props;\n    const { values } = this.state;\n    const status = values?.associations?.requisition?.status;\n\n    const allowedStatuses = [\n      RequisitionStatus.CREATED,\n      RequisitionStatus.EDITING,\n      RequisitionStatus.VERIFYING,\n      RequisitionStatus.PENDING_APPROVAL,\n    ];\n    return (\n      canEditRequest(currentUser, values, currentLocation) &&\n      allowedStatuses.includes(status)\n    );\n  }\n\n  render() {\n    const { showOnlyErroredItems, itemFilter } = this.state;\n    const { showOnly } = this.props;\n    const isAddingItemsAllowed = this.isAddingItemsAllowed();\n    const erroredItemsCount =\n      this.state.values && this.state.values.editPageItems.length > 0\n        ? _.filter(this.state.values.editPageItems, (item) => item.hasError)\n            .length\n        : \"0\";\n    return (\n      <Form\n        onSubmit={() => {}}\n        validate={this.validate}\n        mutators={{ ...arrayMutators }}\n        initialValues={this.state.values}\n        render={({ handleSubmit, values, invalid }) => (\n          <div className=\"d-flex flex-column\">\n            {!showOnly ? (\n              <span className=\"buttons-container\">\n                <div className=\"d-flex mr-auto justify-content-center align-items-center\">\n                  <input\n                    value={itemFilter}\n                    onChange={(event) =>\n                      this.setState({ itemFilter: event.target.value })\n                    }\n                    className=\"float-left btn btn-outline-secondary btn-xs filter-input mr-1 mb-1\"\n                    placeholder={this.props.translate(\n                      \"react.stockMovement.searchPlaceholder.label\",\n                      \"Search...\",\n                    )}\n                  />\n                  {itemFilter && (\n                    <i\n                      aria-label=\"Clear filter\"\n                      role=\"button\"\n                      className=\"fa fa-times-circle\"\n                      style={{ color: \"grey\", cursor: \"pointer\" }}\n                      onClick={() => this.setState({ itemFilter: \"\" })}\n                      onKeyPress={() => this.setState({ itemFilter: \"\" })}\n                      tabIndex={0}\n                    />\n                  )}\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() =>\n                    this.setState({\n                      showOnlyErroredItems: !showOnlyErroredItems,\n                    })\n                  }\n                  className={`float-right mb-1 btn btn-outline-secondary align-self-end ml-3 btn-xs ${showOnlyErroredItems ? \"active\" : \"\"}`}\n                >\n                  <span>\n                    {erroredItemsCount}{\" \"}\n                    <Translate\n                      id=\"react.stockMovement.erroredItemsCount.label\"\n                      defaultMessage=\"item(s) require your attention\"\n                    />\n                  </span>\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => this.refresh()}\n                  className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-3 btn-xs\"\n                >\n                  <span>\n                    <i className=\"fa fa-refresh pr-2\" />\n                    <Translate\n                      id=\"react.default.button.refresh.label\"\n                      defaultMessage=\"Reload\"\n                    />\n                  </span>\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => this.save(values)}\n                  className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-3 btn-xs\"\n                >\n                  <span>\n                    <i className=\"fa fa-save pr-2\" />\n                    <Translate\n                      id=\"react.default.button.saveProgress.label\"\n                      defaultMessage=\"Save Progress\"\n                    />\n                  </span>\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => this.saveAndExit(values)}\n                  className=\"float-right mb-1 btn btn-outline-secondary align-self-end btn-xs\"\n                >\n                  <span>\n                    <i className=\"fa fa-sign-out pr-2\" />\n                    <Translate\n                      id=\"react.default.button.saveAndExit.label\"\n                      defaultMessage=\"Save and exit\"\n                    />\n                  </span>\n                </button>\n              </span>\n            ) : (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  if (\n                    !this.props.supportedActivities.includes(\n                      \"MANAGE_INVENTORY\",\n                    ) &&\n                    this.props.supportedActivities.includes(\"SUBMIT_REQUEST\")\n                  ) {\n                    this.props.history.push(DASHBOARD_URL.base);\n                  } else {\n                    this.props.history.push(STOCK_MOVEMENT_URL.listInbound());\n                  }\n                }}\n                className=\"float-right mb-1 btn btn-outline-danger align-self-end btn-xs mr-2\"\n              >\n                <span>\n                  <i className=\"fa fa-sign-out pr-2\" />{\" \"}\n                  <Translate\n                    id=\"react.default.button.exit.label\"\n                    defaultMessage=\"Exit\"\n                  />{\" \"}\n                </span>\n              </button>\n            )}\n            <form onSubmit={handleSubmit}>\n              <div className=\"table-form\">\n                {_.map(this.getFields(), (fieldConfig, fieldName) =>\n                  renderFormField(fieldConfig, fieldName, {\n                    stockMovementId: values.stockMovementId,\n                    hasStockList: !!_.get(values.stocklist, \"id\"),\n                    translate: this.props.translate,\n                    reasonCodes: this.props.reasonCodes,\n                    onResponse: this.fetchEditPageItems,\n                    revertItem: this.revertItem,\n                    reviseRequisitionItems: this.reviseRequisitionItems,\n                    totalCount: this.state.totalCount,\n                    loadMoreRows: this.loadMoreRows,\n                    isRowLoaded: this.isRowLoaded,\n                    isPaginated: this.props.isPaginated,\n                    updateRow: this.updateRow,\n                    isFirstPageLoaded: this.state.isFirstPageLoaded,\n                    values,\n                    showOnly,\n                    showOnlyErroredItems,\n                    itemFilter,\n                  }),\n                )}\n              </div>\n              <div\n                className={`submit-buttons ${isAddingItemsAllowed ? \"d-flex justify-content-between\" : \"\"}`}\n              >\n                {isAddingItemsAllowed && (\n                  <Button\n                    label=\"react.stockMovement.editRequestItems.label\"\n                    defaultLabel=\"Edit request items\"\n                    variant=\"primary-outline\"\n                    onClick={() => {\n                      const { history } = this.props;\n                      history.push(\n                        STOCK_MOVEMENT_URL.editRequest(this.state.values?.id),\n                      );\n                    }}\n                  />\n                )}\n                <button\n                  type=\"submit\"\n                  disabled={!this.state.hasItemsLoaded || showOnly || invalid}\n                  onClick={() => {\n                    if (!invalid) {\n                      this.nextPage(values);\n                    }\n                  }}\n                  className=\"btn btn-outline-primary btn-form float-right btn-xs\"\n                >\n                  <Translate\n                    id=\"react.stockMovement.button.generatePicklist.label\"\n                    defaultMessage=\"Generate Picklist\"\n                  />\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  reasonCodes: state.reasonCodes.data,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  isPaginated: state.session.isPaginated,\n  pageSize: state.session.pageSize,\n  supportedActivities: state.session.supportedActivities,\n  currentLocale: state.session.activeLanguage,\n  currentUser: state.session.user,\n  currentLocation: state.session.currentLocation,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    fetchReasonCodes,\n    showSpinner,\n    hideSpinner,\n  })(EditItemsPage),\n);\n\nEditItemsPage.propTypes = {\n  /** Initial component's data */\n  initialValues: PropTypes.shape({}).isRequired,\n  /**\n   * Function called with the form data when the handleSubmit()\n   * is fired from within the form component.\n   */\n  nextPage: PropTypes.func.isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  /** Function fetching reason codes */\n  fetchReasonCodes: PropTypes.func.isRequired,\n  /** Array of available reason codes */\n  reasonCodes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  translate: PropTypes.func.isRequired,\n  stockMovementTranslationsFetched: PropTypes.bool.isRequired,\n  /** Return true if pagination is enabled */\n  isPaginated: PropTypes.bool.isRequired,\n  /** Return true if show only */\n  showOnly: PropTypes.bool.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  supportedActivities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  currentUser: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  currentLocation: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport { fetchTranslations, hideSpinner, showSpinner } from \"actions\";\nimport PackingPage from \"components/stock-movement-wizard/outbound/PackingPage\";\nimport PickPage from \"components/stock-movement-wizard/outbound/PickPage\";\nimport SendMovementPage from \"components/stock-movement-wizard/outbound/SendMovementPage\";\nimport EditPage from \"components/stock-movement-wizard/request/EditPage\";\nimport Wizard from \"components/wizard/Wizard\";\nimport DateFormat from \"consts/dateFormat\";\nimport RequisitionStatus from \"consts/requisitionStatus\";\nimport apiClient from \"utils/apiClient\";\nimport canEditRequest from \"utils/permissionUtils\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\nimport { formatDate } from \"utils/translation-utils\";\n\nimport \"components/stock-movement-wizard/StockMovement.scss\";\n\n/** Main Verify Request Stock movement form's wizard component. */\nclass StockMovementVerifyRequest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      values: this.props.initialValues,\n      currentPage: 1,\n    };\n\n    this.updateWizardValues = this.updateWizardValues.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTranslations(\"\", \"stockMovement\");\n\n    if (this.props.stockMovementTranslationsFetched) {\n      this.dataFetched = true;\n\n      this.fetchInitialValues();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.locale && this.props.locale !== nextProps.locale) {\n      this.props.fetchTranslations(nextProps.locale, \"stockMovement\");\n    }\n\n    if (nextProps.stockMovementTranslationsFetched && !this.dataFetched) {\n      this.dataFetched = true;\n\n      this.fetchInitialValues();\n    }\n  }\n\n  /**\n   * Returns array of form steps.\n   * @public\n   */\n  get stepList() {\n    let stepList = [];\n    if (this.props.hasPackingSupport) {\n      stepList = [\n        this.props.translate(\"react.stockMovement.edit.label\", \"Edit\"),\n        this.props.translate(\"react.stockMovement.pick.label\", \"Pick\"),\n        this.props.translate(\"react.stockMovement.pack.label\", \"Pack\"),\n        this.props.translate(\"react.stockMovement.send.label\", \"Send\"),\n      ];\n    } else {\n      stepList = [\n        this.props.translate(\"react.stockMovement.edit.label\", \"Edit\"),\n        this.props.translate(\"react.stockMovement.pick.label\", \"Pick\"),\n        this.props.translate(\"react.stockMovement.send.label\", \"Send\"),\n      ];\n    }\n    return stepList;\n  }\n\n  /**\n   * Returns array of form's components.\n   * @public\n   */\n  get pageList() {\n    let formList = [];\n    if (this.props.hasPackingSupport) {\n      formList = [EditPage, PickPage, PackingPage, SendMovementPage];\n    } else {\n      formList = [EditPage, PickPage, SendMovementPage];\n    }\n    return formList;\n  }\n\n  /**\n   * Returns shipment's name containing shipment's origin, destination, requisition date,\n   * tracking number given by user on the last step, description and stock list if chosen.\n   * @public\n   */\n  get wizardTitle() {\n    const { values } = this.state;\n    if (!values.movementNumber && !values.trackingNumber) {\n      return [];\n    }\n    return [\n      {\n        text: this.props.translate(\n          \"react.stockMovement.label\",\n          \"Stock Movement\",\n        ),\n        color: \"#000000\",\n        delimeter: \" | \",\n      },\n      {\n        text: values.movementNumber,\n        color: \"#000000\",\n        delimeter: \" - \",\n      },\n      {\n        text: values.origin.name,\n        color: \"#004d40\",\n        delimeter: ` ${this.props.translate(\"react.default.to.label\", \"to\")} `,\n      },\n      {\n        text: values.destination.name,\n        color: \"#01579b\",\n        delimeter: \", \",\n      },\n      {\n        text: this.props.formatLocalizedDate(\n          values.dateRequested,\n          DateFormat.COMMON,\n        ),\n        color: \"#4a148c\",\n        delimeter: \", \",\n      },\n      {\n        text: values.description,\n        color: \"#770838\",\n        delimeter: \"\",\n      },\n    ];\n  }\n\n  get additionalWizardTitle() {\n    const { currentPage, values } = this.state;\n    const shipped = values.shipped ? \"SHIPPED\" : \"\";\n    const received = values.received ? \"RECEIVED\" : \"\";\n    if (\n      (this.props.hasPackingSupport && currentPage === 4) ||\n      (!this.props.hasPackingSupport && currentPage === 3)\n    ) {\n      return (\n        <span className=\"shipment-status float-right\">\n          {`${shipped || received || \"PENDING\"}`}\n        </span>\n      );\n    }\n    return null;\n  }\n\n  updateWizardValues(currentPage, values) {\n    this.setState({ currentPage, values });\n  }\n\n  dataFetched = false;\n\n  /**\n   * Fetches initial values from API.\n   * @public\n   */\n  fetchInitialValues() {\n    if (this.props.match.params.stockMovementId) {\n      this.props.showSpinner();\n      const url = `/api/stockMovements/${this.props.match.params.stockMovementId}`;\n      apiClient\n        .get(url)\n        .then((response) => {\n          const resp = response.data.data;\n          const originType = resp.origin.locationType;\n          const destinationType = resp.destination.locationType;\n          const values = {\n            ...resp,\n            stockMovementId: resp.id,\n            movementNumber: resp.identifier,\n            origin: {\n              id: resp.origin.id,\n              type: originType ? originType.locationTypeCode : null,\n              name: resp.origin.name,\n              label: `${resp.origin.name} [${originType ? originType.description : null}]`,\n            },\n            destination: {\n              id: resp.destination.id,\n              type: destinationType ? destinationType.locationTypeCode : null,\n              name: resp.destination.name,\n              label: `${resp.destination.name} [${destinationType ? destinationType.description : null}]`,\n            },\n            requestedBy: {\n              id: resp.requestedBy.id,\n              name: resp.requestedBy.name,\n              label: resp.requestedBy.name,\n            },\n            requestType: {\n              name: resp.requestType.name,\n              label: resp.requestType.name,\n            },\n          };\n\n          let currentPage = 1;\n          switch (values.statusCode) {\n            case \"REQUESTED\":\n            case \"VALIDATING\":\n            case \"PENDING_APPROVAL\":\n            case \"APPROVED\":\n            case \"REJECTED\":\n              break;\n            case \"VALIDATED\":\n            case \"PICKING\":\n              currentPage = 2;\n              break;\n            case \"PICKED\":\n            case \"PACKING\":\n              currentPage = 3;\n              break;\n            default:\n              currentPage = this.props.hasPackingSupport ? 4 : 3;\n              break;\n          }\n\n          this.setState({ values, currentPage });\n        })\n        .catch(() => this.props.hideSpinner());\n    }\n  }\n\n  render() {\n    const { values, currentPage } = this.state;\n    const { currentLocation, currentUser } = this.props;\n    const showOnly =\n      (values.origin && values.origin.id !== currentLocation.id) ||\n      (values?.isElectronicType &&\n        !canEditRequest(currentUser, values, currentLocation)) ||\n      values.statusCode === RequisitionStatus.PENDING_APPROVAL;\n\n    if (values.stockMovementId) {\n      return (\n        <Wizard\n          pageList={this.pageList}\n          stepList={this.stepList}\n          initialValues={values}\n          title={this.wizardTitle}\n          additionalTitle={this.additionalWizardTitle}\n          currentPage={currentPage}\n          prevPage={currentPage === 1 ? 1 : currentPage - 1}\n          updateWizardValues={this.updateWizardValues}\n          additionalProps={{ showOnly }}\n        />\n      );\n    }\n    return null;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  hasPackingSupport: state.session.currentLocation.hasPackingSupport,\n  currentLocation: state.session.currentLocation,\n  currentUser: state.session.user,\n  formatLocalizedDate: formatDate(state.localize),\n});\n\nexport default connect(mapStateToProps, {\n  showSpinner,\n  hideSpinner,\n  fetchTranslations,\n})(StockMovementVerifyRequest);\n\nStockMovementVerifyRequest.propTypes = {\n  /** React router's object which contains information about url variables and params */\n  match: PropTypes.shape({\n    params: PropTypes.shape({ stockMovementId: PropTypes.string }),\n  }).isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  locale: PropTypes.string.isRequired,\n  stockMovementTranslationsFetched: PropTypes.bool.isRequired,\n  fetchTranslations: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  /** Is true when currently selected location supports packing */\n  hasPackingSupport: PropTypes.bool.isRequired,\n  currentLocation: PropTypes.shape({\n    id: PropTypes.string,\n  }).isRequired,\n  /** Initial components' data */\n  initialValues: PropTypes.shape({\n    shipmentStatus: PropTypes.string,\n  }),\n  currentUser: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  formatLocalizedDate: PropTypes.func.isRequired,\n};\n\nStockMovementVerifyRequest.defaultProps = {\n  initialValues: {},\n};\n"],"names":["currentUser","request","location","_request$requestedBy","_request$origin","_request$destination","isUserRequestor","id","requestedBy","isLocationOrigin","origin","isLocationDestination","destination","supports","supportedActivities","ActivityCode","APPROVE_REQUEST","StockMovementStatus","APPROVED","PACKED","PICKED","PICKING","includes","statusCode","REJECTED","CREATED","EDITING","VERIFYING","PENDING","CHECKING","ISSUED","RECEIVED","CANCELED","DELETED","ERROR","DISPATCHED","REQUESTED","OPEN","FULFILLED","REVIEWING","CONFIRMING","PENDING_APPROVAL","REQUESTING","VALIDATING","VALIDATED","CHECKED","isRequestFromWard","currentLocationId","destinationId","MANAGE_INVENTORY","SUBMIT_REQUEST","locationSupportedActivities","activity","checkBinLocationSupport","PUTAWAY_STOCK","PICK_STOCK","BTN_CLASS_MAPPER","YES","NO","EARLIER","HIDDEN","AD_HOCK_FIELDS","editPageItems","type","ArrayField","arrowsNavigation","virtualized","totalCount","_ref","isRowLoaded","_ref2","isFirstPageLoaded","_ref3","loadMoreRows","_ref4","rowComponent","TableRowWithSubfields","getDynamicRowAttr","_ref5","rowValues","showOnlyErroredItems","itemFilter","className","quantityAvailable","quantityRequested","filterOutItems","product","name","toLowerCase","productCode","hideRow","hasError","subfieldKey","headerGroupings","requestInformation","label","defaultLabel","flexWidth","availability","edit","fields","LabelField","headerAlign","getDynamicAttr","_ref6","subfield","defaultMessage","attributes","showValueTooltip","formatValue","value","_value$displayNames","_value$displayNames$d","_value$displayNames2","React","Tooltip","html","theme","disabled","displayNames","position","renderHandlingIcons","handlingIcons","_ref7","fieldValue","color","quantityOnHandRequesting","toLocaleString","numberField","quantityDemandRequesting","params","fieldName","values","fieldNameParts","_","length","rowIdx","comments","style","flex","marginLeft","delay","duration","hideDelay","quantityOnHand","fieldKey","headerClassName","_ref8","quantityDemandFulfilling","detailsButton","DetailsModal","title","defaultTitleMessage","_ref9","_fieldValue$product","stockMovementId","productId","productName","displayName","originId","btnOpenText","btnOpenDefaultText","btnCancelText","btnSaveStyle","display","btnContainerClassName","btnOpenAsIcon","btnOpenStyle","border","cursor","btnOpenIcon","substituteButton","SubstitutionsModal","cellClassName","_ref10","rowIndex","onResponse","reviseRequisitionItems","reasonCodes","showOnly","onOpen","concat","substitutionStatus","btnOpenDisabled","btnOpenClassName","lineItem","quantityRevised","TextField","_ref11","updateRow","onBlur","reasonCode","SelectField","_ref12","isSubstituted","options","revert","ButtonField","buttonLabel","buttonDefaultMessage","_ref13","revertItem","onClick","requisitionItemId","hidden","STOCKLIST_FIELDS_PUSH_TYPE","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","formatProductDisplayName","_ref20","_fieldValue$displayNa","tooltipValue","quantityOnStocklist","_ref21","_ref22","_fieldValue$product2","_ref23","_ref24","_ref25","_ref26","STOCKLIST_FIELDS_PULL_TYPE","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_fieldValue$displayNa2","demandPerReplenishmentPeriod","_ref34","_ref35","_fieldValue$product3","_ref36","_ref37","_ref38","_ref39","validateForSave","errors","item","key","parseInt","EditItemsPage","_Component","props","_this","_classCallCheck","_defineProperty","_callSuper","state","revisedItems","_objectSpread","initialValues","hasItemsLoaded","bind","fetchEditPageItems","markErroredLines","validate","showSpinner","_inherits","this","stockMovementTranslationsFetched","dataFetched","fetchAllData","nextProps","currentLocale","fetchReasonCodes","response","startIndex","_this2","data","val","quantityCounted","_ref40","substitutionItems","sub","_ref41","setState","prev","pageSize","hideSpinner","stocklist","replenishmentType","updatedValues","itemIdx","update","$set","error","errorIdx","forceFetch","_this3","fetchEditPageData","then","resp","_resp$data$data","associations","isPaginated","fetchItems","_this4","url","apiClient","get","setEditPageItems","_this5","_ref42","_ref43","_ref44","_this6","_ref45","index","_this7","itemsToRevise","oldRevision","revision","editPageItemIndex","editPageItem","payload","lineItems","post","Promise","resolve","formValues","_this8","showOutboundEditValidationErrors","translate","JSON","parse","config","savedItemIds","map","savedItems","_ref46","oldItems","indexOf","_toConsumableArray","Alert","timeout","_this9","confirmAlert","message","buttons","status","createPicklist","err","_this10","transitionToNextStep","nextPage","revisedItemIndex","$splice","window","STOCK_MOVEMENT_URL","show","itemId","_this11","revertItemsUrl","itemsUrl","updateEditPageItem","reject","Error","_values$associations","_this$props","currentLocation","requisition","allowedStatuses","RequisitionStatus","canEditRequest","_this12","_this$state","isAddingItemsAllowed","erroredItemsCount","Form","onSubmit","mutators","arrayMutators","render","_ref47","handleSubmit","invalid","history","push","DASHBOARD_URL","base","listInbound","Translate","onChange","event","target","placeholder","role","onKeyPress","tabIndex","refresh","save","saveAndExit","getFields","fieldConfig","renderFormField","hasStockList","Button","variant","_this12$state$values","editRequest","Component","withRouter","connect","translateWithDefaultMessage","getTranslate","localize","session","fetchedTranslations","stockMovement","activeLanguage","user","propTypes","PropTypes","isRequired","StockMovementVerifyRequest","currentPage","updateWizardValues","fetchTranslations","fetchInitialValues","locale","hasPackingSupport","EditPage","PickPage","PackingPage","SendMovementPage","movementNumber","trackingNumber","text","delimeter","formatLocalizedDate","dateRequested","DateFormat","COMMON","description","shipped","received","match","originType","locationType","destinationType","identifier","locationTypeCode","requestType","_this$state2","isElectronicType","Wizard","pageList","stepList","wizardTitle","additionalTitle","additionalWizardTitle","prevPage","additionalProps","formatDate","shipmentStatus","defaultProps"],"sourceRoot":""}