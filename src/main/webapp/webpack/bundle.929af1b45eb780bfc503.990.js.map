{"version":3,"file":"bundle.929af1b45eb780bfc503.990.js","mappings":"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","sources":["webpack://openboxes/./src/js/components/dashboard/Filter.jsx","webpack://openboxes/./src/js/components/dashboard/DragHandle.jsx","webpack://openboxes/./src/js/components/dashboard/LoadingCard.jsx","webpack://openboxes/./src/js/components/dashboard/Numbers.jsx","webpack://openboxes/./src/js/components/dashboard/NumbersRAG.jsx","webpack://openboxes/./src/js/components/dashboard/TableCard.jsx","webpack://openboxes/./src/js/components/dashboard/NumbersTableCard.jsx","webpack://openboxes/./src/js/components/dashboard/GraphCard.jsx","webpack://openboxes/./src/js/components/dashboard/LoadingNumbers.jsx","webpack://openboxes/./src/js/components/dashboard/NumberCard.jsx","webpack://openboxes/./src/js/components/dashboard/UnarchiveIndicators.jsx","webpack://openboxes/./src/js/components/dashboard/Dashboard.jsx"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport apiClient from \"utils/apiClient\";\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addingFilter: false,\n      filterCategorySelected: false,\n      filterAvailable: false,\n      listFilterSelected: [],\n      listCategoryData: [],\n      listCategoryDataFiltered: [],\n      titlePopup: \"Add filter\",\n      searchTerm: \"\",\n      categorySelected: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.loadStoredFilters();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.pageFilters !== this.props.pageFilters ||\n      prevProps.activeConfig !== this.props.activeConfig\n    ) {\n      this.loadStoredFilters();\n    }\n  }\n\n  getCategoryRows = (endpoint) => {\n    apiClient\n      .get(endpoint)\n      .then((response) => {\n        let newListCategoryData = response.data.data || [];\n\n        // Remove from list of filter availables if filter already selected\n        newListCategoryData = newListCategoryData.filter(\n          (categoryData) =>\n            !this.state.listFilterSelected.some(\n              (filterSelected) => filterSelected.id === categoryData.id,\n            ),\n        );\n        this.setState({\n          listCategoryData: newListCategoryData,\n          listCategoryDataFiltered: newListCategoryData,\n        });\n      })\n      .catch(() =>\n        this.setState({\n          listCategoryData: [],\n          listCategoryDataFiltered: [],\n        }),\n      );\n  };\n\n  searchOnChange = (event) => {\n    const { listCategoryData } = this.state;\n    const filteredList = listCategoryData.filter((categoryData) =>\n      categoryData.name\n        .toLowerCase()\n        .includes(event.target.value.toLowerCase()),\n    );\n    this.setState({\n      listCategoryDataFiltered: filteredList,\n      searchTerm: event.target.value,\n    });\n  };\n\n  toggleAddingFilter = () => {\n    // Popup add filter shows up or close\n    this.setState((prev) => ({ addingFilter: !prev.addingFilter }));\n  };\n\n  toggleCategorySelected = (nameCategory, categoryData) => {\n    if (categoryData) this.getCategoryRows(categoryData.endpoint);\n    this.setState((prev) => ({\n      titlePopup: nameCategory || \"Add Filter\",\n      categorySelected: nameCategory || \"\",\n      // Value in the searchBar removed\n      searchTerm: \"\",\n      // Popup filterSelection show up or close\n      filterCategorySelected: !prev.filterCategorySelected,\n    }));\n  };\n\n  loadStoredFilters = () => {\n    const { pageFilters, activeConfig } = this.props;\n\n    if (pageFilters.length > 0) {\n      const listFilterSelected = [];\n\n      // Initialization of the page config\n      let pageConfig = JSON.parse(sessionStorage.getItem(\"pageConfig\"));\n      if (!pageConfig) {\n        pageConfig = {};\n        sessionStorage.setItem(\"pageConfig\", JSON.stringify(pageConfig));\n      }\n\n      if (!pageConfig[activeConfig]) {\n        pageConfig[activeConfig] = {};\n      }\n      sessionStorage.setItem(\"pageConfig\", JSON.stringify(pageConfig));\n\n      pageFilters.forEach((category) => {\n        const listFilterStored =\n          JSON.parse(sessionStorage.getItem(\"pageConfig\"))[\n            this.props.activeConfig\n          ][category.name] || [];\n        listFilterStored.forEach((filter) => {\n          listFilterSelected.push(filter);\n        });\n      });\n      this.setState({ listFilterSelected, filterAvailable: true });\n    } else {\n      this.setState({ filterAvailable: false });\n    }\n  };\n\n  addFilterToTheList = (nameCategory, valueCategory) => {\n    const { activeConfig } = this.props;\n    // Management of the list of the filter in the DOM\n    this.state.listFilterSelected.push({\n      id: valueCategory.id,\n      name: valueCategory.name,\n      nameCategory,\n    });\n\n    // Management of the filterList in the session storage\n    if (!sessionStorage.getItem(\"pageConfig\")) {\n      sessionStorage.setItem(\"pageConfig\", JSON.stringify({}));\n    }\n\n    const listFilterToSend = JSON.parse(sessionStorage.getItem(\"pageConfig\"));\n    if (!listFilterToSend[activeConfig][nameCategory]) {\n      listFilterToSend[activeConfig][nameCategory] = [];\n    }\n\n    listFilterToSend[activeConfig][nameCategory].push({\n      id: valueCategory.id,\n      name: valueCategory.name,\n      nameCategory,\n    });\n    sessionStorage.setItem(\"pageConfig\", JSON.stringify(listFilterToSend));\n\n    this.toggleAddingFilter();\n    this.toggleCategorySelected();\n\n    // Refresh data\n    this.props.fetchData(activeConfig);\n  };\n\n  removeFilterFromList = (key) => {\n    const { activeConfig } = this.props;\n    const actualList = this.state.listFilterSelected;\n    const elementToDelete = actualList[key];\n\n    // Management of the filterList in the session storage\n    const newFilterList = JSON.parse(sessionStorage.getItem(\"pageConfig\"));\n    const { nameCategory, id } = elementToDelete;\n    newFilterList[activeConfig][nameCategory] = newFilterList[activeConfig][\n      nameCategory\n    ].filter((item) => item.id !== id);\n    sessionStorage.setItem(\"pageConfig\", JSON.stringify(newFilterList));\n\n    // Management of the list of the filter in the DOM\n    const newList = actualList\n      .slice(0, key)\n      .concat(actualList.slice(key + 1, actualList.length));\n    this.setState({ listFilterSelected: newList });\n\n    // Removing current category if no filter selected\n    const pageConfig = JSON.parse(sessionStorage.getItem(\"pageConfig\"));\n    if (pageConfig[activeConfig][elementToDelete.nameCategory].length === 0) {\n      delete pageConfig[activeConfig][elementToDelete.nameCategory];\n      sessionStorage.setItem(\"pageConfig\", JSON.stringify(pageConfig));\n    }\n\n    // Refresh data\n    this.props.fetchData(activeConfig);\n  };\n\n  render() {\n    return this.state.filterAvailable ? (\n      <div className=\"category-filter\">\n        {this.state.listFilterSelected.map(\n          (value, key) =>\n            value && (\n              <div\n                key={`${value.id} - ${value.name}`}\n                className=\"category-item\"\n              >\n                <div className=\"category-title\"> {value.name}</div>\n                <div\n                  className=\"delete-button\"\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={() => this.removeFilterFromList(key)}\n                  onKeyPress={() => this.removeFilterFromList(key)}\n                >\n                  {\" \"}\n                  x\n                </div>\n              </div>\n            ),\n        )}\n\n        <div\n          className=\"category-item add-category-btn\"\n          role=\"button\"\n          tabIndex={0}\n          onClick={this.toggleAddingFilter}\n          onKeyPress={this.toggleAddingFilter}\n          hidden={this.state.addingFilter}\n        >\n          + Add filter\n        </div>\n        <div className=\"add-category-popup\" hidden={!this.state.addingFilter}>\n          <div>\n            <span\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => this.toggleCategorySelected()}\n              onKeyPress={() => this.toggleCategorySelected()}\n              hidden={!this.state.filterCategorySelected}\n            >\n              {\" \"}\n              {\"<\"}\n            </span>{\" \"}\n            {this.state.titlePopup}\n            <span\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => {\n                this.toggleAddingFilter();\n                this.setState({ filterCategorySelected: false });\n              }}\n              onKeyPress={() => {\n                this.toggleAddingFilter();\n                this.setState({ filterCategorySelected: false });\n              }}\n            >\n              {\" \"}\n              X\n            </span>\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"search...\"\n            onChange={this.searchOnChange}\n            hidden={!this.state.filterCategorySelected}\n            value={this.state.searchTerm}\n          />\n          <ul\n            className={`filter-menu ${this.state.filterCategorySelected ? \"scrollable\" : \"\"}`}\n          >\n            {\n              // If filter not selected\n              !this.state.filterCategorySelected\n                ? Object.entries(this.props.configs).map(([key, value]) =>\n                    // We select the filters availables for this page\n                    key === this.props.activeConfig\n                      ? value.filters &&\n                        Object.entries(value.filters).map(\n                          ([nameCategory, categoryData]) => (\n                            <li key={categoryData.endpoint}>\n                              <div\n                                role=\"button\"\n                                tabIndex={0}\n                                onClick={() =>\n                                  this.toggleCategorySelected(\n                                    nameCategory,\n                                    categoryData,\n                                  )\n                                }\n                                onKeyPress={() =>\n                                  this.toggleCategorySelected(\n                                    nameCategory,\n                                    categoryData,\n                                  )\n                                }\n                              >\n                                {nameCategory}\n                                <span> {\">\"}</span>\n                              </div>\n                            </li>\n                          ),\n                        )\n                      : null,\n                  )\n                : // Once the filter is selected\n                  this.props.pageFilters.map((category) =>\n                    // Find in all filters available the one selected\n                    category.name === this.state.categorySelected\n                      ? // category[1][0] --> name of the category\n                        Object.entries(\n                          this.state.listCategoryDataFiltered.sort((a, b) =>\n                            a.name.localeCompare(b.name),\n                          ),\n                        ).map((categoryData) => (\n                          <li key={categoryData[1].id}>\n                            <span\n                              className=\"category-value-to-select\"\n                              role=\"button\"\n                              tabIndex={0}\n                              onClick={() =>\n                                this.addFilterToTheList(\n                                  this.state.categorySelected,\n                                  categoryData[1],\n                                )\n                              }\n                              onKeyPress={() =>\n                                this.addFilterToTheList(\n                                  this.state.categorySelected,\n                                  categoryData[1],\n                                )\n                              }\n                            >\n                              {categoryData[1].name}\n                            </span>\n                          </li>\n                        ))\n                      : null,\n                  )\n            }\n          </ul>\n        </div>\n      </div>\n    ) : null;\n  }\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  configs: PropTypes.shape({}).isRequired,\n  activeConfig: PropTypes.string.isRequired,\n  fetchData: PropTypes.func.isRequired,\n  pageFilters: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      endpoint: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from \"react\";\n\nimport { sortableHandle } from \"react-sortable-hoc\";\n\nconst DragHandle = sortableHandle(() => (\n  <span className=\"drag-handler\">\n    <i className=\"fa fa-ellipsis-v\" />\n  </span>\n));\n\nexport default DragHandle;\n","import React from \"react\";\n\nimport ReactLoading from \"react-loading\";\n\nimport { getRandomColor } from \"consts/dataFormat/colorMapping\";\n\nconst LoadingCard = () => (\n  <div className=\"loader-div\">\n    <ReactLoading\n      type=\"bubbles\"\n      color={getRandomColor()}\n      height=\"150px\"\n      width=\"150px\"\n    />\n  </div>\n);\n\nexport default LoadingCard;\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Numbers = (props) => {\n  const [data, options] = Object.values(props);\n  const values = _.sortBy(Object.entries(data), \"[1].order\");\n  return (\n    <div className=\"gyr-indicator\">\n      {values.map(([key, indicator]) => {\n        if (indicator) {\n          const { link, value, subtitle } = indicator;\n          const redirect = link ? { href: link } : {};\n          return (\n            <a key={key} className=\"number-indicator\" {...redirect}>\n              <div className=\"value\">\n                <div\n                  className=\"circle\"\n                  style={{ backgroundColor: options.colors[key] }}\n                />\n                {value}\n              </div>\n              <div className=\"subtitle\">{subtitle}</div>\n            </a>\n          );\n        }\n\n        return null;\n      })}\n    </div>\n  );\n};\n\nNumbers.propTypes = {\n  data: PropTypes.shape({\n    third: PropTypes.shape({\n      subtitle: PropTypes.string,\n      value: PropTypes.number,\n      link: PropTypes.string,\n    }),\n    second: PropTypes.shape({\n      subtitle: PropTypes.string,\n      value: PropTypes.number,\n      link: PropTypes.string,\n    }),\n    first: PropTypes.shape({\n      subtitle: PropTypes.string,\n      value: PropTypes.number,\n      link: PropTypes.string,\n    }),\n  }),\n  options: PropTypes.shape({\n    colors: PropTypes.shape({\n      first: PropTypes.string,\n      second: PropTypes.string,\n      third: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nNumbers.defaultProps = {\n  data: null,\n};\n\nexport default Numbers;\n","/* eslint-disable react/no-array-index-key */\nimport React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { getColorByName } from \"consts/dataFormat/colorMapping\";\n\nconst NumbersRAG = ({ data }) => (\n  <div className=\"big-gyr-indicator\">\n    {data.listColorNumber.map((value, index) => (\n      <a className=\"number-indicator\" href={value.link} key={index}>\n        <div\n          className=\"value\"\n          style={{ color: getColorByName(value.color, \"default\") }}\n        >\n          <span\n            className=\"circle\"\n            style={{ background: getColorByName(value.color, \"light\") }}\n          />\n          {value.value}\n        </div>\n        <div className=\"subtitle\">{value.subtitle}</div>\n      </a>\n    ))}\n  </div>\n);\n\nNumbersRAG.propTypes = {\n  data: PropTypes.shape({\n    listColorNumber: PropTypes.arrayOf(\n      PropTypes.shape({\n        link: PropTypes.string,\n        color: PropTypes.string,\n        subtitle: PropTypes.string,\n        value: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default NumbersRAG;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\n/* global _ */\nconst TableCard = (props) => {\n  const { columnsSize, truncationLength, disableTruncation, data } = props;\n\n  const displayItemData = ({\n    truncate,\n    item,\n    link,\n    defaultTruncationLength,\n  }) => (\n    <a\n      href={link}\n      className={link ? \"indicator-item-href\" : \"disabled-indicator-item-href\"}\n      rel=\"noreferrer\"\n      target=\"_blank\"\n    >\n      {!truncate\n        ? item\n        : _.truncate(item, {\n            length: truncationLength ?? defaultTruncationLength,\n          })}\n    </a>\n  );\n\n  const displayListItemsData = (items, links) =>\n    items?.map((item, index) => (\n      <a\n        href={links[index]}\n        className=\"indicator-item-href\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n      >\n        {item}{\" \"}\n      </a>\n    ));\n\n  return (\n    <div className=\"table-card\">\n      <table>\n        <thead>\n          <tr>\n            <th style={{ width: columnsSize?.number }}>{data.number}</th>\n            {data.body.find((item) => item.icon) ? <td /> : null}\n            <th style={{ width: columnsSize?.name }} className=\"mid\">\n              {_.truncate(data.name, { length: 50 })}\n            </th>\n            <th style={{ width: columnsSize?.value }}>\n              {_.truncate(data.value, { length: 50 })}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.body.map((item) => (\n            <tr\n              onClick={() => {\n                if (item.link) {\n                  window.open(item.link, \"_blank\");\n                }\n              }}\n              key={`item-${item.number}`}\n              className={item.link ? \"table-link\" : \"\"}\n            >\n              <td style={{ width: columnsSize?.number }}>\n                {displayItemData({\n                  truncate: disableTruncation?.number,\n                  item: item.number,\n                  link: item?.numberLink,\n                  defaultTruncationLength: 80,\n                })}\n              </td>\n              {item.icon ? (\n                <td>\n                  <img alt=\"\" src={item.icon} width=\"20\" height=\"20\" />\n                </td>\n              ) : null}\n              <td className=\"mid\" style={{ width: columnsSize?.name }}>\n                {item.name\n                  ? displayItemData({\n                      truncate: disableTruncation?.name,\n                      item: item.name,\n                      link: item?.nameLink,\n                      defaultTruncationLength: 80,\n                    })\n                  : displayListItemsData(item.nameDataList, item.nameLinksList)}\n              </td>\n              <td className=\"last\" style={{ width: columnsSize?.value }}>\n                {displayItemData({\n                  truncate: disableTruncation?.value,\n                  item: item.value,\n                  link: item?.valueLink,\n                  defaultTruncationLength: 10,\n                })}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nTableCard.propTypes = {\n  data: PropTypes.shape({\n    number: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    body: PropTypes.arrayOf(PropTypes.shape({})),\n    numberLink: PropTypes.string,\n    valueLink: PropTypes.string,\n    nameLink: PropTypes.string,\n    nameDataList: PropTypes.arrayOf(PropTypes.string),\n    nameLinksList: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  columnsSize: PropTypes.shape({\n    name: PropTypes.string,\n    number: PropTypes.string,\n    value: PropTypes.string,\n  }),\n  truncationLength: PropTypes.shape({\n    name: PropTypes.number,\n    number: PropTypes.number,\n    value: PropTypes.number,\n  }),\n  disableTruncation: PropTypes.shape({\n    name: PropTypes.bool,\n    number: PropTypes.bool,\n    value: PropTypes.bool,\n  }),\n};\n\nTableCard.defaultProps = {\n  columnsSize: {\n    name: null,\n    number: null,\n    value: null,\n  },\n  truncationLength: {\n    name: null,\n    number: null,\n    value: null,\n  },\n  disableTruncation: {\n    name: undefined,\n    number: undefined,\n    value: undefined,\n  },\n};\n\nexport default TableCard;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Numbers from \"components/dashboard/Numbers\";\nimport TableCard from \"components/dashboard/TableCard\";\n\nconst NumbersTableCard = (props) => (\n  <div className=\"numbers-table-card\">\n    <div className=\"numbers-left\">\n      <Numbers data={props.data.numbersIndicator} options={props.options} />\n    </div>\n    <div className=\"table-right\">\n      <TableCard\n        data={props.data.tableData}\n        columnsSize={props.options.columnsSize}\n        truncationLength={props.options.truncationLength}\n        disableTruncation={props.options.disableTruncation}\n      />\n    </div>\n  </div>\n);\n\nNumbersTableCard.propTypes = {\n  data: PropTypes.shape({\n    numbersIndicator: PropTypes.shape({\n      first: PropTypes.shape({\n        link: PropTypes.string,\n        value: PropTypes.number,\n        subtitle: PropTypes.string,\n      }).isRequired,\n      second: PropTypes.shape({\n        link: PropTypes.string,\n        value: PropTypes.number,\n        subtitle: PropTypes.string,\n      }).isRequired,\n      third: PropTypes.shape({\n        link: PropTypes.string,\n        value: PropTypes.number,\n        subtitle: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n    tableData: PropTypes.shape({\n      number: PropTypes.string,\n      name: PropTypes.string,\n      value: PropTypes.string,\n      body: PropTypes.arrayOf(PropTypes.shape({})),\n    }).isRequired,\n  }).isRequired,\n  options: PropTypes.shape({\n    columnsSize: PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      value: PropTypes.string,\n    }),\n    truncationLength: PropTypes.shape({\n      name: PropTypes.number,\n      number: PropTypes.number,\n      value: PropTypes.number,\n    }),\n    disableTruncation: PropTypes.shape({\n      name: PropTypes.bool,\n      number: PropTypes.bool,\n      value: PropTypes.bool,\n    }),\n  }).isRequired,\n};\n\nexport default NumbersTableCard;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-underscore-dangle */\nimport React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { Doughnut, HorizontalBar, Line } from \"react-chartjs-2\";\nimport { Bar } from 'react-chartjs-2';\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { SortableElement } from \"react-sortable-hoc\";\nimport { Tooltip } from \"react-tippy\";\n\nimport DragHandle from \"components/dashboard/DragHandle\";\nimport LoadingCard from \"components/dashboard/LoadingCard\";\nimport Numbers from \"components/dashboard/Numbers\";\nimport NumbersRAG from \"components/dashboard/NumbersRAG\";\nimport NumbersTableCard from \"components/dashboard/NumbersTableCard\";\nimport TableCard from \"components/dashboard/TableCard\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\n// TODO: OBPIH-4384 Refactor FilterComponent to be more generic.\n// It should be built from config instead of being hardcoded (and move it out to separate file)\nclass FilterComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timeFrame: 6,\n      locationSelected: \"\",\n      yearType: \"\",\n    };\n  }\n\n  handleChange = (element, cardId, loadIndicator) => {\n    const dropdown = element.target;\n    let params = \"\";\n\n    const timeFrame = this.state.timeFrame || null;\n    const location = this.state.locationSelected || null;\n    if (dropdown.id === \"locationSelector\") {\n      params = timeFrame !== null ? `querySize=${timeFrame}&` : params;\n      params = `${params}destinationLocation=${dropdown.value}`;\n      const locationSelected = this.props.allLocations.find(\n        (value) => value.id === dropdown.value,\n      );\n      this.setState({ locationSelected });\n    }\n    if (element.target.id === \"timeFrameSelector\") {\n      params = `querySize=${dropdown.value}`;\n      params =\n        location !== null\n          ? `${params}&destinationLocation=${location.id}`\n          : params;\n      this.setState({ timeFrame: dropdown.value });\n    }\n    if (element.target.id === \"yearTypeSelector\" && this.props.yearTypeFilter) {\n      params = `${this.props.yearTypeFilter.parameter || \"querySize\"}=${dropdown.value}`;\n      this.setState({ yearType: dropdown.value });\n    }\n\n    if (params !== \"\") {\n      loadIndicator(this.props.widgetId, params);\n    }\n\n    dropdown.size = 1;\n  };\n\n  render() {\n    return (\n      <div className=\"data-filter\">\n        {this.props.locationFilter && (\n          <select\n            className=\"location-filter custom-select\"\n            size=\"1\"\n            onFocus={(e) => {\n              e.target.size = 3;\n            }}\n            onBlur={(e) => {\n              e.target.size = 1;\n            }}\n            onChange={(e) =>\n              this.handleChange(e, this.props.cardId, this.props.loadIndicator)\n            }\n            disabled={!this.props.locationFilter}\n            value={this.state.locationSelected.id}\n            id=\"locationSelector\"\n          >\n            {this.props.allLocations.map((value) => {\n              if (value.name.code && value.name.message) {\n                return (\n                  <option key={value.id} value={value.id}>\n                    {this.props.translate(value.name.code, value.name.message)}\n                  </option>\n                );\n              }\n              return (\n                <option key={value.id} value={value.id}>\n                  {\" \"}\n                  {value.name}\n                </option>\n              );\n            })}\n          </select>\n        )}\n        {this.props.timeFilter && (\n          <select\n            className=\"time-filter custom-select\"\n            onChange={(e) =>\n              this.handleChange(e, this.props.cardId, this.props.loadIndicator)\n            }\n            disabled={!this.props.timeFilter}\n            defaultValue={this.state.timeFrame}\n            id=\"timeFrameSelector\"\n          >\n            <option value=\"1\">\n              {this.props.translate(this.props.label[0], this.props.label[1], {\n                number: \"\",\n                timeUnit: this.props.translate(\n                  \"react.dashboard.timeFilter.month.label\",\n                  \"Month\",\n                ),\n              })}\n            </option>\n            <option value=\"3\">\n              {this.props.translate(this.props.label[0], this.props.label[1], {\n                number: 3,\n                timeUnit: this.props.translate(\n                  \"react.dashboard.timeFilter.months.label\",\n                  \"Months\",\n                ),\n              })}\n            </option>\n            <option value=\"6\">\n              {this.props.translate(this.props.label[0], this.props.label[1], {\n                number: 6,\n                timeUnit: this.props.translate(\n                  \"react.dashboard.timeFilter.months.label\",\n                  \"Months\",\n                ),\n              })}\n            </option>\n            {(this.props.timeLimit >= 12 || !this.props.timeLimit) && (\n              <option value=\"12\">\n                {this.props.translate(\n                  this.props.label[0],\n                  this.props.label[1],\n                  {\n                    number: \"\",\n                    timeUnit: this.props.translate(\n                      \"react.dashboard.timeFilter.year.label\",\n                      \"Year\",\n                    ),\n                  },\n                )}\n              </option>\n            )}\n            {this.props.timeLimit === 24 && (\n              <option value=\"24\">\n                {this.props.translate(\n                  this.props.label[0],\n                  this.props.label[1],\n                  {\n                    number: 2,\n                    timeUnit: this.props.translate(\n                      \"react.dashboard.timeFilter.years.label\",\n                      \"Years\",\n                    ),\n                  },\n                )}\n              </option>\n            )}\n          </select>\n        )}\n        {this.props.yearTypeFilter && (\n          <select\n            className=\"time-filter custom-select\"\n            onChange={(e) =>\n              this.handleChange(e, this.props.cardId, this.props.loadIndicator)\n            }\n            disabled={!this.props.yearTypeFilter}\n            defaultValue={\n              this.state.yearType || this.props.yearTypeFilter.defaultValue\n            }\n            id=\"yearTypeSelector\"\n          >\n            {this.props.yearTypeFilter.options &&\n              this.props.yearTypeFilter.options.map((option) => (\n                <option value={option.value}>\n                  {this.props.translate(option.label, option.label)}\n                </option>\n              ))}\n          </select>\n        )}\n      </div>\n    );\n  }\n}\n\nconst handleChartClick = (elements) => {\n  const link = elements[0]._chart.data.datasets[0].links[elements[0]._index];\n  if (link && link !== \"\") {\n    window.location = link;\n  }\n};\n\nconst GraphCard = SortableElement(\n  ({\n    cardId,\n    widgetId,\n    cardTitle,\n    cardType,\n    cardLink,\n    cardInfo,\n    data,\n    options,\n    loadIndicator,\n    timeFilter = false,\n    yearTypeFilter = null,\n    timeLimit = 24,\n    locationFilter = false,\n    allLocations,\n    size = null,\n    translate,\n    hideDraghandle,\n  }) => {\n    let graph;\n    // eslint-disable-next-line no-template-curly-in-string\n    let label = [\"react.dashboard.timeFilter.last.label\", \"last ${0} ${1}\"];\n\n    const translateDataLabels = (listLabels) => {\n      const listTranslated = listLabels.map((labelToTranslate) =>\n        translate(labelToTranslate.code, labelToTranslate.message),\n      );\n      return listTranslated;\n    };\n\n    if (cardType === \"line\") {\n      if (data.labels) {\n        // Checking if the list of labels sent is composed by code dans message\n        if (data.labels[0].code && data.labels[0].message) {\n          data.labels = translateDataLabels(data.labels);\n        }\n      }\n      graph = (\n        <Line\n          data={data}\n          options={options}\n          onElementsClick={(elements) => handleChartClick(elements)}\n        />\n      );\n      // eslint-disable-next-line no-template-curly-in-string\n      label = [\"react.dashboard.timeFilter.next.label\", \"next ${0} ${1}\"];\n    } else if (cardType === \"bar\") {\n      graph = <Bar data={data} options={options} />;\n    } else if (cardType === \"doughnut\") {\n      graph = <Doughnut data={data} options={options} />;\n    } else if (cardType === \"horizontalBar\") {\n      graph = (\n        <HorizontalBar\n          data={data}\n          options={options}\n          onElementsClick={(elements) => handleChartClick(elements)}\n        />\n      );\n    } else if (cardType === \"numbers\") {\n      graph = <Numbers data={data} options={options} />;\n    } else if (cardType === \"numbersCustomColors\") {\n      graph = <NumbersRAG data={data} />;\n    } else if (cardType === \"table\") {\n      graph = <TableCard data={data} />;\n    } else if (cardType === \"numberTable\") {\n      graph = <NumbersTableCard data={data} options={options} />;\n    } else if (cardType === \"loading\") {\n      graph = <LoadingCard />;\n    } else if (cardType === \"error\") {\n      graph = (\n        <button type=\"button\" onClick={() => loadIndicator(widgetId)}>\n          <i className=\"fa fa-repeat\" />\n        </button>\n      );\n    }\n\n    return (\n      <div\n        className={`graph-card ${size === \"big\" ? \"big-size\" : \"\"} ${cardType === \"error\" ? \"error-card\" : \"\"}`}\n      >\n        <div className=\"header-card\">\n          {cardLink ? (\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={cardLink}\n              className=\"title-link\"\n            >\n              <span className=\"title-link\">\n                {translate(cardTitle, cardTitle)}\n              </span>\n            </a>\n          ) : (\n            <span className=\"title-link\">\n              {translate(cardTitle, cardTitle)}\n            </span>\n          )}\n          {cardInfo ? (\n            <div className=\"graph-infos\">\n              <Tooltip\n                html={<p>{translate(cardInfo, cardInfo)}</p>}\n                theme=\"transparent\"\n                arrow=\"true\"\n              >\n                <i className=\"fa fa-info-circle\" />\n              </Tooltip>\n            </div>\n          ) : null}\n          {!hideDraghandle && <DragHandle />}\n        </div>\n        <div className=\"content-card\">\n          <FilterComponent\n            cardId={cardId}\n            widgetId={widgetId}\n            loadIndicator={loadIndicator}\n            locationFilter={locationFilter}\n            timeLimit={timeLimit}\n            timeFilter={timeFilter}\n            yearTypeFilter={yearTypeFilter}\n            label={label}\n            data={data.length === 0 ? null : data}\n            allLocations={allLocations}\n            translate={translate}\n          />\n          <div className=\"graph-container\">{graph}</div>\n        </div>\n      </div>\n    );\n  },\n);\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps)(GraphCard);\n\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string.isRequired,\n  cardType: PropTypes.string.isRequired,\n  cardInfo: PropTypes.string.isRequired,\n  timeLimit: PropTypes.number,\n  loadIndicator: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n\nFilterComponent.defaultProps = {\n  timeFilter: false,\n  locationFilter: false,\n  yearTypeFilter: null,\n};\n\nFilterComponent.propTypes = {\n  locationFilter: PropTypes.bool,\n  timeFilter: PropTypes.bool,\n  yearTypeFilter: PropTypes.shape({\n    parameter: PropTypes.string,\n    defaultValue: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape({})),\n  }),\n  timeLimit: PropTypes.number.isRequired,\n  label: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  cardId: PropTypes.number.isRequired,\n  widgetId: PropTypes.string.isRequired,\n  loadIndicator: PropTypes.func.isRequired,\n  allLocations: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  translate: PropTypes.func.isRequired,\n};\n","/* eslint-disable react/jsx-closing-tag-location */\nimport React from \"react\";\n\nimport ReactLoading from \"react-loading\";\n\nimport { getRandomColor } from \"consts/dataFormat/colorMapping\";\n\nconst LoadingNumbers = () => {\n  const loadingNumbers = [];\n  for (let i = 0; i < 4; i += 1) {\n    loadingNumbers.push(\n      <div className=\"number-card\" key={i}>\n        <div className=\"loader-div\">\n          <ReactLoading\n            type=\"bubbles\"\n            color={getRandomColor()}\n            height=\"100px\"\n            width=\"100px\"\n          />\n        </div>\n      </div>,\n    );\n  }\n\n  return <div className=\"card-component\">{loadingNumbers}</div>;\n};\n\nexport default LoadingNumbers;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { Line } from \"react-chartjs-2\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { SortableElement } from \"react-sortable-hoc\";\nimport { Tooltip } from \"react-tippy\";\n\nimport DragHandle from \"components/dashboard/DragHandle\";\nimport { getColorByName } from \"consts/dataFormat/colorMapping\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"components/dashboard/Dashboard.scss\";\n\nconst options = {\n  responsive: true,\n  maintainAspectRatio: true,\n  legend: {\n    display: false,\n  },\n  elements: {\n    line: {\n      borderColor: \"#000000\",\n      borderWidth: 1,\n    },\n    point: {\n      radius: 0,\n    },\n  },\n  tooltips: {\n    enabled: false,\n  },\n  scales: {\n    yAxes: [\n      {\n        display: false,\n      },\n    ],\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n};\n\nconst ZERO = 0;\n\nconst NumberSparklineCard = ({\n  cardTitle,\n  cardInfo,\n  color,\n  value,\n  goalDifference,\n  sparklineData,\n  translate,\n}) => (\n  <div className=\"number-div\">\n    <div className=\"number-body\">\n      <span className=\"title-card\">{translate(cardTitle, cardTitle)}</span>\n      <div className=\"result-part\">\n        <span style={{ color: getColorByName(color, \"default\") }}>\n          {\" \"}\n          {value}{\" \"}\n        </span>\n        <span className=\"goal-difference\"> {goalDifference} </span>\n      </div>\n\n      <Line data={sparklineData} options={options} height={25} />\n    </div>\n    <div className=\"number-infos\">\n      <Tooltip\n        html={<p> {translate(cardInfo, cardInfo)} </p>}\n        theme=\"transparent\"\n        arrow=\"true\"\n        disabled={!cardInfo}\n      >\n        <i className=\"fa fa-info-circle\" />\n      </Tooltip>\n    </div>\n    <DragHandle />\n  </div>\n);\n\nconst NumberCard = SortableElement(\n  ({\n    cardTitle,\n    cardNumber,\n    cardNumberType,\n    cardSubtitle,\n    cardLink,\n    cardDataTooltip,\n    cardInfo,\n    sparklineData = null,\n    translate,\n    currencyCode,\n    hideDraghandle,\n  }) => {\n    let isSparkline = false;\n    if (sparklineData != null) {\n      if (sparklineData.colorNumber != null) {\n        isSparkline = true;\n      }\n    }\n    const cardNumberLocale = cardNumber\n      ? cardNumber.toLocaleString()\n      : ZERO.toLocaleString();\n    const card = !isSparkline ? (\n      <Tooltip\n        html={<p style={{ whiteSpace: \"pre\" }}> {cardDataTooltip} </p>}\n        theme=\"transparent\"\n        arrow=\"true\"\n        disabled={!cardDataTooltip}\n      >\n        <div className=\"number-div\">\n          <div className=\"number-body\">\n            <span className=\"title-card\">\n              {translate(cardTitle, cardTitle)}\n            </span>\n            <span className=\"result-card\">\n              {\" \"}\n              {cardNumberType === \"number\"\n                ? cardNumberLocale\n                : `${cardNumberLocale} ${currencyCode}`}{\" \"}\n            </span>\n            <span className=\"subtitle-card text-overflow-ellipsis text-nowrap\">\n              {translate(cardSubtitle, cardSubtitle)}\n            </span>\n          </div>\n          {cardInfo ? (\n            <div className=\"number-infos\">\n              <Tooltip\n                html={<p>{translate(cardInfo, cardInfo)}</p>}\n                theme=\"transparent\"\n                arrow=\"true\"\n              >\n                <i className=\"fa fa-info-circle\" />\n              </Tooltip>\n            </div>\n          ) : null}\n          {!hideDraghandle && <DragHandle />}\n        </div>\n      </Tooltip>\n    ) : (\n      <NumberSparklineCard\n        cardTitle={cardTitle}\n        cardInfo={cardInfo}\n        color={sparklineData.colorNumber.color}\n        value={sparklineData.colorNumber.value}\n        goalDifference={sparklineData.colorNumber.value2}\n        sparklineData={sparklineData}\n        translate={translate}\n      />\n    );\n\n    return cardLink ? (\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={cardLink}\n        className=\"number-card\"\n      >\n        {card}\n      </a>\n    ) : (\n      <div className=\"number-card\">{card}</div>\n    );\n  },\n);\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  currencyCode: state.session.currencyCode,\n});\n\nexport default connect(mapStateToProps)(NumberCard);\n\nNumberCard.defaultProps = {\n  cardSubtitle: \"\",\n};\n\nNumberCard.propTypes = {\n  cardTitle: PropTypes.string.isRequired,\n  cardNumber: PropTypes.number,\n  cardNumberType: PropTypes.string,\n  cardSubtitle: PropTypes.string,\n  cardLink: PropTypes.string,\n  cardDataTooltip: PropTypes.string,\n  cardInfo: PropTypes.string.isRequired,\n  translate: PropTypes.func.isRequired,\n  currencyCode: PropTypes.string.isRequired,\n};\n\nNumberSparklineCard.propTypes = {\n  cardTitle: PropTypes.string.isRequired,\n  cardInfo: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  goalDifference: PropTypes.string.isRequired,\n  sparklineData: PropTypes.shape({}).isRequired,\n  translate: PropTypes.func.isRequired,\n};\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport ReactLoading from \"react-loading\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport { getRandomColor } from \"consts/dataFormat/colorMapping\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nconst Numbers = () => {\n  const colors = [\"green\", \"yellow\", \"red\"];\n  const classColor = `circle ${colors[_.random(0, colors.length - 1)]}`;\n\n  return (\n    <div className=\"value\">\n      <div className={classColor} /> {_.random(3, 95)}\n    </div>\n  );\n};\n\nconst PreviewIndicator = (props) => (\n  <li className=\"unarchived-item\">\n    <div className=\"archived-indicator\">\n      <div className=\"row\">\n        <div className=\"col col-3 graph-preview\">{props.children}</div>\n        <div className=\"col col-6\">\n          <span className=\"w-100 text-overflow-ellipsis text-nowrap text-left\">\n            {props.translate(props.title, props.title)}\n          </span>\n        </div>\n        <div className=\"col col-3\">\n          <span\n            role=\"button\"\n            tabIndex={0}\n            className=\"unarchive-button\"\n            onClick={() => props.handleAdd(props.widgetId)}\n            onKeyDown={() => props.handleAdd(props.widgetId)}\n          >\n            Unarchive\n          </span>\n        </div>\n      </div>\n    </div>\n  </li>\n);\n\nconst ArchivedNumber = (props) => (\n  <PreviewIndicator\n    title={props.title}\n    index={props.index}\n    widgetId={props.widgetId}\n    handleAdd={props.handleAdd}\n    type=\"number\"\n    translate={props.translate}\n  >\n    <span>{_.random(3, 95)}</span>\n  </PreviewIndicator>\n);\n\nconst ArchivedGraph = (props) => {\n  let graph;\n\n  if (props.type === \"line\") {\n    graph = (\n      <i className=\"fa fa-line-chart\" style={{ color: getRandomColor() }} />\n    );\n  } else if (props.type === \"bar\") {\n    graph = (\n      <i className=\"fa fa-bar-chart\" style={{ color: getRandomColor() }} />\n    );\n  } else if (props.type === \"numbersCustomColors\") {\n    graph = (\n      <i className=\"fa fa-bar-chart\" style={{ color: getRandomColor() }} />\n    );\n  } else if (props.type === \"doughnut\") {\n    graph = (\n      <i className=\"fa fa-pie-chart\" style={{ color: getRandomColor() }} />\n    );\n  } else if (props.type === \"horizontalBar\") {\n    graph = (\n      <i\n        className=\"fa fa-bar-chart horizontal-bar\"\n        style={{ color: getRandomColor() }}\n      />\n    );\n  } else if (props.type === \"numbers\") {\n    graph = <Numbers />;\n  } else if (props.type === \"loading\") {\n    graph = (\n      <ReactLoading\n        type=\"bubbles\"\n        color={getRandomColor()}\n        height=\"40px\"\n        width=\"40px\"\n      />\n    );\n  } else if (props.type === \"error\") {\n    graph = <i className=\"fa fa-repeat\" />;\n  } else if (props.type === \"table\" || props.type === \"numberTable\") {\n    graph = <i className=\"fa fa-table\" style={{ color: getRandomColor() }} />;\n  }\n\n  return (\n    <PreviewIndicator\n      title={props.title}\n      index={props.index}\n      widgetId={props.widgetId}\n      handleAdd={props.handleAdd}\n      type=\"graph\"\n      translate={props.translate}\n    >\n      {graph}\n    </PreviewIndicator>\n  );\n};\n\nconst ArchivedIndicators = (props) => (\n  <div>\n    {props.widgets.map((value, index) =>\n      value.type === \"number\" ? (\n        <ArchivedNumber\n          key={`item-${value.widgetId}`}\n          index={index}\n          widgetId={value.widgetId}\n          title={value.title}\n          handleAdd={props.handleAdd}\n          unarchiveHandler={props.unarchiveHandler}\n          size={props.size}\n          translate={props.translate}\n        />\n      ) : (\n        <ArchivedGraph\n          key={`item-${value.widgetId}`}\n          index={index}\n          widgetId={value.widgetId}\n          title={value.title}\n          type={value.graphType}\n          handleAdd={props.handleAdd}\n          unarchiveHandler={props.unarchiveHandler}\n          size={props.size}\n          translate={props.translate}\n        />\n      ),\n    )}\n  </div>\n);\n\nconst UnarchiveIndicators = (props) => {\n  const data = [...props.graphData, ...props.numberData];\n  const dashboardWidgets = _.chain(data)\n    .filter((widget) => widget && widget.widgetId)\n    .map((widget) => widget.widgetId)\n    .value();\n  const archivedWidgets = _.chain(props.dashboardConfig.dashboardWidgets)\n    .omit(dashboardWidgets)\n    .map((widget, widgetId) => ({ ...widget, widgetId }))\n    .filter((widget) => widget.enabled)\n    .value();\n  const size = _.size(archivedWidgets);\n\n  return (\n    <div\n      className={\n        props.showPopout\n          ? \"unarchived-items popover-active\"\n          : \"unarchived-items\"\n      }\n    >\n      <div\n        className=\"unarchive\"\n        role=\"button\"\n        tabIndex={0}\n        onClick={props.unarchiveHandler}\n        onKeyDown={props.unarchiveHandler}\n      >\n        <span>\n          Archived Indicators ({size}) <i className=\"fa fa-archive\" />\n        </span>\n      </div>\n      <div className=\"unarchive-popover\">\n        <span\n          role=\"button\"\n          tabIndex={0}\n          className=\"close-button\"\n          onClick={props.unarchiveHandler}\n          onKeyDown={props.unarchiveHandler}\n        >\n          &times;\n        </span>\n        <ul className=\"unarchived-list\">\n          <ArchivedIndicators\n            widgets={archivedWidgets}\n            handleAdd={props.handleAdd}\n            unarchiveHandler={props.unarchiveHandler}\n            size={size}\n            translate={props.translate}\n          />\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps)(UnarchiveIndicators);\n\nUnarchiveIndicators.propTypes = {\n  graphData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  numberData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  dashboardConfig: PropTypes.shape({\n    dashboard: PropTypes.shape({}),\n    dashboardWidgets: PropTypes.shape({}),\n  }).isRequired,\n  unarchiveHandler: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  showPopout: PropTypes.bool.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n\nPreviewIndicator.propTypes = {\n  title: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      message: PropTypes.string.isRequired,\n    }).isRequired,\n  ]).isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  widgetId: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n\nArchivedGraph.propTypes = {\n  type: PropTypes.string.isRequired,\n  title: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      message: PropTypes.string.isRequired,\n    }).isRequired,\n  ]).isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  widgetId: PropTypes.string.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n\nArchivedNumber.propTypes = {\n  title: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.shape({\n      code: PropTypes.string.isRequired,\n      message: PropTypes.string.isRequired,\n    }).isRequired,\n  ]).isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  widgetId: PropTypes.string.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n\nArchivedIndicators.propTypes = {\n  widgets: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  unarchiveHandler: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  size: PropTypes.number.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { defaults } from \"react-chartjs-2\";\nimport { connect } from \"react-redux\";\nimport { SortableContainer } from \"react-sortable-hoc\";\nimport './DashboardTable.css';\n\nimport {\n  addToIndicators,\n  fetchConfig,\n  fetchConfigAndData,\n  fetchIndicators,\n  reloadIndicator,\n  reorderIndicators,\n  resetIndicators,\n} from \"actions\";\nimport Filter from \"components/dashboard/Filter\";\nimport GraphCard from \"components/dashboard/GraphCard\";\nimport LoadingNumbers from \"components/dashboard/LoadingNumbers\";\nimport NumberCard from \"components/dashboard/NumberCard\";\nimport UnarchiveIndicators from \"components/dashboard/UnarchiveIndicators\";\nimport apiClient from \"utils/apiClient\";\nimport Translate from \"utils/Translate\";\n\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"components/dashboard/Dashboard.scss\";\n// Disable charts legends by default.\ndefaults.scale.ticks.beginAtZero = true;\n\n// TODO: OBPIH-4385 Refactor/Split this file into separate components\n\n// eslint-disable-next-line no-shadow\nconst SortableCards = SortableContainer(\n  ({ data, loadIndicator, allLocations, personalDashboardActive }) => (\n    <div className=\"card-component\">\n      {data.map(\n        (value, index) =>\n          value && (\n            <GraphCard\n              key={`item-${value.id}`}\n              index={index}\n              cardId={value.id}\n              widgetId={value.widgetId}\n              cardTitle={value.title}\n              cardType={value.type}\n              cardLink={value.link}\n              cardInfo={value.info}\n              data={value.data}\n              timeFilter={value.timeFilter}\n              timeLimit={value.timeLimit}\n              locationFilter={value.locationFilter}\n              yearTypeFilter={value.yearTypeFilter}\n              options={value.options}\n              loadIndicator={loadIndicator}\n              allLocations={allLocations}\n              size={value.size}\n              disabled={!personalDashboardActive}\n              hideDraghandle={!personalDashboardActive}\n            />\n          ),\n      )}\n    </div>\n  ),\n);\n\nconst SortableNumberCards = SortableContainer(\n  ({ data, personalDashboardActive }) => (\n    <div className=\"card-component\">\n      {data.map(\n        (value, index) =>\n          value && (\n            <NumberCard\n              key={`item-${value.id}`}\n              index={index}\n              widgetId={value.widgetId}\n              cardTitle={value.title}\n              cardNumberType={value.numberType}\n              cardNumber={value.number}\n              cardSubtitle={value.subtitle}\n              cardLink={value.link}\n              cardDataTooltip={value.tooltipData}\n              cardInfo={value.info}\n              sparklineData={value.data}\n              disabled={!personalDashboardActive}\n              hideDraghandle={!personalDashboardActive}\n            />\n          ),\n      )}\n    </div>\n  ),\n);\n\nconst ArchiveIndicator = ({ hideArchive }) => (\n  <div className={hideArchive ? \"archive-div hide-archive\" : \"archive-div\"}>\n    <span>\n      <Translate\n        id=\"react.dashboard.archive.label\"\n        defaultMessage=\"Archive indicator\"\n      />\n      <i className=\"fa fa-archive ml-2\" />\n    </span>\n  </div>\n);\n\nconst ConfigurationsList = ({\n  configs,\n  activeConfig,\n  loadConfigData,\n  showNav,\n  toggleNav,\n  configModified,\n  updateConfig,\n}) => {\n  if (!configs) {\n    return null;\n  }\n  return (\n    <div className={`configs-left-nav ${!showNav ? \"hidden\" : \"\"}`}>\n      <button type=\"button\" className=\"toggle-nav\" onClick={toggleNav}>\n        {showNav ? (\n          <i className=\"fa fa-chevron-left\" aria-hidden=\"true\" />\n        ) : (\n          <i className=\"fa fa-chevron-right\" aria-hidden=\"true\" />\n        )}\n      </button>\n      <ul className=\"configs-list\">\n        {Object.entries(configs).map(([key, value]) => (\n          <li\n            className={`configs-list-item ${activeConfig === key ? \"active\" : \"\"}`}\n            key={key}\n          >\n            <button type=\"button\" onClick={() => loadConfigData(key)}>\n              <i className=\"fa fa-bar-chart\" aria-hidden=\"true\" />\n              <Translate\n                id={`react.dashboard.${key}.label`}\n                defaultMessage={value.name}\n              />\n            </button>\n          </li>\n        ))}\n      </ul>\n      {activeConfig === \"personal\" && configModified ? (\n        <div className=\"update-section\">\n          <div className=\"division-line\" />\n          <span>\n            <i className=\"fa fa-info-circle\" aria-hidden=\"true\" />\n            <Translate\n              id=\"react.dashboard.hasBeenEdited.message\"\n              defaultMessage=\"The dashboard layout has been edited\"\n            />\n          </span>\n          <button type=\"button\" onClick={updateConfig}>\n            <i className=\"fa fa-floppy-o\" aria-hidden=\"true\" />\n            <Translate\n              id=\"react.dashboard.saveConfiguration.label\"\n              defaultMessage=\"Save configuration\"\n            />\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst MAIN_DASHBOARD_CONFIG = \"mainDashboard\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDragging: false,\n      showPopout: false,\n      // Not showing if screen too small\n      showNav: window.innerWidth > 1115,\n      configModified: false,\n      allLocations: [],\n      pageFilters: [],\n      subdashboardKeys: [],\n    };\n    this.fetchLocations();\n  }\n\n  componentDidMount() {\n    if (this.props.currentLocation !== \"\") {\n      this.getSubdashboardKeys().then(() =>\n        this.fetchData(this.determineActiveConfig()),\n      );\n    }\n    this.loadPageFilters(this.props.activeConfig);\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevLocation = prevProps.currentLocation;\n    const newLocation = this.props.currentLocation;\n    if (prevLocation !== newLocation) {\n      this.getSubdashboardKeys().then(() =>\n        this.fetchData(this.determineActiveConfig()),\n      );\n    }\n    if (\n      prevProps.dashboardConfig.dashboard !==\n      this.props.dashboardConfig.dashboard\n    ) {\n      this.loadPageFilters(this.props.activeConfig);\n    }\n  }\n\n  getDashboardIdFromParams() {\n    const dashboardId = this.props.match.params.configId;\n    if (dashboardId && dashboardId !== \"index\") {\n      return dashboardId;\n    }\n    return MAIN_DASHBOARD_CONFIG;\n  }\n\n  getSubdashboardKeys() {\n    const dashboardId = this.getDashboardIdFromParams();\n    const url = `/api/dashboard/${dashboardId}/subdashboardKeys`;\n    return apiClient.get(url).then((res) => {\n      const subdashboardKeys = res.data;\n      if (subdashboardKeys) {\n        this.setState({ subdashboardKeys });\n      }\n    });\n  }\n\n  determineActiveConfig() {\n    if (\n      this.props.match.params.configId &&\n      this.props.match.params.configId !== \"index\"\n    ) {\n      return this.props.match.params.configId;\n    }\n    const configFromSessionStorage = sessionStorage.getItem(\"dashboardKey\");\n    // eslint-disable-next-line max-len\n    if (\n      configFromSessionStorage &&\n      this.state.subdashboardKeys.includes(configFromSessionStorage)\n    ) {\n      return configFromSessionStorage;\n    }\n    return \"personal\";\n  }\n\n  dataFetched = false;\n\n  loadPageFilters(config = \"\") {\n    let pageFilters = [];\n    if (this.props.dashboardConfig.dashboard) {\n      const allPages = Object.entries(this.props.dashboardConfig.dashboard).map(\n        ([key, value]) => [key, value],\n      );\n      allPages.forEach((page) => {\n        if (page[1].filters) {\n          const filters = Object.entries(page[1].filters).map(\n            ([keyFilter, valueFilter]) => {\n              const filter = {\n                name: keyFilter,\n                endpoint: valueFilter.endpoint,\n              };\n              return filter;\n            },\n          );\n          if (filters.length > 0 && page[0] === config) {\n            pageFilters = filters;\n          }\n        }\n      });\n    }\n    this.setState({ pageFilters });\n  }\n\n  fetchLocations() {\n    const url = \"/api/dashboard/fillRateDestinations\";\n\n    return apiClient.get(url).then((response) => {\n      this.setState({\n        allLocations: response.data.data.sort((a, b) =>\n          a.id.localeCompare(b.id),\n        ),\n      });\n    });\n  }\n\n  fetchData = (config = \"personal\") => {\n    sessionStorage.setItem(\"dashboardKey\", config);\n    this.props.resetIndicators();\n    if (this.props.dashboardConfig && this.props.dashboardConfig.dashboard) {\n      this.props.fetchIndicators(\n        this.props.dashboardConfig,\n        config,\n        this.props.currentLocation,\n        this.props.currentUser,\n      );\n      this.loadPageFilters(config);\n    } else {\n      this.props.fetchConfigAndData(\n        this.props.currentLocation,\n        config,\n        this.props.currentUser,\n        // Determine which dashboard (id) to fetch\n        this.getDashboardIdFromParams(),\n      );\n    }\n  };\n\n  updateConfig = () => {\n    const widgets = [];\n\n    _.forEach(this.props.indicatorsData, (widgetData, index) => {\n      widgets.push({ widgetId: widgetData.widgetId, order: index + 1 });\n    });\n\n    _.forEach(this.props.numberData, (widgetData, index) => {\n      widgets.push({ widgetId: widgetData.widgetId, order: index + 1 });\n    });\n\n    const url = \"/api/dashboard/config\";\n    const payload = {\n      ...this.props.dashboardConfig.dashboard,\n      [this.props.activeConfig]: {\n        ...this.props.dashboardConfig.dashboard[this.props.activeConfig],\n        widgets,\n      },\n    };\n\n    apiClient.post(url, payload).then(() => {\n      this.props.fetchConfig(this.getDashboardIdFromParams());\n      this.setState({ configModified: false });\n    });\n  };\n\n  loadIndicator = (widgetId, params) => {\n    const dashboardConf =\n      this.props.dashboardConfig.dashboard[this.props.activeConfig];\n    const widget = _.find(\n      dashboardConf.widgets,\n      (w) => w.widgetId === widgetId,\n    );\n    const widgetConf = {\n      ...this.props.dashboardConfig.dashboardWidgets[widgetId],\n      ...widget,\n    };\n    this.props.reloadIndicator(widgetConf, params, this.props.currentLocation);\n  };\n\n  toggleNav = () => {\n    this.setState((prev) => ({ showNav: !prev.showNav }));\n  };\n\n  sortStartHandle = () => {\n    this.setState({ isDragging: true });\n  };\n\n  sortEndHandle = ({ oldIndex, newIndex }, e, type) => {\n    const maxHeight =\n      window.innerHeight - ((6 * window.innerHeight) / 100 + 80);\n    if (e.clientY > maxHeight) {\n      e.target.id = \"archive\";\n    }\n    this.props.reorderIndicators({ oldIndex, newIndex }, e, type);\n    if (\n      this.props.activeConfig === \"personal\" &&\n      (oldIndex !== newIndex || e.target.id === \"archive\")\n    ) {\n      this.setState({\n        configModified: true,\n        isDragging: false,\n      });\n    } else {\n      this.setState({ isDragging: false });\n    }\n  };\n\n  sortEndHandleNumber = ({ oldIndex, newIndex }, e) => {\n    this.sortEndHandle({ oldIndex, newIndex }, e, \"number\");\n  };\n\n  sortEndHandleGraph = ({ oldIndex, newIndex }, e) => {\n    this.sortEndHandle({ oldIndex, newIndex }, e, \"graph\");\n  };\n\n  unarchiveHandler = () => {\n    const size =\n      _.size(this.props.dashboardConfig.dashboardWidgets) -\n      (this.props.indicatorsData.length + this.props.numberData.length);\n\n    if (size) {\n      this.setState((prev) => ({ showPopout: !prev.showPopout }));\n    } else {\n      this.setState({ showPopout: false });\n    }\n  };\n\n  handleAdd = (widgetId) => {\n    const widget = this.props.dashboardConfig.dashboardWidgets[widgetId];\n    const widgetConf = {\n      ...widget,\n      widgetId,\n      order:\n        (widget.type === \"number\"\n          ? this.props.numberData.length\n          : this.props.indicatorsData.length) + 1,\n    };\n    this.props.addToIndicators(\n      widgetConf,\n      this.props.currentLocation,\n      this.props.currentUser,\n    );\n\n    const size =\n      _.size(this.props.dashboardConfig.dashboardWidgets) -\n      (this.props.indicatorsData.length + this.props.numberData.length);\n\n    if (this.props.activeConfig === \"personal\") {\n      this.setState({\n        configModified: true,\n        showPopout: size > 0,\n      });\n    } else {\n      this.setState({ showPopout: size > 0 });\n    }\n  };\n\n  isPersonalDashboardActive() {\n    return this.props.activeConfig === \"personal\";\n  }\n\n  render() {\n    const isPersonalDashboardActive = this.isPersonalDashboardActive();\n    let numberCards;\n    if (this.props.numberData.length) {\n      numberCards = (\n        <SortableNumberCards\n          data={this.props.numberData}\n          onSortStart={this.sortStartHandle}\n          onSortEnd={this.sortEndHandleNumber}\n          axis=\"xy\"\n          useDragHandle\n          personalDashboardActive={isPersonalDashboardActive}\n        />\n      );\n    } else {\n      numberCards = <LoadingNumbers />;\n    }\n\n    return (\n      <div className=\"dashboard-container\">\n        <ConfigurationsList\n          configs={this.props.dashboardConfig.dashboard || {}}\n          loadConfigData={this.fetchData}\n          activeConfig={this.props.activeConfig}\n          showNav={this.state.showNav}\n          toggleNav={this.toggleNav}\n          configModified={this.state.configModified}\n          updateConfig={this.updateConfig}\n        />\n        <div\n          className={`overlay ${this.state.showNav ? \"visible\" : \"\"}`}\n          aria-label=\"button\"\n          role=\"button\"\n          tabIndex={0}\n          onClick={this.toggleNav}\n          onKeyPress={this.toggleNav}\n        />\n        <div className=\"filter-and-cards-container\">\n          <Filter\n            configs={this.props.dashboardConfig.dashboard || {}}\n            activeConfig={this.props.activeConfig}\n            fetchData={this.fetchData}\n            pageFilters={this.state.pageFilters}\n          />\n          <div className=\"cards-container\">\n            {numberCards}\n            <SortableCards\n              allLocations={this.state.allLocations}\n              data={this.props.indicatorsData.filter((indicator) => indicator)}\n              onSortStart={this.sortStartHandle}\n              onSortEnd={this.sortEndHandleGraph}\n              loadIndicator={this.loadIndicator}\n              axis=\"xy\"\n              useDragHandle\n              personalDashboardActive={isPersonalDashboardActive}\n            />\n            <ArchiveIndicator hideArchive={!this.state.isDragging} />\n            {isPersonalDashboardActive && (\n              <UnarchiveIndicators\n                graphData={this.props.indicatorsData}\n                numberData={this.props.numberData}\n                dashboardConfig={this.props.dashboardConfig}\n                activeConfig={this.props.activeConfig}\n                showPopout={this.state.showPopout}\n                unarchiveHandler={this.unarchiveHandler}\n                handleAdd={this.handleAdd}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  indicatorsData: state.indicators.data,\n  numberData: state.indicators.numberData,\n  dashboardConfig: state.indicators.config,\n  activeConfig: state.indicators.activeConfig,\n  currentLocation: state.session.currentLocation.id,\n  currentUser: state.session.user.id,\n});\n\nexport default connect(mapStateToProps, {\n  fetchIndicators,\n  reloadIndicator,\n  addToIndicators,\n  reorderIndicators,\n  resetIndicators,\n  fetchConfigAndData,\n  fetchConfig,\n})(Dashboard);\n\nDashboard.defaultProps = {\n  currentLocation: \"\",\n  currentUser: \"\",\n  indicatorsData: null,\n  numberData: [],\n  match: {\n    params: { configId: \"personal\" },\n  },\n};\n\nDashboard.propTypes = {\n  fetchIndicators: PropTypes.func.isRequired,\n  reorderIndicators: PropTypes.func.isRequired,\n  indicatorsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n    }),\n  ),\n  numberData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n    }),\n  ),\n  dashboardConfig: PropTypes.shape({\n    dashboard: PropTypes.shape({}),\n    dashboardWidgets: PropTypes.shape({}),\n  }).isRequired,\n  activeConfig: PropTypes.string.isRequired,\n  currentLocation: PropTypes.string,\n  currentUser: PropTypes.string,\n  addToIndicators: PropTypes.func.isRequired,\n  reloadIndicator: PropTypes.func.isRequired,\n  resetIndicators: PropTypes.func.isRequired,\n  fetchConfigAndData: PropTypes.func.isRequired,\n  fetchConfig: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({ configId: PropTypes.string }),\n  }),\n};\n\nArchiveIndicator.propTypes = {\n  hideArchive: PropTypes.bool.isRequired,\n};\n\nConfigurationsList.propTypes = {\n  configs: PropTypes.shape({}).isRequired,\n  activeConfig: PropTypes.string.isRequired,\n  loadConfigData: PropTypes.func.isRequired,\n  showNav: PropTypes.bool.isRequired,\n  toggleNav: PropTypes.func.isRequired,\n  updateConfig: PropTypes.func.isRequired,\n  configModified: PropTypes.bool.isRequired,\n};\n"],"names":["Filter","_Component","props","_this","_classCallCheck","_defineProperty","_callSuper","endpoint","apiClient","get","then","response","newListCategoryData","data","filter","categoryData","state","listFilterSelected","some","filterSelected","id","setState","listCategoryData","listCategoryDataFiltered","event","filteredList","name","toLowerCase","includes","target","value","searchTerm","prev","addingFilter","nameCategory","getCategoryRows","titlePopup","categorySelected","filterCategorySelected","_this$props","pageFilters","activeConfig","length","pageConfig","JSON","parse","sessionStorage","getItem","setItem","stringify","forEach","category","push","filterAvailable","valueCategory","listFilterToSend","toggleAddingFilter","toggleCategorySelected","fetchData","key","actualList","elementToDelete","newFilterList","item","newList","slice","concat","_inherits","this","loadStoredFilters","prevProps","_this2","React","className","map","role","tabIndex","onClick","removeFilterFromList","onKeyPress","hidden","type","placeholder","onChange","searchOnChange","Object","entries","sort","a","b","localeCompare","addFilterToTheList","configs","_ref","_ref2","_slicedToArray","filters","_ref3","_ref4","Component","propTypes","PropTypes","isRequired","sortableHandle","ReactLoading","color","getRandomColor","height","width","Numbers","_Object$values2","values","options","_","indicator","link","subtitle","redirect","href","_extends","style","backgroundColor","colors","third","second","first","defaultProps","NumbersRAG","listColorNumber","index","getColorByName","background","TableCard","columnsSize","truncationLength","disableTruncation","displayItemData","truncate","defaultTruncationLength","rel","number","body","find","icon","window","open","numberLink","alt","src","nameLink","items","nameDataList","links","nameLinksList","valueLink","undefined","NumbersTableCard","numbersIndicator","tableData","FilterComponent","element","cardId","loadIndicator","dropdown","params","timeFrame","location","locationSelected","allLocations","yearTypeFilter","parameter","yearType","widgetId","size","locationFilter","onFocus","e","onBlur","handleChange","disabled","code","message","translate","timeFilter","defaultValue","label","timeUnit","timeLimit","option","handleChartClick","elements","_chart","datasets","_index","GraphCard","SortableElement","graph","cardTitle","cardType","cardLink","cardInfo","_ref$timeFilter","_ref$yearTypeFilter","_ref$timeLimit","_ref$locationFilter","_ref$size","hideDraghandle","labels","labelToTranslate","Line","onElementsClick","Bar","Doughnut","HorizontalBar","LoadingCard","Tooltip","html","theme","arrow","DragHandle","connect","translateWithDefaultMessage","getTranslate","localize","loadingNumbers","i","responsive","maintainAspectRatio","legend","display","line","borderColor","borderWidth","point","radius","tooltips","enabled","scales","yAxes","xAxes","plugins","datalabels","NumberSparklineCard","goalDifference","sparklineData","NumberCard","cardNumber","cardNumberType","cardSubtitle","cardDataTooltip","_ref2$sparklineData","currencyCode","isSparkline","colorNumber","cardNumberLocale","toLocaleString","card","value2","whiteSpace","session","classColor","PreviewIndicator","children","title","handleAdd","onKeyDown","ArchivedNumber","ArchivedGraph","ArchivedIndicators","widgets","unarchiveHandler","graphType","UnarchiveIndicators","_toConsumableArray","graphData","numberData","dashboardWidgets","widget","archivedWidgets","dashboardConfig","omit","_objectSpread","showPopout","dashboard","defaults","SortableCards","SortableContainer","personalDashboardActive","info","SortableNumberCards","numberType","tooltipData","ArchiveIndicator","hideArchive","Translate","defaultMessage","ConfigurationsList","loadConfigData","showNav","toggleNav","configModified","updateConfig","_ref5","_ref6","Dashboard","config","arguments","resetIndicators","fetchIndicators","currentLocation","currentUser","loadPageFilters","fetchConfigAndData","getDashboardIdFromParams","indicatorsData","widgetData","order","payload","post","fetchConfig","dashboardConf","w","widgetConf","reloadIndicator","isDragging","_ref7","oldIndex","newIndex","maxHeight","innerHeight","clientY","reorderIndicators","_ref8","sortEndHandle","_ref9","addToIndicators","innerWidth","subdashboardKeys","fetchLocations","getSubdashboardKeys","determineActiveConfig","_this3","dashboardId","match","configId","_this4","url","res","configFromSessionStorage","_ref10","_ref11","page","_ref12","_ref13","_this5","numberCards","isPersonalDashboardActive","onSortStart","sortStartHandle","onSortEnd","sortEndHandleNumber","axis","useDragHandle","LoadingNumbers","sortEndHandleGraph","indicators","user"],"sourceRoot":""}