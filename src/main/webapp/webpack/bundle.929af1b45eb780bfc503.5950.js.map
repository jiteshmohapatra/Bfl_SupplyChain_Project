{"version":3,"file":"bundle.929af1b45eb780bfc503.5950.js","mappings":"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","sources":["webpack://openboxes/./src/js/components/form-elements/DateFilter/DateFilter.jsx","webpack://openboxes/./src/js/hooks/list-pages/useCommonFiltersCleaner.js","webpack://openboxes/./src/js/components/listPagesUtils/Tabs.jsx","webpack://openboxes/./src/js/wrappers/ListFilterFormWrapper.jsx","webpack://openboxes/./src/js/consts/dateFormat.js","webpack://openboxes/./src/js/hooks/useSwitchTabs.js","webpack://openboxes/./src/js/wrappers/PageWrapper.jsx","webpack://openboxes/./src/js/components/listPagesUtils/ListTitle.jsx","webpack://openboxes/./src/js/utils/Checkbox.jsx","webpack://openboxes/./src/js/components/form-elements/CheckboxField.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"react-datepicker\";\nimport { RiCalendarLine, RiCloseLine } from \"react-icons/ri\";\nimport { useSelector } from \"react-redux\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport DateFormat from \"consts/dateFormat\";\nimport Translate from \"utils/Translate\";\nimport { formatDate, getLocaleCode } from \"utils/translation-utils\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"components/form-elements/DateFilter/DateFilter.scss\";\n\nconst CustomInput = React.forwardRef((props, ref) => {\n  const {\n    onClick,\n    title,\n    value,\n    placeholder,\n    onClear,\n    defaultMessage,\n    formatDateToDisplay,\n  } = props;\n  const onKeypressHandler = (event) => {\n    if (event.key === \"Enter\") onClick();\n  };\n\n  return (\n    <div\n      ref={ref}\n      tabIndex=\"0\"\n      role=\"button\"\n      className=\"d-flex flex-row date-picker__input-wrapper\"\n      onClick={onClick}\n      onKeyDown={onKeypressHandler}\n    >\n      <span className=\"flex-grow-1 date-picker__input\">\n        <Translate id={title} defaultMessage={defaultMessage} />\n        <span>{formatDateToDisplay(value) || placeholder}</span>\n      </span>\n      <div className=\"date-picker__icon-wrapper\">\n        {value ? (\n          <button\n            aria-label=\"Pick date\"\n            type=\"button\"\n            className=\"date-picker__icon\"\n            onClick={onClear}\n          >\n            <RiCloseLine />\n          </button>\n        ) : (\n          <div className=\"date-picker__icon\">\n            <RiCalendarLine />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n});\n\nconst DateFilter = (props) => {\n  const {\n    value,\n    onChange,\n    dateFormat,\n    placeholder,\n    label,\n    timeFormat,\n    defaultMessage,\n    localizeDate,\n    localizedDateFormat,\n  } = props;\n  const { localeCode, formatLocalizedDate } = useSelector((state) => ({\n    localeCode: getLocaleCode(state.localize),\n    formatLocalizedDate: formatDate(state.localize),\n  }));\n  const [isFocused, setIsFocused] = useState(false);\n\n  const onChangeHandler = (date) => onChange(date.format(dateFormat));\n\n  const onClear = (e) => {\n    e.stopPropagation();\n    onChange(null);\n  };\n\n  const formatDateToDisplay = (date) => {\n    if (!date) {\n      return null;\n    }\n\n    if (localizeDate && localizedDateFormat) {\n      return formatLocalizedDate(date, localizedDateFormat);\n    }\n\n    return moment(date).format(dateFormat);\n  };\n\n  const onBlur = () => setIsFocused(false);\n\n  const onFocus = () => setIsFocused(true);\n\n  const isFocusedClass = isFocused ? \"date-picker__wrapper--focused\" : \"\";\n  const isValidClass = value ? \"date-picker__wrapper--valid\" : \"\";\n\n  const selectedDate = value ? moment(value, dateFormat) : null;\n  const highlightedDates = [selectedDate || moment(new Date(), dateFormat)];\n\n  const localeCodeToDisplay = localizeDate ? localeCode : null;\n\n  return (\n    <div\n      className={`date-picker__wrapper ${isFocusedClass} ${isValidClass}`}\n      data-testid=\"date-filter\"\n    >\n      <DatePicker\n        {...props}\n        customInput={\n          <CustomInput\n            formatDateToDisplay={formatDateToDisplay}\n            onClear={onClear}\n            defaultMessage={defaultMessage}\n          />\n        }\n        className=\"date-picker__input\"\n        placeholderText={placeholder}\n        title={label}\n        highlightDates={highlightedDates}\n        selected={selectedDate}\n        onChange={onChangeHandler}\n        onInputClick={onFocus}\n        onSelect={onBlur}\n        onClickOutside={onBlur}\n        disabledKeyboardNavigation\n        popperClassName=\"force-on-top\"\n        showYearDropdown\n        locale={localeCodeToDisplay}\n        scrollableYearDropdown\n        dateFormat={dateFormat}\n        timeFormat={timeFormat}\n        timeIntervals={15}\n        yearDropdownItemNumber={3}\n        utcOffset={0}\n      />\n    </div>\n  );\n};\n\nconst DateFilterBaseInput = (props) => (\n  <BaseField {...props} renderInput={DateFilter} />\n);\n\nDateFilter.defaultProps = {\n  onChange: undefined,\n  label: \"\",\n  defaultMessage: \"\",\n  placeholder: \"\",\n  dateFormat: \"MM/DD/YYYY\",\n  timeFormat: \"HH:mm\",\n  value: null,\n  localizeDate: false,\n  localizedDateFormat: DateFormat.DEFAULT,\n};\n\nDateFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  label: PropTypes.string,\n  defaultMessage: PropTypes.string,\n  placeholder: PropTypes.string,\n  dateFormat: PropTypes.string,\n  timeFormat: PropTypes.string,\n  localizeDate: PropTypes.bool,\n  localizedDateFormat: PropTypes.string,\n};\n\nexport default DateFilterBaseInput;\n","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setShouldRebuildFilterParams } from 'actions';\n\nconst useCommonFiltersCleaner = ({\n  clearFilterValues,\n  initializeDefaultFilterValues,\n  filtersInitialized,\n}) => {\n  const {\n    currentLocation, shouldRebuildParams,\n  } = useSelector((state) => ({\n    currentLocation: state.session.currentLocation,\n    shouldRebuildParams: state.filterForm.shouldRebuildParams,\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // If FilterForm catches change of the location, it sets shouldRebuildFilterParams flag to true\n    // so this useEffect knows when to rebuild the filter form values reducing amount of refetches\n    // and rebuilds of filter params. After it calls the values builder, set the flag to false\n    if (shouldRebuildParams) {\n      if (filtersInitialized) {\n        clearFilterValues();\n      }\n      if (currentLocation?.id) {\n        initializeDefaultFilterValues();\n      }\n      dispatch(setShouldRebuildFilterParams(false));\n    }\n  }, [shouldRebuildParams]);\n};\n\nexport default useCommonFiltersCleaner;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport useQueryParams from \"hooks/useQueryParams\";\nimport Translate from \"utils/Translate\";\n\nconst Tabs = ({ config, className }) => {\n  const parsedQueryParams = useQueryParams();\n  return (\n    <div className={`tabs d-flex align-items-center ${className}`}>\n      {Object.entries(config).map(([key, value]) => (\n        <span\n          key={key}\n          className={parsedQueryParams?.tab === key ? \"active-tab\" : \"\"}\n          onClick={() => value.onClick?.(key)}\n          role=\"button\"\n          tabIndex={0}\n          onKeyDown={() => value.onClick?.(key)}\n        >\n          <Translate\n            id={value.label.id}\n            defaultMessage={value.label.defaultMessage}\n          />\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport default Tabs;\n\nTabs.propTypes = {\n  config: PropTypes.shape({\n    [PropTypes.string.isRequired]: PropTypes.shape({\n      label: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        defaultMessage: PropTypes.string.isRequired,\n      }).isRequired,\n      onClick: PropTypes.func,\n    }),\n  }),\n  className: PropTypes.string,\n};\n\nTabs.defaultProps = {\n  className: \"\",\n  config: {},\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst ListFilterFormWrapper = ({ children, className }) => (\n  <div className={`d-flex flex-column list-page-filters ${className}`}>\n    {children}\n  </div>\n);\n\nexport default ListFilterFormWrapper;\n\nListFilterFormWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nListFilterFormWrapper.defaultProps = {\n  className: \"\",\n};\n","// Enum for storing labels used in dates formatting.\n// In case of adding new format we have to:\n// 1. Add new format in message.properties file\n// 2. Add the newly created label to this enum\n// This enum is used in:\n// 1. <FormatDate date={your date} formatName={property of this enum} /> component\n\nconst DateFormat = {\n  DEFAULT: 'react.default.defaultDate.format',\n  COMMON: 'react.default.commonDate.format',\n  EXPIRY: 'react.default.expiryDate.format',\n  DISPLAY: 'react.default.displayDate.format',\n};\n\nexport default DateFormat;\n","import { useEffect } from 'react';\n\nimport queryString from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport useQueryParams from 'hooks/useQueryParams';\n\nconst useSwitchTabs = ({ defaultTab }) => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const currentQueryParams = useQueryParams();\n\n  const switchTab = (tab, onSwitchTab) => {\n    const updatedQueryParams = {\n      ...currentQueryParams,\n      tab,\n    };\n    const stringifiedQueryParams = queryString.stringify(updatedQueryParams);\n    history.push({ pathname, search: stringifiedQueryParams });\n    onSwitchTab?.();\n  };\n\n  useEffect(() => {\n    // If we don't have tab query param,\n    // we want to display the default tab by default\n    if (!currentQueryParams.tab) {\n      switchTab(defaultTab);\n    }\n  }, []);\n\n  return {\n    switchTab,\n  };\n};\n\nexport default useSwitchTabs;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst PageWrapper = ({ children, className }) => (\n  <div className={`d-flex flex-column list-page-main ${className}`}>\n    {children}\n  </div>\n);\n\nexport default PageWrapper;\n\nPageWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nPageWrapper.defaultProps = {\n  className: \"\",\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Translate from \"utils/Translate\";\n\nconst ListTitle = ({ label }) => (\n  <span className=\"d-flex align-self-center title\">\n    <Translate id={label.id} defaultMessage={label.defaultMessage} />\n  </span>\n);\n\nexport default ListTitle;\n\nListTitle.propTypes = {\n  label: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    defaultMessage: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Translate from \"utils/Translate\";\n\nconst Checkbox = ({\n  value,\n  indeterminate,\n  custom,\n  fieldRef,\n  withLabel,\n  label,\n  defaultMessage,\n  ...props\n}) => {\n  const onChange = (event) => {\n    const { checked } = event.target;\n\n    if (props.onChange) {\n      props.onChange(checked);\n    }\n  };\n\n  if (custom) {\n    return (\n      <div data-testid=\"custom-checkbox\" className=\"custom-checkbox\">\n        <label htmlFor={props.id}>\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            ref={fieldRef}\n            checked={value}\n            {...props}\n            onChange={onChange}\n          />\n        </label>\n      </div>\n    );\n  }\n\n  if (withLabel) {\n    return (\n      <div\n        data-testid=\"with-label-checkbox\"\n        className=\"d-flex align-items-center\"\n      >\n        <input\n          type=\"checkbox\"\n          ref={(elem) => {\n            if (elem) {\n              // eslint-disable-next-line no-param-reassign\n              elem.indeterminate = indeterminate;\n            }\n            if (fieldRef) {\n              fieldRef(elem);\n            }\n          }}\n          checked={value}\n          {...props}\n          onChange={onChange}\n        />\n        <label htmlFor={props.id} style={{ margin: \"0 0 0 5px\" }}>\n          <Translate id={label} defaultMessage={defaultMessage || label} />\n        </label>\n      </div>\n    );\n  }\n\n  return (\n    <input\n      data-testid=\"checkbox\"\n      type=\"checkbox\"\n      ref={(elem) => {\n        if (elem) {\n          // eslint-disable-next-line no-param-reassign\n          elem.indeterminate = indeterminate;\n        }\n        if (fieldRef) {\n          fieldRef(elem);\n        }\n      }}\n      checked={value}\n      {...props}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Checkbox;\n\nCheckbox.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  custom: PropTypes.bool,\n  id: PropTypes.string,\n  fieldRef: PropTypes.func,\n  withLabel: PropTypes.bool,\n  label: PropTypes.string,\n  defaultMessage: PropTypes.string,\n};\n\nCheckbox.defaultProps = {\n  onChange: null,\n  value: null,\n  indeterminate: false,\n  custom: false,\n  id: \"\",\n  fieldRef: undefined,\n  withLabel: false,\n  label: \"\",\n  defaultMessage: \"\",\n};\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Checkbox from \"utils/Checkbox\";\n\nconst CheckboxField = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const renderInput = ({ value, ...attributes }) => (\n    <Checkbox {...attributes} value={value || false} />\n  );\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default CheckboxField;\n"],"names":["CustomInput","React","props","ref","onClick","title","value","placeholder","onClear","defaultMessage","formatDateToDisplay","tabIndex","role","className","onKeyDown","event","key","Translate","id","type","RiCloseLine","RiCalendarLine","DateFilter","onChange","dateFormat","label","timeFormat","localizeDate","localizedDateFormat","_useSelector","useSelector","state","localeCode","getLocaleCode","localize","formatLocalizedDate","formatDate","_useState2","useState","isFocused","setIsFocused","onBlur","isFocusedClass","isValidClass","selectedDate","moment","highlightedDates","Date","localeCodeToDisplay","concat","DatePicker","_extends","customInput","date","format","e","stopPropagation","placeholderText","highlightDates","selected","onInputClick","onSelect","onClickOutside","disabledKeyboardNavigation","popperClassName","showYearDropdown","locale","scrollableYearDropdown","timeIntervals","yearDropdownItemNumber","utcOffset","defaultProps","undefined","DateFormat","DEFAULT","propTypes","PropTypes","BaseField","renderInput","_ref","clearFilterValues","initializeDefaultFilterValues","filtersInitialized","currentLocation","session","shouldRebuildParams","filterForm","dispatch","useDispatch","useEffect","setShouldRebuildFilterParams","Tabs","config","parsedQueryParams","useQueryParams","Object","entries","map","_ref2","_ref3","_slicedToArray","tab","_value$onClick","call","_value$onClick2","isRequired","ListFilterFormWrapper","children","COMMON","EXPIRY","DISPLAY","defaultTab","history","useHistory","pathname","useLocation","currentQueryParams","switchTab","onSwitchTab","updatedQueryParams","_objectSpread","stringifiedQueryParams","queryString","stringify","push","search","PageWrapper","ListTitle","Checkbox","indeterminate","custom","fieldRef","withLabel","_objectWithoutProperties","_excluded","checked","target","htmlFor","elem","style","margin","attributes"],"sourceRoot":""}