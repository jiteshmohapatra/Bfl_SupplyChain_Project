{"version":3,"file":"bundle.929af1b45eb780bfc503.7701.js","mappings":"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","sources":["webpack://openboxes/./node_modules/final-form-arrays/dist/final-form-arrays.es.js","webpack://openboxes/./src/js/components/form-elements/SelectField.jsx","webpack://openboxes/./src/js/components/form-elements/ModalWrapper.jsx","webpack://openboxes/./src/js/utils/Textarea.jsx","webpack://openboxes/./src/js/components/form-elements/TextareaField.jsx","webpack://openboxes/./src/js/components/form-elements/TextField.jsx","webpack://openboxes/./src/js/components/stock-list-management/EmailModal.jsx","webpack://openboxes/./src/js/components/stock-list-management/StocklistManagement.jsx","webpack://openboxes/./src/js/utils/Checkbox.jsx","webpack://openboxes/./src/js/components/form-elements/CheckboxField.jsx"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n//      \nfunction copyField(oldFields, oldKey, newFields, newKey) {\n  newFields[newKey] = _extends({}, oldFields[oldKey], {\n    name: newKey,\n    // prevent functions from being overwritten\n    // if the newFields[newKey] does not exist, it will be created\n    // when that field gets registered, with its own change/blur/focus callbacks\n    change: oldFields[newKey] && oldFields[newKey].change,\n    blur: oldFields[newKey] && oldFields[newKey].blur,\n    focus: oldFields[newKey] && oldFields[newKey].focus,\n    lastFieldState: undefined // clearing lastFieldState forces renotification\n\n  });\n\n  if (!newFields[newKey].change) {\n    delete newFields[newKey].change;\n  }\n\n  if (!newFields[newKey].blur) {\n    delete newFields[newKey].blur;\n  }\n\n  if (!newFields[newKey].focus) {\n    delete newFields[newKey].focus;\n  }\n}\n\n//      \n// From MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\nvar escapeRegexTokens = function escapeRegexTokens(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}; // $& means the whole matched string\n\n//      \n\nvar insert = function insert(_ref, state, _ref2) {\n  var name = _ref[0],\n      index = _ref[1],\n      value = _ref[2];\n  var changeValue = _ref2.changeValue;\n  changeValue(state, name, function (array) {\n    var copy = [].concat(array || []);\n    copy.splice(index, 0, value);\n    return copy;\n  }); // now we have increment any higher indexes\n\n  var pattern = new RegExp(\"^\" + escapeRegexTokens(name) + \"\\\\[(\\\\d+)\\\\](.*)\");\n  var newFields = {};\n  Object.keys(state.fields).forEach(function (key) {\n    var tokens = pattern.exec(key);\n\n    if (tokens) {\n      var fieldIndex = Number(tokens[1]);\n\n      if (fieldIndex >= index) {\n        // Shift all higher indices up\n        var incrementedKey = name + \"[\" + (fieldIndex + 1) + \"]\" + tokens[2];\n        copyField(state.fields, key, newFields, incrementedKey);\n        return;\n      }\n    } // Keep this field that does not match the name,\n    // or has index smaller than what is being inserted\n\n\n    newFields[key] = state.fields[key];\n  });\n  state.fields = newFields;\n};\n\n//      \nvar concat = function concat(_ref, state, _ref2) {\n  var name = _ref[0],\n      value = _ref[1];\n  var changeValue = _ref2.changeValue;\n  changeValue(state, name, function (array) {\n    return array ? [].concat(array, value) : value;\n  });\n};\n\n//      \n\nvar move = function move(_ref, state, _ref2) {\n  var name = _ref[0],\n      from = _ref[1],\n      to = _ref[2];\n  var changeValue = _ref2.changeValue;\n\n  if (from === to) {\n    return;\n  }\n\n  changeValue(state, name, function (array) {\n    var copy = [].concat(array || []);\n    var value = copy[from];\n    copy.splice(from, 1);\n    copy.splice(to, 0, value);\n    return copy;\n  });\n  var newFields = {};\n  var pattern = new RegExp(\"^\" + escapeRegexTokens(name) + \"\\\\[(\\\\d+)\\\\](.*)\");\n  var lowest;\n  var highest;\n  var increment;\n\n  if (from > to) {\n    lowest = to;\n    highest = from;\n    increment = 1;\n  } else {\n    lowest = from;\n    highest = to;\n    increment = -1;\n  }\n\n  Object.keys(state.fields).forEach(function (key) {\n    var tokens = pattern.exec(key);\n\n    if (tokens) {\n      var fieldIndex = Number(tokens[1]);\n\n      if (fieldIndex === from) {\n        var newKey = name + \"[\" + to + \"]\" + tokens[2];\n        copyField(state.fields, key, newFields, newKey);\n        return;\n      }\n\n      if (lowest <= fieldIndex && fieldIndex <= highest) {\n        // Shift all indices\n        var _newKey = name + \"[\" + (fieldIndex + increment) + \"]\" + tokens[2];\n\n        copyField(state.fields, key, newFields, _newKey);\n        return;\n      }\n    } // Keep this field that does not match the name,\n    // or has index smaller or larger than affected range\n\n\n    newFields[key] = state.fields[key];\n  });\n  state.fields = newFields;\n};\n\n//      \n\nvar remove = function remove(_ref, state, _ref2) {\n  var name = _ref[0],\n      index = _ref[1];\n  var changeValue = _ref2.changeValue,\n      getIn = _ref2.getIn,\n      setIn = _ref2.setIn;\n  var returnValue;\n  changeValue(state, name, function (array) {\n    if (!array) {\n      return array;\n    }\n\n    var copy = [].concat(array);\n    returnValue = copy[index];\n    copy.splice(index, 1);\n    return copy.length > 0 ? copy : undefined;\n  }); // now we have to remove any subfields for our index,\n  // and decrement all higher indexes.\n\n  var pattern = new RegExp(\"^\" + escapeRegexTokens(name) + \"\\\\[(\\\\d+)\\\\](.*)\");\n  var newFields = {};\n  Object.keys(state.fields).forEach(function (key) {\n    var tokens = pattern.exec(key);\n\n    if (tokens) {\n      var fieldIndex = Number(tokens[1]);\n\n      if (fieldIndex === index) {\n        // delete any submitErrors for this array item\n        // if the root key of the delete index\n        if (key === name + \"[\" + index + \"]\") {\n          var path = \"formState.submitErrors.\" + name;\n          var submitErrors = getIn(state, path); // if has submitErrors for array\n\n          if (Array.isArray(submitErrors)) {\n            submitErrors.splice(index, 1);\n            state = setIn(state, path, submitErrors);\n          }\n        }\n\n        return;\n      }\n\n      if (fieldIndex > index) {\n        // Shift all higher indices down\n        var decrementedKey = name + \"[\" + (fieldIndex - 1) + \"]\" + tokens[2];\n        copyField(state.fields, key, newFields, decrementedKey);\n        return;\n      }\n    } // Keep this field that does not match the name,\n    // or has index smaller than what is being removed\n\n\n    newFields[key] = state.fields[key];\n  });\n  state.fields = newFields;\n  return returnValue;\n};\n\n//      \n\nvar pop = function pop(_ref, state, tools) {\n  var name = _ref[0];\n  var getIn = tools.getIn;\n  var array = getIn(state.formState.values, name);\n  return array && array.length > 0 ? remove([name, array.length - 1], state, tools) : undefined;\n};\n\n//      \nvar push = function push(_ref, state, _ref2) {\n  var name = _ref[0],\n      value = _ref[1];\n  var changeValue = _ref2.changeValue;\n  changeValue(state, name, function (array) {\n    return array ? [].concat(array, [value]) : [value];\n  });\n};\n\n//      \n\nvar binarySearch = function binarySearch(list, value) {\n  // This algorithm assumes the items in list is unique\n  var first = 0;\n  var last = list.length - 1;\n  var middle = 0;\n\n  while (first <= last) {\n    middle = Math.floor((first + last) / 2);\n\n    if (list[middle] === value) {\n      return middle;\n    }\n\n    if (list[middle] > value) {\n      last = middle - 1;\n    } else {\n      first = middle + 1;\n    }\n  }\n\n  return ~first;\n};\n\nvar removeBatch = function removeBatch(_ref, state, _ref2) {\n  var name = _ref[0],\n      indexes = _ref[1];\n  var changeValue = _ref2.changeValue;\n\n  if (indexes.length === 0) {\n    return [];\n  }\n\n  var sortedIndexes = [].concat(indexes);\n  sortedIndexes.sort(); // Remove duplicates\n\n  for (var i = sortedIndexes.length - 1; i > 0; i -= 1) {\n    if (sortedIndexes[i] === sortedIndexes[i - 1]) {\n      sortedIndexes.splice(i, 1);\n    }\n  }\n\n  var returnValue = [];\n  changeValue(state, name, function (array) {\n    // use original order of indexes for return value\n    returnValue = indexes.map(function (index) {\n      return array && array[index];\n    });\n\n    if (!array) {\n      return array;\n    }\n\n    var copy = [].concat(array);\n\n    for (var _i = sortedIndexes.length - 1; _i >= 0; _i -= 1) {\n      var index = sortedIndexes[_i];\n      copy.splice(index, 1);\n    }\n\n    return copy.length > 0 ? copy : undefined;\n  }); // now we have to remove any subfields for our indexes,\n  // and decrement all higher indexes.\n\n  var pattern = new RegExp(\"^\" + escapeRegexTokens(name) + \"\\\\[(\\\\d+)\\\\](.*)\");\n  var newFields = {};\n  Object.keys(state.fields).forEach(function (key) {\n    var tokens = pattern.exec(key);\n\n    if (tokens) {\n      var fieldIndex = Number(tokens[1]);\n      var indexOfFieldIndex = binarySearch(sortedIndexes, fieldIndex);\n\n      if (indexOfFieldIndex >= 0) {\n        // One of the removed indices\n        return;\n      }\n\n      if (fieldIndex > sortedIndexes[0]) {\n        // Shift all higher indices down\n        var decrementedKey = name + \"[\" + (fieldIndex - ~indexOfFieldIndex) + \"]\" + tokens[2];\n        copyField(state.fields, key, newFields, decrementedKey);\n        return;\n      }\n    } // Keep this field that does not match the name,\n    // or has index smaller than what is being removed\n\n\n    newFields[key] = state.fields[key];\n  });\n  state.fields = newFields;\n  return returnValue;\n};\n\n//      \n\nvar shift = function shift(_ref, state, tools) {\n  var name = _ref[0];\n  return remove([name, 0], state, tools);\n};\n\n//      \n\nvar swap = function swap(_ref, state, _ref2) {\n  var name = _ref[0],\n      indexA = _ref[1],\n      indexB = _ref[2];\n  var changeValue = _ref2.changeValue;\n\n  if (indexA === indexB) {\n    return;\n  }\n\n  changeValue(state, name, function (array) {\n    var copy = [].concat(array || []);\n    var a = copy[indexA];\n    copy[indexA] = copy[indexB];\n    copy[indexB] = a;\n    return copy;\n  }); // swap all field state that begin with \"name[indexA]\" with that under \"name[indexB]\"\n\n  var aPrefix = name + \"[\" + indexA + \"]\";\n  var bPrefix = name + \"[\" + indexB + \"]\";\n  var newFields = {};\n  Object.keys(state.fields).forEach(function (key) {\n    if (key.substring(0, aPrefix.length) === aPrefix) {\n      var suffix = key.substring(aPrefix.length);\n      var newKey = bPrefix + suffix;\n      copyField(state.fields, key, newFields, newKey);\n    } else if (key.substring(0, bPrefix.length) === bPrefix) {\n      var _suffix = key.substring(bPrefix.length);\n\n      var _newKey = aPrefix + _suffix;\n\n      copyField(state.fields, key, newFields, _newKey);\n    } else {\n      // Keep this field that does not match the name\n      newFields[key] = state.fields[key];\n    }\n  });\n  state.fields = newFields;\n};\n\n//      \n\nvar unshift = function unshift(_ref, state, tools) {\n  var name = _ref[0],\n      value = _ref[1];\n  return insert([name, 0, value], state, tools);\n};\n\n//      \nvar update = function update(_ref, state, _ref2) {\n  var name = _ref[0],\n      index = _ref[1],\n      value = _ref[2];\n  var changeValue = _ref2.changeValue;\n  changeValue(state, name, function (array) {\n    var copy = [].concat(array || []);\n    copy.splice(index, 1, value);\n    return copy;\n  });\n};\n\n//      \nvar mutators = {\n  insert: insert,\n  concat: concat,\n  move: move,\n  pop: pop,\n  push: push,\n  remove: remove,\n  removeBatch: removeBatch,\n  shift: shift,\n  swap: swap,\n  unshift: unshift,\n  update: update\n};\n\nexport default mutators;\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Select from \"utils/Select\";\n\nconst SelectField = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const renderInput = ({ className, ...attributes }) => (\n    <Select\n      name={attributes.id}\n      {...attributes}\n      className={`select-xs ${className}`}\n      classNamePrefix=\"react-select\"\n    />\n  );\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default SelectField;\n","import React, { Component } from \"react\";\n\nimport arrayMutators from \"final-form-arrays\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\nimport Modal from \"react-modal\";\n\nimport { renderFormField } from \"utils/form-utils\";\nimport Translate from \"utils/Translate\";\n\nclass ModalWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  openModal() {\n    this.props.onOpen();\n    this.setState({ showModal: true });\n  }\n\n  closeModal() {\n    this.props.onClose();\n    this.setState({ showModal: false });\n  }\n\n  save(values) {\n    this.props.onSave(values);\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    const Title = this.props.title;\n    const { defaultTitleMessage } = this.props;\n\n    return (\n      <div className={this.props.wrapperClassName}>\n        {this.props.renderButton ? (\n          this.props.renderButton({ openModal: this.openModal })\n        ) : (\n          <button\n            type=\"button\"\n            className={`btn-xs ${this.props.btnOpenClassName}`}\n            style={this.props.btnOpenStyle}\n            disabled={this.props.btnOpenDisabled}\n            onClick={() => this.openModal()}\n          >\n            {this.props.btnOpenIcon && (\n              <i\n                className={`fa ${this.props.btnOpenIcon} mr-1`}\n                aria-hidden=\"true\"\n              />\n            )}\n            {this.props.btnOpenText && !this.props.btnOpenAsIcon && (\n              <Translate\n                id={this.props.btnOpenText}\n                defaultMessage={this.props.btnOpenDefaultText}\n              />\n            )}\n          </button>\n        )}\n        <Modal\n          isOpen={this.props.showModal || this.state.showModal}\n          onRequestClose={this.closeModal}\n          className=\"modal-content-custom\"\n          shouldCloseOnOverlayClick={false}\n        >\n          <div\n            className={this.props.bodyContainerClassName}\n            style={this.props.bodyContainerStyle}\n          >\n            {typeof Title === \"string\" ? (\n              <h5 className=\"text-center\">\n                {\" \"}\n                <Translate id={Title} defaultMessage={defaultTitleMessage} />\n              </h5>\n            ) : (\n              <Title />\n            )}\n            <hr />\n            <Form\n              onSubmit={(values) => this.save(values)}\n              initialValues={this.props.initialValues}\n              validate={this.props.validate}\n              mutators={{ ...arrayMutators }}\n              render={({ handleSubmit, values }) => (\n                <form id=\"modalForm\" onSubmit={handleSubmit}>\n                  {this.props.children}\n                  {this.props.renderBodyWithValues(values)}\n\n                  {_.map(this.props.fields, (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName, {\n                      ...this.props.formProps,\n                      values,\n                    }),\n                  )}\n\n                  <hr />\n\n                  <div\n                    className={this.props.btnContainerClassName}\n                    role=\"group\"\n                    style={this.props.btnContainerStyle}\n                  >\n                    <button\n                      type=\"button\"\n                      className={this.props.btnCancelClassName}\n                      style={this.props.btnCancelStyle}\n                      onClick={() => this.closeModal()}\n                    >\n                      <Translate\n                        id={this.props.btnCancelText}\n                        defaultMessage={this.props.btnCancelDefaultText}\n                      />\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className={this.props.btnSaveClassName}\n                      style={this.props.btnSaveStyle}\n                      disabled={this.props.btnSaveDisabled}\n                    >\n                      <Translate\n                        id={this.props.btnSaveText}\n                        defaultMessage={this.props.btnSaveDefaultText}\n                      />\n                    </button>\n                  </div>\n                </form>\n              )}\n            />\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalWrapper;\n\nModalWrapper.propTypes = {\n  /** Open button properties */\n  btnOpenText: PropTypes.string,\n  btnOpenDefaultText: PropTypes.string,\n  btnOpenClassName: PropTypes.string,\n  btnOpenStyle: PropTypes.shape({}),\n  btnOpenDisabled: PropTypes.bool,\n  btnOpenAsIcon: PropTypes.bool,\n  btnOpenIcon: PropTypes.string,\n\n  /** Modal title property */\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  defaultTitleMessage: PropTypes.string.isRequired,\n\n  /** Modal body container properties */\n  children: PropTypes.element,\n  bodyContainerClassName: PropTypes.string,\n  bodyContainerStyle: PropTypes.shape({}),\n\n  /** Button container properties */\n  btnContainerClassName: PropTypes.string,\n  btnContainerStyle: PropTypes.shape({}),\n  renderButton: PropTypes.func,\n\n  /** Wrapper properties */\n  wrapperClassName: PropTypes.string,\n\n  /** Save button properties */\n  btnSaveText: PropTypes.string,\n  btnSaveDefaultText: PropTypes.string,\n  btnSaveClassName: PropTypes.string,\n  btnSaveStyle: PropTypes.shape({}),\n  btnSaveDisabled: PropTypes.bool,\n\n  /** Cancel button properties */\n  btnCancelText: PropTypes.string,\n  btnCancelDefaultText: PropTypes.string,\n  btnCancelClassName: PropTypes.string,\n  btnCancelStyle: PropTypes.shape({}),\n\n  /** Functional properties */\n  onOpen: PropTypes.func,\n  onSave: PropTypes.func,\n  onClose: PropTypes.func,\n\n  /** Form elements */\n  validate: PropTypes.func,\n  renderBodyWithValues: PropTypes.func,\n  initialValues: PropTypes.oneOfType([\n    PropTypes.shape({}),\n    PropTypes.arrayOf(PropTypes.shape({})),\n  ]),\n  fields: PropTypes.shape({}),\n  formProps: PropTypes.shape({}),\n  showModal: PropTypes.bool,\n};\n\nModalWrapper.defaultProps = {\n  btnOpenText: \"react.default.button.open.label\",\n  btnOpenDefaultText: \"Open\",\n  btnOpenClassName: \"btn btn-outline-primary\",\n  btnOpenStyle: {},\n  btnOpenDisabled: false,\n  btnOpenAsIcon: false,\n  btnOpenIcon: \"\",\n\n  children: null,\n  bodyContainerClassName: \"modal-body-container\",\n  bodyContainerStyle: {},\n\n  btnContainerClassName: \"btn-group float-right\",\n  btnContainerStyle: {},\n\n  wrapperClassName: null,\n\n  btnSaveText: \"react.default.button.save.label\",\n  btnSaveDefaultText: \"Save\",\n  btnSaveClassName: \"btn btn-outline-success\",\n  btnSaveStyle: {},\n  btnSaveDisabled: false,\n\n  btnCancelText: \"react.default.button.cancel.label\",\n  btnCancelDefaultText: \"Cancel\",\n  btnCancelClassName: \"btn btn-outline-secondary\",\n  btnCancelStyle: {},\n\n  renderButton: undefined,\n\n  onOpen: () => null,\n  onSave: () => null,\n  onClose: () => null,\n\n  validate: () => null,\n  renderBodyWithValues: () => null,\n  initialValues: [],\n  fields: {},\n  formProps: {},\n  showModal: false,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst Textarea = ({\n  onChange,\n  className = \"\",\n  fieldRef,\n  isResizable,\n  ...props\n}) => {\n  const handleChange = (event) => {\n    const { value } = event.target;\n\n    if (onChange) {\n      onChange(value);\n    }\n  };\n\n  return (\n    <textarea\n      ref={fieldRef}\n      onKeyPress={(event) => {\n        if (event.which === 13 /* Enter */) {\n          event.preventDefault();\n        }\n      }}\n      className={`form-control form-control-xs ${className} resizable-${isResizable}`}\n      {...props}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default Textarea;\n\nTextarea.propTypes = {\n  onChange: PropTypes.func,\n  className: PropTypes.string,\n  fieldRef: PropTypes.func,\n  isResizable: PropTypes.bool,\n};\n\nTextarea.defaultProps = {\n  isResizable: true,\n  onChange: null,\n  className: \"\",\n  fieldRef: null,\n};\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Textarea from \"utils/Textarea\";\n\nconst TextareaField = (props) => {\n  const renderInput = (attributes) => <Textarea {...attributes} />;\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default TextareaField;\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Input from \"utils/Input\";\n\nconst TextField = (props) => {\n  const renderInput = ({ inputClassName, className, ...attributes }) => (\n    <Input\n      isFormElement\n      className={inputClassName || className}\n      {...attributes}\n    />\n  );\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default TextField;\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport CheckboxField from \"components/form-elements/CheckboxField\";\nimport ModalWrapper from \"components/form-elements/ModalWrapper\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TextareaField from \"components/form-elements/TextareaField\";\nimport TextField from \"components/form-elements/TextField\";\nimport apiClient from \"utils/apiClient\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nconst FIELDS = {\n  recipients: {\n    type: SelectField,\n    label: \"react.stockListManagement.recipients.label\",\n    defaultMessage: \"Recipients\",\n    attributes: {\n      required: true,\n      showValueTooltip: true,\n      multi: true,\n      className: \"multi-select\",\n      style: { paddingBottom: 5 },\n      valueKey: \"id\",\n      labelKey: \"name\",\n    },\n    getDynamicAttr: ({ users }) => ({\n      options: users,\n    }),\n  },\n  subject: {\n    type: TextField,\n    label: \"react.stockListManagement.subject.label\",\n    defaultMessage: \"Subject\",\n    attributes: {\n      required: true,\n    },\n  },\n  text: {\n    type: TextareaField,\n    label: \"react.stockListManagement.message.label\",\n    defaultMessage: \"Message\",\n    attributes: {\n      rows: 8,\n      required: true,\n    },\n  },\n  includePdf: {\n    type: CheckboxField,\n    label: \"react.stockListManagement.includePdf.label\",\n    defaultMessage: \"Include PDF document\",\n  },\n  includeXls: {\n    type: CheckboxField,\n    label: \"react.stockListManagement.includeXls.label\",\n    defaultMessage: \"Include XLS document\",\n  },\n};\n\nfunction validate(values) {\n  const errors = {};\n  if (_.isEmpty(values.recipients)) {\n    errors.recipients = \"react.default.error.requiredField.label\";\n  }\n  if (!values.subject) {\n    errors.subject = \"react.default.error.requiredField.label\";\n  }\n  if (!values.text) {\n    errors.text = \"react.default.error.requiredField.label\";\n  }\n  return errors;\n}\n\n/** Modal window where user can send email with updated stocklist */\n/* eslint no-param-reassign: \"error\" */\nclass EmailModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formValues: {},\n      showModal: false,\n    };\n\n    this.onOpen = this.onOpen.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onClose = this.onClose.bind(this);\n  }\n\n  /**\n   * Loads initial form values\n   * @public\n   */\n  onOpen() {\n    const { manager } = this.props;\n    this.setState({\n      formValues: {\n        subject: this.props.translate(\n          \"react.stockListManagement.emailSubject.label\",\n          \"STOCK LIST UPDATE\",\n        ),\n        text: this.props.translate(\n          \"react.stockListManagement.emailMessage.label\",\n          \"Please find attached a new\" +\n            \" version of your stock list reflecting recent updates. Please use this version for your next replenishment request.\",\n        ),\n        recipients: manager\n          ? [{ id: manager.id, email: manager.email, label: manager.name }]\n          : [],\n        includePdf: true,\n        includeXls: true,\n        showModal: true,\n      },\n    });\n  }\n\n  /**\n   * Sends all changes made by user in this modal to API and updates data.\n   * @param {object} values\n   * @public\n   */\n  onSave(values) {\n    this.props.showSpinner();\n\n    const url = `/api/stocklists/sendMail/${this.props.stocklistId}?includePdf=${this.state.formValues.includePdf}?includeXls=${this.state.formValues.includeXls}`;\n    const payload = {\n      ...values,\n      recipients: _.map(\n        _.filter(values.recipients, (val) => val.email),\n        (val) => val.email,\n      ),\n    };\n    const { manager } = this.props;\n\n    if (\n      !_.some(\n        values.recipients,\n        (recipient) => recipient.email === manager.email,\n      )\n    ) {\n      this.props.hideSpinner();\n      Alert.error(\n        this.props.translate(\n          \"react.stockListManagement.alert.noManagerSelected.label\",\n          \"Please add a manager as a recipient and resend.\",\n        ),\n        { timeout: 1000 },\n      );\n      this.setState({ showModal: true });\n    } else {\n      apiClient\n        .post(url, payload)\n        .then(() => {\n          this.props.hideSpinner();\n          this.setState({ showModal: false });\n          Alert.success(\n            this.props.translate(\n              \"react.stockListManagement.alert.emailSend.label\",\n              \"Email sent successfully\",\n            ),\n            { timeout: 1000 },\n          );\n        })\n        .catch(() => this.props.hideSpinner());\n    }\n  }\n\n  /**\n   * Changes value of showModal to false to close modal\n   * @public\n   */\n  onClose() {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    return (\n      <ModalWrapper\n        title=\"react.stockListManagement.sendMailModalTitle.label\"\n        btnOpenText=\"react.default.button.email.label\"\n        btnOpenDefaultText=\"Email\"\n        btnSaveText=\"react.default.button.send.label\"\n        btnSaveDefaultText=\"Send\"\n        btnOpenClassName=\"btn btn-outline-secondary btn-xs mr-1\"\n        onOpen={this.onOpen}\n        onSave={this.onSave}\n        onClose={this.onClose}\n        fields={FIELDS}\n        initialValues={this.state.formValues}\n        formProps={{ users: this.props.users }}\n        validate={validate}\n        showModal={this.state.showModal}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps, { showSpinner, hideSpinner })(\n  EmailModal,\n);\n\nEmailModal.propTypes = {\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  /** Id of stocklist */\n  stocklistId: PropTypes.string.isRequired,\n  /** Array of available users  */\n  users: PropTypes.arrayOf(PropTypes.shape({})),\n  manager: PropTypes.shape({}),\n  /** Function used to translate static messages */\n  translate: PropTypes.func.isRequired,\n};\n\nEmailModal.defaultProps = {\n  users: [],\n  manager: null,\n};\n","import React, { Component } from \"react\";\n\nimport update from \"immutability-helper\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\nimport ReactTable from \"react-table\";\nimport { Tooltip } from \"react-tippy\";\n\nimport { fetchTranslations, hideSpinner, showSpinner } from \"actions\";\nimport EmailModal from \"components/stock-list-management/EmailModal\";\nimport {\n  INVENTORY_ITEM_URL,\n  REQUISITION_TEMPLATE_URL,\n  STOCKLIST_URL,\n} from \"consts/applicationUrls\";\nimport apiClient, { flattenRequest, parseResponse } from \"utils/apiClient\";\nimport Input from \"utils/Input\";\nimport Select from \"utils/Select\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-table/react-table.css\";\n\nclass StocklistManagement extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      selectedStocklist: null,\n      availableStocklists: [],\n      productInfo: null,\n      users: [],\n      isDataLoading: true,\n      usersFetched: false,\n      stocklistsFetched: false,\n    };\n\n    this.addItem = this.addItem.bind(this);\n    this.editItem = this.editItem.bind(this);\n    this.updateItemField = this.updateItemField.bind(this);\n    this.saveItem = this.saveItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTranslations(\"\", \"stockListManagement\");\n\n    if (this.props.stockListManagementTranslationsFetched) {\n      this.dataFetched = true;\n\n      this.fetchData();\n      this.fetchAvailableStocklists();\n      this.fetchProductInfo();\n      this.fetchUsers();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.locale && this.props.locale !== nextProps.locale) {\n      this.props.fetchTranslations(nextProps.locale, \"stockListManagement\");\n    }\n\n    if (nextProps.stockListManagementTranslationsFetched && !this.dataFetched) {\n      this.dataFetched = true;\n\n      this.fetchData();\n      this.fetchAvailableStocklists();\n      this.fetchProductInfo();\n      this.fetchUsers();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (!prevState.usersFetched || !prevState.stocklistsFetched) &&\n      this.state.usersFetched &&\n      this.state.stocklistsFetched\n    ) {\n      this.props.hideSpinner();\n    }\n  }\n\n  dataFetched = false;\n\n  fetchUsers() {\n    this.props.showSpinner();\n    const url = \"/api/persons\";\n\n    apiClient\n      .get(url, { params: { status: true } })\n      .then((response) => {\n        this.setState({ users: response.data.data, usersFetched: true });\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  fetchData() {\n    this.props.showSpinner();\n    const url = `/api/stocklistItems?product.id=${this.props.match.params.productId || \"\"}`;\n\n    apiClient\n      .get(url)\n      .then((response) => {\n        this.setState({\n          data: parseResponse(response.data.data),\n          isDataLoading: false,\n        });\n      })\n      .catch(this.props.hideSpinner());\n  }\n\n  fetchAvailableStocklists() {\n    this.props.showSpinner();\n    const url = \"/api/stocklistItems/availableStocklists\";\n\n    apiClient\n      .get(url)\n      .then((response) => {\n        this.setState({\n          availableStocklists: parseResponse(response.data.data),\n          stocklistsFetched: true,\n        });\n      })\n      .catch(this.props.hideSpinner());\n  }\n\n  fetchProductInfo() {\n    this.props.showSpinner();\n    const url = `/api/products/${this.props.match.params.productId}/withCatalogs`;\n\n    apiClient\n      .get(url)\n      .then((response) => {\n        this.setState({ productInfo: response.data.data });\n      })\n      .catch(this.props.hideSpinner());\n  }\n\n  addItem(stocklist) {\n    this.setState((prev) => ({\n      selectedStocklist: null,\n      data: update(prev.data, {\n        $push: [\n          {\n            stocklistId: stocklist.id,\n            name: stocklist.name,\n            location: {\n              id: stocklist.location.id,\n              name: stocklist.location.name,\n            },\n            locationGroup: {\n              id: stocklist.locationGroup.id,\n              name: stocklist.locationGroup.name,\n            },\n            manager: {\n              id: stocklist.manager.id,\n              name: stocklist.manager.name,\n            },\n            replenishmentPeriod: stocklist.replenishmentPeriod,\n            maxQuantity: null,\n            new: true,\n          },\n        ],\n      }),\n    }));\n  }\n\n  editItem(index) {\n    this.setState((prev) => ({\n      data: update(prev.data, {\n        [index]: {\n          edit: { $set: true },\n        },\n      }),\n    }));\n  }\n\n  updateItemField(index, itemField, fieldValue) {\n    this.setState((prev) => ({\n      data: update(prev.data, {\n        [index]: {\n          [itemField]: { $set: fieldValue },\n        },\n      }),\n    }));\n  }\n\n  saveItem(index, item) {\n    let url = `/api/stocklistItems?product.id=${this.props.match.params.productId || \"\"}`;\n\n    if (!item.new) {\n      url = `/api/stocklistItems/${item.id}`;\n    }\n\n    apiClient\n      .post(url, flattenRequest(item))\n      .then((response) => {\n        this.setState((prev) => ({\n          data: update(prev.data, {\n            [index]: {\n              $set: parseResponse(response.data.data),\n            },\n          }),\n        }));\n      })\n      .catch(this.props.hideSpinner());\n  }\n\n  deleteItem(index) {\n    const item = this.state.data[index];\n\n    if (item.new) {\n      this.removeItem(index);\n    } else {\n      this.props.showSpinner();\n      const url = `/api/stocklistItems/${item.id}`;\n\n      apiClient\n        .delete(url)\n        .then(() => {\n          this.removeItem(index);\n        })\n        .catch(this.props.hideSpinner());\n    }\n  }\n\n  removeItem(index) {\n    this.setState((prev) => ({\n      data: update(prev.data, {\n        $splice: [[index, 1]],\n      }),\n    }));\n  }\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div className=\"main-container\">\n        {this.state.productInfo && (\n          <div className=\"mb-2\">\n            <div className=\"d-flex flex-row justify-content-between\">\n              <div className=\"d-flex flex-row align-items-end\">\n                <h6 className=\"mb-0 mr-1\">\n                  {this.state.productInfo.productCode}\n                </h6>\n                <h5 className=\"mb-0\">{this.state.productInfo.name}</h5>\n              </div>\n              <div className=\"align-self-center\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-primary btn-xs\"\n                  onClick={() => {\n                    window.location = INVENTORY_ITEM_URL.showStockCard(\n                      this.state.productInfo.id,\n                    );\n                  }}\n                >\n                  <Translate\n                    id=\"react.stockListManagement.returnStockCard.label\"\n                    defaultMessage=\"Return to stock card\"\n                  />\n                </button>\n              </div>\n            </div>\n            <div className=\"d-flex flex-row\">\n              {_.map(this.state.productInfo.catalogs, (catalog) => (\n                <div key={catalog.id} className=\"stocklist-category px-1 mr-1\">\n                  {catalog.name}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        <ReactTable\n          data={data}\n          pivotBy={[\"locationGroup.name\", \"location.name\"]}\n          showPagination={false}\n          minRows={0}\n          sortable={false}\n          noDataText={this.state.isDataLoading ? \"Loading...\" : \"No rows found\"}\n          style={{\n            maxHeight:\n              this.state.productInfo &&\n              _.some(\n                this.state.productInfo.catalogs,\n                (catalog) => !_.isEmpty(catalog),\n              )\n                ? \"calc(100vh - 275px)\"\n                : \"calc(100vh - 250px)\",\n          }}\n          collapseOnDataChange={false}\n          defaultSorted={[\n            {\n              id: \"locationGroup.name\",\n            },\n          ]}\n          resolveData={(values) =>\n            values.map((row) => {\n              if (!_.get(row, \"locationGroup.name\")) {\n                return { ...row, locationGroup: { name: \"No location group\" } };\n              }\n\n              return row;\n            })\n          }\n          columns={[\n            {\n              Header: (\n                <Tooltip\n                  title={this.props.translate(\n                    \"react.stockListManagement.locationGroup.label\",\n                    \"Location Group Name\",\n                  )}\n                  theme=\"transparent\"\n                  delay=\"150\"\n                  duration=\"250\"\n                  hideDelay=\"50\"\n                >\n                  <Translate\n                    id=\"react.stockListManagement.locationGroup.label\"\n                    defaultMessage=\"Location Group Name\"\n                  />\n                </Tooltip>\n              ),\n              accessor: \"locationGroup.name\",\n              className: \"w-space-normal\",\n            },\n            {\n              Header: (\n                <Tooltip\n                  title={this.props.translate(\n                    \"react.stockListManagement.locationName.label\",\n                    \"Location Name\",\n                  )}\n                  theme=\"transparent\"\n                  delay=\"150\"\n                  duration=\"250\"\n                  hideDelay=\"50\"\n                >\n                  <Translate\n                    id=\"react.stockListManagement.locationName.label\"\n                    defaultMessage=\"Location Name\"\n                  />\n                </Tooltip>\n              ),\n              accessor: \"location.name\",\n              aggregate: () => \"\",\n              className: \"w-space-normal\",\n            },\n            {\n              Header: (\n                <Tooltip\n                  title={this.props.translate(\n                    \"react.stockListManagement.stockListName.label\",\n                    \"Stocklist Name\",\n                  )}\n                  theme=\"transparent\"\n                  delay=\"150\"\n                  duration=\"250\"\n                  hideDelay=\"50\"\n                >\n                  <Translate\n                    id=\"react.stockListManagement.stockListName.label\"\n                    defaultMessage=\"Stocklist Name\"\n                  />\n                </Tooltip>\n              ),\n              accessor: \"name\",\n              aggregate: () => \"\",\n              // eslint-disable-next-line react/prop-types\n              Cell: ({ aggregated, original }) => {\n                if (aggregated) {\n                  return \"\";\n                }\n\n                return (\n                  <a href={REQUISITION_TEMPLATE_URL.show(original.stocklistId)}>\n                    <Tooltip\n                      title={original.name}\n                      theme=\"transparent\"\n                      delay=\"150\"\n                      duration=\"250\"\n                      hideDelay=\"50\"\n                    >\n                      {original.name}\n                    </Tooltip>\n                  </a>\n                );\n              },\n            },\n            {\n              Header: (\n                <Tooltip\n                  title={this.props.translate(\n                    \"react.stockListManagement.monthlyStockListQty.label\",\n                    \"Monthly Stocklist Qty\",\n                  )}\n                  theme=\"transparent\"\n                  delay=\"150\"\n                  duration=\"250\"\n                  hideDelay=\"50\"\n                >\n                  <Translate\n                    id=\"react.stockListManagement.monthlyStockListQty.label\"\n                    defaultMessage=\"Monthly Stocklist Qty\"\n                  />\n                </Tooltip>\n              ),\n              accessor: \"monthlyDemand\",\n              aggregate: (vals) => _.sum(vals),\n              className: \"text-center\",\n              Cell: ({ aggregated, original }) => {\n                if (aggregated) {\n                  return \"\";\n                }\n\n                return (\n                  <Tooltip\n                    title={original.monthlyDemand}\n                    theme=\"transparent\"\n                    delay=\"150\"\n                    duration=\"250\"\n                    hideDelay=\"50\"\n                  >\n                    {original.monthlyDemand}\n                  </Tooltip>\n                );\n              },\n            },\n            {\n              Header: (\n                <Tooltip\n                  title={this.props.translate(\n                    \"react.stockListManagement.manager.label\",\n                    \"Manager\",\n                  )}\n                  theme=\"transparent\"\n                  delay=\"150\"\n                  duration=\"250\"\n                  hideDelay=\"50\"\n                >\n                  <Translate\n                    id=\"react.stockListManagement.manager.label\"\n                    defaultMessage=\"Manager\"\n                  />\n                </Tooltip>\n              ),\n              accessor: \"manager.name\",\n              aggregate: () => \"\",\n              Cell: ({ aggregated, original }) => {\n                if (aggregated) {\n                  return \"\";\n                }\n\n                return (\n                  <Tooltip\n                    title={original.manager.name}\n                    theme=\"transparent\"\n                    delay=\"150\"\n                    duration=\"250\"\n                    hideDelay=\"50\"\n                  >\n                    {original.manager.name}\n                  </Tooltip>\n                );\n              },\n            },\n            {\n              Header: (\n                <Tooltip\n                  title={this.props.translate(\n                    \"react.stockListManagement.replenishmentPeriod.label\",\n                    \"Replenishment period\",\n                  )}\n                  theme=\"transparent\"\n                  delay=\"150\"\n                  duration=\"250\"\n                  hideDelay=\"50\"\n                >\n                  <Translate\n                    id=\"react.stockListManagement.replenishmentPeriod.label\"\n                    defaultMessage=\"Replenishment period\"\n                  />\n                </Tooltip>\n              ),\n              accessor: \"replenishmentPeriod\",\n              aggregate: () => \"\",\n              className: \"text-center\",\n              Cell: ({ aggregated, original }) => {\n                if (aggregated) {\n                  return \"\";\n                }\n\n                return (\n                  <Tooltip\n                    title={original.replenishmentPeriod}\n                    theme=\"transparent\"\n                    delay=\"150\"\n                    duration=\"250\"\n                    hideDelay=\"50\"\n                  >\n                    {original.replenishmentPeriod}\n                  </Tooltip>\n                );\n              },\n            },\n            {\n              Header: (\n                <Tooltip\n                  title={this.props.translate(\n                    \"react.stockListManagement.replenishmentQty.label\",\n                    \"Replenishment Qty\",\n                  )}\n                  theme=\"transparent\"\n                  delay=\"150\"\n                  duration=\"250\"\n                  hideDelay=\"50\"\n                >\n                  <Translate\n                    id=\"react.stockListManagement.replenishmentQty.label\"\n                    defaultMessage=\"Replenishment Qty\"\n                  />\n                </Tooltip>\n              ),\n              accessor: \"maxQuantity\",\n              aggregate: (vals) => _.sum(vals),\n              className: \"text-center\",\n              // eslint-disable-next-line react/prop-types\n              Cell: ({ aggregated, index, original }) => {\n                if (aggregated) {\n                  return \"\";\n                }\n\n                if (!original.new && !original.edit) {\n                  return _.isNil(original.maxQuantity)\n                    ? \"\"\n                    : original.maxQuantity;\n                }\n\n                return (\n                  <div\n                    className={\n                      _.isNil(original.maxQuantity) ||\n                      original.maxQuantity === \"\"\n                        ? \"has-error\"\n                        : \"\"\n                    }\n                  >\n                    <Tooltip\n                      title={original.maxQuantity}\n                      theme=\"transparent\"\n                      delay=\"150\"\n                      duration=\"250\"\n                      hideDelay=\"50\"\n                    >\n                      <Input\n                        value={original.maxQuantity || \"\"}\n                        onChange={(value) =>\n                          this.updateItemField(index, \"maxQuantity\", value)\n                        }\n                      />\n                    </Tooltip>\n                  </div>\n                );\n              },\n            },\n            {\n              Header: (\n                <Tooltip\n                  title={this.props.translate(\n                    \"react.stockListManagement.uom.label\",\n                    \"Unit of measure\",\n                  )}\n                  theme=\"transparent\"\n                  delay=\"150\"\n                  duration=\"250\"\n                  hideDelay=\"50\"\n                >\n                  <Translate\n                    id=\"react.stockListManagement.uom.label\"\n                    defaultMessage=\"Unit of measure\"\n                  />\n                </Tooltip>\n              ),\n              accessor: \"uom\",\n              aggregate: () => \"\",\n              className: \"text-center\",\n              Cell: ({ aggregated, original }) => {\n                if (aggregated) {\n                  return \"\";\n                }\n\n                return (\n                  <Tooltip\n                    title={original.uom}\n                    theme=\"transparent\"\n                    delay=\"150\"\n                    duration=\"250\"\n                    hideDelay=\"50\"\n                  >\n                    {original.uom}\n                  </Tooltip>\n                );\n              },\n            },\n            {\n              Header: (\n                <Tooltip\n                  title={this.props.translate(\n                    \"react.stockListManagement.actions.label\",\n                    \"Actions\",\n                  )}\n                  theme=\"transparent\"\n                  delay=\"150\"\n                  duration=\"250\"\n                  hideDelay=\"50\"\n                >\n                  <Translate\n                    id=\"react.stockListManagement.actions.label\"\n                    defaultMessage=\"Actions\"\n                  />\n                </Tooltip>\n              ),\n              accessor: \"edit\",\n              minWidth: 230,\n              className: \"text-center\",\n              aggregate: () => \"\",\n              // eslint-disable-next-line react/prop-types\n              Cell: ({ aggregated, index, original }) => {\n                if (aggregated) {\n                  return \"\";\n                }\n\n                return (\n                  <div className=\"d-flex flex-wrap\">\n                    {this.props.isUserAdmin ? (\n                      <div>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-outline-primary btn-xs mr-1\"\n                          disabled={\n                            original.edit ||\n                            original.new ||\n                            !this.props.isUserAdmin\n                          }\n                          onClick={() => this.editItem(index)}\n                        >\n                          <Translate\n                            id=\"react.default.button.edit.label\"\n                            defaultMessage=\"Edit\"\n                          />\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-outline-primary btn-xs mr-1\"\n                          disabled={\n                            (!original.edit && !original.new) ||\n                            !original.stocklistId ||\n                            _.isNil(original.maxQuantity) ||\n                            original.maxQuantity === \"\" ||\n                            !this.props.isUserAdmin\n                          }\n                          onClick={() => this.saveItem(index, original)}\n                        >\n                          <Translate\n                            id=\"react.default.button.save.label\"\n                            defaultMessage=\"Save\"\n                          />\n                        </button>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-outline-danger btn-xs mr-1\"\n                          disabled={!this.props.isUserAdmin}\n                          onClick={() => this.deleteItem(index)}\n                        >\n                          <Translate\n                            id=\"react.default.button.delete.label\"\n                            defaultMessage=\"Delete\"\n                          />\n                        </button>\n                      </div>\n                    ) : null}\n                    <a\n                      className=\"btn btn-outline-secondary btn-xs mr-1\"\n                      disabled={original.edit || original.new}\n                      href={STOCKLIST_URL.pdf(original.stocklistId)}\n                    >\n                      <Translate\n                        id=\"react.default.button.printPdf.label\"\n                        defaultMessage=\"Print PDF\"\n                      />\n                    </a>\n                    <a\n                      className=\"btn btn-outline-secondary btn-xs mr-1\"\n                      disabled={original.edit || original.new}\n                      href={STOCKLIST_URL.csv(original.stocklistId)}\n                    >\n                      <Translate\n                        id=\"react.default.button.printXls.label\"\n                        defaultMessage=\"Print XLS\"\n                      />\n                    </a>\n                    {original.manager ? (\n                      <EmailModal\n                        stocklistId={original.stocklistId}\n                        users={this.state.users}\n                        manager={original.manager}\n                      />\n                    ) : (\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-outline-secondary btn-xs mr-1\"\n                        onClick={() =>\n                          Alert.error(\n                            this.props.translate(\n                              \"react.stockListManagement.alert.noManagerAssociated.label\",\n                              \"There is no manager associated with this stock list. Please add a manager and try again.\",\n                            ),\n                          )\n                        }\n                      >\n                        <Translate\n                          id=\"react.default.button.email.label\"\n                          defaultMessage=\"Email\"\n                        />\n                      </button>\n                    )}\n                  </div>\n                );\n              },\n            },\n          ]}\n        />\n        {this.props.isUserAdmin ? (\n          <div className=\"d-flex flex-row my-1\">\n            <Select\n              value={this.state.selectedStocklist}\n              onChange={(value) => this.setState({ selectedStocklist: value })}\n              options={this.state.availableStocklists}\n              valueKey=\"id\"\n              labelKey=\"name\"\n              className=\"select-xs stocklist-select\"\n            />\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-success btn-xs ml-1\"\n              disabled={!this.state.selectedStocklist}\n              onClick={() => {\n                this.addItem(this.state.selectedStocklist);\n              }}\n            >\n              <Translate\n                id=\"react.stockListManagement.addStockList.label\"\n                defaultMessage=\"Add stocklist\"\n              />\n            </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  locale: state.session.activeLanguage,\n  stockListManagementTranslationsFetched:\n    state.session.fetchedTranslations.stockListManagement,\n  isUserAdmin: state.session.isUserAdmin,\n});\n\nexport default connect(mapStateToProps, {\n  showSpinner,\n  hideSpinner,\n  fetchTranslations,\n})(StocklistManagement);\n\nStocklistManagement.propTypes = {\n  /** React router's object which contains information about url varaiables and params */\n  match: PropTypes.shape({\n    params: PropTypes.shape({ productId: PropTypes.string }),\n  }).isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  locale: PropTypes.string.isRequired,\n  stockListManagementTranslationsFetched: PropTypes.bool.isRequired,\n  fetchTranslations: PropTypes.func.isRequired,\n  isUserAdmin: PropTypes.bool.isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Translate from \"utils/Translate\";\n\nconst Checkbox = ({\n  value,\n  indeterminate,\n  custom,\n  fieldRef,\n  withLabel,\n  label,\n  defaultMessage,\n  ...props\n}) => {\n  const onChange = (event) => {\n    const { checked } = event.target;\n\n    if (props.onChange) {\n      props.onChange(checked);\n    }\n  };\n\n  if (custom) {\n    return (\n      <div data-testid=\"custom-checkbox\" className=\"custom-checkbox\">\n        <label htmlFor={props.id}>\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            ref={fieldRef}\n            checked={value}\n            {...props}\n            onChange={onChange}\n          />\n        </label>\n      </div>\n    );\n  }\n\n  if (withLabel) {\n    return (\n      <div\n        data-testid=\"with-label-checkbox\"\n        className=\"d-flex align-items-center\"\n      >\n        <input\n          type=\"checkbox\"\n          ref={(elem) => {\n            if (elem) {\n              // eslint-disable-next-line no-param-reassign\n              elem.indeterminate = indeterminate;\n            }\n            if (fieldRef) {\n              fieldRef(elem);\n            }\n          }}\n          checked={value}\n          {...props}\n          onChange={onChange}\n        />\n        <label htmlFor={props.id} style={{ margin: \"0 0 0 5px\" }}>\n          <Translate id={label} defaultMessage={defaultMessage || label} />\n        </label>\n      </div>\n    );\n  }\n\n  return (\n    <input\n      data-testid=\"checkbox\"\n      type=\"checkbox\"\n      ref={(elem) => {\n        if (elem) {\n          // eslint-disable-next-line no-param-reassign\n          elem.indeterminate = indeterminate;\n        }\n        if (fieldRef) {\n          fieldRef(elem);\n        }\n      }}\n      checked={value}\n      {...props}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Checkbox;\n\nCheckbox.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  custom: PropTypes.bool,\n  id: PropTypes.string,\n  fieldRef: PropTypes.func,\n  withLabel: PropTypes.bool,\n  label: PropTypes.string,\n  defaultMessage: PropTypes.string,\n};\n\nCheckbox.defaultProps = {\n  onChange: null,\n  value: null,\n  indeterminate: false,\n  custom: false,\n  id: \"\",\n  fieldRef: undefined,\n  withLabel: false,\n  label: \"\",\n  defaultMessage: \"\",\n};\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Checkbox from \"utils/Checkbox\";\n\nconst CheckboxField = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const renderInput = ({ value, ...attributes }) => (\n    <Checkbox {...attributes} value={value || false} />\n  );\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default CheckboxField;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","copyField","oldFields","oldKey","newFields","newKey","name","change","blur","focus","lastFieldState","undefined","escapeRegexTokens","string","replace","insert","_ref","state","_ref2","index","value","changeValue","array","copy","concat","splice","pattern","RegExp","keys","fields","forEach","tokens","exec","fieldIndex","Number","incrementedKey","remove","returnValue","getIn","setIn","path","submitErrors","Array","isArray","decrementedKey","move","from","to","lowest","highest","increment","_newKey","pop","tools","formState","values","push","removeBatch","indexes","sortedIndexes","sort","map","_i","indexOfFieldIndex","list","first","last","middle","Math","floor","binarySearch","shift","swap","indexA","indexB","a","aPrefix","bPrefix","substring","suffix","_suffix","unshift","update","props","React","BaseField","renderInput","className","attributes","_objectWithoutProperties","_excluded","Select","id","classNamePrefix","ModalWrapper","_Component","_this","_classCallCheck","_callSuper","showModal","openModal","bind","closeModal","save","_inherits","onOpen","setState","onClose","onSave","_this2","Title","title","defaultTitleMessage","wrapperClassName","renderButton","type","btnOpenClassName","style","btnOpenStyle","disabled","btnOpenDisabled","onClick","btnOpenIcon","btnOpenText","btnOpenAsIcon","Translate","defaultMessage","btnOpenDefaultText","Modal","isOpen","onRequestClose","shouldCloseOnOverlayClick","bodyContainerClassName","bodyContainerStyle","Form","onSubmit","initialValues","validate","mutators","_objectSpread","arrayMutators","render","handleSubmit","children","renderBodyWithValues","_","fieldConfig","fieldName","renderFormField","formProps","btnContainerClassName","role","btnContainerStyle","btnCancelClassName","btnCancelStyle","btnCancelText","btnCancelDefaultText","btnSaveClassName","btnSaveStyle","btnSaveDisabled","btnSaveText","btnSaveDefaultText","Component","propTypes","PropTypes","isRequired","defaultProps","Textarea","onChange","_ref$className","fieldRef","isResizable","ref","onKeyPress","event","which","preventDefault","inputClassName","Input","isFormElement","FIELDS","recipients","SelectField","label","required","showValueTooltip","multi","paddingBottom","valueKey","labelKey","getDynamicAttr","options","users","subject","TextField","text","TextareaField","rows","includePdf","CheckboxField","includeXls","errors","EmailModal","formValues","manager","translate","email","showSpinner","url","stocklistId","payload","val","recipient","apiClient","post","then","hideSpinner","Alert","timeout","connect","translateWithDefaultMessage","getTranslate","localize","StocklistManagement","_defineProperty","data","selectedStocklist","availableStocklists","productInfo","isDataLoading","usersFetched","stocklistsFetched","addItem","editItem","updateItemField","saveItem","deleteItem","fetchTranslations","stockListManagementTranslationsFetched","dataFetched","fetchData","fetchAvailableStocklists","fetchProductInfo","fetchUsers","nextProps","locale","prevProps","prevState","get","params","status","response","_this3","match","productId","parseResponse","_this4","_this5","stocklist","prev","$push","location","locationGroup","replenishmentPeriod","maxQuantity","new","edit","$set","itemField","fieldValue","item","_this6","flattenRequest","_this7","removeItem","$splice","_this8","productCode","window","INVENTORY_ITEM_URL","showStockCard","catalogs","catalog","ReactTable","pivotBy","showPagination","minRows","sortable","noDataText","maxHeight","collapseOnDataChange","defaultSorted","resolveData","row","columns","Header","Tooltip","theme","delay","duration","hideDelay","accessor","aggregate","Cell","aggregated","original","href","REQUISITION_TEMPLATE_URL","show","vals","monthlyDemand","_ref3","_ref4","_ref5","_ref6","uom","minWidth","_ref7","isUserAdmin","STOCKLIST_URL","pdf","csv","session","activeLanguage","fetchedTranslations","stockListManagement","Checkbox","indeterminate","custom","withLabel","checked","htmlFor","elem","margin"],"sourceRoot":""}