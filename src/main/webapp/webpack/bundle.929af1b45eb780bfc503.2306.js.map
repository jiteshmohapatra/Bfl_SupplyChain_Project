{"version":3,"file":"bundle.929af1b45eb780bfc503.2306.js","mappings":"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","sources":["webpack://openboxes/./src/js/utils/AlertMessage.jsx","webpack://openboxes/./src/js/components/form-elements/v2/FileSelect.jsx","webpack://openboxes/./src/js/components/locations-configuration/ImportLocations.jsx"],"sourcesContent":["import React, { useMemo } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst AlertMessage = ({ show, message, danger, close, className }) => {\n  const getMessageElement = useMemo(() => {\n    const alertMessages =\n      typeof message !== \"string\" && Array.isArray(message)\n        ? message\n        : [message];\n    return alertMessages.map((msg) => (\n      <div>\n        <i\n          className={`fa ${danger ? \"fa-times-circle\" : \"fa-exclamation-circle\"} pr-2`}\n        />\n        {msg}\n      </div>\n    ));\n  }, [message]);\n\n  if (show) {\n    return (\n      <div\n        data-testid=\"alert-message\"\n        className={`${className} alert ${danger ? \"alert-danger\" : \"alert-warning\"}`}\n        style={{\n          cursor: close ? \"pointer\" : \"default\",\n          whiteSpace: \"pre-line\",\n        }}\n        role=\"presentation\"\n        onClick={() => close()}\n      >\n        {getMessageElement}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default AlertMessage;\n\nAlertMessage.propTypes = {\n  className: PropTypes.string,\n  close: PropTypes.func,\n  danger: PropTypes.bool,\n  message: PropTypes.string,\n  show: PropTypes.bool,\n};\n\nAlertMessage.defaultProps = {\n  className: \"\",\n  close: () => null,\n  danger: false,\n  message: \"\",\n  show: false,\n};\n","import React, { useCallback } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport Button from \"components/form-elements/Button\";\nimport useTranslate from \"hooks/useTranslate\";\n\nimport \"./style.scss\";\n\nconst FileSelect = ({\n  height,\n  width,\n  minHeight,\n  dropzoneText,\n  buttonLabel,\n  buttonVariant,\n  className,\n  multiple,\n  maxFiles,\n  allowedExtensions,\n  ...fieldProps\n}) => {\n  const onDrop = useCallback((acceptedFiles) => {\n    fieldProps.onChange?.(multiple ? acceptedFiles : acceptedFiles[0]);\n  }, []);\n\n  const translate = useTranslate();\n\n  const getFileExtension = (file) => file.path.split(\".\")?.[1];\n\n  const validateFileType = (file) => {\n    if (\n      !allowedExtensions.length ||\n      allowedExtensions.includes(getFileExtension(file))\n    ) {\n      return null;\n    }\n\n    return {\n      code: \"invalid-extension\",\n      message: translate(\n        \"react.default.error.invalidFileExtension.label\",\n        `File extension should be one of: ${allowedExtensions.join(\", \")}`,\n        [allowedExtensions.join(\", \")],\n      ),\n    };\n  };\n\n  const { getRootProps, getInputProps, open, acceptedFiles, fileRejections } =\n    useDropzone({\n      onDrop,\n      noClick: true,\n      noKeyboard: true,\n      validator: validateFileType,\n      multiple,\n      maxFiles,\n    });\n\n  const mapFiles = (files) =>\n    files.map((file) => {\n      const data = file?.path ? file : file.file;\n      return (\n        <li key={data.path}>\n          {data.path} ({data.size} bytes)\n          {file?.errors?.length ? (\n            <ul>\n              {file.errors.map((e) => (\n                <li key={e.code}>{e.message}</li>\n              ))}\n            </ul>\n          ) : null}\n        </li>\n      );\n    });\n\n  return (\n    <div style={{ width, height, minHeight }}>\n      <div\n        {...getRootProps({\n          className: `dropzone d-flex flex-column justify-content-center align-items-center p-3 bg-light ${className}`,\n        })}\n        {...fieldProps}\n      >\n        <input {...getInputProps()} />\n        <h5 className=\"text-secondary font-italic\">\n          {translate(dropzoneText.id, dropzoneText.defaultMessage)}\n        </h5>\n        <Button\n          className=\"mt-3\"\n          onClick={open}\n          variant={buttonVariant}\n          defaultLabel={buttonLabel.defaultMessage}\n          label={buttonLabel.id}\n        />\n      </div>\n      {acceptedFiles.length ? (\n        <aside>\n          <h6 className=\"text-success\">\n            {translate(\"react.default.acceptedFiles.label\", \"Accepted Files\")}:\n          </h6>\n          <ul>{mapFiles(acceptedFiles)}</ul>\n        </aside>\n      ) : null}\n      {fileRejections.length ? (\n        <aside>\n          <h6 className=\"text-danger\">\n            {translate(\"react.default.rejectedFiles.label\", \"Rejected Files\")}:\n          </h6>\n          <ul>{mapFiles(fileRejections)}</ul>\n        </aside>\n      ) : null}\n    </div>\n  );\n};\n\nexport default FileSelect;\n\nFileSelect.propTypes = {\n  // Text displayed on the dropzone\n  dropzoneText: PropTypes.shape({\n    id: PropTypes.string,\n    defaultMessage: PropTypes.string,\n  }),\n  // Label displayed on the button for uploading files\n  buttonLabel: PropTypes.shape({\n    id: PropTypes.string,\n    defaultMessage: PropTypes.string,\n  }),\n  buttonVariant: PropTypes.string,\n  // width of the dropzone\n  width: PropTypes.string,\n  // height of the dropzone\n  height: PropTypes.string,\n  minHeight: PropTypes.string,\n  // classname applied to the dropzone\n  className: PropTypes.string,\n  // indicator whether we can upload multiple files\n  multiple: PropTypes.bool,\n  // maximal count of files to upload (disabled when set to null)\n  maxFiles: PropTypes.number,\n  // allowed extensions for importing (disabled when set to empty array)\n  allowedExtensions: PropTypes.arrayOf(PropTypes.string),\n};\n\nFileSelect.defaultProps = {\n  dropzoneText: {\n    id: \"react.default.dragDropHere.label\",\n    defaultMessage: \"Drag and drop file here.\",\n  },\n  buttonLabel: {\n    id: \"react.default.fileDialog.label\",\n    defaultMessage: \"OPEN FILE DIALOG\",\n  },\n  buttonVariant: \"grayed\",\n  width: \"auto\",\n  height: \"auto\",\n  minHeight: \"200px\",\n  className: \"\",\n  multiple: false,\n  maxFiles: null,\n  allowedExtensions: [],\n};\n","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\nimport fileDownload from \"js-file-download\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport { LOCATION_IMPORT, LOCATION_TEMPLATE, SUPPORT_LINKS } from \"api/urls\";\nimport FileSelect from \"components/form-elements/v2/FileSelect\";\nimport {\n  DASHBOARD_URL,\n  LOCATION_URL,\n  PRODUCT_CONFIGURATION_URL,\n} from \"consts/applicationUrls\";\nimport AlertMessage from \"utils/AlertMessage\";\nimport { handleError, handleSuccess } from \"utils/apiClient\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nconst apiClient = axios.create({});\n\nclass ImportLocations extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      file: null,\n      alertMessage: \"\",\n      showAlert: false,\n      showSuccessMessage: false,\n      supportLinks: {},\n    };\n\n    this.onDrop = this.onDrop.bind(this);\n    this.handleValidationErrors = this.handleValidationErrors.bind(this);\n    this.getSupportLinks = this.getSupportLinks.bind(this);\n\n    apiClient.interceptors.response.use(\n      handleSuccess,\n      this.handleValidationErrors,\n    );\n  }\n\n  componentDidMount() {\n    this.getSupportLinks();\n  }\n\n  onDrop(file) {\n    this.setState({ file });\n  }\n\n  getSupportLinks() {\n    apiClient.get(SUPPORT_LINKS).then((response) => {\n      const supportLinks = response.data.data;\n      this.setState({ supportLinks });\n    });\n  }\n\n  handleValidationErrors(error) {\n    if (error.response.status === 400) {\n      const errorMessage = _.get(error, \"response.data.errorMessage\", \"\").split(\n        \"\\n\",\n      );\n      const errorMessages = _.get(error, \"response.data.errorMessages\", \"\");\n      const alertMessage = `${errorMessage.length > 0 ? errorMessage[0] : \"\"} \\n ${_.join(errorMessages, \"\\n\")}`;\n      this.setState({ alertMessage, showAlert: true });\n\n      return Promise.reject(error);\n    }\n\n    return handleError(error);\n  }\n\n  importLocations() {\n    this.props.showSpinner();\n    const formData = new FormData();\n\n    formData.append(\n      \"importFile\",\n      this.state.file.slice(0, this.state.file.size, \"text/csv\"),\n    );\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n\n    return apiClient\n      .post(LOCATION_IMPORT, formData, config)\n      .then(() => {\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.locationsConfiguration.importSuccess.label\",\n            \"Locations Created Successfully\",\n          ),\n        );\n        this.setState({ showSuccessMessage: true });\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n      });\n  }\n\n  downloadLocationsTemplate() {\n    this.props.showSpinner();\n    apiClient\n      .get(LOCATION_TEMPLATE)\n      .then((response) => {\n        fileDownload(response.data, \"Locations_template.csv\", \"text/csv\");\n        this.props.hideSpinner();\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  render() {\n    return (\n      <div className=\"content-wrap\">\n        <div className=\"d-flex flex-column p-5 m-4 classic-card\">\n          {this.state.showSuccessMessage ? (\n            <>\n              <h3 className=\"align-self-center\">\n                <Translate\n                  id=\"react.locationsConfiguration.importSuccess.label\"\n                  defaultMessage=\"Locations Created Successfully\"\n                />\n              </h3>\n              <div className=\"align-self-center\">\n                <Translate\n                  id=\"react.locationsConfiguration.importSuccess.message\"\n                  defaultMessage=\"Your locations have been created. You can review or edit them at any time from the location list page.\"\n                />\n              </div>\n              <a\n                type=\"button\"\n                className=\"btn btn-outline-primary align-self-center w-auto mt-5\"\n                href={LOCATION_URL.list()}\n              >\n                <Translate\n                  id=\"react.locationsConfiguration.viewLocations.label\"\n                  defaultMessage=\"View Location List\"\n                />\n              </a>\n              <Link\n                type=\"button\"\n                className=\"btn btn-outline-primary align-self-center w-auto mt-3\"\n                to={PRODUCT_CONFIGURATION_URL.index()}\n              >\n                <Translate\n                  id=\"react.locationsConfiguration.productWizard.label\"\n                  defaultMessage=\"Product Creation Wizard\"\n                />\n              </Link>\n              <Link\n                className=\"align-self-center w-auto mt-3\"\n                to={DASHBOARD_URL.base}\n              >\n                <Translate\n                  id=\"react.locationsConfiguration.exitToDashboard.label\"\n                  defaultMessage=\"Exit to Dashboard\"\n                />\n              </Link>\n            </>\n          ) : (\n            <>\n              <h3>\n                <Translate\n                  id=\"react.locationsConfiguration.importLocationCsv.label\"\n                  defaultMessage=\"Import Locations\"\n                />\n              </h3>\n              <div>\n                <Translate\n                  id=\"react.locationsConfiguration.csvUpload.label\"\n                  defaultMessage=\"On this screen, you can import a list of locations from .csv file.\"\n                />\n                &nbsp;\n                <Translate\n                  id=\"react.locationsConfiguration.click.label\"\n                  defaultMessage=\"Click\"\n                />\n                &nbsp;\n                <a href=\"#\" onClick={() => this.downloadLocationsTemplate()}>\n                  <Translate\n                    id=\"react.locationsConfiguration.here.label\"\n                    defaultMessage=\"here\"\n                  />\n                </a>\n                &nbsp;\n                <Translate\n                  id=\"react.locationsConfiguration.templateInstructions.label\"\n                  defaultMessage=\"to download a template with instructions.\"\n                />\n                &nbsp;\n                <Translate\n                  id=\"react.locationsConfiguration.click.label\"\n                  defaultMessage=\"Click\"\n                />\n                &nbsp;\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={\n                    this.state.supportLinks\n                      .configureOrganizationsAndLocations || \"#\"\n                  }\n                >\n                  <Translate\n                    id=\"react.locationsConfiguration.here.label\"\n                    defaultMessage=\"here\"\n                  />\n                </a>\n                &nbsp;\n                <Translate\n                  id=\"react.locationsConfiguration.createInstructions.label\"\n                  defaultMessage=\"to read more about location creation.\"\n                />\n              </div>\n              <FileSelect\n                className=\"my-2 p-5\"\n                onChange={this.onDrop}\n                allowedExtensions={[\"csv\"]}\n              />\n              <AlertMessage\n                className=\"m-3\"\n                show={this.state.showAlert}\n                message={this.state.alertMessage}\n                danger\n              />\n              <div className=\"align-self-end mt-5\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary float-right\"\n                  onClick={() => this.importLocations()}\n                  disabled={!this.state.file}\n                >\n                  <Translate\n                    id=\"react.locationsConfiguration.upload.label\"\n                    defaultMessage=\"Upload\"\n                  />\n                </button>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps, { showSpinner, hideSpinner })(\n  ImportLocations,\n);\n\nImportLocations.propTypes = {\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n"],"names":["AlertMessage","_ref","show","message","danger","close","className","getMessageElement","useMemo","Array","isArray","map","msg","React","concat","style","cursor","whiteSpace","role","onClick","propTypes","PropTypes","defaultProps","FileSelect","height","width","minHeight","dropzoneText","buttonLabel","buttonVariant","multiple","maxFiles","allowedExtensions","fieldProps","_objectWithoutProperties","_excluded","onDrop","useCallback","acceptedFiles","_fieldProps$onChange","onChange","call","translate","useTranslate","_useDropzone","useDropzone","noClick","noKeyboard","validator","file","length","includes","_file$path$split","path","split","getFileExtension","code","join","getRootProps","getInputProps","open","fileRejections","mapFiles","files","_file$errors","data","key","size","errors","e","_extends","id","defaultMessage","Button","variant","defaultLabel","label","apiClient","axios","create","ImportLocations","_Component","props","_this","_classCallCheck","_callSuper","state","alertMessage","showAlert","showSuccessMessage","supportLinks","bind","handleValidationErrors","getSupportLinks","interceptors","response","use","handleSuccess","_inherits","value","this","setState","_this2","get","SUPPORT_LINKS","then","error","status","errorMessage","_","errorMessages","Promise","reject","handleError","_this3","showSpinner","formData","FormData","append","slice","post","LOCATION_IMPORT","headers","hideSpinner","Alert","_this4","LOCATION_TEMPLATE","fileDownload","_this5","Translate","type","href","LOCATION_URL","list","Link","to","PRODUCT_CONFIGURATION_URL","index","DASHBOARD_URL","base","downloadLocationsTemplate","target","rel","configureOrganizationsAndLocations","importLocations","disabled","Component","connect","translateWithDefaultMessage","getTranslate","localize","isRequired"],"sourceRoot":""}