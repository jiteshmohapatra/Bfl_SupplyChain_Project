{"version":3,"file":"bundle.929af1b45eb780bfc503.8029.js","mappings":"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","sources":["webpack://openboxes/./src/js/consts/loadDataStep.js","webpack://openboxes/./src/js/components/load-demo-data/LoadDemoDataInfo.jsx","webpack://openboxes/./src/js/components/load-demo-data/LoadDemoDataErrorMessage.jsx","webpack://openboxes/./src/js/components/load-demo-data/LoadDemoDataSuccessMessage.jsx","webpack://openboxes/./src/js/components/load-demo-data/LoadDemoDataProgressScreen.jsx","webpack://openboxes/./src/js/components/load-demo-data/LoadDemoDataWelcome.jsx","webpack://openboxes/./src/js/components/load-demo-data/LoadDemoDataPage.jsx"],"sourcesContent":["const LOAD_DATA_STEPS = {\n  createFirstLocation: 'CREATE_FIRST_LOCATION',\n  loadDemoData: 'LOAD_DEMO_DATA',\n  proceedLoadingDemoData: 'PROCEED_LOAD_DEMO_DATA',\n};\n\nexport default LOAD_DATA_STEPS;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nimport LOAD_DATA_STEPS from \"consts/loadDataStep\";\nimport Translate from \"utils/Translate\";\n\nconst LoadDemoDataInfo = ({\n  summaryItemsTitle,\n  summaryItemsList,\n  goToStep,\n}) => (\n  <>\n    <h3 className=\"font-weight-bold my-3\">\n      <Translate\n        id=\"react.loadData.loadDataHeader.label\"\n        defaultMessage=\"Load Demo Data\"\n      />\n    </h3>\n    <p className=\"my-3\">\n      <Translate id=\"react.loadData.loadDataDescription.label\" />\n    </p>\n    <div>\n      <h5 className=\"font-weight-bold my-3\">{summaryItemsTitle}:</h5>\n      {ReactHtmlParser(summaryItemsList)}\n    </div>\n    <div className=\"d-flex justify-content-between m-3\">\n      <button\n        type=\"button\"\n        onClick={() => goToStep(null)}\n        className=\"btn btn-outline-primary\"\n      >\n        <Translate id=\"default.button.back.label\" defaultMessage=\"Back\" />\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => goToStep(LOAD_DATA_STEPS.proceedLoadingDemoData)}\n        className=\"btn btn-outline-primary\"\n      >\n        <Translate id=\"default.button.proceed.label\" defaultMessage=\"Proceed\" />\n      </button>\n    </div>\n  </>\n);\n\nLoadDemoDataInfo.propTypes = {\n  goToStep: PropTypes.func.isRequired,\n  summaryItemsTitle: PropTypes.string.isRequired,\n  summaryItemsList: PropTypes.string.isRequired,\n};\n\nexport default LoadDemoDataInfo;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { DASHBOARD_URL } from \"consts/applicationUrls\";\nimport Translate from \"utils/Translate\";\n\nimport \"components/locations-configuration/SuccessMessage.scss\";\n\nconst LoadDemoDataErrorMessage = ({ history, supportLinks }) => (\n  <div className=\"success-wrapper\">\n    <div className=\"success-content\">\n      <i className=\"fa fa-exclamation-circle error-icon\" aria-hidden=\"true\" />\n      <h2 className=\"font-weight-bold\">\n        <Translate\n          id=\"react.loadData.error.title.label\"\n          defaultMessage=\"Error occurred while loading demo data\"\n        />\n      </h2>\n      <p className=\"w-75 text-break\">\n        <Translate\n          id=\"react.loadData.error.content.label\"\n          defaultMessage=\"There was an issue loading the demo data.\n        Sometimes this can be resolved by simply re-trying the load process.\n        You can find a link to restart the load process in the configuration menu.\n        You can also ask your administrator to reset your instance.\n        If you aren't sure how to proceed, you can request support on the OpenBoxes\"\n        />{\" \"}\n        <a href={supportLinks.discussionForum} className=\"knowledge-base-link\">\n          <Translate\n            id=\"react.loadData.error.discussionForum.link.label\"\n            defaultMessage=\"discussion forum\"\n          />\n        </a>\n      </p>\n      <div className=\"success-buttons-section d-flex flex-column w-50\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n          onClick={() => history.push(DASHBOARD_URL.base)}\n        >\n          Back to dashboard\n        </button>\n      </div>\n    </div>\n  </div>\n);\n\nexport default withRouter(LoadDemoDataErrorMessage);\n\nLoadDemoDataErrorMessage.propTypes = {\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n  supportLinks: PropTypes.shape({\n    discussionForum: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { DASHBOARD_URL } from \"consts/applicationUrls\";\nimport Translate from \"utils/Translate\";\n\nimport \"components/locations-configuration/SuccessMessage.scss\";\n\nconst LoadDemoDataSuccessMessage = ({ history, supportLinks }) => (\n  <div className=\"success-wrapper\">\n    <div className=\"success-content\">\n      <i className=\"fa fa-check-circle-o success-icon\" aria-hidden=\"true\" />\n      <h2 className=\"font-weight-bold\">\n        <Translate\n          id=\"react.loadData.success.title.label\"\n          defaultMessage=\"Data Successfully Loaded\"\n        />\n      </h2>\n      <p className=\"w-75\">\n        <Translate\n          id=\"react.loadData.success.content.label\"\n          defaultMessage=\"You are now ready to start your exploration of OpenBoxes!\n                                    Go to your dashboard to get started.\n                                    For guidance on how to use OpenBoxes, be sure to refer to our\"\n        />{\" \"}\n        <a href={supportLinks.knowledgeBase} className=\"knowledge-base-link\">\n          <Translate\n            id=\"react.loadData.success.helpscout.button.label\"\n            defaultMessage=\"helpscout knowledge base.\"\n          />\n        </a>\n      </p>\n      <div className=\"success-buttons-section d-flex flex-column w-50\">\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n          onClick={() => history.push(DASHBOARD_URL.base)}\n        >\n          <Translate\n            id=\"react.loadData.success.exploreDashboard.button.label\"\n            defaultMessage=\"Explore dashboard\"\n          />\n        </button>\n      </div>\n    </div>\n  </div>\n);\n\nexport default withRouter(LoadDemoDataSuccessMessage);\n\nLoadDemoDataSuccessMessage.propTypes = {\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n  supportLinks: PropTypes.shape({\n    knowledgeBase: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { ClimbingBoxLoader } from \"react-spinners\";\n\nimport LoadDemoDataErrorMessage from \"components/load-demo-data/LoadDemoDataErrorMessage\";\nimport LoadDemoDataSuccessMessage from \"components/load-demo-data/LoadDemoDataSuccessMessage\";\nimport apiClient from \"utils/apiClient\";\nimport Translate from \"utils/Translate\";\n\nconst LoadDemoDataProgressScreen = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [supportLinks, setSupportLinks] = useState({});\n\n  useEffect(() => {\n    apiClient\n      .get(\"/api/config/data/demo\")\n      .then(() => {\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setError(err);\n        setIsLoading(false);\n      });\n\n    apiClient.get(\"/api/supportLinks\").then((response) => {\n      const links = response.data.data;\n      setSupportLinks(links);\n    });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <>\n        <h3 className=\"font-weight-bold my-3\">\n          <Translate\n            id=\"react.loadData.loadingData.label\"\n            defaultMessage=\"react.loadData.loadingData.label\"\n          />\n        </h3>\n        <p className=\"my-3\">\n          <Translate\n            id=\"react.loadData.loadingDataMessage.label\"\n            defaultMessage=\"Please wait while we load your demo data. Do not close this window.\"\n          />\n        </p>\n        <div className=\"d-flex flex-column align-items-center justify-content-center\">\n          <div className=\"my-3\">\n            <ClimbingBoxLoader />\n          </div>\n          <p className=\"font-weight-bold my-3\">\n            <Translate\n              id=\"react.loadData.importingDemoFiles.label\"\n              defaultMessage=\"Importing demo files...\"\n            />\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  if (error) {\n    return <LoadDemoDataErrorMessage supportLinks={supportLinks} />;\n  }\n  return <LoadDemoDataSuccessMessage supportLinks={supportLinks} />;\n};\n\nexport default LoadDemoDataProgressScreen;\n","import React, { useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport LOAD_DATA_STEPS from \"consts/loadDataStep\";\nimport Translate from \"utils/Translate\";\n\nconst LoadDemoDataWelcome = ({ skipConfiguration, goToStep }) => {\n  const [loadDataOption, setLoadDataOption] = useState(null);\n\n  return (\n    <>\n      <h3 className=\"font-weight-bold my-3\">\n        <Translate\n          id=\"react.loadData.welcomeHeader.label\"\n          defaultMessage=\"Welcome to OpenBoxes!\"\n        />\n      </h3>\n      <p className=\"my-3\">\n        <Translate\n          id=\"react.loadData.welcomeDescription.label\"\n          options={{ renderInnerHtml: true }}\n        />\n      </p>\n      <div onChange={(e) => setLoadDataOption(e.target.value)}>\n        <div>\n          <input\n            name=\"location-data\"\n            type=\"radio\"\n            id={LOAD_DATA_STEPS.loadDemoData}\n            value={LOAD_DATA_STEPS.loadDemoData}\n            checked={loadDataOption === LOAD_DATA_STEPS.loadDemoData}\n          />\n          <label\n            htmlFor={LOAD_DATA_STEPS.loadDemoData}\n            className=\"font-weight-bold ml-1\"\n          >\n            <Translate\n              id=\"react.loadData.loadDemoData.label\"\n              defaultMessage=\"Load Demo Data\"\n            />\n          </label>\n          <p className=\"ml-4\">\n            <Translate id=\"react.loadData.loadDemoData.description.label\" />\n          </p>\n        </div>\n        <div>\n          <input\n            name=\"location-data\"\n            type=\"radio\"\n            id={LOAD_DATA_STEPS.createFirstLocation}\n            value={LOAD_DATA_STEPS.createFirstLocation}\n            checked={loadDataOption === LOAD_DATA_STEPS.createFirstLocation}\n          />\n          <label\n            htmlFor={LOAD_DATA_STEPS.createFirstLocation}\n            className=\"font-weight-bold ml-1\"\n          >\n            <Translate\n              id=\"react.loadData.createFirstLocation.label\"\n              defaultMessage=\"Create your First Location\"\n            />\n          </label>\n          <p className=\"ml-4\">\n            <Translate id=\"react.loadData.createFirstLocation.description.label\" />\n          </p>\n        </div>\n      </div>\n      <div className=\"d-flex justify-content-between align-items-center m-3\">\n        <a href=\"#\" onClick={skipConfiguration} className=\"btn btn-link\">\n          <Translate\n            id=\"react.loadData.skipForNow.label\"\n            defaultMessage=\"Skip for now\"\n          />\n        </a>\n        <button\n          disabled={!loadDataOption}\n          onClick={() => goToStep(loadDataOption)}\n          type=\"button\"\n          className=\"btn btn-outline-primary\"\n        >\n          <Translate id=\"default.button.next.label\" defaultMessage=\"Next\" />\n        </button>\n      </div>\n    </>\n  );\n};\n\nLoadDemoDataWelcome.propTypes = {\n  skipConfiguration: PropTypes.string.isRequired,\n  goToStep: PropTypes.string.isRequired,\n};\n\nexport default LoadDemoDataWelcome;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { fetchTranslations } from \"actions\";\nimport LoadDemoDataInfo from \"components/load-demo-data/LoadDemoDataInfo\";\nimport LoadDemoDataProgressScreen from \"components/load-demo-data/LoadDemoDataProgressScreen\";\nimport LoadDemoDataWelcome from \"components/load-demo-data/LoadDemoDataWelcome\";\nimport {\n  DASHBOARD_URL,\n  LOCATION_CONFIGURATION_URL,\n} from \"consts/applicationUrls\";\nimport LOAD_DATA_STEPS from \"consts/loadDataStep\";\nimport apiClient from \"utils/apiClient\";\n\nclass LoadDemoDataPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: null,\n      summaryData: { title: \"\", description: \"\" },\n    };\n\n    this.skipConfiguration = this.skipConfiguration.bind(this);\n    this.stepHandler = this.stepHandler.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTranslations(\"\", \"loadData\");\n\n    apiClient.get(\"/api/loadData/listOfDemoData\").then((response) => {\n      this.setState({ summaryData: response.data.data });\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.locale && this.props.locale !== nextProps.locale) {\n      this.props.fetchTranslations(nextProps.locale, \"loadData\");\n    }\n  }\n\n  skipConfiguration() {\n    this.props.history.push(DASHBOARD_URL.base);\n  }\n\n  stepHandler(step) {\n    switch (step) {\n      case LOAD_DATA_STEPS.createFirstLocation:\n        this.props.history.push(LOCATION_CONFIGURATION_URL.create());\n        break;\n      default:\n        this.setState({ currentStep: step });\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"modal-page\">\n        <div\n          className=\"modal-page__content position-relative\"\n          style={{ minHeight: \"450px\" }}\n        >\n          <button\n            type=\"button\"\n            className=\"btn btn-lg position-absolute\"\n            style={{ right: \"1rem\" }}\n            onClick={this.skipConfiguration}\n          >\n            <i className=\"fa fa-close\" />\n          </button>\n          {!this.state.currentStep && (\n            <LoadDemoDataWelcome\n              skipConfiguration={this.skipConfiguration}\n              goToStep={this.stepHandler}\n            />\n          )}\n          {this.state.currentStep === LOAD_DATA_STEPS.loadDemoData && (\n            <LoadDemoDataInfo\n              summaryItemsTitle={this.state.summaryData.title}\n              summaryItemsList={this.state.summaryData.description}\n              goToStep={this.stepHandler}\n            />\n          )}\n          {this.state.currentStep ===\n            LOAD_DATA_STEPS.proceedLoadingDemoData && (\n            <LoadDemoDataProgressScreen goToStep={this.stepHandler} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n});\n\nLoadDemoDataPage.propTypes = {\n  locale: PropTypes.string.isRequired,\n  fetchTranslations: PropTypes.func.isRequired,\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    fetchTranslations,\n  })(LoadDemoDataPage),\n);\n"],"names":["LoadDemoDataInfo","_ref","summaryItemsTitle","summaryItemsList","goToStep","React","className","Translate","id","defaultMessage","ReactHtmlParser","type","onClick","LOAD_DATA_STEPS","propTypes","PropTypes","isRequired","LoadDemoDataErrorMessage","history","supportLinks","href","discussionForum","push","DASHBOARD_URL","base","withRouter","LoadDemoDataSuccessMessage","knowledgeBase","_useState2","_slicedToArray","useState","isLoading","setIsLoading","_useState4","error","setError","_useState6","setSupportLinks","useEffect","apiClient","get","then","err","response","links","data","ClimbingBoxLoader","LoadDemoDataWelcome","skipConfiguration","loadDataOption","setLoadDataOption","options","renderInnerHtml","onChange","e","target","value","name","checked","htmlFor","disabled","LoadDemoDataPage","_Component","props","_this","_classCallCheck","_callSuper","state","currentStep","summaryData","title","description","bind","stepHandler","_inherits","key","_this2","this","fetchTranslations","setState","nextProps","locale","step","LOCATION_CONFIGURATION_URL","create","style","minHeight","right","LoadDemoDataProgressScreen","Component","connect","session","activeLanguage"],"sourceRoot":""}