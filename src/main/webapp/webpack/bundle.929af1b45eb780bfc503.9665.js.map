{"version":3,"file":"bundle.929af1b45eb780bfc503.9665.js","mappings":"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","sources":["webpack://openboxes/./src/js/components/form-elements/TextField.jsx","webpack://openboxes/./src/js/components/form-elements/TableBodyVirtualized.jsx","webpack://openboxes/./src/js/components/form-elements/FieldArrayComponent.jsx","webpack://openboxes/./src/js/components/form-elements/ArrayField.jsx","webpack://openboxes/./src/js/components/form-elements/TableBody.jsx","webpack://openboxes/./src/js/components/form-elements/LabelField.jsx","webpack://openboxes/./src/js/consts/rowSaveStatus.js","webpack://openboxes/./src/js/components/wizard/WizardPage.jsx","webpack://openboxes/./src/js/components/wizard/WizardSteps.jsx","webpack://openboxes/./src/js/components/wizard/WizardTitle.jsx","webpack://openboxes/./src/js/components/wizard/Wizard.jsx","webpack://openboxes/./src/js/utils/RowSaveIndicator.jsx","webpack://openboxes/./src/js/components/form-elements/TableRow.jsx"],"sourcesContent":["import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Input from \"utils/Input\";\n\nconst TextField = (props) => {\n  const renderInput = ({ inputClassName, className, ...attributes }) => (\n    <Input\n      isFormElement\n      className={inputClassName || className}\n      {...attributes}\n    />\n  );\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default TextField;\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { AutoSizer, InfiniteLoader, List } from \"react-virtualized\";\n\nimport TableRow from \"components/form-elements/TableRow\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nconst ROW_HEIGHT = 28;\n\nclass TableBodyVirtualized extends Component {\n  constructor(props) {\n    super(props);\n\n    this.rowRenderer = this.rowRenderer.bind(this);\n    this.getRowHeight = this.getRowHeight.bind(this);\n    this.bindListRef = this.bindListRef.bind(this);\n    this.getHeight = this.getHeight.bind(this);\n  }\n\n  componentDidUpdate() {\n    if (this.list) {\n      this.list.recomputeRowHeights();\n    }\n  }\n\n  getHeight() {\n    const {\n      fieldsConfig: { subfieldKey, getDynamicRowAttr },\n      fields,\n      properties,\n    } = this.props;\n    let height = 0;\n    const maxTableHeight =\n      window.innerHeight < 900\n        ? // 0.35 * window.innerHeight = 35vh from table-content class in StockMovement.scss\n          0.35 * window.innerHeight\n        : 0.4 * window.innerHeight;\n\n    if (!subfieldKey) {\n      height = fields.value.reduce((acc, field) => {\n        const dynamicAttr = getDynamicRowAttr\n          ? getDynamicRowAttr({ ...properties, rowValues: field })\n          : {};\n        // If a row is supposed to be hidden or the height is already higher than max height,\n        // return this height without increasing it\n        if (dynamicAttr.hideRow || acc > maxTableHeight) {\n          return acc;\n        }\n        // If a row is not hidden and height has not yet reached maximum,\n        // increase it by the row height\n        return acc + ROW_HEIGHT;\n      }, height);\n    } else {\n      _.forEach(fields.value, (field) => {\n        const dynamicAttr = getDynamicRowAttr\n          ? getDynamicRowAttr({ ...properties, rowValues: field })\n          : {};\n        const subfields = field[subfieldKey];\n\n        if (dynamicAttr.hideRow) {\n          return; // Lodash's forEach version of continue\n        }\n\n        if (!height) {\n          height = ROW_HEIGHT * (subfields.length + 1);\n        } else if (\n          height + ROW_HEIGHT * (subfields.length + 1) >\n          maxTableHeight\n        ) {\n          height = maxTableHeight;\n        } else {\n          height += ROW_HEIGHT * (subfields.length + 1);\n        }\n      });\n    }\n    return height || ROW_HEIGHT;\n  }\n\n  getRowHeight({ index }) {\n    const {\n      fieldsConfig: { subfieldKey, getDynamicRowAttr },\n      fields,\n      properties,\n    } = this.props;\n    const rowValues = fields?.value?.[index];\n\n    const dynamicAttr =\n      getDynamicRowAttr && rowValues\n        ? getDynamicRowAttr({ ...properties, index, rowValues })\n        : {};\n\n    if (dynamicAttr.hideRow) {\n      return 0;\n    }\n\n    if (!subfieldKey) {\n      return ROW_HEIGHT;\n    }\n\n    const subfields = rowValues ? rowValues[subfieldKey] : null;\n\n    if (!subfields) {\n      return ROW_HEIGHT;\n    }\n\n    if (dynamicAttr.hideSubfields) {\n      return ROW_HEIGHT;\n    }\n\n    return ROW_HEIGHT * (subfields.length + 1);\n  }\n\n  rowRenderer({ key, index, style }) {\n    const {\n      fieldsConfig,\n      properties,\n      fields,\n      tableRef = () => {},\n      addRow = (row = {}) => fields.push(row),\n    } = this.props;\n    const field = `${fields.name}[${index}]`;\n    const RowComponent = fieldsConfig.rowComponent || TableRow;\n    const { totalCount } = properties;\n\n    if (fields?.value?.[index]) {\n      const dynamicRowAttr = fieldsConfig.getDynamicRowAttr\n        ? fieldsConfig.getDynamicRowAttr({\n            ...properties,\n            rowValues: fields.value[index],\n          })\n        : {};\n\n      if (dynamicRowAttr.hideRow) {\n        return null;\n      }\n\n      return (\n        <div key={key} style={style}>\n          <RowComponent\n            field={field}\n            index={index}\n            properties={{\n              ...properties,\n              rowCount: totalCount,\n            }}\n            addRow={addRow}\n            fieldsConfig={fieldsConfig}\n            removeRow={() => fields.remove(index)}\n            rowValues={fields.value[index]}\n            rowRef={(el, fieldName) => tableRef(el, fieldName, index)}\n          />\n        </div>\n      );\n    }\n    return (\n      <div key={key} style={style}>\n        {this.props.translate(\"react.default.loading.label\", \"Loading...\")}\n      </div>\n    );\n  }\n\n  bindListRef(ref) {\n    this.list = ref;\n  }\n\n  render() {\n    // eslint-disable-next-line max-len\n    const { properties, pageSize } = this.props;\n    const { totalCount, loadMoreRows, isRowLoaded, isFirstPageLoaded } =\n      properties;\n\n    const loadPage = isFirstPageLoaded ? () => {} : loadMoreRows;\n\n    return (\n      <div>\n        <InfiniteLoader\n          loadMoreRows={loadPage}\n          isRowLoaded={isRowLoaded}\n          rowCount={totalCount}\n          minimumBatchSize={pageSize}\n        >\n          {({ onRowsRendered }) => (\n            <AutoSizer disableHeight>\n              {({ width }) => (\n                <List\n                  ref={this.bindListRef}\n                  height={this.getHeight()}\n                  onRowsRendered={onRowsRendered}\n                  rowCount={totalCount}\n                  rowHeight={this.getRowHeight}\n                  rowRenderer={this.rowRenderer}\n                  width={width}\n                  props={properties}\n                />\n              )}\n            </AutoSizer>\n          )}\n        </InfiniteLoader>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  pageSize: state.session.pageSize,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps, {})(TableBodyVirtualized);\n\nTableBodyVirtualized.propTypes = {\n  fieldsConfig: PropTypes.shape({\n    getDynamicAttr: PropTypes.func,\n  }).isRequired,\n  fields: PropTypes.oneOfType([\n    PropTypes.shape({}),\n    PropTypes.arrayOf(PropTypes.shape({})),\n  ]).isRequired,\n  properties: PropTypes.shape({}).isRequired,\n  addRow: PropTypes.func,\n  tableRef: PropTypes.func,\n  pageSize: PropTypes.number.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n\nTableBodyVirtualized.defaultProps = {\n  addRow: undefined,\n  tableRef: undefined,\n};\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { Tooltip } from \"react-tippy\";\n\nimport TableBody from \"components/form-elements/TableBody\";\nimport TableBodyVirtualized from \"components/form-elements/TableBodyVirtualized\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-tippy/dist/tippy.css\";\n\nclass FieldArrayComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fieldRefs = [];\n    this.focusField = this.focusField.bind(this);\n    this.copyDown = this.copyDown.bind(this);\n  }\n\n  focusField(index, fieldName) {\n    const field = _.get(this.fieldRefs, `[${index}].${fieldName}`);\n    // 8 - the amount of rows shown in the table on 1360x786 resolution\n    const fieldToScroll = _.get(\n      this.fieldRefs,\n      `[${index - 8 > 0 ? index - 8 : 0}].${fieldName}`,\n    );\n\n    if (field) {\n      field.focus();\n      if (fieldToScroll) {\n        fieldToScroll.scrollIntoView();\n      }\n    }\n  }\n\n  copyDown(index, fieldName) {\n    const field = _.get(this.fieldRefs, `[${index}].${fieldName}`);\n    const fieldToScroll = _.get(\n      this.fieldRefs,\n      `[${index - 15 > 0 ? index - 15 : 0}].${fieldName}`,\n    );\n    const valueToCopy = _.get(\n      this.fieldRefs,\n      `[${index - 1}].${fieldName}.value`,\n    );\n\n    if (field && valueToCopy && !field.disabled) {\n      field.value = valueToCopy;\n      field.focus();\n      if (fieldToScroll) {\n        fieldToScroll.scrollIntoView();\n      }\n    }\n  }\n\n  render() {\n    const { fieldsConfig, properties, fields, isPaginated } = this.props;\n    const AddButton = fieldsConfig.addButton;\n    const {\n      maxTableHeight,\n      virtualized,\n      overflowStyle = \"scroll\",\n      showRowSaveIndicator,\n    } = fieldsConfig;\n    const addRow = (row = {}, index = null, shouldScroll = true) => {\n      if (index === null) {\n        const table = document.querySelectorAll('[role=\"rowgroup\"]')[0];\n        // lines can also be added on modals and no scroll should be applied then\n        if (table && shouldScroll) {\n          table.scrollIntoView({ block: \"end\" });\n        }\n        fields.push(row);\n      } else if (typeof fields === \"object\") {\n        fields.insert(index + 1, row);\n      } else {\n        fields.splice(index + 1, 0, row);\n      }\n    };\n    const TableBodyComponent =\n      virtualized && isPaginated ? TableBodyVirtualized : TableBody;\n\n    return (\n      <div className=\"d-flex flex-column\">\n        {/* Additional headers, that act as a 'colspan'. Dev should provide either\n            fixedWith or flexWidth which will show which table columns should be\n            grouped under a specific header. Total value of grouping headers width\n            (fixed or flex) should be the same as it is on the table columns. */}\n        {fieldsConfig.headerGroupings && (\n          <div className=\"text-center border table-additional-header\">\n            <div className=\"d-flex flex-row border-bottom font-weight-bold\">\n              {_.map(fieldsConfig.headerGroupings, (config, name) => (\n                <div\n                  className=\"text-truncate font-size-xs\"\n                  key={name}\n                  style={{\n                    flex: config.fixedWidth\n                      ? `0 1 ${config.fixedWidth}`\n                      : `${config.flexWidth || \"12\"} 1 0`,\n                    minWidth: 0,\n                    textAlign: config.headerAlign\n                      ? config.headerAlign\n                      : \"center\",\n                  }}\n                >\n                  {config.label && (\n                    <span className=\"w-100 mx-1\">\n                      <Translate\n                        id={config.label}\n                        defaultMessage={config.defaultLabel}\n                      />\n                    </span>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        <div className=\"text-center border table-header\">\n          <div className=\"d-flex flex-row border-bottom font-weight-bold\">\n            {_.map(fieldsConfig.fields, (config, name) => {\n              const dynamicAttr = config.getDynamicAttr\n                ? config.getDynamicAttr(properties)\n                : {};\n              const { hide, headerHtml } = dynamicAttr;\n              const flexWidth = dynamicAttr.flexWidth || config.flexWidth;\n              const fixedWidth = dynamicAttr.fixedWidth || config.fixedWidth;\n              const headerLabel = dynamicAttr.label || config.label;\n              const headerDefaultMessage =\n                dynamicAttr.defaultMessage || config.defaultMessage;\n\n              if (!hide) {\n                return (\n                  <div\n                    key={name}\n                    className={`${config.headerClassName ? config.headerClassName : \"\"}`}\n                    style={{\n                      flex: fixedWidth\n                        ? `0 1 ${fixedWidth}`\n                        : `${flexWidth || \"12\"} 1 0`,\n                      minWidth: 0,\n                      textAlign: config.headerAlign\n                        ? config.headerAlign\n                        : \"center\",\n                    }}\n                  >\n                    <Tooltip\n                      html={\n                        config.headerTooltip ? (\n                          <div>\n                            {this.props.translate(\n                              config.headerTooltip,\n                              config.headerDefaultTooltip,\n                            )}\n                          </div>\n                        ) : (\n                          headerLabel && (\n                            <div>\n                              {this.props.translate(\n                                headerLabel,\n                                headerDefaultMessage,\n                              )}\n                            </div>\n                          )\n                        )\n                      }\n                      theme=\"transparent\"\n                      arrow=\"true\"\n                      delay=\"150\"\n                      duration=\"250\"\n                      hideDelay=\"50\"\n                    >\n                      <div\n                        className={`mx-2 ${config.multilineHeader ? \"\" : \"text-truncate\"} ${config.required ? \"arrayfield-header-required\" : \"\"}`}\n                        style={{\n                          fontSize: fieldsConfig.headerFontSize\n                            ? fieldsConfig.headerFontSize\n                            : \"0.875rem\",\n                        }}\n                      >\n                        {headerHtml && headerHtml()}\n                        {headerLabel && !headerHtml && (\n                          <Translate\n                            id={headerLabel}\n                            defaultMessage={headerDefaultMessage}\n                          />\n                        )}\n                      </div>\n                    </Tooltip>\n                  </div>\n                );\n              }\n              return null;\n            })}\n          </div>\n        </div>\n        <div\n          className=\"text-center border mb-1 flex-grow-1 table-content\"\n          style={{\n            overflowX: \"hidden\",\n            overflowY: virtualized && isPaginated ? \"hidden\" : overflowStyle,\n            maxHeight: maxTableHeight,\n          }}\n        >\n          <TableBodyComponent\n            fields={fields}\n            properties={{\n              ...properties,\n              focusField: this.focusField,\n              copyDown: this.copyDown,\n              showRowSaveIndicator,\n            }}\n            addRow={addRow}\n            fieldsConfig={fieldsConfig}\n            tableRef={(el, fieldName, index) => {\n              if (!this.fieldRefs[index]) {\n                this.fieldRefs[index] = {};\n              }\n\n              this.fieldRefs[index][fieldName] = el;\n            }}\n          />\n        </div>\n        {AddButton && (\n          <div className=\"text-center add-button\">\n            {typeof AddButton === \"string\" ? (\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-success btn-xs\"\n                onClick={() => addRow()}\n              >\n                <span>\n                  <i className=\"fa fa-plus pr-2\" />\n                  <Translate id={AddButton} />\n                </span>\n              </button>\n            ) : (\n              <AddButton {...properties} addRow={addRow} />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  isPaginated: state.session.isPaginated,\n});\n\nFieldArrayComponent.propTypes = {\n  fieldsConfig: PropTypes.shape({}).isRequired,\n  fields: PropTypes.oneOfType([\n    PropTypes.shape({}),\n    PropTypes.arrayOf(PropTypes.shape({})),\n  ]).isRequired,\n  properties: PropTypes.shape({}),\n  translate: PropTypes.func.isRequired,\n  /** Return true if pagination is enabled */\n  isPaginated: PropTypes.bool.isRequired,\n};\n\nFieldArrayComponent.defaultProps = {\n  properties: {},\n};\n\nexport default connect(mapStateToProps)(FieldArrayComponent);\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { FieldArray } from \"react-final-form-arrays\";\n\nimport FieldArrayComponent from \"components/form-elements/FieldArrayComponent\";\n\nconst ArrayField = (props) => {\n  const { fieldName, fieldConfig, ...otherProps } = props;\n\n  return (\n    <FieldArray\n      key={fieldName}\n      name={fieldName}\n      component={FieldArrayComponent}\n      fieldsConfig={fieldConfig}\n      properties={otherProps}\n    />\n  );\n};\n\nexport default ArrayField;\n\nArrayField.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  fieldConfig: PropTypes.shape({\n    getDynamicAttr: PropTypes.func,\n    fields: PropTypes.shape({}),\n  }).isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport TableRow from \"components/form-elements/TableRow\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nconst TableBody = (props) => {\n  const {\n    translate,\n    fieldsConfig,\n    properties,\n    fields,\n    showRowSaveIndicator,\n    tableRef = () => {},\n    addRow = (row = {}) => fields.push(row),\n  } = props;\n  const RowComponent = properties.subfield\n    ? TableRow\n    : fieldsConfig.rowComponent || TableRow;\n\n  // properties for loading screen in modal\n  const {\n    isEmptyData,\n    isLoading,\n    emptyDataMessageId,\n    defaultEmptyDataMessage,\n  } = properties;\n\n  // if data is still fetching then spinner will be displayed within the table\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  // if there is no data to display then message will be displayed\n  // fields.length is checked due to possibility of adding custom data\n  if (isEmptyData && !fields.length) {\n    return translate(emptyDataMessageId, defaultEmptyDataMessage);\n  }\n\n  return fields.map((field, index) => (\n    <RowComponent\n      key={properties.subfield ? `${properties.parentIndex}-${index}` : index}\n      field={field}\n      index={index}\n      properties={{\n        ...properties,\n        rowCount: fields.length || 0,\n        showRowSaveIndicator,\n      }}\n      addRow={addRow}\n      fieldsConfig={fieldsConfig}\n      removeRow={() => fields.remove(index)}\n      rowValues={fields.value[index]}\n      rowRef={(el, fieldName) => tableRef(el, fieldName, index)}\n    />\n  ));\n};\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\n/** @component */\nexport default connect(mapStateToProps)(TableBody);\n\nTableBody.propTypes = {\n  fieldsConfig: PropTypes.shape({\n    getDynamicAttr: PropTypes.func,\n  }).isRequired,\n  fields: PropTypes.oneOfType([\n    PropTypes.shape({}),\n    PropTypes.arrayOf(PropTypes.shape({})),\n  ]).isRequired,\n  properties: PropTypes.shape({}).isRequired,\n  addRow: PropTypes.func,\n  tableRef: PropTypes.func,\n};\n\nTableBody.defaultProps = {\n  addRow: undefined,\n  tableRef: undefined,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { Field } from \"react-final-form\";\nimport { Tooltip } from \"react-tippy\";\n\nimport Translate from \"utils/Translate\";\n\nimport \"react-tippy/dist/tippy.css\";\n\nconst LabelField = (props) => {\n  const {\n    fieldName,\n    arrayField,\n    fieldValue,\n    fieldConfig: {\n      attributes,\n      getDynamicAttr,\n      label: FieldLabel,\n      defaultMessage,\n    },\n  } = props;\n  const dynamicAttr = getDynamicAttr ? getDynamicAttr(props) : {};\n  const attr = { ...attributes, ...dynamicAttr };\n  const {\n    formatValue,\n    color,\n    tooltipValue,\n    showValueTooltip,\n    url,\n    numberField,\n    ...otherAttr\n  } = attr;\n  const className = `text-truncate ${otherAttr.className ? otherAttr.className : \"\"} ${numberField ? \"text-right mr-2\" : \"\"}`;\n\n  if (otherAttr.cellClassName) {\n    delete otherAttr.cellClassName;\n  }\n\n  const renderField = ({ input: { value } }) => (\n    <div\n      className=\"form-group my-0\"\n      data-testid=\"label-field\"\n      aria-label={defaultMessage}\n    >\n      <div className=\"row\">\n        {typeof FieldLabel === \"string\" ? (\n          <label\n            htmlFor={attr.id}\n            className=\"col-md-2 col-form-label col-form-label-xs text-right\"\n          >\n            <Translate id={FieldLabel} defaultMessage={defaultMessage} />\n          </label>\n        ) : (\n          <FieldLabel />\n        )}\n        <div className=\"col-md-4 align-self-center\">\n          <span {...otherAttr}>{formatValue ? formatValue(value) : value}</span>\n        </div>\n      </div>\n    </div>\n  );\n\n  renderField.propTypes = {\n    input: PropTypes.shape({}).isRequired,\n  };\n\n  if (arrayField) {\n    const formattedValue = formatValue ? formatValue(fieldValue) : fieldValue;\n    return (\n      <div\n        className=\"form-group my-0\"\n        data-testid=\"label-field\"\n        aria-label={defaultMessage}\n      >\n        <Tooltip\n          html={\n            tooltipValue || (\n              <div className=\"text-truncate\">{formattedValue}</div>\n            )\n          }\n          disabled={!showValueTooltip}\n          theme=\"dark\"\n          delay=\"150\"\n          duration=\"250\"\n          hideDelay=\"50\"\n          arrow\n        >\n          {url ? (\n            <div {...otherAttr} className={`font-size-xs ${className}`}>\n              <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                <span>{formattedValue}</span>\n              </a>\n            </div>\n          ) : (\n            <div\n              style={{ color }}\n              {...otherAttr}\n              className={`font-size-xs ${className}`}\n            >\n              {formattedValue}\n            </div>\n          )}\n        </Tooltip>\n      </div>\n    );\n  }\n\n  return <Field name={fieldName} component={renderField} />;\n};\n\nexport default LabelField;\n\nLabelField.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  fieldConfig: PropTypes.shape({\n    getDynamicAttr: PropTypes.func,\n  }).isRequired,\n  arrayField: PropTypes.bool,\n  fieldValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({}),\n    PropTypes.any,\n  ]),\n  numberField: PropTypes.bool,\n};\n\nLabelField.defaultProps = {\n  arrayField: false,\n  fieldValue: null,\n  numberField: false,\n};\n","const RowSaveStatus = {\n  SAVED: 'SAVED',\n  PENDING: 'PENDING', // Row is newly created or edited\n  SAVING: 'SAVING',\n  ERROR: 'ERROR',\n};\n\nexport default RowSaveStatus;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst WizardPage = (props) => {\n  const Component = props.pageList[props.currentPage - 1];\n  return (\n    <div className=\"panel-body m-4\" data-testid=\"wizardPage\">\n      <Component\n        initialValues={props.initialValues}\n        nextPage={props.nextPage}\n        previousPage={props.prevPage}\n        goToPage={props.goToPage}\n        {...props.additionalProps}\n      />\n    </div>\n  );\n};\n\nexport default WizardPage;\n\nWizardPage.propTypes = {\n  pageList: PropTypes.arrayOf(PropTypes.func).isRequired,\n  nextPage: PropTypes.func.isRequired,\n  prevPage: PropTypes.func.isRequired,\n  goToPage: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  initialValues: PropTypes.shape({}),\n  additionalProps: PropTypes.shape({}),\n};\n\nWizardPage.defaultProps = {\n  initialValues: {},\n  additionalProps: {},\n};\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport \"components/wizard/WizardSteps.scss\";\n\nconst WizardSteps = (props) => (\n  <div className=\"steps-main-box\">\n    <div className=\"steps-inside-wrapper\">\n      {_.map(props.steps, (step, index) => (\n        <div\n          key={index}\n          className={`step-container ${props.currentStep === index + 1 ? \"active\" : \"\"}`}\n          data-testid=\"wizard-step\"\n          data-stepstate={\n            props.currentStep === index + 1 ? \"active\" : \"inactive\"\n          }\n        >\n          <div\n            className={props.showStepNumber ? \"circle filled\" : \"circle\"}\n            onClick={() => props.onClick(index + 1)}\n            onKeyPress={() => props.onClick(index + 1)}\n            role=\"button\"\n            tabIndex=\"0\"\n            disabled={!props.stepsClickable}\n          >\n            {props.showStepNumber && (\n              <span className=\"number\">{index + 1}</span>\n            )}\n          </div>\n          <div className=\"step-name\">{step}</div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport default WizardSteps;\n\nWizardSteps.propTypes = {\n  /** Array of steps names */\n  steps: PropTypes.arrayOf(PropTypes.string).isRequired,\n  /** Current step number */\n  currentStep: PropTypes.number.isRequired,\n  /** Function called after clicking on step, (non required) */\n  /* eslint-disable-next-line react/no-unused-prop-types */\n  onClick: PropTypes.func,\n  /** Indicator if steps are clickable (default = false) */\n  stepsClickable: PropTypes.bool,\n  showStepNumber: PropTypes.bool,\n};\n\nWizardSteps.defaultProps = {\n  onClick: (stepIdx) => stepIdx,\n  stepsClickable: false,\n  showStepNumber: false,\n};\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst WizardTitle = (props) => {\n  if (!props.title && !props.additionalTitle) {\n    return null;\n  }\n\n  return (\n    <div className=\"panel-heading movement-number\" data-testid=\"wizardTitle\">\n      {props.title ? (\n        <div>\n          {_.map(props.title, (element) => (\n            <span key={element.text} style={{ color: element.color }}>\n              {element.text}\n              <span style={{ color: \"black\" }}>{element.delimeter}</span>\n            </span>\n          ))}\n        </div>\n      ) : null}\n      {props.additionalTitle}\n    </div>\n  );\n};\n\nexport default WizardTitle;\n\nWizardTitle.propTypes = {\n  /** Array of steps names */\n  title: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  additionalTitle: PropTypes.oneOf([PropTypes.string, PropTypes.func]),\n};\n\nWizardTitle.defaultProps = {\n  additionalTitle: null,\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport WizardPage from \"components/wizard/WizardPage\";\nimport WizardSteps from \"components/wizard/WizardSteps\";\nimport WizardTitle from \"components/wizard/WizardTitle\";\n\n/** Wizard component. */\nclass Wizard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: this.props.currentPage || 1,\n      prevPage: this.props.prevPage || 1,\n      values: this.props.initialValues,\n    };\n\n    this.nextPage = this.nextPage.bind(this);\n    this.prevPage = this.prevPage.bind(this);\n    this.goToPage = this.goToPage.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentPage !== this.props.currentPage) {\n      this.goToPage(nextProps.currentPage, nextProps.initialValues);\n    }\n  }\n\n  /**\n   * Sets current page state as a previous page and takes user to the next page.\n   * @param {object} values\n   * @public\n   */\n  nextPage(values) {\n    const { currentPage } = this.state;\n    if (this.props.pageList.length > currentPage) {\n      this.setState({\n        prevPage: currentPage,\n        currentPage: currentPage + 1,\n        values,\n      });\n      this.props.updateWizardValues(currentPage + 1, values);\n    } else {\n      this.setState({ values });\n      this.props.updateWizardValues(currentPage, values);\n    }\n  }\n\n  /**\n   * Returns user to the previous page.\n   * @param {object} values\n   * @public\n   */\n  prevPage(values) {\n    const { prevPage } = this.state;\n    if (prevPage > 0) {\n      this.setState({\n        prevPage: prevPage - 1,\n        currentPage: prevPage,\n        values,\n      });\n      this.props.updateWizardValues(prevPage, values);\n    } else {\n      this.setState({ values });\n      this.props.updateWizardValues(1, values);\n    }\n  }\n\n  /**\n   * Sets current page state as a previous page and takes user to the given number page.\n   * @param {object} values\n   * @param {number} currentPage\n   * @public\n   */\n  goToPage(currentPage, values) {\n    this.setState({ prevPage: currentPage - 1, currentPage, values });\n    this.props.updateWizardValues(currentPage, values);\n  }\n\n  render() {\n    const { currentPage, values } = this.state;\n    const {\n      title,\n      pageList,\n      stepList,\n      additionalTitle,\n      additionalProps,\n      showStepNumber,\n    } = this.props;\n\n    return (\n      <div className=\"content-wrap\" data-testid=\"content-wrap\">\n        <WizardTitle\n          title={title}\n          additionalTitle={additionalTitle}\n          values={values}\n        />\n        <WizardSteps\n          steps={stepList}\n          currentStep={currentPage}\n          showStepNumber={showStepNumber}\n        />\n        <div className=\"panel panel-primary\">\n          <WizardPage\n            pageList={pageList}\n            currentPage={currentPage}\n            initialValues={values}\n            nextPage={this.nextPage}\n            prevPage={this.prevPage}\n            goToPage={this.goToPage}\n            additionalProps={additionalProps}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  hasPackingSupport: state.session.currentLocation.hasPackingSupport,\n});\n\nexport default connect(mapStateToProps, {\n  // showSpinner, hideSpinner, fetchTranslations,\n})(Wizard);\n\nWizard.propTypes = {\n  /** Initial components' data */\n  initialValues: PropTypes.shape({\n    shipmentStatus: PropTypes.string,\n  }),\n  title: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  additionalTitle: PropTypes.oneOf([PropTypes.string, PropTypes.func]),\n  currentPage: PropTypes.number.isRequired,\n  prevPage: PropTypes.number.isRequired,\n  pageList: PropTypes.arrayOf(PropTypes.func).isRequired,\n  stepList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  updateWizardValues: PropTypes.func,\n  additionalProps: PropTypes.shape({}),\n  showStepNumber: PropTypes.bool,\n};\n\nWizard.defaultProps = {\n  initialValues: {},\n  additionalProps: {},\n  additionalTitle: null,\n  updateWizardValues: () => {},\n  showStepNumber: false,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport RowSaveStatus from \"consts/rowSaveStatus\";\n\nconst RowSaveIndicator = ({ lineItemSaveStatus }) => (\n  <div\n    className={`${lineItemSaveStatus?.toLowerCase()} line-item-save-indicator`}\n  />\n);\n\nexport default RowSaveIndicator;\n\nRowSaveIndicator.propTypes = {\n  lineItemSaveStatus: PropTypes.string,\n};\n\nRowSaveIndicator.defaultProps = {\n  // Fetched items have to be already saved,\n  // so I am setting SaveStatus.SAVED as a default\n  lineItemSaveStatus: RowSaveStatus.SAVED,\n};\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Tooltip } from \"react-tippy\";\n\nimport { renderFormField } from \"utils/form-utils\";\nimport RowSaveIndicator from \"utils/RowSaveIndicator\";\n\nclass TableRow extends Component {\n  shouldComponentUpdate(nextProps) {\n    return !_.isEqualWith(this.props, nextProps, (objValue, othValue) => {\n      if (typeof objValue === \"function\" || typeof othValue === \"function\") {\n        return true;\n      }\n\n      return undefined;\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  rowRender(\n    properties,\n    fieldsConfig,\n    focusFieldMap,\n    field,\n    addRow,\n    removeRow,\n    index,\n    rowValues,\n    rowRef,\n  ) {\n    return _.map(fieldsConfig.fields, (config, name) => {\n      const dynamicAttr = config.getDynamicAttr\n        ? config.getDynamicAttr(properties)\n        : {};\n      const { attributes } = config;\n      const { hide } = dynamicAttr;\n      const flexWidth = dynamicAttr.flexWidth || config.flexWidth;\n      const fixedWidth = dynamicAttr.fixedWidth || config.fixedWidth;\n      if (!hide) {\n        return (\n          <div\n            key={`${field}.${name}`}\n            className={`align-self-center ${attributes && attributes.cellClassName ? attributes.cellClassName : \"\"}`}\n            style={{\n              flex: fixedWidth\n                ? `0 1 ${fixedWidth}`\n                : `${flexWidth || \"12\"} 1 0`,\n              minWidth: 0,\n            }}\n            role=\"cell\"\n            aria-label={config?.defaultMessage}\n          >\n            {renderFormField(config, `${field}.${name}`, {\n              ...properties,\n              arrayField: true,\n              arrowsNavigation: fieldsConfig.arrowsNavigation,\n              focusLeft: focusFieldMap[name].left,\n              focusRight: focusFieldMap[name].right,\n              focusThis: name,\n              addRow,\n              removeRow,\n              rowIndex: index,\n              fieldValue:\n                config.fieldKey === \"\"\n                  ? rowValues\n                  : _.get(rowValues, config.fieldKey || name),\n              fieldRef: (el) => rowRef(el, name),\n            })}\n          </div>\n        );\n      }\n      return null;\n    });\n  }\n\n  render() {\n    const {\n      fieldsConfig,\n      index,\n      field,\n      addRow,\n      properties,\n      removeRow,\n      rowValues = {},\n      rowRef = () => {},\n    } = this.props;\n    const fieldNames = _.keys(fieldsConfig.fields);\n    const focusFieldMap = {};\n    _.forEach(fieldNames, (name, ind) => {\n      focusFieldMap[name] = {\n        left: ind > 0 ? fieldNames[ind - 1] : null,\n        right: ind < fieldNames.length - 1 ? fieldNames[ind + 1] : null,\n      };\n    });\n\n    const dynamicRowAttr = fieldsConfig.getDynamicRowAttr\n      ? fieldsConfig.getDynamicRowAttr({ ...properties, index, rowValues })\n      : {};\n    const rowIndex = !_.isNil(properties.parentIndex)\n      ? properties.parentIndex\n      : index;\n    const className = `table-row ${rowIndex % 2 === 0 ? \"even-row\" : \"\"} ${dynamicRowAttr.className ? dynamicRowAttr.className : \"\"}`;\n    const tooltip = dynamicRowAttr.tooltip ? dynamicRowAttr.tooltip : null;\n\n    if (dynamicRowAttr.hideRow) {\n      return null;\n    }\n\n    return (\n      <div {...dynamicRowAttr} className={className} role=\"row\">\n        {tooltip && (\n          <Tooltip\n            title={tooltip}\n            theme=\"transparent\"\n            delay=\"150\"\n            duration=\"250\"\n            hideDelay=\"50\"\n          >\n            <div className=\"d-flex flex-row border-bottom table-inner-row\">\n              {properties.isAutosaveEnabled && (\n                <RowSaveIndicator\n                  lineItemSaveStatus={rowValues.rowSaveStatus}\n                />\n              )}\n              {this.rowRender(\n                properties,\n                fieldsConfig,\n                focusFieldMap,\n                field,\n                addRow,\n                removeRow,\n                index,\n                rowValues,\n                rowRef,\n              )}\n            </div>\n          </Tooltip>\n        )}\n        {!tooltip && (\n          <div className=\"d-flex flex-row border-bottom table-inner-row\">\n            {properties.isAutosaveEnabled && (\n              <RowSaveIndicator lineItemSaveStatus={rowValues.rowSaveStatus} />\n            )}\n            {this.rowRender(\n              properties,\n              fieldsConfig,\n              focusFieldMap,\n              field,\n              addRow,\n              removeRow,\n              index,\n              rowValues,\n              rowRef,\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TableRow;\n\nTableRow.propTypes = {\n  fieldsConfig: PropTypes.shape({\n    getDynamicAttr: PropTypes.func,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  field: PropTypes.string.isRequired,\n  addRow: PropTypes.func.isRequired,\n  removeRow: PropTypes.func.isRequired,\n  properties: PropTypes.shape({}).isRequired,\n  rowValues: PropTypes.shape({}),\n  rowRef: PropTypes.func,\n};\n\nTableRow.defaultProps = {\n  rowValues: {},\n  rowRef: undefined,\n};\n"],"names":["props","React","BaseField","_extends","renderInput","_ref","inputClassName","className","attributes","_objectWithoutProperties","_excluded","Input","isFormElement","ROW_HEIGHT","TableBodyVirtualized","_Component","_this","_classCallCheck","_callSuper","rowRenderer","bind","getRowHeight","bindListRef","getHeight","_inherits","key","value","this","list","recomputeRowHeights","_this$props","_this$props$fieldsCon","fieldsConfig","subfieldKey","getDynamicRowAttr","fields","properties","height","maxTableHeight","window","innerHeight","_","field","dynamicAttr","_objectSpread","rowValues","subfields","hideRow","length","reduce","acc","_fields$value","index","_this$props2","_this$props2$fieldsCo","hideSubfields","_ref2","_fields$value2","style","_this$props3","_this$props3$tableRef","tableRef","_this$props3$addRow","addRow","row","arguments","undefined","push","concat","name","RowComponent","rowComponent","TableRow","totalCount","rowCount","removeRow","remove","rowRef","el","fieldName","translate","ref","_this2","_this$props4","pageSize","loadMoreRows","isRowLoaded","loadPage","isFirstPageLoaded","InfiniteLoader","minimumBatchSize","_ref3","onRowsRendered","AutoSizer","disableHeight","_ref4","width","List","rowHeight","Component","connect","state","session","translateWithDefaultMessage","getTranslate","localize","propTypes","PropTypes","getDynamicAttr","isRequired","defaultProps","FieldArrayComponent","fieldRefs","focusField","copyDown","fieldToScroll","focus","scrollIntoView","valueToCopy","disabled","isPaginated","AddButton","addButton","virtualized","_fieldsConfig$overflo","overflowStyle","showRowSaveIndicator","shouldScroll","table","document","querySelectorAll","block","_typeof","insert","splice","TableBodyComponent","TableBody","headerGroupings","config","flex","fixedWidth","flexWidth","minWidth","textAlign","headerAlign","label","Translate","id","defaultMessage","defaultLabel","hide","headerHtml","headerLabel","headerDefaultMessage","headerClassName","Tooltip","html","headerTooltip","headerDefaultTooltip","theme","arrow","delay","duration","hideDelay","multilineHeader","required","fontSize","headerFontSize","overflowX","overflowY","maxHeight","type","onClick","ArrayField","fieldConfig","otherProps","FieldArray","component","_props$tableRef","_props$addRow","subfield","isEmptyData","isLoading","emptyDataMessageId","defaultEmptyDataMessage","Spinner","map","parentIndex","LabelField","arrayField","fieldValue","_props$fieldConfig","FieldLabel","attr","formatValue","color","tooltipValue","showValueTooltip","url","numberField","otherAttr","cellClassName","renderField","input","htmlFor","formattedValue","href","target","rel","Field","SAVED","PENDING","SAVING","ERROR","WizardPage","pageList","currentPage","initialValues","nextPage","previousPage","prevPage","goToPage","additionalProps","WizardSteps","steps","step","currentStep","showStepNumber","onKeyPress","role","tabIndex","stepsClickable","stepIdx","WizardTitle","title","additionalTitle","element","text","delimeter","Wizard","values","nextProps","setState","updateWizardValues","_this$state","stepList","locale","activeLanguage","stockMovementTranslationsFetched","fetchedTranslations","stockMovement","hasPackingSupport","currentLocation","shipmentStatus","RowSaveIndicator","lineItemSaveStatus","toLowerCase","RowSaveStatus","objValue","othValue","focusFieldMap","renderFormField","arrowsNavigation","focusLeft","left","focusRight","right","focusThis","rowIndex","fieldKey","fieldRef","_this$props$rowValues","_this$props$rowRef","fieldNames","ind","dynamicRowAttr","tooltip","isAutosaveEnabled","rowSaveStatus","rowRender"],"sourceRoot":""}