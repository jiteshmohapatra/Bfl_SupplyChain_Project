{"version":3,"file":"bundle.929af1b45eb780bfc503.6950.js","mappings":";ojBAUA,IAAMA,EAAW,SAAHC,GAQR,IAPJC,EAAiBD,EAAjBC,kBACAC,EAAuBF,EAAvBE,wBACAC,EAAYH,EAAZG,aACAC,EAAYJ,EAAZI,aACAC,EAAmBL,EAAnBK,oBACAC,EAA4BN,EAA5BM,6BACGC,+WAAGC,CAAAR,EAAAS,GAcN,OACEC,EAAAA,cAACC,EAAAA,EAASC,EAAA,GACJL,EAAG,CACPM,MAdGN,EAAIM,MAILT,EACKE,EAA6BC,EAAIM,MAAOR,GAG1CS,IAAOP,EAAIM,OAAOE,OAAOd,GAPvB,KAcPE,aAAcA,QAAAA,EAAgBD,IAGpC,EAQA,SAAec,EAAAA,EAAAA,KANS,SAACC,GAAK,MAAM,CAClChB,kBAAmBgB,EAAMC,QAAQjB,kBACjCC,wBAAyBe,EAAMC,QAAQhB,wBACvCI,8BAA8Ba,EAAAA,EAAAA,IAAWF,EAAMG,UAChD,GAED,CAAwCrB,GAExCA,EAASsB,aAAe,CACtBjB,cAAc,EACdC,oBAAqBiB,EAAAA,EAAWC,OAChCpB,kBAAcqB,GAGhBzB,EAAS0B,UAAY,CACnBxB,kBAAmByB,IAAAA,OAAiBC,WACpCzB,wBAAyBwB,IAAAA,OAAiBC,WAC1CxB,aAAcuB,IAAAA,OACdtB,aAAcsB,IAAAA,KACdrB,oBAAqBqB,IAAAA,OACrBpB,6BAA8BoB,IAAAA,KAAeC,ofC5C/C,IAAMC,EAAclB,EAAAA,YAAiB,SAACmB,EAAOC,GAC3C,IACEC,EAOEF,EAPFE,QACAC,EAMEH,EANFG,MACAnB,EAKEgB,EALFhB,MACAoB,EAIEJ,EAJFI,YACAC,EAGEL,EAHFK,QACAC,EAEEN,EAFFM,eACAC,EACEP,EADFO,oBAMF,OACE1B,EAAAA,cAAA,OACEoB,IAAKA,EACLO,SAAS,IACTC,KAAK,SACLC,UAAU,6CACVR,QAASA,EACTS,UAXsB,SAACC,GACP,UAAdA,EAAMC,KAAiBX,GAC7B,GAWIrB,EAAAA,cAAA,QAAM6B,UAAU,kCACd7B,EAAAA,cAACiC,EAAAA,EAAS,CAACC,GAAIZ,EAAOG,eAAgBA,IACtCzB,EAAAA,cAAA,YAAO0B,EAAoBvB,IAAUoB,IAEvCvB,EAAAA,cAAA,OAAK6B,UAAU,6BACZ1B,EACCH,EAAAA,cAAA,UACE,aAAW,YACXmC,KAAK,SACLN,UAAU,oBACVR,QAASG,GAETxB,EAAAA,cAACoC,EAAAA,IAAW,OAGdpC,EAAAA,cAAA,OAAK6B,UAAU,qBACb7B,EAAAA,cAACqC,EAAAA,IAAc,QAM3B,IAEMC,EAAa,SAACnB,GAClB,QACEhB,EASEgB,EATFhB,MACAoC,EAQEpB,EARFoB,SACAC,EAOErB,EAPFqB,WACAjB,EAMEJ,EANFI,YACAkB,EAKEtB,EALFsB,MACAC,EAIEvB,EAJFuB,WACAjB,EAGEN,EAHFM,eACA/B,EAEEyB,EAFFzB,aACAiD,EACExB,EADFwB,oBAEFC,GAA4CC,EAAAA,EAAAA,KAAY,SAACtC,GAAK,MAAM,CAClEuC,YAAYC,EAAAA,EAAAA,IAAcxC,EAAMG,UAChCf,qBAAqBc,EAAAA,EAAAA,IAAWF,EAAMG,UACvC,IAHOoC,EAAUF,EAAVE,WAAYnD,EAAmBiD,EAAnBjD,oBAI6BqD,MAAfC,EAAAA,EAAAA,WAAS,KAAM,s4BAA1CC,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAqBxBI,EAAS,WAAH,OAASD,GAAa,EAAM,EAIlCE,EAAiBH,EAAY,gCAAkC,GAC/DI,EAAenD,EAAQ,8BAAgC,GAEvDoD,EAAepD,EAAQC,IAAOD,EAAOqC,GAAc,KACnDgB,EAAmB,CAACD,GAAgBnD,IAAO,IAAIqD,KAAQjB,IAEvDkB,EAAsBhE,EAAeoD,EAAa,KAExD,OACE9C,EAAAA,cAAA,OACE6B,UAAS,wBAAA8B,OAA0BN,EAAc,KAAAM,OAAIL,GACrD,cAAY,eAEZtD,EAAAA,cAAC4D,EAAAA,GAAU1D,EAAA,GACLiB,EAAK,CACT0C,YACE7D,EAAAA,cAACkB,EAAW,CACVQ,oBAjCkB,SAACoC,GAC3B,OAAKA,EAIDpE,GAAgBiD,EACXhD,EAAoBmE,EAAMnB,GAG5BvC,IAAO0D,GAAMzD,OAAOmC,GAPlB,IAQX,EAwBUhB,QAvCM,SAACuC,GACfA,EAAEC,kBACFzB,EAAS,KACX,EAqCUd,eAAgBA,IAGpBI,UAAU,qBACVoC,gBAAiB1C,EACjBD,MAAOmB,EACPyB,eAAgBV,EAChBW,SAAUZ,EACVhB,SAlDkB,SAACuB,GAAI,OAAKvB,EAASuB,EAAKzD,OAAOmC,GAAY,EAmD7D4B,aA9BU,WAAH,OAASjB,GAAa,EAAK,EA+BlCkB,SAAUjB,EACVkB,eAAgBlB,EAChBmB,4BAA0B,EAC1BC,gBAAgB,eAChBC,kBAAgB,EAChBC,OAAQhB,EACRiB,wBAAsB,EACtBnC,WAAYA,EACZE,WAAYA,EACZkC,cAAe,GACfC,uBAAwB,EACxBC,UAAW,KAInB,EAMAxC,EAAW3B,aAAe,CACxB4B,cAAUzB,EACV2B,MAAO,GACPhB,eAAgB,GAChBF,YAAa,GACbiB,WAAY,aACZE,WAAY,QACZvC,MAAO,KACPT,cAAc,EACdiD,oBAAqB/B,EAAAA,EAAWmE,SAGlCzC,EAAWvB,UAAY,CACrBwB,SAAUvB,IAAAA,KACVb,MAAOa,IAAAA,OACPyB,MAAOzB,IAAAA,OACPS,eAAgBT,IAAAA,OAChBO,YAAaP,IAAAA,OACbwB,WAAYxB,IAAAA,OACZ0B,WAAY1B,IAAAA,OACZtB,aAAcsB,IAAAA,KACd2B,oBAAqB3B,IAAAA,QAGvB,QA5B4B,SAACG,GAAK,OAChCnB,EAAAA,cAACgF,EAAAA,EAAS9E,EAAA,GAAKiB,EAAK,CAAE8D,YAAa3C,IAAc,sECpHnD,QA7BgC,SAAHhD,GAIvB,IAHJ4F,EAAiB5F,EAAjB4F,kBACAC,EAA6B7F,EAA7B6F,8BACAC,EAAkB9F,EAAlB8F,mBAEAxC,GAEIC,EAAAA,EAAAA,KAAY,SAACtC,GAAK,MAAM,CAC1B8E,gBAAiB9E,EAAMC,QAAQ6E,gBAC/BC,oBAAqB/E,EAAMgF,WAAWD,oBACvC,IAJCD,EAAezC,EAAfyC,gBAAiBC,EAAmB1C,EAAnB0C,oBAKbE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAIJJ,IACEF,GACFF,IAEEG,SAAAA,EAAiBnD,IACnBiD,IAEFK,GAASG,EAAAA,EAAAA,KAA6B,IAE1C,GAAG,CAACL,GACN,8DCzBA,SACEM,kBAAmB,SAACC,GAAM,OAAKC,EAAAA,GAAUC,IAAIC,EAAAA,GAAoBH,EAAO,EACxEI,iBAAkB,SAAC/D,GAAE,OAAK4D,EAAAA,GAAUC,KAAIG,EAAAA,EAAAA,IAAqBhE,GAAI,EACjEiE,oBAAqB,SAACjE,EAAIkE,GAAO,OAAKN,EAAAA,GAAUO,MAAKH,EAAAA,EAAAA,IAAqBhE,GAAKkE,EAAQ,EACvFE,oBAAqB,SAACpE,GAAE,OAAK4D,EAAAA,GAAS,QAAQI,EAAAA,EAAAA,IAAqBhE,GAAI,EACvEqE,WAAY,SAACrE,GAAE,OAAK4D,EAAAA,GAAS,QAAQU,EAAAA,EAAAA,IAA0BtE,GAAI,EACnEuE,eAAgB,SAACvE,GAAE,OAAK4D,EAAAA,GAAS,QAAQY,EAAAA,EAAAA,IAAgCxE,GAAI,qCCA/E,QAPmB,CACjB6C,QAAS,mCACTlE,OAAQ,kCACR8F,OAAQ,kCACRC,QAAS,0KCPX,SACEC,OAAQ,CACN1E,KAAM2E,EAAAA,EACNC,WAAY,CACVC,SAAU,KACVC,eAAe,EACf1F,YAAa,uDACb2F,mBAAoB,SACpBC,kBAAkB,EAClBC,OAAO,EACPC,mBAAmB,EACnBC,mBAAmB,GAErBC,eAAgB,SAAFjI,GAAa,MAAQ,CACjCkI,QADyBlI,EAARmI,SAElB,GAEHC,UAAW,CACTvF,KAAM2E,EAAAA,EACNC,WAAY,CACVY,OAAO,EACPC,aAAa,EACbC,UAAU,EACVC,OAAO,EACPd,SAAU,KACVe,SAAU,OACVP,QAAS,GACTQ,cAAe,SAACR,GAAO,OAAKA,CAAO,EACnCP,eAAe,EACf1F,YAAa,0DACb2F,mBAAoB,aACpBC,kBAAkB,GAEpBI,eAAgB,SAAFU,GAAyB,MAAQ,CAC7CC,YADqCD,EAApBE,qBAElB,GAEHC,qBAAsB,CACpBjG,KAAMG,EAAAA,EACNyE,WAAY,CACVrH,cAAc,EACdiD,oBAAqB/B,EAAAA,EAAWC,OAChC4B,MAAO,4CACPhB,eAAgB,oBAEhBe,WAAY,aACZyE,eAAe,IAGnBoB,mBAAoB,CAClBlG,KAAMG,EAAAA,EACNyE,WAAY,CACVrH,cAAc,EACdiD,oBAAqB/B,EAAAA,EAAWC,OAChC4B,MAAO,6CACPhB,eAAgB,qBAEhBe,WAAY,aACZyE,eAAe,itCCtDrB,IAAMqB,EAA2B,SAAHhJ,GAOxB,IANJiJ,EAAejJ,EAAfiJ,gBACAC,EAAYlJ,EAAZkJ,aACAC,EAAenJ,EAAfmJ,gBACAC,EAASpJ,EAAToJ,UACAC,EAAYrJ,EAAZqJ,aACAC,EAAatJ,EAAbsJ,cAEMT,GAAuBU,EAAAA,EAAAA,cAC3BC,EAAAA,EAAAA,IAAoBN,EAAcC,GAClC,CAACD,EAAcC,IAGjB,OACEzI,EAAAA,cAAA,OAAK6B,UAAU,wCACb7B,EAAAA,cAAC+I,EAAAA,EAAU,CACTJ,aAAcA,EACdK,mBAAoB,SAACC,GAAM,OAAKV,EAAeW,EAAC,CAAC,EAAID,GAAS,EAC9DP,UAASQ,EAAAA,EAAA,GACJR,GAAS,IACZP,qBAAAA,IAEFS,cAAeA,EACfO,uBAAuB,4DACvBC,8BAA8B,4BAC9BC,cAAc,IACdC,kBAAgB,EAChBC,QAAQ,IAIhB,EAOA,SAAejJ,EAAAA,EAAAA,KALS,SAACC,GAAK,MAAM,CAClCiI,aAAcjI,EAAMC,QAAQgJ,aAAahB,aACzCC,gBAAiBlI,EAAMC,QAAQgJ,aAAaf,gBAC7C,GAED,CAAwCH,GAExCA,EAAyBvH,UAAY,CACnCwH,gBAAiBvH,IAAAA,KAAeC,WAChCuH,aAAcxH,IAAAA,OAAiBC,WAC/BwH,gBAAiBzH,IAAAA,OAAiBC,WAClC2H,cAAe5H,IAAAA,MAAgB,CAAC,GAAGC,WACnC0H,aAAc3H,IAAAA,MAAgB,CAAC,GAAGC,WAClCyH,UAAW1H,IAAAA,MAAgB,CAAC,GAAGC,iDC5C3BwI,EAA0B,SAAHnK,GAAA,IAAMoK,EAAapK,EAAboK,cAAa,OAC9C1J,EAAAA,cAAA,OAAK6B,UAAU,2BACb7B,EAAAA,cAAA,QAAM6B,UAAU,kCACd7B,EAAAA,cAACiC,EAAAA,EAAS,CACRC,GAAG,iCACHT,eAAe,0BAGlBiI,GACC1J,EAAAA,cAAA,OAAK6B,UAAU,yDACb7B,EAAAA,cAAC2J,EAAAA,GAAI,CAACC,GAAIC,EAAAA,GAAmBC,UAC3B9J,EAAAA,cAAC+J,EAAAA,EAAM,CACLC,aAAa,wBACbvH,MAAM,gDACNwH,QAAQ,cAKZ,EAOR,SAAeC,EAAAA,EAAAA,aAAW5J,EAAAA,EAAAA,KAJF,SAACC,GAAK,MAAM,CAClCmJ,cAAenJ,EAAMC,QAAQkJ,cAC9B,GAEyBpJ,CAAyBmJ,IAEnDA,EAAwB1I,UAAY,CAClC2I,cAAe1I,IAAAA,KAAeC,qkCC/BhC,IAAMkJ,EAAsB,SAAH7K,GAA+C,IAAzCuH,EAAMvH,EAANuH,OAAQuD,EAAW9K,EAAX8K,YAAaC,EAAa/K,EAAb+K,cAEHrH,EAAAsH,GAAnBrH,EAAAA,EAAAA,UAAS,WAAU,GAAxCsH,EAAMvH,EAAA,GAAEwH,EAASxH,EAAA,GAC0ByH,EAAAH,GAAZrH,EAAAA,EAAAA,UAAS,IAAG,GAA3CyH,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAsBlC,OAVA/E,EAAAA,EAAAA,YAAU,WAER2E,GACF,GAAG,KAGH3E,EAAAA,EAAAA,YAAU,WAjBe,IAACkF,EAElBC,EAFkBD,EAkBP/D,GAhBXgE,GACJT,aAAW,EAAXA,EAAaU,QAAS,GACtBV,EAAYW,MAAK,SAACC,GAAI,OAAKA,EAAKvI,QAAUmI,CAAU,MACjCC,EAAcZ,UACjCO,EAAUK,EAAcZ,SACxBU,EAAeE,EAAcpI,OAYjC,GAAG,CAAC2H,EAAavD,IAEV7G,EAAAA,cAACiL,EAAAA,EAAe,CAACpE,OAAQ6D,EAAaT,QAASM,GACxD,EAQMW,EAAqB,CACzBb,cAAec,EAAAA,IAGjB,SAAe7K,EAAAA,EAAAA,KAVS,SAACC,GAAK,MAAM,CAElC6J,YAAa7J,EAAM6K,cAAc3D,SACjC4D,4BAA6B9K,EAAM6K,cAAcE,eAClD,GAQCJ,EAFF,CAGEf,GAEFA,EAAoBpJ,UAAY,CAE9B8F,OAAQ7F,IAAAA,OAAiBC,WACzBmJ,YAAapJ,IAAAA,QACXA,IAAAA,MAAgB,CACdkB,GAAIlB,IAAAA,OAAiBC,WACrBd,MAAOa,IAAAA,OAAiBC,WACxBwB,MAAOzB,IAAAA,OAAiBC,WACxBgJ,QAASjJ,IAAAA,OAAiBC,cAE5BA,WACFoJ,cAAerJ,IAAAA,KAAeC,iWC7DhCsK,EAAA,kBAAAxH,CAAA,MAAAyH,EAAAzH,EAAA,GAAA0H,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAzH,EAAA0H,GAAAD,EAAAzH,GAAA0H,EAAAtL,KAAA,EAAA6L,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAhB,EAAAzH,EAAA0H,GAAA,OAAAC,OAAAK,eAAAP,EAAAzH,EAAA,CAAA5D,MAAAsL,EAAAgB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAnB,EAAAzH,EAAA,KAAAyI,EAAA,aAAAhB,GAAAgB,EAAA,SAAAhB,EAAAzH,EAAA0H,GAAA,OAAAD,EAAAzH,GAAA0H,CAAA,WAAAmB,EAAApB,EAAAzH,EAAA0H,EAAAG,GAAA,IAAAI,EAAAjI,GAAAA,EAAA4H,qBAAAkB,EAAA9I,EAAA8I,EAAAX,EAAAR,OAAA5B,OAAAkC,EAAAL,WAAAS,EAAA,IAAAU,EAAAlB,GAAA,WAAAE,EAAAI,EAAA,WAAA/L,MAAA4M,EAAAvB,EAAAC,EAAAW,KAAAF,CAAA,UAAAc,EAAAxB,EAAAzH,EAAA0H,GAAA,WAAAtJ,KAAA,SAAA8K,IAAAzB,EAAA0B,KAAAnJ,EAAA0H,GAAA,OAAAD,GAAA,OAAArJ,KAAA,QAAA8K,IAAAzB,EAAA,EAAAzH,EAAA6I,KAAAA,EAAA,IAAAO,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAjC,OAAAkC,eAAAC,EAAAF,GAAAA,EAAAA,EAAA1E,EAAA,MAAA4E,GAAAA,IAAApC,GAAAG,EAAAsB,KAAAW,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAC,EAAAL,EAAA9B,UAAAkB,EAAAlB,UAAAD,OAAA5B,OAAA4D,GAAA,SAAAK,EAAAvC,GAAA,0BAAAwC,SAAA,SAAAjK,GAAAyI,EAAAhB,EAAAzH,GAAA,SAAAyH,GAAA,YAAAyC,QAAAlK,EAAAyH,EAAA,gBAAA0C,EAAA1C,EAAAzH,GAAA,SAAAoK,EAAA1C,EAAAK,EAAAE,EAAAE,GAAA,IAAAE,EAAAY,EAAAxB,EAAAC,GAAAD,EAAAM,GAAA,aAAAM,EAAAjK,KAAA,KAAAmK,EAAAF,EAAAa,IAAAE,EAAAb,EAAAnM,MAAA,OAAAgN,GAAA,UAAAiB,EAAAjB,IAAAvB,EAAAsB,KAAAC,EAAA,WAAApJ,EAAAsK,QAAAlB,EAAAmB,SAAAC,MAAA,SAAA/C,GAAA2C,EAAA,OAAA3C,EAAAQ,EAAAE,EAAA,aAAAV,GAAA2C,EAAA,QAAA3C,EAAAQ,EAAAE,EAAA,IAAAnI,EAAAsK,QAAAlB,GAAAoB,MAAA,SAAA/C,GAAAc,EAAAnM,MAAAqL,EAAAQ,EAAAM,EAAA,aAAAd,GAAA,OAAA2C,EAAA,QAAA3C,EAAAQ,EAAAE,EAAA,IAAAA,EAAAE,EAAAa,IAAA,KAAAxB,EAAAK,EAAA,gBAAA3L,MAAA,SAAAqL,EAAAI,GAAA,SAAA4C,IAAA,WAAAzK,GAAA,SAAAA,EAAA0H,GAAA0C,EAAA3C,EAAAI,EAAA7H,EAAA0H,EAAA,WAAAA,EAAAA,EAAAA,EAAA8C,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAhJ,EAAA0H,EAAAG,GAAA,IAAAE,EAAAqB,EAAA,gBAAAnB,EAAAE,GAAA,GAAAJ,IAAAuB,EAAA,MAAAoB,MAAA,mCAAA3C,IAAAwB,EAAA,cAAAtB,EAAA,MAAAE,EAAA,OAAA/L,MAAAqL,EAAAkD,MAAA,OAAA9C,EAAA+C,OAAA3C,EAAAJ,EAAAqB,IAAAf,IAAA,KAAAE,EAAAR,EAAAgD,SAAA,GAAAxC,EAAA,KAAAE,EAAAuC,EAAAzC,EAAAR,GAAA,GAAAU,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAV,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAAqB,EAAA,MAAArB,EAAAwB,EAAA1B,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAuB,EAAA,IAAAK,EAAAV,EAAAjJ,EAAA0H,EAAAG,GAAA,cAAA8B,EAAAvL,KAAA,IAAA2J,EAAAF,EAAA8C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAApN,MAAAuN,EAAAT,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAhB,EAAAvL,OAAA2J,EAAAwB,EAAA1B,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAS,EAAAT,IAAA,YAAA4B,EAAA9K,EAAA0H,GAAA,IAAAG,EAAAH,EAAAkD,OAAA7C,EAAA/H,EAAAoI,SAAAP,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAmD,SAAA,eAAAhD,GAAA7H,EAAAoI,SAAA,SAAAV,EAAAkD,OAAA,SAAAlD,EAAAwB,IAAAzB,EAAAqD,EAAA9K,EAAA0H,GAAA,UAAAA,EAAAkD,SAAA,WAAA/C,IAAAH,EAAAkD,OAAA,QAAAlD,EAAAwB,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA2B,EAAA,IAAAvB,EAAAgB,EAAAlB,EAAA/H,EAAAoI,SAAAV,EAAAwB,KAAA,aAAAjB,EAAA7J,KAAA,OAAAsJ,EAAAkD,OAAA,QAAAlD,EAAAwB,IAAAjB,EAAAiB,IAAAxB,EAAAmD,SAAA,KAAArB,EAAA,IAAArB,EAAAF,EAAAiB,IAAA,OAAAf,EAAAA,EAAAwC,MAAAjD,EAAA1H,EAAAoL,YAAAjD,EAAA/L,MAAAsL,EAAA2D,KAAArL,EAAAsL,QAAA,WAAA5D,EAAAkD,SAAAlD,EAAAkD,OAAA,OAAAlD,EAAAwB,IAAAzB,GAAAC,EAAAmD,SAAA,KAAArB,GAAArB,GAAAT,EAAAkD,OAAA,QAAAlD,EAAAwB,IAAA,IAAAiC,UAAA,oCAAAzD,EAAAmD,SAAA,KAAArB,EAAA,UAAA+B,EAAA9D,GAAA,IAAAzH,EAAA,CAAAwL,OAAA/D,EAAA,SAAAA,IAAAzH,EAAAyL,SAAAhE,EAAA,SAAAA,IAAAzH,EAAA0L,WAAAjE,EAAA,GAAAzH,EAAA2L,SAAAlE,EAAA,SAAAmE,WAAAC,KAAA7L,EAAA,UAAA8L,EAAArE,GAAA,IAAAzH,EAAAyH,EAAAsE,YAAA,GAAA/L,EAAA5B,KAAA,gBAAA4B,EAAAkJ,IAAAzB,EAAAsE,WAAA/L,CAAA,UAAA+I,EAAAtB,GAAA,KAAAmE,WAAA,EAAAJ,OAAA,SAAA/D,EAAAwC,QAAAsB,EAAA,WAAAS,OAAA,YAAA9G,EAAAlF,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAA0H,EAAA1H,EAAAmI,GAAA,GAAAT,EAAA,OAAAA,EAAAyB,KAAAnJ,GAAA,sBAAAA,EAAAqL,KAAA,OAAArL,EAAA,IAAAiM,MAAAjM,EAAA+G,QAAA,KAAAgB,GAAA,EAAAE,EAAA,SAAAoD,IAAA,OAAAtD,EAAA/H,EAAA+G,QAAA,GAAAc,EAAAsB,KAAAnJ,EAAA+H,GAAA,OAAAsD,EAAAjP,MAAA4D,EAAA+H,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjP,MAAAqL,EAAA4D,EAAAV,MAAA,EAAAU,CAAA,SAAApD,EAAAoD,KAAApD,CAAA,YAAAkD,UAAAd,EAAArK,GAAA,2BAAAyJ,EAAA7B,UAAA8B,EAAA3B,EAAAgC,EAAA,eAAA3N,MAAAsN,EAAAf,cAAA,IAAAZ,EAAA2B,EAAA,eAAAtN,MAAAqN,EAAAd,cAAA,IAAAc,EAAAyC,YAAAzD,EAAAiB,EAAAnB,EAAA,qBAAAvI,EAAAmM,oBAAA,SAAA1E,GAAA,IAAAzH,EAAA,mBAAAyH,GAAAA,EAAA2E,YAAA,QAAApM,IAAAA,IAAAyJ,GAAA,uBAAAzJ,EAAAkM,aAAAlM,EAAAqM,MAAA,EAAArM,EAAAsM,KAAA,SAAA7E,GAAA,OAAAE,OAAA4E,eAAA5E,OAAA4E,eAAA9E,EAAAiC,IAAAjC,EAAA+E,UAAA9C,EAAAjB,EAAAhB,EAAAc,EAAA,sBAAAd,EAAAG,UAAAD,OAAA5B,OAAAgE,GAAAtC,CAAA,EAAAzH,EAAAyM,MAAA,SAAAhF,GAAA,OAAA8C,QAAA9C,EAAA,EAAAuC,EAAAG,EAAAvC,WAAAa,EAAA0B,EAAAvC,UAAAS,GAAA,0BAAArI,EAAAmK,cAAAA,EAAAnK,EAAA4D,MAAA,SAAA6D,EAAAC,EAAAG,EAAAE,EAAAE,QAAA,IAAAA,IAAAA,EAAAyE,SAAA,IAAAvE,EAAA,IAAAgC,EAAAtB,EAAApB,EAAAC,EAAAG,EAAAE,GAAAE,GAAA,OAAAjI,EAAAmM,oBAAAzE,GAAAS,EAAAA,EAAAkD,OAAAb,MAAA,SAAA/C,GAAA,OAAAA,EAAAkD,KAAAlD,EAAArL,MAAA+L,EAAAkD,MAAA,KAAArB,EAAAD,GAAAtB,EAAAsB,EAAAxB,EAAA,aAAAE,EAAAsB,EAAA5B,GAAA,0BAAAM,EAAAsB,EAAA,qDAAA/J,EAAA2M,KAAA,SAAAlF,GAAA,IAAAzH,EAAA2H,OAAAF,GAAAC,EAAA,WAAAG,KAAA7H,EAAA0H,EAAAmE,KAAAhE,GAAA,OAAAH,EAAAkF,UAAA,SAAAvB,IAAA,KAAA3D,EAAAX,QAAA,KAAAU,EAAAC,EAAAmF,MAAA,GAAApF,KAAAzH,EAAA,OAAAqL,EAAAjP,MAAAqL,EAAA4D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAArL,EAAAkF,OAAAA,EAAA6D,EAAAnB,UAAA,CAAAwE,YAAArD,EAAAiD,MAAA,SAAAhM,GAAA,QAAA8M,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAAvD,EAAA,KAAAkD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAzB,EAAA,KAAAmE,WAAA3B,QAAA6B,IAAA9L,EAAA,QAAA0H,KAAA,WAAAA,EAAAqF,OAAA,IAAAlF,EAAAsB,KAAA,KAAAzB,KAAAuE,OAAAvE,EAAAsF,MAAA,WAAAtF,GAAAD,EAAA,EAAAwF,KAAA,gBAAAtC,MAAA,MAAAlD,EAAA,KAAAmE,WAAA,GAAAG,WAAA,aAAAtE,EAAArJ,KAAA,MAAAqJ,EAAAyB,IAAA,YAAAgE,IAAA,EAAAjC,kBAAA,SAAAjL,GAAA,QAAA2K,KAAA,MAAA3K,EAAA,IAAA0H,EAAA,cAAAyF,EAAAtF,EAAAE,GAAA,OAAAI,EAAA/J,KAAA,QAAA+J,EAAAe,IAAAlJ,EAAA0H,EAAA2D,KAAAxD,EAAAE,IAAAL,EAAAkD,OAAA,OAAAlD,EAAAwB,IAAAzB,KAAAM,CAAA,SAAAA,EAAA,KAAA6D,WAAA7E,OAAA,EAAAgB,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAA2D,WAAA7D,GAAAI,EAAAF,EAAA8D,WAAA,YAAA9D,EAAAuD,OAAA,OAAA2B,EAAA,UAAAlF,EAAAuD,QAAA,KAAAsB,KAAA,KAAAzE,EAAAR,EAAAsB,KAAAlB,EAAA,YAAAM,EAAAV,EAAAsB,KAAAlB,EAAA,iBAAAI,GAAAE,EAAA,SAAAuE,KAAA7E,EAAAwD,SAAA,OAAA0B,EAAAlF,EAAAwD,UAAA,WAAAqB,KAAA7E,EAAAyD,WAAA,OAAAyB,EAAAlF,EAAAyD,WAAA,SAAArD,GAAA,QAAAyE,KAAA7E,EAAAwD,SAAA,OAAA0B,EAAAlF,EAAAwD,UAAA,YAAAlD,EAAA,MAAAmC,MAAA,kDAAAoC,KAAA7E,EAAAyD,WAAA,OAAAyB,EAAAlF,EAAAyD,WAAA,KAAAR,OAAA,SAAAzD,EAAAzH,GAAA,QAAA0H,EAAA,KAAAkE,WAAA7E,OAAA,EAAAW,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAA6D,WAAAlE,GAAA,GAAAK,EAAAyD,QAAA,KAAAsB,MAAAjF,EAAAsB,KAAApB,EAAA,oBAAA+E,KAAA/E,EAAA2D,WAAA,KAAAzD,EAAAF,EAAA,OAAAE,IAAA,UAAAR,GAAA,aAAAA,IAAAQ,EAAAuD,QAAAxL,GAAAA,GAAAiI,EAAAyD,aAAAzD,EAAA,UAAAE,EAAAF,EAAAA,EAAA8D,WAAA,UAAA5D,EAAA/J,KAAAqJ,EAAAU,EAAAe,IAAAlJ,EAAAiI,GAAA,KAAA2C,OAAA,YAAAS,KAAApD,EAAAyD,WAAAlC,GAAA,KAAA4D,SAAAjF,EAAA,EAAAiF,SAAA,SAAA3F,EAAAzH,GAAA,aAAAyH,EAAArJ,KAAA,MAAAqJ,EAAAyB,IAAA,gBAAAzB,EAAArJ,MAAA,aAAAqJ,EAAArJ,KAAA,KAAAiN,KAAA5D,EAAAyB,IAAA,WAAAzB,EAAArJ,MAAA,KAAA8O,KAAA,KAAAhE,IAAAzB,EAAAyB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA5D,EAAArJ,MAAA4B,IAAA,KAAAqL,KAAArL,GAAAwJ,CAAA,EAAA6D,OAAA,SAAA5F,GAAA,QAAAzH,EAAA,KAAA4L,WAAA7E,OAAA,EAAA/G,GAAA,IAAAA,EAAA,KAAA0H,EAAA,KAAAkE,WAAA5L,GAAA,GAAA0H,EAAAgE,aAAAjE,EAAA,YAAA2F,SAAA1F,EAAAqE,WAAArE,EAAAiE,UAAAG,EAAApE,GAAA8B,CAAA,kBAAA/B,GAAA,QAAAzH,EAAA,KAAA4L,WAAA7E,OAAA,EAAA/G,GAAA,IAAAA,EAAA,KAAA0H,EAAA,KAAAkE,WAAA5L,GAAA,GAAA0H,EAAA8D,SAAA/D,EAAA,KAAAI,EAAAH,EAAAqE,WAAA,aAAAlE,EAAAzJ,KAAA,KAAA2J,EAAAF,EAAAqB,IAAA4C,EAAApE,EAAA,QAAAK,CAAA,QAAA2C,MAAA,0BAAA4C,cAAA,SAAAtN,EAAA0H,EAAAG,GAAA,YAAAgD,SAAA,CAAAzC,SAAAlD,EAAAlF,GAAAoL,WAAA1D,EAAA4D,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAzB,GAAA+B,CAAA,GAAAxJ,CAAA,UAAAuN,EAAA1F,EAAAJ,EAAAzH,EAAA0H,EAAAK,EAAAI,EAAAE,GAAA,QAAAJ,EAAAJ,EAAAM,GAAAE,GAAAE,EAAAN,EAAA7L,KAAA,OAAAyL,GAAA,YAAA7H,EAAA6H,EAAA,CAAAI,EAAA0C,KAAAlD,EAAAc,GAAAmE,QAAApC,QAAA/B,GAAAiC,KAAA9C,EAAAK,EAAA,UAAAyF,EAAAxN,EAAA0H,GAAA,IAAAD,EAAAE,OAAAgF,KAAA3M,GAAA,GAAA2H,OAAA8F,sBAAA,KAAA1F,EAAAJ,OAAA8F,sBAAAzN,GAAA0H,IAAAK,EAAAA,EAAA2F,QAAA,SAAAhG,GAAA,OAAAC,OAAAgG,yBAAA3N,EAAA0H,GAAAgB,UAAA,KAAAjB,EAAAoE,KAAA+B,MAAAnG,EAAAM,EAAA,QAAAN,CAAA,UAAAtC,EAAAnF,GAAA,QAAA0H,EAAA,EAAAA,EAAAmG,UAAA9G,OAAAW,IAAA,KAAAD,EAAA,MAAAoG,UAAAnG,GAAAmG,UAAAnG,GAAA,GAAAA,EAAA,EAAA8F,EAAA7F,OAAAF,IAAA,GAAAwC,SAAA,SAAAvC,GAAAoG,EAAA9N,EAAA0H,EAAAD,EAAAC,GAAA,IAAAC,OAAAoG,0BAAApG,OAAAqG,iBAAAhO,EAAA2H,OAAAoG,0BAAAtG,IAAA+F,EAAA7F,OAAAF,IAAAwC,SAAA,SAAAvC,GAAAC,OAAAK,eAAAhI,EAAA0H,EAAAC,OAAAgG,yBAAAlG,EAAAC,GAAA,WAAA1H,CAAA,UAAA8N,EAAA9N,EAAA0H,EAAAD,GAAA,OAAAC,EAAA,SAAAD,GAAA,IAAAQ,EAAA,SAAAR,GAAA,aAAA4C,EAAA5C,KAAAA,EAAA,OAAAA,EAAA,IAAAzH,EAAAyH,EAAAS,OAAA+F,aAAA,YAAAjO,EAAA,KAAAiI,EAAAjI,EAAAmJ,KAAA1B,EAAAC,UAAA,aAAA2C,EAAApC,GAAA,OAAAA,EAAA,UAAAkD,UAAA,uDAAA+C,OAAAzG,EAAA,CAAA0G,CAAA1G,GAAA,gBAAA4C,EAAApC,GAAAA,EAAAA,EAAA,GAAAmG,CAAA1G,MAAA1H,EAAA2H,OAAAK,eAAAhI,EAAA0H,EAAA,CAAAtL,MAAAqL,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAA5I,EAAA0H,GAAAD,EAAAzH,CAAA,CA8FA,QAnFsC,SAACqO,GACrC,IAsBAC,GACEC,EAAAA,EAAAA,GAAa,CACXF,aAAAA,EACAG,IAAKvM,EAAAA,GACLwM,eA1BmB,uCA2BnBC,oBA1BwB,kCA2BxBC,eA1BmB,CACrBC,KAAM,cACNC,MAAO,QAyBLC,UAvBc,SAAHvT,GAA0D,IAApDwT,EAAMxT,EAANwT,OAAQzN,EAAe/F,EAAf+F,gBAAiB9E,EAAKjB,EAALiB,MAAOwS,EAAazT,EAAbyT,cAC3CrL,EAAsB0K,EAAtB1K,UAAWb,EAAWuL,EAAXvL,OACnB,OAAOmM,IAAAA,OAAQ9J,EAAAA,EAAAA,EAAC,CAEZ+J,SAAU5N,aAAe,EAAfA,EAAiBnD,GAC3B4Q,OAAQ,GAAFnP,OAAKmP,GACXI,IAAK,GAAFvP,OAAKpD,EAAM4S,WACXJ,GACAX,GAAY,IACf1K,UAAWA,aAAS,EAATA,EAAWxF,GACtB2E,OAAQA,GAAUA,EAAOuM,KAAI,SAAAnL,GAAQ,OAAAA,EAAL9H,KAAiB,MAEnD6S,IAAAA,QAEJ,IAEQK,EAAQhB,EAARgB,SAAUC,EAAajB,EAAbiB,cAAeC,EAAOlB,EAAPkB,QAASC,EAASnB,EAATmB,UAAWC,EAAcpB,EAAdoB,eAU/CjO,GAAWC,EAAAA,EAAAA,MACTiO,GAAc7Q,EAAAA,EAAAA,KAAY,SAACtC,GAAK,MAAM,CAC5CmT,WAAWC,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,IAAarT,EAAMG,WAC3D,IAFOgT,UAIFpN,EAAmB,eAjD3BsF,EAiD2BiI,GAjD3BjI,EAiD2BL,IAAA8E,MAAG,SAAAyD,EAAO5R,GAAE,IAAA6R,EAAA,OAAAxI,IAAAqB,MAAA,SAAAoH,GAAA,cAAAA,EAAAnD,KAAAmD,EAAA5E,MAAA,OACX,OAAxB5J,GAASyO,EAAAA,EAAAA,OAAeD,EAAAnD,KAAA,EAAAmD,EAAA5E,KAAA,EAEG8E,EAAAA,EAAiB5N,oBAAoBpE,GAAG,OAClD,MADkD8R,EAAAlF,KAAzDjI,SAEAkN,EAAiBL,EACrB,2CACA,gDAEFS,IAAAA,QAAcJ,IACf,OAGe,OAHfC,EAAAnD,KAAA,EAEDrL,GAAS4O,EAAAA,EAAAA,OACTd,IAAgBU,EAAA5C,OAAA,4BAAA4C,EAAAhD,OAAA,GAAA8C,EAAA,qBA9DtB,eAAAtI,EAAA,KAAAzH,EAAA6N,UAAA,WAAAnB,SAAA,SAAAhF,EAAAK,GAAA,IAAAI,EAAAN,EAAA+F,MAAAnG,EAAAzH,GAAA,SAAAsQ,EAAAzI,GAAA0F,EAAApF,EAAAT,EAAAK,EAAAuI,EAAAC,EAAA,OAAA1I,EAAA,UAAA0I,EAAA1I,GAAA0F,EAAApF,EAAAT,EAAAK,EAAAuI,EAAAC,EAAA,QAAA1I,EAAA,CAAAyI,OAAA,QAgEG,gBAfwBE,GAAA,OAAAV,EAAAlC,MAAA,KAAAC,UAAA,KAoCzB,MAAO,CACL6B,eAAAA,EACAe,cArBoB,SAACtS,IACrBuS,EAAAA,EAAAA,IAAa,CACXnT,MAAOoS,EAAU,iCAAkC,iBACnDgB,QAAShB,EACP,2CACA,wDAEFiB,QAAS,CACP,CACElS,MAAOiR,EAAU,0BAA2B,OAC5CrS,QAAS,WAAF,OAAQiF,EAAoBpE,EAAG,GAExC,CACEO,MAAOiR,EAAU,yBAA0B,SAInD,EAKEH,QAAAA,EACAC,UAAAA,EACAH,SAAAA,EAEJ,oPC5EA,IAAMuB,GAAyB,SAAHtV,GAAgD,IAA1C8S,EAAY9S,EAAZ8S,aAAcyC,EAAWvV,EAAXuV,YAAapN,EAAQnI,EAARmI,SAC3DqN,EACEC,EAA8B3C,GADxBqB,EAAcqB,EAAdrB,eAAgBe,EAAaM,EAAbN,cAAejB,EAAOuB,EAAPvB,QAASC,EAASsB,EAATtB,UAAWH,EAAQyB,EAARzB,SAGrD2B,GAAUC,EAAAA,EAAAA,UACd,iBAAM,CACJ,CACExS,MAAO,iCACPuH,aAAc,sBACdkL,SAAUlV,EAAAA,cAACmV,EAAAA,IAAiB,MAC5BC,KAAMvL,EAAAA,GAAmBwL,MAE3B,CACE5S,MAAO,mCACPuH,aAAc,SACdkL,SAAUlV,EAAAA,cAACsV,EAAAA,IAAe,MAC1BC,oBAAqB,UACrB9N,SAAU,CAAC,UAAW,YACtBwC,QAAS,SACT5I,QAAS,SAACa,GAAE,OAAKsS,EAActS,EAAG,GAErC,GACD,IAIIsT,GAAUP,EAAAA,EAAAA,UACd,iBAAM,CACJ,CACEQ,OAAQ,IACRC,MAAO,GACPC,UAAU,EACV9T,UAAW,0CACX+T,MAAO,CAAEC,SAAU,UAAWC,OAAQ,GACtCC,KAAM,SAAClW,GAAG,OACRG,EAAAA,cAACgW,EAAAA,EAAW,CACVC,UAAW,CAAC,SACZC,gBAAgB,yBAChBlB,SAASmB,EAAAA,EAAAA,IAAYnB,EAASnV,EAAK,CAAEgV,YAAAA,IACrC3S,GAAIrC,EAAIuW,SAASlU,IACjB,GAGN,CACEuT,OACEzV,EAAAA,cAACiC,EAAAA,EAAS,CACRC,GAAG,6CACHT,eAAe,eAGnB4U,SAAU,kBACVxU,UAAW,mDACX8T,UAAU,EACVW,SAAU,IACVP,KAAM,SAAClW,GAAG,OACRG,EAAAA,cAAA,QAAM6B,UAAU,yFACbhC,EAAIuW,SAASG,gBACT,GAGX,CACEd,OACEzV,EAAAA,cAACiC,EAAAA,EAAS,CACRC,GAAG,0CACHT,eAAe,WAGnB4U,SAAU,SACVxU,UAAW,uBACX2U,gBAAiB,SACjBT,KAAM,SAAClW,GAAQ,IAAA4W,EACPhU,EAAQgF,SAEb,QAFqBgP,EAARhP,EAAUsD,MACtB,SAAClE,GAAM,OAAKA,EAAO3E,KAAOrC,EAAIuW,SAASvP,MAAM,WAC9C,IAAA4P,OAAA,EAFaA,EAEXhU,MACH,OAAOzC,EAAAA,cAACmK,EAAmB,CAACtD,OAAQpE,QAAAA,EAAS5C,EAAIuW,SAASvP,QAC5D,EACAyP,SAAU,KAEZ,CACEb,OACEzV,EAAAA,cAACiC,EAAAA,EAAS,CACRC,GAAG,kDACHT,eAAe,oBAGnB4U,SAAU,cACVxU,UAAW,0CACX2U,gBAAiB,SACjBT,KAAM,SAAClW,GAAG,OACRG,EAAAA,cAACC,EAAAA,EAASC,EAAA,GAAKL,EAAG,CAAE6W,KAAM7M,EAAAA,GAAmBwL,KAAKxV,EAAIuW,SAASlU,MAAO,GAG1E,CACEuT,OACEzV,EAAAA,cAACiC,EAAAA,EAAS,CACRC,GAAG,6CACHT,eAAe,eAGnB4U,SAAU,YACVxU,UAAW,0CACX2U,gBAAiB,UAEnB,CACEf,OACEzV,EAAAA,cAACiC,EAAAA,EAAS,CACRC,GAAG,+CACHT,eAAe,iBAGnB4U,SAAU,cACVxU,UAAW,4BACXkU,KAAM,SAAClW,GAAG,OAAKG,EAAAA,cAACX,EAAAA,EAAQa,EAAA,GAAKL,EAAG,CAAE8W,SAAO,IAAG,GAE/C,GACD,CAAC9B,EAAapN,IAGhB,OACEzH,EAAAA,cAAA,OAAK6B,UAAU,0BACb7B,EAAAA,cAAA,OAAK6B,UAAU,oEACb7B,EAAAA,cAAA,YACEA,EAAAA,cAACiC,EAAAA,EAAS,CACRC,GAAG,iCACHT,eAAe,2BAIrBzB,EAAAA,cAAC4W,EAAAA,EAAS,CACRC,QAAM,EACNlB,UAAQ,EACRvU,IAAKiS,EACLmC,QAASA,EACTsB,KAAMtD,EAAUsD,KAChBvD,QAASA,EACTwD,gBAAiB,GACjBC,MAAOxD,EAAUwD,MACjBC,UAAWzD,EAAU0D,WACrBC,YAAa1D,EACb2D,WAAW,gDAInB,EAOA,UAAe9W,EAAAA,EAAAA,KALS,SAACC,GAAK,MAAM,CAClCsU,YAAatU,EAAMC,QAAQqU,YAC3BpN,SAAUlH,EAAM6K,cAAc3D,SAC/B,GAED,CAAwCmN,IAExCA,GAAuB7T,UAAY,CACjCqR,aAAcpR,IAAAA,MAAgB,CAAC,GAAGC,WAClC4T,YAAa7T,IAAAA,OAAiBC,WAC9BwG,SAAUzG,IAAAA,QACRA,IAAAA,MAAgB,CACdkB,GAAIlB,IAAAA,OAAiBC,WACrBd,MAAOa,IAAAA,OAAiBC,WACxBwB,MAAOzB,IAAAA,OAAiBC,WACxBgJ,QAASjJ,IAAAA,OAAiBC,cAE5BA,+RClLJsK,GAAA,kBAAAxH,CAAA,MAAAyH,EAAAzH,EAAA,GAAA0H,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAzH,EAAA0H,GAAAD,EAAAzH,GAAA0H,EAAAtL,KAAA,EAAA6L,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAhB,EAAAzH,EAAA0H,GAAA,OAAAC,OAAAK,eAAAP,EAAAzH,EAAA,CAAA5D,MAAAsL,EAAAgB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAnB,EAAAzH,EAAA,KAAAyI,EAAA,aAAAhB,GAAAgB,EAAA,SAAAhB,EAAAzH,EAAA0H,GAAA,OAAAD,EAAAzH,GAAA0H,CAAA,WAAAmB,EAAApB,EAAAzH,EAAA0H,EAAAG,GAAA,IAAAI,EAAAjI,GAAAA,EAAA4H,qBAAAkB,EAAA9I,EAAA8I,EAAAX,EAAAR,OAAA5B,OAAAkC,EAAAL,WAAAS,EAAA,IAAAU,EAAAlB,GAAA,WAAAE,EAAAI,EAAA,WAAA/L,MAAA4M,EAAAvB,EAAAC,EAAAW,KAAAF,CAAA,UAAAc,EAAAxB,EAAAzH,EAAA0H,GAAA,WAAAtJ,KAAA,SAAA8K,IAAAzB,EAAA0B,KAAAnJ,EAAA0H,GAAA,OAAAD,GAAA,OAAArJ,KAAA,QAAA8K,IAAAzB,EAAA,EAAAzH,EAAA6I,KAAAA,EAAA,IAAAO,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAlB,EAAAkB,EAAAxB,GAAA,8BAAAyB,EAAAjC,OAAAkC,eAAAC,EAAAF,GAAAA,EAAAA,EAAA1E,EAAA,MAAA4E,GAAAA,IAAApC,GAAAG,EAAAsB,KAAAW,EAAA3B,KAAAwB,EAAAG,GAAA,IAAAC,EAAAL,EAAA9B,UAAAkB,EAAAlB,UAAAD,OAAA5B,OAAA4D,GAAA,SAAAK,EAAAvC,GAAA,0BAAAwC,SAAA,SAAAjK,GAAAyI,EAAAhB,EAAAzH,GAAA,SAAAyH,GAAA,YAAAyC,QAAAlK,EAAAyH,EAAA,gBAAA0C,EAAA1C,EAAAzH,GAAA,SAAAoK,EAAA1C,EAAAK,EAAAE,EAAAE,GAAA,IAAAE,EAAAY,EAAAxB,EAAAC,GAAAD,EAAAM,GAAA,aAAAM,EAAAjK,KAAA,KAAAmK,EAAAF,EAAAa,IAAAE,EAAAb,EAAAnM,MAAA,OAAAgN,GAAA,UAAAiB,GAAAjB,IAAAvB,EAAAsB,KAAAC,EAAA,WAAApJ,EAAAsK,QAAAlB,EAAAmB,SAAAC,MAAA,SAAA/C,GAAA2C,EAAA,OAAA3C,EAAAQ,EAAAE,EAAA,aAAAV,GAAA2C,EAAA,QAAA3C,EAAAQ,EAAAE,EAAA,IAAAnI,EAAAsK,QAAAlB,GAAAoB,MAAA,SAAA/C,GAAAc,EAAAnM,MAAAqL,EAAAQ,EAAAM,EAAA,aAAAd,GAAA,OAAA2C,EAAA,QAAA3C,EAAAQ,EAAAE,EAAA,IAAAA,EAAAE,EAAAa,IAAA,KAAAxB,EAAAK,EAAA,gBAAA3L,MAAA,SAAAqL,EAAAI,GAAA,SAAA4C,IAAA,WAAAzK,GAAA,SAAAA,EAAA0H,GAAA0C,EAAA3C,EAAAI,EAAA7H,EAAA0H,EAAA,WAAAA,EAAAA,EAAAA,EAAA8C,KAAAC,EAAAA,GAAAA,GAAA,aAAAzB,EAAAhJ,EAAA0H,EAAAG,GAAA,IAAAE,EAAAqB,EAAA,gBAAAnB,EAAAE,GAAA,GAAAJ,IAAAuB,EAAA,MAAAoB,MAAA,mCAAA3C,IAAAwB,EAAA,cAAAtB,EAAA,MAAAE,EAAA,OAAA/L,MAAAqL,EAAAkD,MAAA,OAAA9C,EAAA+C,OAAA3C,EAAAJ,EAAAqB,IAAAf,IAAA,KAAAE,EAAAR,EAAAgD,SAAA,GAAAxC,EAAA,KAAAE,EAAAuC,EAAAzC,EAAAR,GAAA,GAAAU,EAAA,IAAAA,IAAAiB,EAAA,gBAAAjB,CAAA,cAAAV,EAAA+C,OAAA/C,EAAAkD,KAAAlD,EAAAmD,MAAAnD,EAAAqB,SAAA,aAAArB,EAAA+C,OAAA,IAAA7C,IAAAqB,EAAA,MAAArB,EAAAwB,EAAA1B,EAAAqB,IAAArB,EAAAoD,kBAAApD,EAAAqB,IAAA,gBAAArB,EAAA+C,QAAA/C,EAAAqD,OAAA,SAAArD,EAAAqB,KAAAnB,EAAAuB,EAAA,IAAAK,EAAAV,EAAAjJ,EAAA0H,EAAAG,GAAA,cAAA8B,EAAAvL,KAAA,IAAA2J,EAAAF,EAAA8C,KAAApB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAApN,MAAAuN,EAAAT,IAAAyB,KAAA9C,EAAA8C,KAAA,WAAAhB,EAAAvL,OAAA2J,EAAAwB,EAAA1B,EAAA+C,OAAA,QAAA/C,EAAAqB,IAAAS,EAAAT,IAAA,YAAA4B,EAAA9K,EAAA0H,GAAA,IAAAG,EAAAH,EAAAkD,OAAA7C,EAAA/H,EAAAoI,SAAAP,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAmD,SAAA,eAAAhD,GAAA7H,EAAAoI,SAAA,SAAAV,EAAAkD,OAAA,SAAAlD,EAAAwB,IAAAzB,EAAAqD,EAAA9K,EAAA0H,GAAA,UAAAA,EAAAkD,SAAA,WAAA/C,IAAAH,EAAAkD,OAAA,QAAAlD,EAAAwB,IAAA,IAAAiC,UAAA,oCAAAtD,EAAA,aAAA2B,EAAA,IAAAvB,EAAAgB,EAAAlB,EAAA/H,EAAAoI,SAAAV,EAAAwB,KAAA,aAAAjB,EAAA7J,KAAA,OAAAsJ,EAAAkD,OAAA,QAAAlD,EAAAwB,IAAAjB,EAAAiB,IAAAxB,EAAAmD,SAAA,KAAArB,EAAA,IAAArB,EAAAF,EAAAiB,IAAA,OAAAf,EAAAA,EAAAwC,MAAAjD,EAAA1H,EAAAoL,YAAAjD,EAAA/L,MAAAsL,EAAA2D,KAAArL,EAAAsL,QAAA,WAAA5D,EAAAkD,SAAAlD,EAAAkD,OAAA,OAAAlD,EAAAwB,IAAAzB,GAAAC,EAAAmD,SAAA,KAAArB,GAAArB,GAAAT,EAAAkD,OAAA,QAAAlD,EAAAwB,IAAA,IAAAiC,UAAA,oCAAAzD,EAAAmD,SAAA,KAAArB,EAAA,UAAA+B,EAAA9D,GAAA,IAAAzH,EAAA,CAAAwL,OAAA/D,EAAA,SAAAA,IAAAzH,EAAAyL,SAAAhE,EAAA,SAAAA,IAAAzH,EAAA0L,WAAAjE,EAAA,GAAAzH,EAAA2L,SAAAlE,EAAA,SAAAmE,WAAAC,KAAA7L,EAAA,UAAA8L,EAAArE,GAAA,IAAAzH,EAAAyH,EAAAsE,YAAA,GAAA/L,EAAA5B,KAAA,gBAAA4B,EAAAkJ,IAAAzB,EAAAsE,WAAA/L,CAAA,UAAA+I,EAAAtB,GAAA,KAAAmE,WAAA,EAAAJ,OAAA,SAAA/D,EAAAwC,QAAAsB,EAAA,WAAAS,OAAA,YAAA9G,EAAAlF,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAA0H,EAAA1H,EAAAmI,GAAA,GAAAT,EAAA,OAAAA,EAAAyB,KAAAnJ,GAAA,sBAAAA,EAAAqL,KAAA,OAAArL,EAAA,IAAAiM,MAAAjM,EAAA+G,QAAA,KAAAgB,GAAA,EAAAE,EAAA,SAAAoD,IAAA,OAAAtD,EAAA/H,EAAA+G,QAAA,GAAAc,EAAAsB,KAAAnJ,EAAA+H,GAAA,OAAAsD,EAAAjP,MAAA4D,EAAA+H,GAAAsD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAjP,MAAAqL,EAAA4D,EAAAV,MAAA,EAAAU,CAAA,SAAApD,EAAAoD,KAAApD,CAAA,YAAAkD,UAAAd,GAAArK,GAAA,2BAAAyJ,EAAA7B,UAAA8B,EAAA3B,EAAAgC,EAAA,eAAA3N,MAAAsN,EAAAf,cAAA,IAAAZ,EAAA2B,EAAA,eAAAtN,MAAAqN,EAAAd,cAAA,IAAAc,EAAAyC,YAAAzD,EAAAiB,EAAAnB,EAAA,qBAAAvI,EAAAmM,oBAAA,SAAA1E,GAAA,IAAAzH,EAAA,mBAAAyH,GAAAA,EAAA2E,YAAA,QAAApM,IAAAA,IAAAyJ,GAAA,uBAAAzJ,EAAAkM,aAAAlM,EAAAqM,MAAA,EAAArM,EAAAsM,KAAA,SAAA7E,GAAA,OAAAE,OAAA4E,eAAA5E,OAAA4E,eAAA9E,EAAAiC,IAAAjC,EAAA+E,UAAA9C,EAAAjB,EAAAhB,EAAAc,EAAA,sBAAAd,EAAAG,UAAAD,OAAA5B,OAAAgE,GAAAtC,CAAA,EAAAzH,EAAAyM,MAAA,SAAAhF,GAAA,OAAA8C,QAAA9C,EAAA,EAAAuC,EAAAG,EAAAvC,WAAAa,EAAA0B,EAAAvC,UAAAS,GAAA,0BAAArI,EAAAmK,cAAAA,EAAAnK,EAAA4D,MAAA,SAAA6D,EAAAC,EAAAG,EAAAE,EAAAE,QAAA,IAAAA,IAAAA,EAAAyE,SAAA,IAAAvE,EAAA,IAAAgC,EAAAtB,EAAApB,EAAAC,EAAAG,EAAAE,GAAAE,GAAA,OAAAjI,EAAAmM,oBAAAzE,GAAAS,EAAAA,EAAAkD,OAAAb,MAAA,SAAA/C,GAAA,OAAAA,EAAAkD,KAAAlD,EAAArL,MAAA+L,EAAAkD,MAAA,KAAArB,EAAAD,GAAAtB,EAAAsB,EAAAxB,EAAA,aAAAE,EAAAsB,EAAA5B,GAAA,0BAAAM,EAAAsB,EAAA,qDAAA/J,EAAA2M,KAAA,SAAAlF,GAAA,IAAAzH,EAAA2H,OAAAF,GAAAC,EAAA,WAAAG,KAAA7H,EAAA0H,EAAAmE,KAAAhE,GAAA,OAAAH,EAAAkF,UAAA,SAAAvB,IAAA,KAAA3D,EAAAX,QAAA,KAAAU,EAAAC,EAAAmF,MAAA,GAAApF,KAAAzH,EAAA,OAAAqL,EAAAjP,MAAAqL,EAAA4D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAArL,EAAAkF,OAAAA,EAAA6D,EAAAnB,UAAA,CAAAwE,YAAArD,EAAAiD,MAAA,SAAAhM,GAAA,QAAA8M,KAAA,OAAAzB,KAAA,OAAAN,KAAA,KAAAC,MAAAvD,EAAA,KAAAkD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA1B,IAAAzB,EAAA,KAAAmE,WAAA3B,QAAA6B,IAAA9L,EAAA,QAAA0H,KAAA,WAAAA,EAAAqF,OAAA,IAAAlF,EAAAsB,KAAA,KAAAzB,KAAAuE,OAAAvE,EAAAsF,MAAA,WAAAtF,GAAAD,EAAA,EAAAwF,KAAA,gBAAAtC,MAAA,MAAAlD,EAAA,KAAAmE,WAAA,GAAAG,WAAA,aAAAtE,EAAArJ,KAAA,MAAAqJ,EAAAyB,IAAA,YAAAgE,IAAA,EAAAjC,kBAAA,SAAAjL,GAAA,QAAA2K,KAAA,MAAA3K,EAAA,IAAA0H,EAAA,cAAAyF,EAAAtF,EAAAE,GAAA,OAAAI,EAAA/J,KAAA,QAAA+J,EAAAe,IAAAlJ,EAAA0H,EAAA2D,KAAAxD,EAAAE,IAAAL,EAAAkD,OAAA,OAAAlD,EAAAwB,IAAAzB,KAAAM,CAAA,SAAAA,EAAA,KAAA6D,WAAA7E,OAAA,EAAAgB,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAA2D,WAAA7D,GAAAI,EAAAF,EAAA8D,WAAA,YAAA9D,EAAAuD,OAAA,OAAA2B,EAAA,UAAAlF,EAAAuD,QAAA,KAAAsB,KAAA,KAAAzE,EAAAR,EAAAsB,KAAAlB,EAAA,YAAAM,EAAAV,EAAAsB,KAAAlB,EAAA,iBAAAI,GAAAE,EAAA,SAAAuE,KAAA7E,EAAAwD,SAAA,OAAA0B,EAAAlF,EAAAwD,UAAA,WAAAqB,KAAA7E,EAAAyD,WAAA,OAAAyB,EAAAlF,EAAAyD,WAAA,SAAArD,GAAA,QAAAyE,KAAA7E,EAAAwD,SAAA,OAAA0B,EAAAlF,EAAAwD,UAAA,YAAAlD,EAAA,MAAAmC,MAAA,kDAAAoC,KAAA7E,EAAAyD,WAAA,OAAAyB,EAAAlF,EAAAyD,WAAA,KAAAR,OAAA,SAAAzD,EAAAzH,GAAA,QAAA0H,EAAA,KAAAkE,WAAA7E,OAAA,EAAAW,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAA6D,WAAAlE,GAAA,GAAAK,EAAAyD,QAAA,KAAAsB,MAAAjF,EAAAsB,KAAApB,EAAA,oBAAA+E,KAAA/E,EAAA2D,WAAA,KAAAzD,EAAAF,EAAA,OAAAE,IAAA,UAAAR,GAAA,aAAAA,IAAAQ,EAAAuD,QAAAxL,GAAAA,GAAAiI,EAAAyD,aAAAzD,EAAA,UAAAE,EAAAF,EAAAA,EAAA8D,WAAA,UAAA5D,EAAA/J,KAAAqJ,EAAAU,EAAAe,IAAAlJ,EAAAiI,GAAA,KAAA2C,OAAA,YAAAS,KAAApD,EAAAyD,WAAAlC,GAAA,KAAA4D,SAAAjF,EAAA,EAAAiF,SAAA,SAAA3F,EAAAzH,GAAA,aAAAyH,EAAArJ,KAAA,MAAAqJ,EAAAyB,IAAA,gBAAAzB,EAAArJ,MAAA,aAAAqJ,EAAArJ,KAAA,KAAAiN,KAAA5D,EAAAyB,IAAA,WAAAzB,EAAArJ,MAAA,KAAA8O,KAAA,KAAAhE,IAAAzB,EAAAyB,IAAA,KAAA0B,OAAA,cAAAS,KAAA,kBAAA5D,EAAArJ,MAAA4B,IAAA,KAAAqL,KAAArL,GAAAwJ,CAAA,EAAA6D,OAAA,SAAA5F,GAAA,QAAAzH,EAAA,KAAA4L,WAAA7E,OAAA,EAAA/G,GAAA,IAAAA,EAAA,KAAA0H,EAAA,KAAAkE,WAAA5L,GAAA,GAAA0H,EAAAgE,aAAAjE,EAAA,YAAA2F,SAAA1F,EAAAqE,WAAArE,EAAAiE,UAAAG,EAAApE,GAAA8B,CAAA,kBAAA/B,GAAA,QAAAzH,EAAA,KAAA4L,WAAA7E,OAAA,EAAA/G,GAAA,IAAAA,EAAA,KAAA0H,EAAA,KAAAkE,WAAA5L,GAAA,GAAA0H,EAAA8D,SAAA/D,EAAA,KAAAI,EAAAH,EAAAqE,WAAA,aAAAlE,EAAAzJ,KAAA,KAAA2J,EAAAF,EAAAqB,IAAA4C,EAAApE,EAAA,QAAAK,CAAA,QAAA2C,MAAA,0BAAA4C,cAAA,SAAAtN,EAAA0H,EAAAG,GAAA,YAAAgD,SAAA,CAAAzC,SAAAlD,EAAAlF,GAAAoL,WAAA1D,EAAA4D,QAAAzD,GAAA,cAAA+C,SAAA,KAAA1B,IAAAzB,GAAA+B,CAAA,GAAAxJ,CAAA,UAAAwN,GAAAxN,EAAA0H,GAAA,IAAAD,EAAAE,OAAAgF,KAAA3M,GAAA,GAAA2H,OAAA8F,sBAAA,KAAA1F,EAAAJ,OAAA8F,sBAAAzN,GAAA0H,IAAAK,EAAAA,EAAA2F,QAAA,SAAAhG,GAAA,OAAAC,OAAAgG,yBAAA3N,EAAA0H,GAAAgB,UAAA,KAAAjB,EAAAoE,KAAA+B,MAAAnG,EAAAM,EAAA,QAAAN,CAAA,UAAAtC,GAAAnF,GAAA,QAAA0H,EAAA,EAAAA,EAAAmG,UAAA9G,OAAAW,IAAA,KAAAD,EAAA,MAAAoG,UAAAnG,GAAAmG,UAAAnG,GAAA,GAAAA,EAAA,EAAA8F,GAAA7F,OAAAF,IAAA,GAAAwC,SAAA,SAAAvC,GAAAoG,GAAA9N,EAAA0H,EAAAD,EAAAC,GAAA,IAAAC,OAAAoG,0BAAApG,OAAAqG,iBAAAhO,EAAA2H,OAAAoG,0BAAAtG,IAAA+F,GAAA7F,OAAAF,IAAAwC,SAAA,SAAAvC,GAAAC,OAAAK,eAAAhI,EAAA0H,EAAAC,OAAAgG,yBAAAlG,EAAAC,GAAA,WAAA1H,CAAA,UAAA8N,GAAA9N,EAAA0H,EAAAD,GAAA,OAAAC,EAAA,SAAAD,GAAA,IAAAQ,EAAA,SAAAR,GAAA,aAAA4C,GAAA5C,KAAAA,EAAA,OAAAA,EAAA,IAAAzH,EAAAyH,EAAAS,OAAA+F,aAAA,YAAAjO,EAAA,KAAAiI,EAAAjI,EAAAmJ,KAAA1B,EAAAC,UAAA,aAAA2C,GAAApC,GAAA,OAAAA,EAAA,UAAAkD,UAAA,uDAAA+C,OAAAzG,EAAA,CAAA0G,CAAA1G,GAAA,gBAAA4C,GAAApC,GAAAA,EAAAA,EAAA,GAAAmG,CAAA1G,MAAA1H,EAAA2H,OAAAK,eAAAhI,EAAA0H,EAAA,CAAAtL,MAAAqL,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAA5I,EAAA0H,GAAAD,EAAAzH,CAAA,UAAAuN,GAAA1F,EAAAJ,EAAAzH,EAAA0H,EAAAK,EAAAI,EAAAE,GAAA,QAAAJ,EAAAJ,EAAAM,GAAAE,GAAAE,EAAAN,EAAA7L,KAAA,OAAAyL,GAAA,YAAA7H,EAAA6H,EAAA,CAAAI,EAAA0C,KAAAlD,EAAAc,GAAAmE,QAAApC,QAAA/B,GAAAiC,KAAA9C,EAAAK,EAAA,UAAAxB,GAAAmB,EAAA1H,GAAA,gBAAA0H,GAAA,GAAA4L,MAAAC,QAAA7L,GAAA,OAAAA,CAAA,CAAA8L,CAAA9L,IAAA,SAAAA,EAAA2B,GAAA,IAAA5B,EAAA,MAAAC,EAAA,yBAAAQ,QAAAR,EAAAQ,OAAAE,WAAAV,EAAA,uBAAAD,EAAA,KAAAzH,EAAA6H,EAAAI,EAAAM,EAAAJ,EAAA,GAAAmB,GAAA,EAAAvB,GAAA,SAAAE,GAAAR,EAAAA,EAAA0B,KAAAzB,IAAA2D,KAAA,IAAAhC,EAAA,IAAA1B,OAAAF,KAAAA,EAAA,OAAA6B,GAAA,cAAAA,GAAAtJ,EAAAiI,EAAAkB,KAAA1B,IAAAkD,QAAAxC,EAAA0D,KAAA7L,EAAA5D,OAAA+L,EAAApB,SAAAsC,GAAAC,GAAA,UAAA5B,GAAAK,GAAA,EAAAF,EAAAH,CAAA,iBAAA4B,GAAA,MAAA7B,EAAA,SAAAc,EAAAd,EAAA,SAAAE,OAAAY,KAAAA,GAAA,kBAAAR,EAAA,MAAAF,CAAA,SAAAM,CAAA,EAAAsL,CAAA/L,EAAA1H,IAAA,SAAA0H,EAAAS,GAAA,GAAAT,EAAA,qBAAAA,EAAA,OAAAgM,GAAAhM,EAAAS,GAAA,IAAAV,EAAA,GAAAkM,SAAAxK,KAAAzB,GAAAsF,MAAA,uBAAAvF,GAAAC,EAAA0E,cAAA3E,EAAAC,EAAA0E,YAAAC,MAAA,QAAA5E,GAAA,QAAAA,EAAA6L,MAAAM,KAAAlM,GAAA,cAAAD,GAAA,2CAAAoM,KAAApM,GAAAiM,GAAAhM,EAAAS,QAAA,GAAA2L,CAAApM,EAAA1H,IAAA,qBAAAmL,UAAA,6IAAA4I,EAAA,UAAAL,GAAAhM,EAAAS,IAAA,MAAAA,GAAAA,EAAAT,EAAAX,UAAAoB,EAAAT,EAAAX,QAAA,QAAA/G,EAAA,EAAA6H,EAAAyL,MAAAnL,GAAAnI,EAAAmI,EAAAnI,IAAA6H,EAAA7H,GAAA0H,EAAA1H,GAAA,OAAA6H,CAAA,iBCYMmM,GAAoB,SAAC5W,GACzB,IAAA6W,EDF8B,WAC9B,IAAoDhV,EAAAsH,IAAZrH,EAAAA,EAAAA,UAAS,CAAC,GAAE,GAA7CmP,EAAYpP,EAAA,GAAEuF,EAAevF,EAAA,GAC8ByH,EAAAH,IAAZrH,EAAAA,EAAAA,UAAS,CAAC,GAAE,GAA3DgV,EAAmBxN,EAAA,GAAEyN,EAAsBzN,EAAA,GACiB0N,EAAA7N,IAAfrH,EAAAA,EAAAA,WAAS,GAAM,GAA5DmC,EAAkB+S,EAAA,GAAEC,EAAqBD,EAAA,GAE1CE,GAAUC,EAAAA,EAAAA,cAChB1V,GAAiDC,EAAAA,EAAAA,KAAY,SAACtC,GAAK,MAAM,CACvEkH,SAAUlH,EAAM6K,cAAc3D,SAC9B8Q,YAAahY,EAAMC,QAAQgY,KAC3BnT,gBAAiB9E,EAAMC,QAAQ6E,gBAC/BC,oBAAqB/E,EAAMgF,WAAWD,oBACtCmT,cAAelY,EAAMC,QAAQkY,eAC9B,IANOjR,EAAQ7E,EAAR6E,SAAU8Q,EAAW3V,EAAX2V,YAAaE,EAAa7V,EAAb6V,cAOzBjT,GAAWC,EAAAA,EAAAA,MAOXN,EAA6B,eA/BrCyG,EA+BqCtM,GA/BrCsM,EA+BqCL,KAAA8E,MAAG,SAAAyD,IAAA,IAAAlL,EAAA+P,EAAAC,EAAA,OAAArN,KAAAqB,MAAA,SAAAoH,GAAA,cAAAA,EAAAnD,KAAAmD,EAAA5E,MAAA,OAenC,GAbKxG,EAAgB8C,OAAOgF,KAAK/H,GAAckQ,QAC9C,SAACC,EAAK9W,GAAG,OAAAkH,GAAAA,GAAA,GAAW4P,GAAG,GAAAjH,GAAA,GAAG7P,EAAM,IAAE,GAClC,CAAC,IAGG2W,EAAaI,GAAAA,EAAYC,MAAMX,EAAQpF,SAASgG,SAGvCpS,SACP+R,GAAqBM,EAAAA,EAAAA,IAAaP,EAAW9R,QACnD+B,EAAc/B,OAASY,EAASgK,QAAO,SAAAxJ,GAAA,IAAG/F,EAAE+F,EAAF/F,GAAE,OAC1C0W,EAAmBO,SAASjX,EAAG,MAG/ByW,EAAWjR,UAAW,CAAFsM,EAAA5E,KAAA,YAEpBuJ,EAAWjR,YAAc6Q,EAAYrW,GAAE,CAAA8R,EAAA5E,KAAA,QAAA4E,EAAAoF,GACnCb,EAAWvE,EAAA5E,KAAA,uBAAA4E,EAAA5E,KAAA,IACLiK,EAAAA,EAAAA,IAAcV,EAAWjR,WAAU,QAAAsM,EAAAoF,GAAApF,EAAAlF,KAAA,QAH/ClG,EAAclB,UAASsM,EAAAoF,GAAA,QAKrBT,EAAWvQ,uBACbQ,EAAcR,qBAAuBuQ,EAAWvQ,sBAE9CuQ,EAAWtQ,qBACbO,EAAcP,mBAAqBsQ,EAAWtQ,oBAEhD6P,EAAsBhP,GAAC,CAAC,EAAIN,IAC5BwP,GAAsB,GAAM,yBAAApE,EAAAhD,OAAA,GAAA8C,EAAA,IA5DhC,eAAAtI,EAAA,KAAAzH,EAAA6N,UAAA,WAAAnB,SAAA,SAAAhF,EAAAK,GAAA,IAAAI,EAAAN,EAAA+F,MAAAnG,EAAAzH,GAAA,SAAAsQ,EAAAzI,GAAA0F,GAAApF,EAAAT,EAAAK,EAAAuI,EAAAC,EAAA,OAAA1I,EAAA,UAAA0I,EAAA1I,GAAA0F,GAAApF,EAAAT,EAAAK,EAAAuI,EAAAC,EAAA,QAAA1I,EAAA,CAAAyI,OAAA,QA6DG,kBA9BkC,OAAA/U,EAAAqS,MAAA,KAAAC,UAAA,KA8DnC,OA9BAlM,EAAAA,EAAAA,YAAU,WAGRF,GAAS2F,EAAAA,EAAAA,MACX,GAAG,CAACsN,KAGJa,EAAAA,GAAAA,GAAwB,CACtBpU,kBA7CwB,WACxB,IAAQqU,EAAalB,EAAQpF,SAArBsG,SACRlB,EAAQzI,KAAK,CAAE2J,SAAAA,GACjB,EA2CEpU,8BAAAA,EACAC,mBAAAA,IAoBK,CAAEoU,gBAjBe,SAACvQ,GACvB,IAOMwQ,GAAoBC,EAAAA,EAAAA,IAAsBzQ,EAPxB,CACtBpC,OAAQ,CAAEuJ,KAAM,SAAUiG,SAAU,MACpC3O,UAAW,CAAE0I,KAAM,YAAaiG,SAAU,MAC1CjO,qBAAsB,CAAEgI,KAAM,wBAC9B/H,mBAAoB,CAAE+H,KAAM,wBAIxBuJ,EAAoBZ,GAAAA,EAAYa,UAAUH,GACxCF,EAAalB,EAAQpF,SAArBsG,SACJ7N,OAAOgF,KAAKzH,GAAQ6B,QACtBuN,EAAQzI,KAAK,CAAE2J,SAAAA,EAAUN,OAAQU,IAEnCpR,EAAeW,GAAC,CAAC,EAAID,GACvB,EAE0BgP,oBAAAA,EAAqB7F,aAAAA,EACjD,CChFIyH,GADML,EAAexB,EAAfwB,gBAAiBvB,EAAmBD,EAAnBC,oBAAqB7F,EAAY4F,EAAZ5F,aAK9C,OAFA0H,EAAAA,GAAAA,GAAe,gBAAiB,cAG9B9Z,EAAAA,cAAA,OAAK6B,UAAU,qCACb7B,EAAAA,cAACyJ,EAAuB,MACxBzJ,EAAAA,cAACsI,EAAwB,CACvBK,aAAcA,EACdJ,gBAAiBiR,EACjB5Q,cAAeqP,EACfvP,UAAW,CAAEjB,SAAUtG,EAAMsG,YAE/BzH,EAAAA,cAAC4U,GAAsB,CAACxC,aAAcA,IAG5C,EAQA,UAAelI,EAAAA,EAAAA,aAAW5J,EAAAA,EAAAA,KANF,SAACC,GAAK,MAAM,CAClCgY,YAAahY,EAAMC,QAAQgY,KAC3B/Q,SAAUlH,EAAM6K,cAAc3D,SAC9BpC,gBAAiB9E,EAAMC,QAAQ6E,gBAChC,GAEyB/E,CAAyByX,KAEnDA,GAAkBhX,UAAY,CAC5B0G,SAAUzG,IAAAA,QACRA,IAAAA,MAAgB,CACdkB,GAAIlB,IAAAA,OAAiBC,WACrBd,MAAOa,IAAAA,OAAiBC,WACxBwB,MAAOzB,IAAAA,OAAiBC,WACxBgJ,QAASjJ,IAAAA,OAAiBC,cAE5BA,gpCC8EJ,QAnHqB,SAAH3B,GAQZ,IAPJ8S,EAAY9S,EAAZ8S,aACAG,EAAGjT,EAAHiT,IACAC,EAAclT,EAAdkT,eACAC,EAAmBnT,EAAnBmT,oBACAI,EAASvT,EAATuT,UACAkH,EAAaza,EAAbya,cACArH,EAAcpT,EAAdoT,eAGMW,GAAW2G,EAAAA,EAAAA,QAAO,MAElBC,GAAYD,EAAAA,EAAAA,QAAOE,EAAAA,GAAYC,UAEQnX,EAAAsH,GAAfrH,EAAAA,EAAAA,WAAS,GAAM,GAAtCsQ,EAAOvQ,EAAA,GAAEoX,EAAUpX,EAAA,GAMxByH,EAAAH,GALgCrH,EAAAA,EAAAA,UAAS,CACzC6T,KAAM,GACNE,OAAQ,EACRE,WAAY,EACZmD,cAAe,CAAC,IAChB,GALK7G,EAAS/I,EAAA,GAAE6P,EAAY7P,EAAA,GAO9B7H,GAAuCC,EAAAA,EAAAA,KAAY,SAACtC,GAAK,MAAM,CAC7D8E,gBAAiB9E,EAAMC,QAAQ6E,gBAC/BqO,WAAWC,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,IAAarT,EAAMG,WAC3D,IAHO2E,EAAezC,EAAfyC,gBAAiBqO,EAAS9Q,EAAT8Q,UAKnBJ,EAAgB,WAAM,IAAAiH,EAE1BN,EAAUO,QAAUN,EAAAA,GAAYC,UAEZ,QAAhBI,EAAAlH,EAASmH,eAAO,IAAAD,GAAO,QAAPA,EAAhBA,EAAkBha,aAAK,IAAAga,OAAA,EAAvBA,EAAyBE,MAAO,EAIlCpH,EAASmH,QAAQE,aAAa,GAE9BrH,EAASmH,QAAQlH,eAErB,EAEMG,GAAiB5K,EAAAA,EAAAA,cACrB,SAAC8R,GACC,IAAK3H,IAAAA,QAAUZ,GAAe,KAAAwI,EAAAC,EACtB/H,EACJ6H,EAAWF,KAAO,EAAIE,EAAWF,KAAOE,EAAWxH,SAAW,EAC1DJ,GACa,QAAjB6H,EAAAD,EAAWG,cAAM,IAAAF,OAAA,EAAjBA,EAAmB9P,QAAS,EACxB,CACE6H,KAAMgI,EAAWG,OAAO,GAAG5Y,GAC3B0Q,MAAO+H,EAAWG,OAAO,GAAGC,KAAO,OAAS,OAE9CrI,EACAsI,EAASnI,EAAU,CACvBC,OAAAA,EACAzN,gBAAAA,EACA9E,MAAOoa,EACP5H,cAAAA,IAGFqH,GAAW,GACXtU,EAAAA,GACGC,IAAIwM,EAAK,CACRyI,OAAAA,EACAC,iBAAkB,SAACC,GAAU,OAAKnC,EAAAA,EAAYa,UAAUsB,EAAW,EACnEC,YAA8B,QAAnBN,EAAEZ,EAAUO,eAAO,IAAAK,OAAA,EAAjBA,EAAmBO,QAEjC7M,MAAK,SAAC8M,GACLf,EAAa,CACXxD,KAAMuE,EAAIvE,KAAKA,KACfI,WAAYmE,EAAIvE,KAAKI,WACrBF,MAAOsE,KAAKC,KAAKF,EAAIvE,KAAKI,WAAayD,EAAWxH,UAClDkH,cAAeW,IAEbjB,GACFA,EAAcsB,EAAIvE,KAEtB,IAAE,OACK,kBACLrG,QAAQ+K,OACN,IAAI/M,MAAMiF,EAAUlB,EAAgBC,IACrC,IACF,SACQ,kBAAM2H,GAAW,EAAM,GACpC,CACF,GACA,CAAChI,IAiBH,OAbA1M,EAAAA,EAAAA,YAAU,WACR4N,GACF,GAAG,CAAClB,KAEJ1M,EAAAA,EAAAA,YACE,kBAAM,WACAL,SAAAA,EAAiBnD,IACnB+X,EAAUO,QAAQiB,OAAO,oBAE7B,CAAC,GACD,CAACpW,aAAe,EAAfA,EAAiBnD,KAGb,CACL+X,UAAAA,EACA5G,SAAAA,EACAC,cAAAA,EACAC,QAAAA,EACA6G,WAAAA,EACA5G,UAAAA,EACA8G,aAAAA,EACA7G,eAAAA,EAEJ,uGCvHA,QALQ,OAKR,EAJc,aAId,EAHU,+GCgDV,QA/CuB,WACrB,QAAMiI,GAAa1B,EAAAA,EAAAA,UACsChX,MAAfC,EAAAA,EAAAA,WAAS,KAAM,s4BAmCzD,MAAO,CACL0Y,kBAlCwB,SAACC,GACzB,OAAIA,EAAOxG,KACLwG,EAAOC,UACFC,EAEFA,EAEFA,CACT,EA2BEC,UAzBgB,SAACH,EAAQ1Z,GACzB,MAA2B,iBAAhB0Z,EAAOxG,KACT,GAAPzR,OAAUiY,EAAOxG,KAAI,KAAAzR,OAAIzB,GAEA,mBAAhB0Z,EAAOxG,KACTwG,EAAOxG,KAAKlT,GAEd,IACT,EAkBE8Z,iBAhBuB,SAACC,GACxB,OAAQA,GACN,IAAK,MACH,MAAO,SACT,IAAK,OACH,MAAO,WACT,IAAK,QACH,MAAO,YACT,QACE,MAAO,GAEb,EAMEP,WAAAA,EACAQ,cAxCkBlZ,EAAA,GAyClBmZ,iBAzCoCnZ,EAAA,GA2CxC,iBCpCMgT,EAAc,SAAH1W,GAMX,IALJ2W,EAAS3W,EAAT2W,UACAjB,EAAO1V,EAAP0V,QACAkB,EAAe5W,EAAf4W,gBACAkG,EAAc9c,EAAd8c,eACAla,EAAE5C,EAAF4C,GAEAma,EAMIC,IALFX,EAAiBU,EAAjBV,kBACAI,EAASM,EAATN,UACAL,EAAUW,EAAVX,WACAQ,EAAaG,EAAbH,cACAC,EAAgBE,EAAhBF,iBAGF,OACEnc,EAAAA,cAACuc,EAAAA,QAAO,CACN,cAAY,wBACZC,OAAQN,EACRjG,UAAWA,EACXwG,QAAS,GACTnY,eAAgB,WAAF,OAAQ6X,GAAiB,EAAM,EAC7C/a,IAAKsa,EACLgB,QAAS,WAAF,OACL1H,GACEhV,EAAAA,cAAA,OACE6B,UAAS,GAAA8B,OAAKyY,EAAc,2BAC5B,cAAY,iBAEXpH,EAAQ5B,KAAI,SAACwI,GACZ,IAAMe,EAAc,GAAHhZ,OAAMuS,EAAe,mDAAAvS,OAAqE,WAAnBiY,EAAO3R,QAAuB,cAAgB,IAChI2S,EACJ5c,EAAAA,cAAAA,EAAAA,SAAA,KACG4b,EAAO1G,UAAY0G,EAAO1G,SAC1B0G,EAAOnZ,OACNzC,EAAAA,cAACiC,EAAAA,EAAS,CACRC,GAAI0Z,EAAOnZ,MACXhB,eAAgBma,EAAO5R,gBAKzB6S,EAAclB,EAAkBC,GAChClF,EACJmG,IAAgBf,GAAuBA,EACnCC,EAAUH,EAAQ1Z,GAClB,GAEN,OACElC,EAAAA,cAACA,EAAAA,SAAc,CAACgC,IAAK4Z,EAAOnZ,OACzBoa,IAAgBf,GACf9b,EAAAA,cAAA,UACEmC,KAAK,SACLd,QAAS,WACPua,EAAOva,QAAQa,GACfia,GAAiB,EACnB,EACAta,UAAW8a,GAEVC,GAGJC,IAAgBf,GACf9b,EAAAA,cAAA,KAAGoV,KAAMsB,EAAM7U,UAAW8a,GACvBC,GAGJC,IAAgBf,GACf9b,EAAAA,cAAC2J,EAAAA,GAAI,CAACC,GAAI8M,EAAM7U,UAAW8a,GACxBC,GAKX,IAEH,GAGH5c,EAAAA,cAAA,UACE,cAAY,kBACZ6B,UAAU,+EACVM,KAAK,SACLd,QAAS,WAAF,OAAQ8a,GAAiB,SAACK,GAAM,OAAMA,CAAM,GAAC,GAEpDxc,EAAAA,cAAC8c,EAAAA,IAAU,OAInB,EAEA,UAEA9G,EAAYjV,UAAY,CACtBiU,QAAShU,IAAAA,QACPA,IAAAA,MAAgB,CACdkU,SAAUlU,IAAAA,QAAkBC,WAC5BwB,MAAOzB,IAAAA,OAAiBC,WACxB+I,aAAchJ,IAAAA,OAAiBC,WAC/BmU,KAAMpU,IAAAA,OACN6a,UAAW7a,IAAAA,KACXiJ,QAASjJ,IAAAA,OACTK,QAASL,IAAAA,QAEXC,WACFgV,UAAWjV,IAAAA,QAAkBA,IAAAA,QAC7BkB,GAAIlB,IAAAA,OAAiBC,WACrBiV,gBAAiBlV,IAAAA,OACjBob,eAAgBpb,IAAAA,QAGlBgV,EAAYrV,aAAe,CACzBsV,UAAW,CAAC,MAAO,QAAS,OAAQ,UACpCC,gBAAiB,GACjBkG,eAAgB","sources":["webpack://openboxes/./src/js/components/DataTable/DateCell.jsx","webpack://openboxes/./src/js/components/form-elements/DateFilter/DateFilter.jsx","webpack://openboxes/./src/js/hooks/list-pages/useCommonFiltersCleaner.js","webpack://openboxes/./src/js/api/services/StockTransferApi.js","webpack://openboxes/./src/js/consts/dateFormat.js","webpack://openboxes/./src/js/components/stock-transfer/list/FilterFields.jsx","webpack://openboxes/./src/js/components/stock-transfer/list/StockTransferListFilters.jsx","webpack://openboxes/./src/js/components/stock-transfer/list/StockTransferListHeader.jsx","webpack://openboxes/./src/js/components/stock-transfer/list/StockTransferStatus.jsx","webpack://openboxes/./src/js/hooks/list-pages/stock-transfer/useStockTransferListTableData.jsx","webpack://openboxes/./src/js/components/stock-transfer/list/StockTransferListTable.jsx","webpack://openboxes/./src/js/hooks/list-pages/stock-transfer/useStockTransferFilters.jsx","webpack://openboxes/./src/js/components/stock-transfer/list/StockTransferList.jsx","webpack://openboxes/./src/js/hooks/list-pages/useTableData.jsx","webpack://openboxes/./src/js/consts/actionItemType.js","webpack://openboxes/./src/js/hooks/useContextMenu.js","webpack://openboxes/./src/js/utils/ContextMenu.jsx"],"sourcesContent":["import React from \"react\";\n\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport TableCell from \"components/DataTable/TableCell\";\nimport DateFormat from \"consts/dateFormat\";\nimport { formatDate } from \"utils/translation-utils\";\n\nconst DateCell = ({\n  displayDateFormat,\n  displayDateDefaultValue,\n  defaultValue,\n  localizeDate,\n  formatLocalizedDate,\n  formatLocalizedDateToDisplay,\n  ...row\n}) => {\n  const getValue = () => {\n    if (!row.value) {\n      return null;\n    }\n\n    if (localizeDate) {\n      return formatLocalizedDateToDisplay(row.value, formatLocalizedDate);\n    }\n\n    return moment(row.value).format(displayDateFormat);\n  };\n\n  return (\n    <TableCell\n      {...row}\n      value={getValue()}\n      defaultValue={defaultValue ?? displayDateDefaultValue}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  displayDateFormat: state.session.displayDateFormat,\n  displayDateDefaultValue: state.session.displayDateDefaultValue,\n  formatLocalizedDateToDisplay: formatDate(state.localize),\n});\n\nexport default connect(mapStateToProps)(DateCell);\n\nDateCell.defaultProps = {\n  localizeDate: false,\n  formatLocalizedDate: DateFormat.COMMON,\n  defaultValue: undefined,\n};\n\nDateCell.propTypes = {\n  displayDateFormat: PropTypes.string.isRequired,\n  displayDateDefaultValue: PropTypes.string.isRequired,\n  defaultValue: PropTypes.string,\n  localizeDate: PropTypes.bool,\n  formatLocalizedDate: PropTypes.string,\n  formatLocalizedDateToDisplay: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\n\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport DatePicker from \"react-datepicker\";\nimport { RiCalendarLine, RiCloseLine } from \"react-icons/ri\";\nimport { useSelector } from \"react-redux\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport DateFormat from \"consts/dateFormat\";\nimport Translate from \"utils/Translate\";\nimport { formatDate, getLocaleCode } from \"utils/translation-utils\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"components/form-elements/DateFilter/DateFilter.scss\";\n\nconst CustomInput = React.forwardRef((props, ref) => {\n  const {\n    onClick,\n    title,\n    value,\n    placeholder,\n    onClear,\n    defaultMessage,\n    formatDateToDisplay,\n  } = props;\n  const onKeypressHandler = (event) => {\n    if (event.key === \"Enter\") onClick();\n  };\n\n  return (\n    <div\n      ref={ref}\n      tabIndex=\"0\"\n      role=\"button\"\n      className=\"d-flex flex-row date-picker__input-wrapper\"\n      onClick={onClick}\n      onKeyDown={onKeypressHandler}\n    >\n      <span className=\"flex-grow-1 date-picker__input\">\n        <Translate id={title} defaultMessage={defaultMessage} />\n        <span>{formatDateToDisplay(value) || placeholder}</span>\n      </span>\n      <div className=\"date-picker__icon-wrapper\">\n        {value ? (\n          <button\n            aria-label=\"Pick date\"\n            type=\"button\"\n            className=\"date-picker__icon\"\n            onClick={onClear}\n          >\n            <RiCloseLine />\n          </button>\n        ) : (\n          <div className=\"date-picker__icon\">\n            <RiCalendarLine />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n});\n\nconst DateFilter = (props) => {\n  const {\n    value,\n    onChange,\n    dateFormat,\n    placeholder,\n    label,\n    timeFormat,\n    defaultMessage,\n    localizeDate,\n    localizedDateFormat,\n  } = props;\n  const { localeCode, formatLocalizedDate } = useSelector((state) => ({\n    localeCode: getLocaleCode(state.localize),\n    formatLocalizedDate: formatDate(state.localize),\n  }));\n  const [isFocused, setIsFocused] = useState(false);\n\n  const onChangeHandler = (date) => onChange(date.format(dateFormat));\n\n  const onClear = (e) => {\n    e.stopPropagation();\n    onChange(null);\n  };\n\n  const formatDateToDisplay = (date) => {\n    if (!date) {\n      return null;\n    }\n\n    if (localizeDate && localizedDateFormat) {\n      return formatLocalizedDate(date, localizedDateFormat);\n    }\n\n    return moment(date).format(dateFormat);\n  };\n\n  const onBlur = () => setIsFocused(false);\n\n  const onFocus = () => setIsFocused(true);\n\n  const isFocusedClass = isFocused ? \"date-picker__wrapper--focused\" : \"\";\n  const isValidClass = value ? \"date-picker__wrapper--valid\" : \"\";\n\n  const selectedDate = value ? moment(value, dateFormat) : null;\n  const highlightedDates = [selectedDate || moment(new Date(), dateFormat)];\n\n  const localeCodeToDisplay = localizeDate ? localeCode : null;\n\n  return (\n    <div\n      className={`date-picker__wrapper ${isFocusedClass} ${isValidClass}`}\n      data-testid=\"date-filter\"\n    >\n      <DatePicker\n        {...props}\n        customInput={\n          <CustomInput\n            formatDateToDisplay={formatDateToDisplay}\n            onClear={onClear}\n            defaultMessage={defaultMessage}\n          />\n        }\n        className=\"date-picker__input\"\n        placeholderText={placeholder}\n        title={label}\n        highlightDates={highlightedDates}\n        selected={selectedDate}\n        onChange={onChangeHandler}\n        onInputClick={onFocus}\n        onSelect={onBlur}\n        onClickOutside={onBlur}\n        disabledKeyboardNavigation\n        popperClassName=\"force-on-top\"\n        showYearDropdown\n        locale={localeCodeToDisplay}\n        scrollableYearDropdown\n        dateFormat={dateFormat}\n        timeFormat={timeFormat}\n        timeIntervals={15}\n        yearDropdownItemNumber={3}\n        utcOffset={0}\n      />\n    </div>\n  );\n};\n\nconst DateFilterBaseInput = (props) => (\n  <BaseField {...props} renderInput={DateFilter} />\n);\n\nDateFilter.defaultProps = {\n  onChange: undefined,\n  label: \"\",\n  defaultMessage: \"\",\n  placeholder: \"\",\n  dateFormat: \"MM/DD/YYYY\",\n  timeFormat: \"HH:mm\",\n  value: null,\n  localizeDate: false,\n  localizedDateFormat: DateFormat.DEFAULT,\n};\n\nDateFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  label: PropTypes.string,\n  defaultMessage: PropTypes.string,\n  placeholder: PropTypes.string,\n  dateFormat: PropTypes.string,\n  timeFormat: PropTypes.string,\n  localizeDate: PropTypes.bool,\n  localizedDateFormat: PropTypes.string,\n};\n\nexport default DateFilterBaseInput;\n","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setShouldRebuildFilterParams } from 'actions';\n\nconst useCommonFiltersCleaner = ({\n  clearFilterValues,\n  initializeDefaultFilterValues,\n  filtersInitialized,\n}) => {\n  const {\n    currentLocation, shouldRebuildParams,\n  } = useSelector((state) => ({\n    currentLocation: state.session.currentLocation,\n    shouldRebuildParams: state.filterForm.shouldRebuildParams,\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // If FilterForm catches change of the location, it sets shouldRebuildFilterParams flag to true\n    // so this useEffect knows when to rebuild the filter form values reducing amount of refetches\n    // and rebuilds of filter params. After it calls the values builder, set the flag to false\n    if (shouldRebuildParams) {\n      if (filtersInitialized) {\n        clearFilterValues();\n      }\n      if (currentLocation?.id) {\n        initializeDefaultFilterValues();\n      }\n      dispatch(setShouldRebuildFilterParams(false));\n    }\n  }, [shouldRebuildParams]);\n};\n\nexport default useCommonFiltersCleaner;\n","import {\n  STOCK_TRANSFER_API,\n  STOCK_TRANSFER_BY_ID,\n  STOCK_TRANSFER_ITEM_BY_ID,\n  STOCK_TRANSFER_REMOVE_ALL_ITEMS,\n} from 'api/urls';\nimport apiClient from 'utils/apiClient';\n\nexport default {\n  getStockTransfers: (config) => apiClient.get(STOCK_TRANSFER_API, config),\n  getStockTransfer: (id) => apiClient.get(STOCK_TRANSFER_BY_ID(id)),\n  updateStockTransfer: (id, payload) => apiClient.post(STOCK_TRANSFER_BY_ID(id), payload),\n  deleteStockTransfer: (id) => apiClient.delete(STOCK_TRANSFER_BY_ID(id)),\n  removeItem: (id) => apiClient.delete(STOCK_TRANSFER_ITEM_BY_ID(id)),\n  removeAllItems: (id) => apiClient.delete(STOCK_TRANSFER_REMOVE_ALL_ITEMS(id)),\n};\n","// Enum for storing labels used in dates formatting.\n// In case of adding new format we have to:\n// 1. Add new format in message.properties file\n// 2. Add the newly created label to this enum\n// This enum is used in:\n// 1. <FormatDate date={your date} formatName={property of this enum} /> component\n\nconst DateFormat = {\n  DEFAULT: 'react.default.defaultDate.format',\n  COMMON: 'react.default.commonDate.format',\n  EXPIRY: 'react.default.expiryDate.format',\n  DISPLAY: 'react.default.displayDate.format',\n};\n\nexport default DateFormat;\n","import DateFilter from \"components/form-elements/DateFilter/DateFilter\";\nimport FilterSelectField from \"components/form-elements/FilterSelectField\";\nimport DateFormat from \"consts/dateFormat\";\n\nexport default {\n  status: {\n    type: FilterSelectField,\n    attributes: {\n      valueKey: \"id\",\n      filterElement: true,\n      placeholder: \"react.stockTransfer.filters.status.placeholder.label\",\n      defaultPlaceholder: \"Status\",\n      showLabelTooltip: true,\n      multi: true,\n      closeMenuOnSelect: false,\n      blurInputOnSelect: false,\n    },\n    getDynamicAttr: ({ statuses }) => ({\n      options: statuses,\n    }),\n  },\n  createdBy: {\n    type: FilterSelectField,\n    attributes: {\n      async: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      valueKey: \"id\",\n      labelKey: \"name\",\n      options: [],\n      filterOptions: (options) => options,\n      filterElement: true,\n      placeholder: \"react.stockTransfer.filters.createdBy.placeholder.label\",\n      defaultPlaceholder: \"Created by\",\n      showLabelTooltip: true,\n    },\n    getDynamicAttr: ({ debouncedPeopleFetch }) => ({\n      loadOptions: debouncedPeopleFetch,\n    }),\n  },\n  lastUpdatedStartDate: {\n    type: DateFilter,\n    attributes: {\n      localizeDate: true,\n      localizedDateFormat: DateFormat.COMMON,\n      label: \"react.stockTransfer.lastUpdateAfter.label\",\n      defaultMessage: \"Last update after\",\n      // date format in which the date will be sent to the API\n      dateFormat: \"MM/DD/YYYY\",\n      filterElement: true,\n    },\n  },\n  lastUpdatedEndDate: {\n    type: DateFilter,\n    attributes: {\n      localizeDate: true,\n      localizedDateFormat: DateFormat.COMMON,\n      label: \"react.stockTransfer.lastUpdateBefore.label\",\n      defaultMessage: \"Last update before\",\n      // date format in which the date will be sent to the API\n      dateFormat: \"MM/DD/YYYY\",\n      filterElement: true,\n    },\n  },\n};\n","import React, { useCallback } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport FilterForm from \"components/Filter/FilterForm\";\nimport { debouncePeopleFetch } from \"utils/option-utils\";\n\nconst StockTransferListFilters = ({\n  setFilterParams,\n  debounceTime,\n  minSearchLength,\n  formProps,\n  filterFields,\n  defaultValues,\n}) => {\n  const debouncedPeopleFetch = useCallback(\n    debouncePeopleFetch(debounceTime, minSearchLength),\n    [debounceTime, minSearchLength],\n  );\n\n  return (\n    <div className=\"d-flex flex-column list-page-filters\">\n      <FilterForm\n        filterFields={filterFields}\n        updateFilterParams={(values) => setFilterParams({ ...values })}\n        formProps={{\n          ...formProps,\n          debouncedPeopleFetch,\n        }}\n        defaultValues={defaultValues}\n        searchFieldPlaceholder=\"react.stockTransfer.filters.searchField.placeholder.label\"\n        searchFieldDefaultPlaceholder=\"Search by transfer number\"\n        searchFieldId=\"q\"\n        allowEmptySubmit\n        hidden={false}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  debounceTime: state.session.searchConfig.debounceTime,\n  minSearchLength: state.session.searchConfig.minSearchLength,\n});\n\nexport default connect(mapStateToProps)(StockTransferListFilters);\n\nStockTransferListFilters.propTypes = {\n  setFilterParams: PropTypes.func.isRequired,\n  debounceTime: PropTypes.number.isRequired,\n  minSearchLength: PropTypes.number.isRequired,\n  defaultValues: PropTypes.shape({}).isRequired,\n  filterFields: PropTypes.shape({}).isRequired,\n  formProps: PropTypes.shape({}).isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Button from \"components/form-elements/Button\";\nimport { STOCK_TRANSFER_URL } from \"consts/applicationUrls\";\nimport Translate from \"utils/Translate\";\n\nconst StockTransferListHeader = ({ isUserManager }) => (\n  <div className=\"d-flex list-page-header\">\n    <span className=\"d-flex align-self-center title\">\n      <Translate\n        id=\"react.stockTransfer.list.label\"\n        defaultMessage=\"List Stock Transfers\"\n      />\n    </span>\n    {isUserManager && (\n      <div className=\"d-flex justify-content-end buttons align-items-center\">\n        <Link to={STOCK_TRANSFER_URL.create()}>\n          <Button\n            defaultLabel=\"Create Stock Transfer\"\n            label=\"react.stockTransfer.createStockTransfer.label\"\n            variant=\"primary\"\n          />\n        </Link>\n      </div>\n    )}\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  isUserManager: state.session.isUserManager,\n});\n\nexport default withRouter(connect(mapStateToProps)(StockTransferListHeader));\n\nStockTransferListHeader.propTypes = {\n  isUserManager: PropTypes.bool.isRequired,\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { fetchStockTransferStatuses } from \"actions\";\nimport StatusIndicator from \"utils/StatusIndicator\";\n\nconst StockTransferStatus = ({ status, allStatuses, fetchStatuses }) => {\n  // Circle is by default set as primary (blue)\n  const [circle, setCircle] = useState(\"primary\");\n  const [statusLabel, setStatusLabel] = useState(\"\");\n  const findStatusCircle = (statusProp) => {\n    // Example ids: \"PENDING\", \"PRIMARY\"\n    const matchedStatus =\n      allStatuses?.length > 0 &&\n      allStatuses.find((stat) => stat.label === statusProp);\n    if (matchedStatus && matchedStatus.variant) {\n      setCircle(matchedStatus.variant);\n      setStatusLabel(matchedStatus.label);\n    }\n  };\n  // Fetch all stock transfer statuses\n  useEffect(() => {\n    // TODO: When having full React, fetch only if not fetched yet or length is 0\n    fetchStatuses();\n  }, []);\n\n  // If statuses change or status (status prop can change when filter/sort data) find circle\n  useEffect(() => {\n    findStatusCircle(status);\n  }, [allStatuses, status]);\n\n  return <StatusIndicator status={statusLabel} variant={circle} />;\n};\n\nconst mapStateToProps = (state) => ({\n  // All possible stock transfer statuses from store\n  allStatuses: state.stockTransfer.statuses,\n  stockTransferSessionVersion: state.stockTransfer.sessionVersion,\n});\n\nconst mapDispatchToProps = {\n  fetchStatuses: fetchStockTransferStatuses,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(StockTransferStatus);\n\nStockTransferStatus.propTypes = {\n  // Status props is uppercased string e.g. \"PENDING\"\n  status: PropTypes.string.isRequired,\n  allStatuses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      variant: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  fetchStatuses: PropTypes.func.isRequired,\n};\n","import _ from \"lodash\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport stockTransferApi from \"api/services/StockTransferApi\";\nimport { STOCK_TRANSFER_API } from \"api/urls\";\nimport useTableData from \"hooks/list-pages/useTableData\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nconst useStockTransferListTableData = (filterParams) => {\n  const errorMessageId = \"react.stockTransfer.fetch.fail.label\";\n  const defaultErrorMessage = \"Unable to fetch stock transfers\";\n  const defaultSorting = {\n    sort: \"dateCreated\",\n    order: \"desc\",\n  };\n  const getParams = ({ offset, currentLocation, state, sortingParams }) => {\n    const { createdBy, status } = filterParams;\n    return _.omitBy(\n      {\n        location: currentLocation?.id,\n        offset: `${offset}`,\n        max: `${state.pageSize}`,\n        ...sortingParams,\n        ...filterParams,\n        createdBy: createdBy?.id,\n        status: status && status.map(({ value }) => value),\n      },\n      _.isEmpty,\n    );\n  };\n\n  const { tableRef, fireFetchData, loading, tableData, onFetchHandler } =\n    useTableData({\n      filterParams,\n      url: STOCK_TRANSFER_API,\n      errorMessageId,\n      defaultErrorMessage,\n      defaultSorting,\n      getParams,\n    });\n\n  const dispatch = useDispatch();\n  const { translate } = useSelector((state) => ({\n    translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  }));\n\n  const deleteStockTransfer = async (id) => {\n    dispatch(showSpinner());\n    try {\n      const { status } = await stockTransferApi.deleteStockTransfer(id);\n      if (status === 204) {\n        const successMessage = translate(\n          \"react.stockTransfer.delete.success.label\",\n          \"Stock transfer has been deleted successfully\",\n        );\n        Alert.success(successMessage);\n      }\n    } finally {\n      dispatch(hideSpinner());\n      fireFetchData();\n    }\n  };\n\n  const deleteHandler = (id) => {\n    confirmAlert({\n      title: translate(\"react.default.areYouSure.label\", \"Are you sure?\"),\n      message: translate(\n        \"react.stockTransfer.delete.confirm.label\",\n        \"Are you sure you want to delete this stock transfer?\",\n      ),\n      buttons: [\n        {\n          label: translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: () => deleteStockTransfer(id),\n        },\n        {\n          label: translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  };\n\n  return {\n    onFetchHandler,\n    deleteHandler,\n    loading,\n    tableData,\n    tableRef,\n  };\n};\n\nexport default useStockTransferListTableData;\n","import React, { useMemo } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { RiDeleteBinLine, RiInformationLine } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\n\nimport DataTable, { TableCell } from \"components/DataTable\";\nimport DateCell from \"components/DataTable/DateCell\";\nimport StockTransferStatus from \"components/stock-transfer/list/StockTransferStatus\";\nimport { STOCK_TRANSFER_URL } from \"consts/applicationUrls\";\nimport useStockTransferListTableData from \"hooks/list-pages/stock-transfer/useStockTransferListTableData\";\nimport ContextMenu from \"utils/ContextMenu\";\nimport { findActions } from \"utils/list-utils\";\nimport Translate from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst StockTransferListTable = ({ filterParams, highestRole, statuses }) => {\n  const { onFetchHandler, deleteHandler, loading, tableData, tableRef } =\n    useStockTransferListTableData(filterParams);\n\n  const actions = useMemo(\n    () => [\n      {\n        label: \"react.stockTransfer.view.label\",\n        defaultLabel: \"View stock transfer\",\n        leftIcon: <RiInformationLine />,\n        href: STOCK_TRANSFER_URL.show,\n      },\n      {\n        label: \"react.stockTransfer.delete.label\",\n        defaultLabel: \"Delete\",\n        leftIcon: <RiDeleteBinLine />,\n        minimumRequiredRole: \"Manager\",\n        statuses: [\"PENDING\", \"APPROVED\"],\n        variant: \"danger\",\n        onClick: (id) => deleteHandler(id),\n      },\n    ],\n    [],\n  );\n\n  // Columns for react-table\n  const columns = useMemo(\n    () => [\n      {\n        Header: \" \",\n        width: 50,\n        sortable: false,\n        className: \"active-circle d-flex align-items-center\",\n        style: { overflow: \"visible\", zIndex: 1 },\n        Cell: (row) => (\n          <ContextMenu\n            positions={[\"right\"]}\n            dropdownClasses=\"action-dropdown-offset\"\n            actions={findActions(actions, row, { highestRole })}\n            id={row.original.id}\n          />\n        ),\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stockTransfer.column.lineItems.label\"\n            defaultMessage=\"Line items\"\n          />\n        ),\n        accessor: \"orderItemsCount\",\n        className: \"d-flex align-items-center justify-content-center\",\n        sortable: false,\n        maxWidth: 100,\n        Cell: (row) => (\n          <span className=\"items-count-circle d-flex align-items-center justify-content-center align-self-center\">\n            {row.original.orderItemsCount}\n          </span>\n        ),\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stockTransfer.column.status.label\"\n            defaultMessage=\"Status\"\n          />\n        ),\n        accessor: \"status\",\n        className: \"active-circle d-flex\",\n        headerClassName: \"header\",\n        Cell: (row) => {\n          const label = statuses?.find(\n            (status) => status.id === row.original.status,\n          )?.label;\n          return <StockTransferStatus status={label ?? row.original.status} />;\n        },\n        maxWidth: 250,\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stockTransfer.column.transferNumber.label\"\n            defaultMessage=\"Transfer number\"\n          />\n        ),\n        accessor: \"orderNumber\",\n        className: \"active-circle d-flex align-items-center\",\n        headerClassName: \"header\",\n        Cell: (row) => (\n          <TableCell {...row} link={STOCK_TRANSFER_URL.show(row.original.id)} />\n        ),\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stockTransfer.column.createdBy.label\"\n            defaultMessage=\"Created by\"\n          />\n        ),\n        accessor: \"createdBy\",\n        className: \"active-circle d-flex align-items-center\",\n        headerClassName: \"header\",\n      },\n      {\n        Header: (\n          <Translate\n            id=\"react.stockTransfer.column.dateCreated.label\"\n            defaultMessage=\"Date created\"\n          />\n        ),\n        accessor: \"dateCreated\",\n        className: \"d-flex align-items-center\",\n        Cell: (row) => <DateCell {...row} tooltip />,\n      },\n    ],\n    [highestRole, statuses],\n  );\n\n  return (\n    <div className=\"list-page-list-section\">\n      <div className=\"title-text p-3 d-flex justify-content-between align-items-center\">\n        <span>\n          <Translate\n            id=\"react.stockTransfer.list.label\"\n            defaultMessage=\"List Stock Transfers\"\n          />\n        </span>\n      </div>\n      <DataTable\n        manual\n        sortable\n        ref={tableRef}\n        columns={columns}\n        data={tableData.data}\n        loading={loading}\n        defaultPageSize={10}\n        pages={tableData.pages}\n        totalData={tableData.totalCount}\n        onFetchData={onFetchHandler}\n        noDataText=\"No stock transfers match the given criteria\"\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  highestRole: state.session.highestRole,\n  statuses: state.stockTransfer.statuses,\n});\n\nexport default connect(mapStateToProps)(StockTransferListTable);\n\nStockTransferListTable.propTypes = {\n  filterParams: PropTypes.shape({}).isRequired,\n  highestRole: PropTypes.string.isRequired,\n  statuses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      variant: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import { useEffect, useState } from \"react\";\n\nimport queryString from \"query-string\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { fetchStockTransferStatuses } from \"actions\";\nimport filterFields from \"components/stock-transfer/list/FilterFields\";\nimport useCommonFiltersCleaner from \"hooks/list-pages/useCommonFiltersCleaner\";\nimport { getParamList, transformFilterParams } from \"utils/list-utils\";\nimport { fetchUserById } from \"utils/option-utils\";\n\nconst useStockTransferFilters = () => {\n  const [filterParams, setFilterParams] = useState({});\n  const [defaultFilterValues, setDefaultFilterValues] = useState({});\n  const [filtersInitialized, setFiltersInitialized] = useState(false);\n\n  const history = useHistory();\n  const { statuses, currentUser, currentLocale } = useSelector((state) => ({\n    statuses: state.stockTransfer.statuses,\n    currentUser: state.session.user,\n    currentLocation: state.session.currentLocation,\n    shouldRebuildParams: state.filterForm.shouldRebuildParams,\n    currentLocale: state.session.activeLanguage,\n  }));\n  const dispatch = useDispatch();\n\n  const clearFilterValues = () => {\n    const { pathname } = history.location;\n    history.push({ pathname });\n  };\n\n  const initializeDefaultFilterValues = async () => {\n    // INITIALIZE EMPTY FILTER OBJECT\n    const defaultValues = Object.keys(filterFields).reduce(\n      (acc, key) => ({ ...acc, [key]: \"\" }),\n      {},\n    );\n\n    const queryProps = queryString.parse(history.location.search);\n\n    // SET STATIC DEFAULT VALUES\n    if (queryProps.status) {\n      const statusesFromParams = getParamList(queryProps.status);\n      defaultValues.status = statuses.filter(({ id }) =>\n        statusesFromParams.includes(id),\n      );\n    }\n    if (queryProps.createdBy) {\n      defaultValues.createdBy =\n        queryProps.createdBy === currentUser.id\n          ? currentUser\n          : await fetchUserById(queryProps.createdBy);\n    }\n    if (queryProps.lastUpdatedStartDate) {\n      defaultValues.lastUpdatedStartDate = queryProps.lastUpdatedStartDate;\n    }\n    if (queryProps.lastUpdatedEndDate) {\n      defaultValues.lastUpdatedEndDate = queryProps.lastUpdatedEndDate;\n    }\n    setDefaultFilterValues({ ...defaultValues });\n    setFiltersInitialized(true);\n  };\n\n  useEffect(() => {\n    // TODO: When having full React, if once fetched, fetch only if a current language differs\n    // TODO: from the language, that we were fetching this for\n    dispatch(fetchStockTransferStatuses());\n  }, [currentLocale]);\n\n  // Custom hook for changing location/filters rebuilding logic\n  useCommonFiltersCleaner({\n    clearFilterValues,\n    initializeDefaultFilterValues,\n    filtersInitialized,\n  });\n\n  const setFilterValues = (values) => {\n    const filterAccessors = {\n      status: { name: \"status\", accessor: \"id\" },\n      createdBy: { name: \"createdBy\", accessor: \"id\" },\n      lastUpdatedStartDate: { name: \"lastUpdatedStartDate\" },\n      lastUpdatedEndDate: { name: \"lastUpdatedEndDate\" },\n    };\n\n    const transformedParams = transformFilterParams(values, filterAccessors);\n    const queryFilterParams = queryString.stringify(transformedParams);\n    const { pathname } = history.location;\n    if (Object.keys(values).length) {\n      history.push({ pathname, search: queryFilterParams });\n    }\n    setFilterParams({ ...values });\n  };\n\n  return { setFilterValues, defaultFilterValues, filterParams };\n};\n\nexport default useStockTransferFilters;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport filterFields from \"components/stock-transfer/list/FilterFields\";\nimport StockTransferListFilters from \"components/stock-transfer/list/StockTransferListFilters\";\nimport StockTransferListHeader from \"components/stock-transfer/list/StockTransferListHeader\";\nimport StockTransferListTable from \"components/stock-transfer/list/StockTransferListTable\";\nimport useStockTransferFilters from \"hooks/list-pages/stock-transfer/useStockTransferFilters\";\nimport useTranslation from \"hooks/useTranslation\";\n\nconst StockTransferList = (props) => {\n  const { setFilterValues, defaultFilterValues, filterParams } =\n    useStockTransferFilters();\n\n  useTranslation(\"stockTransfer\", \"reactTable\");\n\n  return (\n    <div className=\"d-flex flex-column list-page-main\">\n      <StockTransferListHeader />\n      <StockTransferListFilters\n        filterFields={filterFields}\n        setFilterParams={setFilterValues}\n        defaultValues={defaultFilterValues}\n        formProps={{ statuses: props.statuses }}\n      />\n      <StockTransferListTable filterParams={filterParams} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.session.user,\n  statuses: state.stockTransfer.statuses,\n  currentLocation: state.session.currentLocation,\n});\n\nexport default withRouter(connect(mapStateToProps)(StockTransferList));\n\nStockTransferList.propTypes = {\n  statuses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      variant: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { CancelToken } from \"axios\";\nimport _ from \"lodash\";\nimport queryString from \"query-string\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { useSelector } from \"react-redux\";\n\nimport apiClient from \"utils/apiClient\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\n// Hook for managing data which is later populated in data table component.\nconst useTableData = ({\n  filterParams,\n  url,\n  errorMessageId,\n  defaultErrorMessage,\n  getParams,\n  onFetchedData,\n  defaultSorting,\n}) => {\n  // Util ref for react-table to force the fetch of data\n  const tableRef = useRef(null);\n  // Cancel token/signal for fetching data\n  const sourceRef = useRef(CancelToken.source());\n\n  const [loading, setLoading] = useState(false);\n  const [tableData, setTableData] = useState({\n    data: [],\n    pages: -1,\n    totalCount: 0,\n    currentParams: {},\n  });\n\n  const { currentLocation, translate } = useSelector((state) => ({\n    currentLocation: state.session.currentLocation,\n    translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  }));\n\n  const fireFetchData = () => {\n    // Each time we fetch, we want to 'reset' the token/signal\n    sourceRef.current = CancelToken.source();\n    // reset pagination on each search execution\n    if (tableRef.current?.state?.page > 0) {\n      // onPageChange(pageIndex) triggers fireFetchData() when pageIndex !== currenPage\n      // which is why we are calling onPageChange(0) and fireFetchData() separately\n      // by doing that we are trying to avoid double fetching\n      tableRef.current.onPageChange(0);\n    } else {\n      tableRef.current.fireFetchData();\n    }\n  };\n\n  const onFetchHandler = useCallback(\n    (tableState) => {\n      if (!_.isEmpty(filterParams)) {\n        const offset =\n          tableState.page > 0 ? tableState.page * tableState.pageSize : 0;\n        const sortingParams =\n          tableState.sorted?.length > 0\n            ? {\n                sort: tableState.sorted[0].id,\n                order: tableState.sorted[0].desc ? \"desc\" : \"asc\",\n              }\n            : defaultSorting;\n        const params = getParams({\n          offset,\n          currentLocation,\n          state: tableState,\n          sortingParams,\n        });\n        // Fetch data\n        setLoading(true);\n        apiClient\n          .get(url, {\n            params,\n            paramsSerializer: (parameters) => queryString.stringify(parameters),\n            cancelToken: sourceRef.current?.token,\n          })\n          .then((res) => {\n            setTableData({\n              data: res.data.data,\n              totalCount: res.data.totalCount,\n              pages: Math.ceil(res.data.totalCount / tableState.pageSize),\n              currentParams: params,\n            });\n            if (onFetchedData) {\n              onFetchedData(res.data);\n            }\n          })\n          .catch(() =>\n            Promise.reject(\n              new Error(translate(errorMessageId, defaultErrorMessage)),\n            ),\n          )\n          .finally(() => setLoading(false));\n      }\n    },\n    [filterParams],\n  );\n\n  // If filterParams change, refetch the data with applied filters\n  useEffect(() => {\n    fireFetchData();\n  }, [filterParams]);\n\n  useEffect(\n    () => () => {\n      if (currentLocation?.id) {\n        sourceRef.current.cancel(\"Fetching canceled\");\n      }\n    },\n    [currentLocation?.id],\n  );\n\n  return {\n    sourceRef,\n    tableRef,\n    fireFetchData,\n    loading,\n    setLoading,\n    tableData,\n    setTableData,\n    onFetchHandler,\n  };\n};\n\nexport default useTableData;\n","const actionItemType = {\n  LINK: 'LINK',\n  REACT_LINK: 'REACT_LINK',\n  BUTTON: 'BUTTON',\n};\n\nexport default actionItemType;\n","import { useRef, useState } from 'react';\n\nimport actionItemType from 'consts/actionItemType';\n\nconst useContextMenu = () => {\n  const popoverRef = useRef();\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n\n  const getActionItemType = (action) => {\n    if (action.href) {\n      if (action.reactLink) {\n        return actionItemType.REACT_LINK;\n      }\n      return actionItemType.LINK;\n    }\n    return actionItemType.BUTTON;\n  };\n\n  const buildLink = (action, id) => {\n    if (typeof action.href === 'string') {\n      return `${action.href}/${id}`;\n    }\n    if (typeof action.href === 'function') {\n      return action.href(id);\n    }\n    return null;\n  };\n\n  const getPositionClass = (dropdownPlacement) => {\n    switch (dropdownPlacement) {\n      case 'top':\n        return 'dropup';\n      case 'left':\n        return 'dropleft';\n      case 'right':\n        return 'dropright';\n      default:\n        return '';\n    }\n  };\n\n  return {\n    getActionItemType,\n    buildLink,\n    getPositionClass,\n    popoverRef,\n    isPopoverOpen,\n    setIsPopoverOpen,\n  };\n};\n\nexport default useContextMenu;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { RiMoreLine } from \"react-icons/ri\";\nimport { Link } from \"react-router-dom\";\nimport { Popover } from \"react-tiny-popover\";\n\nimport actionItemType from \"consts/actionItemType\";\nimport useContextMenu from \"hooks/useContextMenu\";\nimport Translate from \"utils/Translate\";\n\nimport \"./utils.scss\";\n\nconst ContextMenu = ({\n  positions,\n  actions,\n  dropdownClasses,\n  popoverClasses,\n  id,\n}) => {\n  const {\n    getActionItemType,\n    buildLink,\n    popoverRef,\n    isPopoverOpen,\n    setIsPopoverOpen,\n  } = useContextMenu();\n\n  return (\n    <Popover\n      data-testid=\"action-dots-component\"\n      isOpen={isPopoverOpen}\n      positions={positions}\n      padding={10}\n      onClickOutside={() => setIsPopoverOpen(false)}\n      ref={popoverRef}\n      content={() =>\n        actions && (\n          <div\n            className={`${popoverClasses} context-menu padding-8`}\n            data-testid=\"dropdown-menu\"\n          >\n            {actions.map((action) => {\n              const itemClasses = `${dropdownClasses} d-flex align-items-center gap-8 dropdown-item ${action.variant === \"danger\" ? \"font-red-ob\" : \"\"}`;\n              const itemValue = (\n                <>\n                  {action.leftIcon && action.leftIcon}\n                  {action.label && (\n                    <Translate\n                      id={action.label}\n                      defaultMessage={action.defaultLabel}\n                    />\n                  )}\n                </>\n              );\n              const elementType = getActionItemType(action);\n              const link =\n                elementType === actionItemType.LINK || actionItemType.REACT_LINK\n                  ? buildLink(action, id)\n                  : \"\";\n\n              return (\n                <React.Fragment key={action.label}>\n                  {elementType === actionItemType.BUTTON && (\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        action.onClick(id);\n                        setIsPopoverOpen(false);\n                      }}\n                      className={itemClasses}\n                    >\n                      {itemValue}\n                    </button>\n                  )}\n                  {elementType === actionItemType.LINK && (\n                    <a href={link} className={itemClasses}>\n                      {itemValue}\n                    </a>\n                  )}\n                  {elementType === actionItemType.REACT_LINK && (\n                    <Link to={link} className={itemClasses}>\n                      {itemValue}\n                    </Link>\n                  )}\n                </React.Fragment>\n              );\n            })}\n          </div>\n        )\n      }\n    >\n      <button\n        data-testid=\"dropdown-toggle\"\n        className=\"action-dots dropdown-toggle d-flex align-items-center justify-content-center\"\n        type=\"button\"\n        onClick={() => setIsPopoverOpen((isOpen) => !isOpen)}\n      >\n        <RiMoreLine />\n      </button>\n    </Popover>\n  );\n};\n\nexport default ContextMenu;\n\nContextMenu.propTypes = {\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      leftIcon: PropTypes.element.isRequired,\n      label: PropTypes.string.isRequired,\n      defaultLabel: PropTypes.string.isRequired,\n      href: PropTypes.string,\n      reactLink: PropTypes.bool,\n      variant: PropTypes.string,\n      onClick: PropTypes.func,\n    }),\n  ).isRequired,\n  positions: PropTypes.arrayOf(PropTypes.string),\n  id: PropTypes.string.isRequired,\n  dropdownClasses: PropTypes.string,\n  popoverClasses: PropTypes.string,\n};\n\nContextMenu.defaultProps = {\n  positions: [\"top\", \"right\", \"left\", \"bottom\"],\n  dropdownClasses: \"\",\n  popoverClasses: \"\",\n};\n"],"names":["DateCell","_ref","displayDateFormat","displayDateDefaultValue","defaultValue","localizeDate","formatLocalizedDate","formatLocalizedDateToDisplay","row","_objectWithoutProperties","_excluded","React","TableCell","_extends","value","moment","format","connect","state","session","formatDate","localize","defaultProps","DateFormat","COMMON","undefined","propTypes","PropTypes","isRequired","CustomInput","props","ref","onClick","title","placeholder","onClear","defaultMessage","formatDateToDisplay","tabIndex","role","className","onKeyDown","event","key","Translate","id","type","RiCloseLine","RiCalendarLine","DateFilter","onChange","dateFormat","label","timeFormat","localizedDateFormat","_useSelector","useSelector","localeCode","getLocaleCode","_useState2","useState","isFocused","setIsFocused","onBlur","isFocusedClass","isValidClass","selectedDate","highlightedDates","Date","localeCodeToDisplay","concat","DatePicker","customInput","date","e","stopPropagation","placeholderText","highlightDates","selected","onInputClick","onSelect","onClickOutside","disabledKeyboardNavigation","popperClassName","showYearDropdown","locale","scrollableYearDropdown","timeIntervals","yearDropdownItemNumber","utcOffset","DEFAULT","BaseField","renderInput","clearFilterValues","initializeDefaultFilterValues","filtersInitialized","currentLocation","shouldRebuildParams","filterForm","dispatch","useDispatch","useEffect","setShouldRebuildFilterParams","getStockTransfers","config","apiClient","get","STOCK_TRANSFER_API","getStockTransfer","STOCK_TRANSFER_BY_ID","updateStockTransfer","payload","post","deleteStockTransfer","removeItem","STOCK_TRANSFER_ITEM_BY_ID","removeAllItems","STOCK_TRANSFER_REMOVE_ALL_ITEMS","EXPIRY","DISPLAY","status","FilterSelectField","attributes","valueKey","filterElement","defaultPlaceholder","showLabelTooltip","multi","closeMenuOnSelect","blurInputOnSelect","getDynamicAttr","options","statuses","createdBy","async","openOnClick","autoload","cache","labelKey","filterOptions","_ref2","loadOptions","debouncedPeopleFetch","lastUpdatedStartDate","lastUpdatedEndDate","StockTransferListFilters","setFilterParams","debounceTime","minSearchLength","formProps","filterFields","defaultValues","useCallback","debouncePeopleFetch","FilterForm","updateFilterParams","values","_objectSpread","searchFieldPlaceholder","searchFieldDefaultPlaceholder","searchFieldId","allowEmptySubmit","hidden","searchConfig","StockTransferListHeader","isUserManager","Link","to","STOCK_TRANSFER_URL","create","Button","defaultLabel","variant","withRouter","StockTransferStatus","allStatuses","fetchStatuses","_slicedToArray","circle","setCircle","_useState4","statusLabel","setStatusLabel","statusProp","matchedStatus","length","find","stat","StatusIndicator","mapDispatchToProps","fetchStockTransferStatuses","stockTransfer","stockTransferSessionVersion","sessionVersion","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","filterParams","_useTableData","useTableData","url","errorMessageId","defaultErrorMessage","defaultSorting","sort","order","getParams","offset","sortingParams","_","location","max","pageSize","map","tableRef","fireFetchData","loading","tableData","onFetchHandler","translate","translateWithDefaultMessage","getTranslate","_ref3","_callee","successMessage","_context","showSpinner","stockTransferApi","Alert","hideSpinner","_next","_throw","_x","deleteHandler","confirmAlert","message","buttons","StockTransferListTable","highestRole","_useStockTransferList","useStockTransferListTableData","actions","useMemo","leftIcon","RiInformationLine","href","show","RiDeleteBinLine","minimumRequiredRole","columns","Header","width","sortable","style","overflow","zIndex","Cell","ContextMenu","positions","dropdownClasses","findActions","original","accessor","maxWidth","orderItemsCount","headerClassName","_statuses$find","link","tooltip","DataTable","manual","data","defaultPageSize","pages","totalData","totalCount","onFetchData","noDataText","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","StockTransferList","_useStockTransferFilt","defaultFilterValues","setDefaultFilterValues","_useState6","setFiltersInitialized","history","useHistory","currentUser","user","currentLocale","activeLanguage","queryProps","statusesFromParams","reduce","acc","queryString","parse","search","getParamList","includes","t0","fetchUserById","useCommonFiltersCleaner","pathname","setFilterValues","transformedParams","transformFilterParams","queryFilterParams","stringify","useStockTransferFilters","useTranslation","onFetchedData","useRef","sourceRef","CancelToken","source","setLoading","currentParams","setTableData","_tableRef$current","current","page","onPageChange","tableState","_tableState$sorted","_sourceRef$current","sorted","desc","params","paramsSerializer","parameters","cancelToken","token","res","Math","ceil","reject","cancel","popoverRef","getActionItemType","action","reactLink","actionItemType","buildLink","getPositionClass","dropdownPlacement","isPopoverOpen","setIsPopoverOpen","popoverClasses","_useContextMenu","useContextMenu","Popover","isOpen","padding","content","itemClasses","itemValue","elementType","RiMoreLine"],"sourceRoot":""}