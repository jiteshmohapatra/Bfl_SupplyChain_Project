{"version":3,"file":"bundle.929af1b45eb780bfc503.6319.js","mappings":"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","sources":["webpack://openboxes/./src/js/components/form-elements/v2/FileSelect.jsx","webpack://openboxes/./src/js/components/wizard/WizardPage.jsx","webpack://openboxes/./src/js/components/wizard/WizardSteps.jsx","webpack://openboxes/./src/js/components/wizard/WizardTitle.jsx","webpack://openboxes/./src/js/components/wizard/Wizard.jsx","webpack://openboxes/./src/js/components/Layout/VerticalTabs.jsx","webpack://openboxes/./src/js/components/products-configuration/ImportCategories.jsx","webpack://openboxes/./src/js/components/products-configuration/ConfigureProductCategories.jsx","webpack://openboxes/./src/js/components/products-configuration/ImportProducts.jsx","webpack://openboxes/./src/js/components/products-configuration/ConfigureProducts.jsx","webpack://openboxes/./src/js/components/products-configuration/ReviewCategories.jsx","webpack://openboxes/./src/js/components/products-configuration/ProductsConfigurationWizard.jsx"],"sourcesContent":["import React, { useCallback } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport Button from \"components/form-elements/Button\";\nimport useTranslate from \"hooks/useTranslate\";\n\nimport \"./style.scss\";\n\nconst FileSelect = ({\n  height,\n  width,\n  minHeight,\n  dropzoneText,\n  buttonLabel,\n  buttonVariant,\n  className,\n  multiple,\n  maxFiles,\n  allowedExtensions,\n  ...fieldProps\n}) => {\n  const onDrop = useCallback((acceptedFiles) => {\n    fieldProps.onChange?.(multiple ? acceptedFiles : acceptedFiles[0]);\n  }, []);\n\n  const translate = useTranslate();\n\n  const getFileExtension = (file) => file.path.split(\".\")?.[1];\n\n  const validateFileType = (file) => {\n    if (\n      !allowedExtensions.length ||\n      allowedExtensions.includes(getFileExtension(file))\n    ) {\n      return null;\n    }\n\n    return {\n      code: \"invalid-extension\",\n      message: translate(\n        \"react.default.error.invalidFileExtension.label\",\n        `File extension should be one of: ${allowedExtensions.join(\", \")}`,\n        [allowedExtensions.join(\", \")],\n      ),\n    };\n  };\n\n  const { getRootProps, getInputProps, open, acceptedFiles, fileRejections } =\n    useDropzone({\n      onDrop,\n      noClick: true,\n      noKeyboard: true,\n      validator: validateFileType,\n      multiple,\n      maxFiles,\n    });\n\n  const mapFiles = (files) =>\n    files.map((file) => {\n      const data = file?.path ? file : file.file;\n      return (\n        <li key={data.path}>\n          {data.path} ({data.size} bytes)\n          {file?.errors?.length ? (\n            <ul>\n              {file.errors.map((e) => (\n                <li key={e.code}>{e.message}</li>\n              ))}\n            </ul>\n          ) : null}\n        </li>\n      );\n    });\n\n  return (\n    <div style={{ width, height, minHeight }}>\n      <div\n        {...getRootProps({\n          className: `dropzone d-flex flex-column justify-content-center align-items-center p-3 bg-light ${className}`,\n        })}\n        {...fieldProps}\n      >\n        <input {...getInputProps()} />\n        <h5 className=\"text-secondary font-italic\">\n          {translate(dropzoneText.id, dropzoneText.defaultMessage)}\n        </h5>\n        <Button\n          className=\"mt-3\"\n          onClick={open}\n          variant={buttonVariant}\n          defaultLabel={buttonLabel.defaultMessage}\n          label={buttonLabel.id}\n        />\n      </div>\n      {acceptedFiles.length ? (\n        <aside>\n          <h6 className=\"text-success\">\n            {translate(\"react.default.acceptedFiles.label\", \"Accepted Files\")}:\n          </h6>\n          <ul>{mapFiles(acceptedFiles)}</ul>\n        </aside>\n      ) : null}\n      {fileRejections.length ? (\n        <aside>\n          <h6 className=\"text-danger\">\n            {translate(\"react.default.rejectedFiles.label\", \"Rejected Files\")}:\n          </h6>\n          <ul>{mapFiles(fileRejections)}</ul>\n        </aside>\n      ) : null}\n    </div>\n  );\n};\n\nexport default FileSelect;\n\nFileSelect.propTypes = {\n  // Text displayed on the dropzone\n  dropzoneText: PropTypes.shape({\n    id: PropTypes.string,\n    defaultMessage: PropTypes.string,\n  }),\n  // Label displayed on the button for uploading files\n  buttonLabel: PropTypes.shape({\n    id: PropTypes.string,\n    defaultMessage: PropTypes.string,\n  }),\n  buttonVariant: PropTypes.string,\n  // width of the dropzone\n  width: PropTypes.string,\n  // height of the dropzone\n  height: PropTypes.string,\n  minHeight: PropTypes.string,\n  // classname applied to the dropzone\n  className: PropTypes.string,\n  // indicator whether we can upload multiple files\n  multiple: PropTypes.bool,\n  // maximal count of files to upload (disabled when set to null)\n  maxFiles: PropTypes.number,\n  // allowed extensions for importing (disabled when set to empty array)\n  allowedExtensions: PropTypes.arrayOf(PropTypes.string),\n};\n\nFileSelect.defaultProps = {\n  dropzoneText: {\n    id: \"react.default.dragDropHere.label\",\n    defaultMessage: \"Drag and drop file here.\",\n  },\n  buttonLabel: {\n    id: \"react.default.fileDialog.label\",\n    defaultMessage: \"OPEN FILE DIALOG\",\n  },\n  buttonVariant: \"grayed\",\n  width: \"auto\",\n  height: \"auto\",\n  minHeight: \"200px\",\n  className: \"\",\n  multiple: false,\n  maxFiles: null,\n  allowedExtensions: [],\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst WizardPage = (props) => {\n  const Component = props.pageList[props.currentPage - 1];\n  return (\n    <div className=\"panel-body m-4\" data-testid=\"wizardPage\">\n      <Component\n        initialValues={props.initialValues}\n        nextPage={props.nextPage}\n        previousPage={props.prevPage}\n        goToPage={props.goToPage}\n        {...props.additionalProps}\n      />\n    </div>\n  );\n};\n\nexport default WizardPage;\n\nWizardPage.propTypes = {\n  pageList: PropTypes.arrayOf(PropTypes.func).isRequired,\n  nextPage: PropTypes.func.isRequired,\n  prevPage: PropTypes.func.isRequired,\n  goToPage: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  initialValues: PropTypes.shape({}),\n  additionalProps: PropTypes.shape({}),\n};\n\nWizardPage.defaultProps = {\n  initialValues: {},\n  additionalProps: {},\n};\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport \"components/wizard/WizardSteps.scss\";\n\nconst WizardSteps = (props) => (\n  <div className=\"steps-main-box\">\n    <div className=\"steps-inside-wrapper\">\n      {_.map(props.steps, (step, index) => (\n        <div\n          key={index}\n          className={`step-container ${props.currentStep === index + 1 ? \"active\" : \"\"}`}\n          data-testid=\"wizard-step\"\n          data-stepstate={\n            props.currentStep === index + 1 ? \"active\" : \"inactive\"\n          }\n        >\n          <div\n            className={props.showStepNumber ? \"circle filled\" : \"circle\"}\n            onClick={() => props.onClick(index + 1)}\n            onKeyPress={() => props.onClick(index + 1)}\n            role=\"button\"\n            tabIndex=\"0\"\n            disabled={!props.stepsClickable}\n          >\n            {props.showStepNumber && (\n              <span className=\"number\">{index + 1}</span>\n            )}\n          </div>\n          <div className=\"step-name\">{step}</div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport default WizardSteps;\n\nWizardSteps.propTypes = {\n  /** Array of steps names */\n  steps: PropTypes.arrayOf(PropTypes.string).isRequired,\n  /** Current step number */\n  currentStep: PropTypes.number.isRequired,\n  /** Function called after clicking on step, (non required) */\n  /* eslint-disable-next-line react/no-unused-prop-types */\n  onClick: PropTypes.func,\n  /** Indicator if steps are clickable (default = false) */\n  stepsClickable: PropTypes.bool,\n  showStepNumber: PropTypes.bool,\n};\n\nWizardSteps.defaultProps = {\n  onClick: (stepIdx) => stepIdx,\n  stepsClickable: false,\n  showStepNumber: false,\n};\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst WizardTitle = (props) => {\n  if (!props.title && !props.additionalTitle) {\n    return null;\n  }\n\n  return (\n    <div className=\"panel-heading movement-number\" data-testid=\"wizardTitle\">\n      {props.title ? (\n        <div>\n          {_.map(props.title, (element) => (\n            <span key={element.text} style={{ color: element.color }}>\n              {element.text}\n              <span style={{ color: \"black\" }}>{element.delimeter}</span>\n            </span>\n          ))}\n        </div>\n      ) : null}\n      {props.additionalTitle}\n    </div>\n  );\n};\n\nexport default WizardTitle;\n\nWizardTitle.propTypes = {\n  /** Array of steps names */\n  title: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  additionalTitle: PropTypes.oneOf([PropTypes.string, PropTypes.func]),\n};\n\nWizardTitle.defaultProps = {\n  additionalTitle: null,\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport WizardPage from \"components/wizard/WizardPage\";\nimport WizardSteps from \"components/wizard/WizardSteps\";\nimport WizardTitle from \"components/wizard/WizardTitle\";\n\n/** Wizard component. */\nclass Wizard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: this.props.currentPage || 1,\n      prevPage: this.props.prevPage || 1,\n      values: this.props.initialValues,\n    };\n\n    this.nextPage = this.nextPage.bind(this);\n    this.prevPage = this.prevPage.bind(this);\n    this.goToPage = this.goToPage.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentPage !== this.props.currentPage) {\n      this.goToPage(nextProps.currentPage, nextProps.initialValues);\n    }\n  }\n\n  /**\n   * Sets current page state as a previous page and takes user to the next page.\n   * @param {object} values\n   * @public\n   */\n  nextPage(values) {\n    const { currentPage } = this.state;\n    if (this.props.pageList.length > currentPage) {\n      this.setState({\n        prevPage: currentPage,\n        currentPage: currentPage + 1,\n        values,\n      });\n      this.props.updateWizardValues(currentPage + 1, values);\n    } else {\n      this.setState({ values });\n      this.props.updateWizardValues(currentPage, values);\n    }\n  }\n\n  /**\n   * Returns user to the previous page.\n   * @param {object} values\n   * @public\n   */\n  prevPage(values) {\n    const { prevPage } = this.state;\n    if (prevPage > 0) {\n      this.setState({\n        prevPage: prevPage - 1,\n        currentPage: prevPage,\n        values,\n      });\n      this.props.updateWizardValues(prevPage, values);\n    } else {\n      this.setState({ values });\n      this.props.updateWizardValues(1, values);\n    }\n  }\n\n  /**\n   * Sets current page state as a previous page and takes user to the given number page.\n   * @param {object} values\n   * @param {number} currentPage\n   * @public\n   */\n  goToPage(currentPage, values) {\n    this.setState({ prevPage: currentPage - 1, currentPage, values });\n    this.props.updateWizardValues(currentPage, values);\n  }\n\n  render() {\n    const { currentPage, values } = this.state;\n    const {\n      title,\n      pageList,\n      stepList,\n      additionalTitle,\n      additionalProps,\n      showStepNumber,\n    } = this.props;\n\n    return (\n      <div className=\"content-wrap\" data-testid=\"content-wrap\">\n        <WizardTitle\n          title={title}\n          additionalTitle={additionalTitle}\n          values={values}\n        />\n        <WizardSteps\n          steps={stepList}\n          currentStep={currentPage}\n          showStepNumber={showStepNumber}\n        />\n        <div className=\"panel panel-primary\">\n          <WizardPage\n            pageList={pageList}\n            currentPage={currentPage}\n            initialValues={values}\n            nextPage={this.nextPage}\n            prevPage={this.prevPage}\n            goToPage={this.goToPage}\n            additionalProps={additionalProps}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  hasPackingSupport: state.session.currentLocation.hasPackingSupport,\n});\n\nexport default connect(mapStateToProps, {\n  // showSpinner, hideSpinner, fetchTranslations,\n})(Wizard);\n\nWizard.propTypes = {\n  /** Initial components' data */\n  initialValues: PropTypes.shape({\n    shipmentStatus: PropTypes.string,\n  }),\n  title: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  additionalTitle: PropTypes.oneOf([PropTypes.string, PropTypes.func]),\n  currentPage: PropTypes.number.isRequired,\n  prevPage: PropTypes.number.isRequired,\n  pageList: PropTypes.arrayOf(PropTypes.func).isRequired,\n  stepList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  updateWizardValues: PropTypes.func,\n  additionalProps: PropTypes.shape({}),\n  showStepNumber: PropTypes.bool,\n};\n\nWizard.defaultProps = {\n  initialValues: {},\n  additionalProps: {},\n  additionalTitle: null,\n  updateWizardValues: () => {},\n  showStepNumber: false,\n};\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport Translate from \"utils/Translate\";\n\nclass VerticalTabs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: \"\",\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      Object.keys(this.props.tabs).length !== Object.keys(nextProps.tabs).length\n    ) {\n      this.setState({ activeTab: Object.keys(nextProps.tabs)[0] });\n    }\n  }\n\n  getTabTitles() {\n    return _.map(Object.keys(this.props.tabs), (tabTitle) => (\n      <div\n        role=\"button\"\n        className={`p-3 d-flex justify-content-start align-items-center ${this.isActive(tabTitle) ? \"active \" : \"\"}`}\n        onClick={() => this.setState({ activeTab: tabTitle })}\n        onKeyPress={() => this.setState({ activeTab: tabTitle })}\n        tabIndex={0}\n      >\n        <i\n          className={`fa tab-title-icon ${this.isActive(tabTitle) ? \"fa-dot-circle-o active \" : \"fa-circle-o\"}`}\n        />\n        <Translate id={tabTitle} defaultMessage={tabTitle} />\n      </div>\n    ));\n  }\n\n  isActive(tabTitle) {\n    return tabTitle === this.state.activeTab;\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex w-100 h-100\">\n        <div className=\"vartical-tabs col-3 pl-0 mb-0\">\n          {this.getTabTitles()}\n        </div>\n        <div className=\"vertical-tabs-content col-9\">\n          {this.props.tabs[this.state.activeTab]}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VerticalTabs;\n\nVerticalTabs.propTypes = {\n  tabs: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport fileDownload from \"js-file-download\";\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport FileSelect from \"components/form-elements/v2/FileSelect\";\nimport apiClient from \"utils/apiClient\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nclass ImportCategories extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { file: null };\n\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(file) {\n    this.setState({ file });\n  }\n\n  importCategory() {\n    this.props.showSpinner();\n    const formData = new FormData();\n\n    formData.append(\n      \"importFile\",\n      this.state.file.slice(0, this.state.file.size, \"text/csv\"),\n    );\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n\n    const url = \"/api/productsConfiguration/importCategoryCsv\";\n\n    return apiClient\n      .post(url, formData, config)\n      .then(() => {\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.productsConfiguration.importSuccessful.label\",\n            \"Categories imported successfully\",\n          ),\n        );\n        this.props.nextPage({ categoriesImported: true });\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n      });\n  }\n\n  downloadCategoryTemplate() {\n    this.props.showSpinner();\n    apiClient\n      .get(\"/api/productsConfiguration/downloadCategoryTemplate\")\n      .then((response) => {\n        fileDownload(response.data, \"Category_template.csv\", \"text/csv\");\n        this.props.hideSpinner();\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex flex-column p-5\">\n        <h3>\n          <Translate\n            id=\"react.productsConfiguration.excelImport.label\"\n            defaultMessage=\"Excel Import\"\n          />\n        </h3>\n        <div>\n          <Translate\n            id=\"react.productsConfiguration.csvUpload.label\"\n            defaultMessage=\"Please upload .csv file. Download file template here:\"\n          />\n          &nbsp;\n          <a href=\"#\" onClick={() => this.downloadCategoryTemplate()}>\n            <Translate\n              id=\"react.productsConfiguration.csvTemplate.label\"\n              defaultMessage=\".csv file template\"\n            />\n          </a>\n          .&nbsp;\n          <Translate\n            id=\"react.productsConfiguration.csvReadMore.label\"\n            defaultMessage=\"You can read more on how to create a .csv file\"\n          />\n          &nbsp;\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"#\">\n            <Translate\n              id=\"react.productsConfiguration.here.label\"\n              defaultMessage=\"here\"\n            />\n          </a>\n        </div>\n        <FileSelect className=\"my-3\" onChange={this.onDrop} />\n        <div className=\"align-self-end mt-5\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary float-right\"\n            onClick={() => this.importCategory()}\n            disabled={!this.state.file}\n          >\n            <Translate\n              id=\"react.productsConfiguration.importFile.label\"\n              defaultMessage=\"Import File\"\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps, { showSpinner, hideSpinner })(\n  ImportCategories,\n);\n\nImportCategories.propTypes = {\n  nextPage: PropTypes.func.isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport VerticalTabs from \"components/Layout/VerticalTabs\";\nimport ImportCategories from \"components/products-configuration/ImportCategories\";\nimport apiClient from \"utils/apiClient\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"components/products-configuration/ConfigureProductCategories.scss\";\n\nconst INITIAL_STATE = {\n  categoryOptions: {},\n};\n\nclass ConfigureProductCategories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  componentDidMount() {\n    this.props.showSpinner();\n\n    const url = \"/api/productsConfiguration/categoryOptions\";\n\n    apiClient\n      .get(url)\n      .then((response) => {\n        const categoryOptions = response.data.data;\n\n        this.props.hideSpinner();\n\n        this.setState({ categoryOptions });\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  getCategoryTreeContent(category, categoryName) {\n    return (\n      <div className=\"d-flex flex-column p-5\">\n        <h3>{category.title}</h3>\n        <div className=\"my-3\">{ReactHtmlParser(category.description)}</div>\n        <div className=\"align-self-end\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => this.importCategory(categoryName)}\n          >\n            <Translate\n              id=\"react.productsConfiguration.importCategories.label\"\n              defaultMessage=\"Import Categories\"\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  getTabs() {\n    const tabs = {};\n    _.forEach(this.state.categoryOptions, (category, categoryName) => {\n      tabs[category.title] = this.getCategoryTreeContent(\n        category,\n        categoryName,\n      );\n    });\n\n    tabs[\n      `${this.props.translate(\"react.productsConfiguration.importFromExcel.label\", \"Import from Excel\")}`\n    ] = <ImportCategories nextPage={this.props.nextPage} />;\n\n    return tabs;\n  }\n\n  importCategory(categoryName) {\n    this.props.showSpinner();\n    const url = `/api/productsConfiguration/importCategories?categoryOption=${categoryName}`;\n\n    apiClient\n      .post(url)\n      .then(() => {\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.productsConfiguration.importSuccessful.label\",\n            \"Categories imported successfully\",\n          ),\n        );\n        this.props.nextPage({ categoriesImported: true });\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  render() {\n    const tabs = this.getTabs();\n\n    return (\n      <div className=\"d-flex flex-column\">\n        <div className=\"configuration-wizard-content\">\n          <VerticalTabs tabs={tabs} />\n        </div>\n        <div className=\"submit-buttons\">\n          <button\n            type=\"button\"\n            onClick={() => this.props.goToPage(3, this.props.initialValues)}\n            className=\"btn btn-outline-primary float-right btn-xs\"\n          >\n            <Translate\n              id=\"react.default.button.skip.label\"\n              defaultMessage=\"Skip this step\"\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps, { showSpinner, hideSpinner })(\n  ConfigureProductCategories,\n);\n\nConfigureProductCategories.propTypes = {\n  nextPage: PropTypes.func.isRequired,\n  goToPage: PropTypes.func.isRequired,\n  initialValues: PropTypes.shape({}).isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport fileDownload from \"js-file-download\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport { PRODUCT_URL } from \"consts/applicationUrls\";\nimport apiClient from \"utils/apiClient\";\nimport Translate from \"utils/Translate\";\n\nclass ImportCategories extends Component {\n  downloadProductTemplate() {\n    this.props.showSpinner();\n    apiClient\n      .get(\"/batch/downloadCsvTemplate?template=products.csv\")\n      .then((response) => {\n        fileDownload(response.data, \"Product_template.csv\", \"text/csv\");\n        this.props.hideSpinner();\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex flex-column p-5\">\n        <h3>\n          <Translate\n            id=\"react.productsConfiguration.createCustomProduct.label\"\n            defaultMessage=\"Create a Custom Product List\"\n          />\n        </h3>\n        <div className=\"my-3\">\n          <Translate id=\"react.productsConfiguration.excelImportDescription.label\" />\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://openboxes.helpscoutdocs.com/article/27-product-configuration-basics\"\n          >\n            <Translate\n              id=\"react.productsConfiguration.basics.label\"\n              defaultMessage=\"Products Configuration Basics\"\n            />\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://openboxes.helpscoutdocs.com/article/37-create-a-product\"\n          >\n            <Translate\n              id=\"react.productsConfiguration.createProduct.label\"\n              defaultMessage=\"Create a Product\"\n            />\n          </a>\n        </div>\n        <div>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://openboxes.helpscoutdocs.com/article/30-import-products-from-excel\"\n          >\n            <Translate\n              id=\"react.productsConfiguration.importProductsFromExcel.label\"\n              defaultMessage=\"Import Products form Excel\"\n            />\n          </a>\n        </div>\n        <div className=\"my-3\">\n          <Translate id=\"react.productsConfiguration.downloadProductTemplate1.label\" />\n          &nbsp;\n          <a href=\"#\" onClick={() => this.downloadProductTemplate()}>\n            <Translate\n              id=\"react.productsConfiguration.here.label\"\n              defaultMessage=\"here\"\n            />\n          </a>\n          .&nbsp;\n          <Translate id=\"react.productsConfiguration.downloadProductTemplate2.label\" />\n          &nbsp;\n        </div>\n        <div className=\"align-self-end\">\n          <a\n            className=\"btn btn-primary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={PRODUCT_URL.importCSV()}\n          >\n            <Translate\n              id=\"react.productsConfiguration.importProducts.label\"\n              defaultMessage=\"Import Products List\"\n            />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { showSpinner, hideSpinner })(ImportCategories);\n\nImportCategories.propTypes = {\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport { hideSpinner, showSpinner } from \"actions/index\";\nimport VerticalTabs from \"components/Layout/VerticalTabs\";\nimport ImportProducts from \"components/products-configuration/ImportProducts\";\nimport { PRODUCT_URL } from \"consts/applicationUrls\";\nimport apiClient from \"utils/apiClient\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst INITIAL_STATE = {\n  productOptions: {},\n  importSuccessful: false,\n};\n\nclass ConfigureProducts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n\n    this.prevPage = this.prevPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.showSpinner();\n\n    const url = \"/api/productsConfiguration/productOptions\";\n\n    apiClient\n      .get(url)\n      .then((response) => {\n        const productOptions = response.data.data;\n\n        this.props.hideSpinner();\n\n        this.setState({ productOptions });\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  getProductImportContent(product, productName) {\n    if (this.state.importSuccessful) {\n      return (\n        <div className=\"d-flex flex-column align-items-center p-5\">\n          <h3>\n            <Translate\n              id=\"react.productsConfiguration.importSuccess.label\"\n              defaultMessage=\"Import Complete!\"\n            />\n          </h3>\n          <div className=\"my-3\">\n            <Translate id=\"react.productsConfiguration.importSuccessDetails.label\" />\n          </div>\n          <div className=\"my-3\">\n            <Translate id=\"react.productsConfiguration.productListInfo1.label\" />\n            &nbsp;\n            <a\n              className=\"font-weight-bold\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://openboxes.helpscoutdocs.com/article/27-product-configuration-basics\"\n            >\n              <Translate\n                id=\"react.productsConfiguration.basics.label\"\n                defaultMessage=\"Products Configuration Basics\"\n              />\n            </a>\n            &nbsp;\n            <Translate id=\"react.productsConfiguration.and.label\" />\n            &nbsp;\n            <a\n              className=\"font-weight-bold\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://openboxes.helpscoutdocs.com/article/37-create-a-product\"\n            >\n              <Translate\n                id=\"react.productsConfiguration.createProduct.label\"\n                defaultMessage=\"Create a Product\"\n              />\n            </a>\n            .&nbsp;\n            <Translate id=\"react.productsConfiguration.productListInfo2.label\" />\n          </div>\n          <div>\n            <a\n              className=\"btn btn-primary\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={PRODUCT_URL.list()}\n            >\n              <Translate\n                id=\"react.productsConfiguration.viewProducts.label\"\n                defaultMessage=\"View Products List\"\n              />\n            </a>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"d-flex flex-column p-5\">\n        <h3>{product.title}</h3>\n        <div className=\"my-3\">{ReactHtmlParser(product.description)}</div>\n        <div className=\"align-self-center\">\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={() => this.importProduct(productName)}\n          >\n            <Translate\n              id=\"react.productsConfiguration.importProducts.label\"\n              defaultMessage=\"Import Products List\"\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  getTabs() {\n    const tabs = {};\n    _.forEach(this.state.productOptions, (product, productName) => {\n      tabs[product.title] = this.getProductImportContent(product, productName);\n    });\n\n    tabs[\n      `${this.props.translate(\"react.productsConfiguration.importFromExcel.label\", \"Import from Excel\")}`\n    ] = <ImportProducts />;\n\n    return tabs;\n  }\n\n  importProduct(productName) {\n    this.props.showSpinner();\n    const url = `/api/productsConfiguration/importProducts?productOption=${productName}`;\n\n    apiClient\n      .post(url)\n      .then(() => {\n        this.props.hideSpinner();\n        this.setState({ importSuccessful: true });\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  prevPage() {\n    if (this.props.initialValues.categoriesImported) {\n      this.props.previousPage(this.props.initialValues);\n    } else {\n      this.props.goToPage(1, this.props.initialValues);\n    }\n  }\n\n  render() {\n    const tabs = this.getTabs();\n\n    return (\n      <div className=\"d-flex flex-column\">\n        <div className=\"configuration-wizard-content\">\n          <VerticalTabs tabs={tabs} />\n        </div>\n        <div className=\"submit-buttons\">\n          <button\n            type=\"button\"\n            onClick={this.prevPage}\n            className=\"btn btn-outline-primary float-left btn-xs\"\n          >\n            <Translate\n              id=\"react.default.button.previous.label\"\n              defaultMessage=\"Previous\"\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps, { showSpinner, hideSpinner })(\n  ConfigureProducts,\n);\n\nConfigureProducts.propTypes = {\n  goToPage: PropTypes.func.isRequired,\n  previousPage: PropTypes.func.isRequired,\n  initialValues: PropTypes.shape({\n    categoriesImported: PropTypes.bool.isRequired,\n  }).isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport fileDownload from \"js-file-download\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport { CATEGORY_URL } from \"consts/applicationUrls\";\nimport apiClient from \"utils/apiClient\";\nimport Translate from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst INITIAL_STATE = {\n  categoriesCount: 0,\n};\n\nclass ReviewCategories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  componentDidMount() {\n    this.getCategoriesCount();\n  }\n\n  getCategoriesCount() {\n    this.props.showSpinner();\n    apiClient\n      .get(\"/api/productsConfiguration/categoriesCount\")\n      .then((response) => {\n        this.setState(\n          { categoriesCount: response.data ? response.data.data : 0 },\n          () => this.props.hideSpinner(),\n        );\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  downloadCategories = () => {\n    this.props.showSpinner();\n    apiClient\n      .get(\"/api/productsConfiguration/downloadCategories\")\n      .then((response) => {\n        fileDownload(response.data, \"Categories.csv\", \"text/csv\");\n        this.props.hideSpinner();\n      })\n      .catch(() => this.props.hideSpinner());\n  };\n\n  render() {\n    const { initialValues, previousPage, nextPage } = this.props;\n    const { categoriesCount } = this.state;\n\n    return (\n      <div className=\"d-flex flex-column\">\n        <div className=\"configuration-wizard-content\">\n          <div className=\" configuration-wizard-card\">\n            {categoriesCount > 0 ? (\n              <div className=\"d-flex flex-column justify-content-middle align-items-center col-6 offset-3\">\n                <h3>\n                  <Translate\n                    id=\"react.productsConfiguration.importSuccess.label\"\n                    defaultMessage=\"Import Complete!\"\n                  />\n                </h3>\n                <span style={{ textAlign: \"center\" }}>\n                  <Translate id=\"react.productsConfiguration.successfulCategoriesImport.message\" />\n                </span>\n                <button\n                  type=\"button\"\n                  onClick={this.downloadCategories}\n                  className=\"btn btn-outline-primary float-right mt-3\"\n                >\n                  <Translate\n                    id=\"react.productsConfiguration.downloadCsvFile.label\"\n                    defaultMessage=\"Download CSV file\"\n                  />\n                </button>\n                <a\n                  href={CATEGORY_URL.tree()}\n                  className=\"btn btn-primary float-right mt-3\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  <Translate\n                    id=\"react.productsConfiguration.viewCategoryPage.label\"\n                    defaultMessage=\"View Category Page\"\n                  />\n                </a>\n              </div>\n            ) : (\n              <div className=\"d-flex flex-column justify-content-middle align-items-center col-6 offset-3\">\n                <h3>\n                  <Translate\n                    id=\"react.productsConfiguration.missingCategories.title\"\n                    defaultMessage=\"No categories found\"\n                  />\n                </h3>\n                <span style={{ textAlign: \"center\" }}>\n                  <Translate id=\"react.productsConfiguration.missingCategories.message\" />\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"submit-buttons\">\n          <button\n            type=\"button\"\n            onClick={() => previousPage(initialValues)}\n            className=\"btn btn-outline-primary float-left btn-xs\"\n          >\n            <Translate\n              id=\"react.default.button.previous.label\"\n              defaultMessage=\"Previous\"\n            />\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => nextPage(initialValues)}\n            className=\"btn btn-outline-primary float-right btn-xs\"\n          >\n            <Translate\n              id=\"react.default.button.next.label\"\n              defaultMessage=\"Next\"\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { showSpinner, hideSpinner })(ReviewCategories);\n\nReviewCategories.propTypes = {\n  hideSpinner: PropTypes.func.isRequired,\n  initialValues: PropTypes.shape({}).isRequired,\n  nextPage: PropTypes.func.isRequired,\n  previousPage: PropTypes.func.isRequired,\n  showSpinner: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport { fetchTranslations } from \"actions\";\nimport ConfigureProductCategories from \"components/products-configuration/ConfigureProductCategories\";\nimport ConfigureProducts from \"components/products-configuration/ConfigureProducts\";\nimport ReviewCategories from \"components/products-configuration/ReviewCategories\";\nimport Wizard from \"components/wizard/Wizard\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"components/stock-movement-wizard/StockMovement.scss\";\n\nclass ProductsConfigurationWizard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      values: {\n        categoriesImported: false,\n      },\n      currentPage: 1,\n    };\n\n    this.updateWizardValues = this.updateWizardValues.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTranslations(\"\", \"productsConfiguration\");\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.locale && this.props.locale !== nextProps.locale) {\n      this.props.fetchTranslations(nextProps.locale, \"productsConfiguration\");\n    }\n  }\n\n  get stepList() {\n    return [\n      this.props.translate(\n        \"react.productsConfiguration.configureCategories.label\",\n        \"Configure Product Categories\",\n      ),\n      this.props.translate(\n        \"react.productsConfiguration.reviewCategories.label\",\n        \"Review Categories\",\n      ),\n      this.props.translate(\n        \"react.productsConfiguration.configureProducts.label\",\n        \"Configure Products\",\n      ),\n    ];\n  }\n\n  updateWizardValues(currentPage, values) {\n    if (values.categoriesImported) {\n      this.setState({ currentPage, values });\n    } else {\n      this.setState({ currentPage, values: this.props.initialValues });\n    }\n  }\n\n  render() {\n    const { values, currentPage } = this.state;\n    const pageList = [\n      ConfigureProductCategories,\n      ReviewCategories,\n      ConfigureProducts,\n    ];\n    const { location, history } = this.props;\n    const locationId = location.id;\n\n    return (\n      <Wizard\n        pageList={pageList}\n        stepList={this.stepList}\n        initialValues={values}\n        currentPage={currentPage}\n        prevPage={currentPage === 1 ? 1 : currentPage - 1}\n        additionalProps={{\n          locationId,\n          location,\n          history,\n        }}\n        updateWizardValues={this.updateWizardValues}\n        showStepNumber\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  location: state.session.currentLocation,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps, {\n  fetchTranslations,\n})(ProductsConfigurationWizard);\n\nProductsConfigurationWizard.propTypes = {\n  locale: PropTypes.string.isRequired,\n  fetchTranslations: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  initialValues: PropTypes.shape({\n    categoriesImported: PropTypes.bool,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  location: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    locationType: PropTypes.shape({\n      description: PropTypes.string,\n      locationTypeCode: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nProductsConfigurationWizard.defaultProps = {\n  initialValues: { categoriesImported: false },\n};\n"],"names":["FileSelect","_ref","height","width","minHeight","dropzoneText","buttonLabel","buttonVariant","className","multiple","maxFiles","allowedExtensions","fieldProps","_objectWithoutProperties","_excluded","onDrop","useCallback","acceptedFiles","_fieldProps$onChange","onChange","call","translate","useTranslate","_useDropzone","useDropzone","noClick","noKeyboard","validator","file","length","includes","_file$path$split","path","split","getFileExtension","code","message","concat","join","getRootProps","getInputProps","open","fileRejections","mapFiles","files","map","_file$errors","data","React","key","size","errors","e","style","_extends","id","defaultMessage","Button","onClick","variant","defaultLabel","label","propTypes","PropTypes","defaultProps","WizardPage","props","Component","pageList","currentPage","initialValues","nextPage","previousPage","prevPage","goToPage","additionalProps","isRequired","WizardSteps","_","steps","step","index","currentStep","showStepNumber","onKeyPress","role","tabIndex","disabled","stepsClickable","stepIdx","WizardTitle","title","additionalTitle","element","text","color","delimeter","Wizard","_Component","_this","_classCallCheck","_callSuper","state","values","bind","_inherits","value","nextProps","this","setState","updateWizardValues","_this$state","_this$props","stepList","connect","locale","session","activeLanguage","stockMovementTranslationsFetched","fetchedTranslations","stockMovement","hasPackingSupport","currentLocation","shipmentStatus","VerticalTabs","activeTab","Object","keys","tabs","_this2","tabTitle","isActive","Translate","getTabTitles","ImportCategories","showSpinner","formData","FormData","append","slice","apiClient","post","headers","then","hideSpinner","Alert","categoriesImported","_this3","get","response","fileDownload","_this4","href","downloadCategoryTemplate","target","rel","type","importCategory","translateWithDefaultMessage","getTranslate","localize","INITIAL_STATE","categoryOptions","ConfigureProductCategories","category","categoryName","ReactHtmlParser","description","getCategoryTreeContent","_this5","url","_this6","getTabs","arguments","downloadProductTemplate","PRODUCT_URL","importCSV","productOptions","importSuccessful","ConfigureProducts","product","productName","list","importProduct","getProductImportContent","ImportProducts","categoriesCount","ReviewCategories","getCategoriesCount","textAlign","downloadCategories","CATEGORY_URL","tree","ProductsConfigurationWizard","fetchTranslations","location","history","locationId","push","name","locationType","locationTypeCode"],"sourceRoot":""}