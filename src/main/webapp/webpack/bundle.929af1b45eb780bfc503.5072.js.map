{"version":3,"file":"bundle.929af1b45eb780bfc503.5072.js","mappings":"0JAIMA,EAAkB,SAAHC,GAA4B,IAAtBC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAE3BC,EAAkBF,aAAM,EAANA,EACpBG,MAAM,KACPC,KAAI,SAACC,GAAI,OAAKA,EAAKC,OAAO,GAAKD,EAAKE,cAAcC,UAAU,EAAE,IAC9DC,KAAK,KAER,OACEC,EAAAA,cAAA,OACE,cAAY,mBACZC,UAAU,qDAEVD,EAAAA,cAAA,OAAKC,UAAU,qDACbD,EAAAA,cAAA,QAAMC,UAAS,GAAAC,OAAKX,EAAO,2BAC3BS,EAAAA,cAAA,QAAMC,UAAU,QAAQT,IAIhC,EAEA,UAEAJ,EAAgBe,UAAY,CAC1Bb,OAAQc,IAAAA,OAAiBC,WACzBd,QAASa,IAAAA,OAAiBC,W,wSCvB5B,IAAMC,EAAkB,SAAHjB,GAQf,IAPJkB,EAAQlB,EAARkB,SACAN,EAASZ,EAATY,UACAO,EAAKnB,EAALmB,MACAC,EAAUpB,EAAVoB,WACAC,EAAQrB,EAARqB,SACAC,EAAQtB,EAARsB,SACAC,EAAgBvB,EAAhBuB,iBAEMC,EAAgB,CACpBC,SAAU,IACVC,KAAM,SACNC,QAASL,EAAWF,EAAWE,GAAYF,EAC3CQ,WAAY,WAAO,GAGrB,OACEjB,EAAAA,cAAA,MAAAkB,EAAA,GACOR,EAAWG,EAAgB,CAAC,EAAC,CAClCL,MAAOA,EACPP,UAAS,SAAAC,OAAWD,EAAS,KAAAC,OAAIU,aAAgB,EAAhBA,EAAmBD,MAEnDJ,EACAG,GACCV,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAACmB,EAAAA,IAAc,CAAClB,UAAU,aAC1BD,EAAAA,cAACoB,EAAAA,IAAgB,CAACnB,UAAU,gBAKtC,EAEA,UAEAK,EAAgBe,aAAe,CAC7Bb,WAAOc,EACPrB,eAAWqB,EACXZ,UAAU,EACVC,SAAU,KACVC,iBAAkB,WAAO,EACzBH,WAAY,WAAO,GAGrBH,EAAgBH,UAAY,CAC1BI,SAAUH,IAAAA,UAAoB,CAC5BA,IAAAA,QAAkBA,IAAAA,MAClBA,IAAAA,OACCC,WACHJ,UAAWG,IAAAA,OACXM,SAAUN,IAAAA,KACVI,MAAOJ,IAAAA,MAAgB,CAAC,GACxBK,WAAYL,IAAAA,KAGZO,SAAUP,IAAAA,OACVQ,iBAAkBR,IAAAA,K,4ICzDdmB,EAAa,SAAHlC,GAAA,IAAMmC,EAAKnC,EAALmC,MAAK,OACzBxB,EAAAA,cAAA,QAAMC,UAAU,gEACbuB,EACI,EAGT,UAEAD,EAAWpB,UAAY,CACrBqB,MAAOpB,IAAAA,OAAiBC,Y,eCLpBoB,EAA0B,SAAHpC,GAIvB,IAHJqC,EAAarC,EAAbqC,cACAC,EAAYtC,EAAZsC,aACAC,EAAgBvC,EAAhBuC,iBAEMC,EAAkBH,EACpB,CAAEI,GAAI,iCAAkCC,eAAgB,gBACxD,CAAED,GAAI,iCAAkCC,eAAgB,gBAE5D,OACE/B,EAAAA,cAAA,UACEC,UAAU,gDACV+B,KAAK,SACLhB,QAAS,WAAF,OAAQY,GAAkBF,EAAc,GAE/C1B,EAAAA,cAAA,QAAMC,UAAU,sBACdD,EAAAA,cAACiC,EAAAA,EAAcJ,IAEhBF,EAAe,GAAK3B,EAAAA,cAACuB,EAAU,CAACC,MAAOG,IACvCD,EAAgB1B,EAAAA,cAACkC,EAAAA,IAAgB,MAAMlC,EAAAA,cAACmC,EAAAA,IAAc,MAG7D,EAEA,UAEAV,EAAwBtB,UAAY,CAClCuB,cAAetB,IAAAA,KAAeC,WAC9BsB,aAAcvB,IAAAA,OAAiBC,WAC/BuB,iBAAkBxB,IAAAA,KAAeC,Y,oCC9B7B+B,EAAc,SAACC,GAOnB,OACErC,EAAAA,cAAA,OACE,cAAY,mBACZC,UAAS,0EAAAC,OAA4EmC,EAAMC,MAAQ,yBAA2B,KAE9HtC,EAAAA,cAACuC,EAAAA,IAAY,MACbvC,EAAAA,cAACwC,EAAAA,EAAUH,GACVA,EAAMC,OACLtC,EAAAA,cAAA,UAAQgC,KAAK,SAAShB,QAdR,WACdqB,EAAMI,UACRJ,EAAMI,SAAS,GAEnB,GAWQzC,EAAAA,cAAC0C,EAAAA,IAAW,OAKtB,EAEA,U,wNAEAN,EAAYjC,UAAY,CACtBmC,MAAOlC,IAAAA,OAAiBC,WACxBoC,SAAUrC,IAAAA,MAGZgC,EAAYf,aAAe,CACzBoB,SAAU,MC3BZ,QANoB,SAACJ,GAGnB,OAAOrC,EAAAA,cAAC2C,EAAAA,EAASzB,EAAA,GAAKmB,EAAK,CAAEO,YAFT,SAACC,GAAU,OAAK7C,EAAAA,cAACoC,EAAgBS,EAAc,IAGrE,E,4sECSA,IAAMC,EAAa,SAAHzD,GAiBV,IAhBJ0D,EAAY1D,EAAZ0D,aACAC,EAAkB3D,EAAlB2D,mBACAC,EAAsB5D,EAAtB4D,uBACAC,EAA6B7D,EAA7B6D,8BACAC,EAAa9D,EAAb8D,cACAC,EAAS/D,EAAT+D,UACAC,EAAahE,EAAbgE,cACAC,EAAgBjE,EAAhBiE,iBACAC,EAAMlE,EAANkE,OACAC,EAAOnE,EAAPmE,QACAC,EAAkBpE,EAAlBoE,mBACAC,EAAerE,EAAfqE,gBACAC,EAAStE,EAATsE,UACAC,EAA4BvE,EAA5BuE,6BACAC,EAASxE,EAATwE,UACAC,EAAezE,EAAfyE,gBAEmDC,EAAAC,GAAXC,EAAAA,EAAAA,UAAS,GAAE,GAA5CtC,EAAYoC,EAAA,GAAEG,EAAeH,EAAA,GACsBI,EAAAH,GAAhBC,EAAAA,EAAAA,UAASV,GAAO,GAAnD7B,EAAayC,EAAA,GAAEvC,EAAgBuC,EAAA,GAChCC,GAAUC,EAAAA,EAAAA,QAAO,MAWjBC,EAAc,CAClBtC,KAAMuC,EACN1B,WAAY,CACV2B,YAAab,EACXV,EACAC,GAEFuB,UAAW,SACXC,eAAe,EACfzD,WAlBkB,SAAC0D,GACH,UAAdA,EAAMC,MACRD,EAAME,iBACFF,EAAMG,OAAOxC,OACf8B,EAAQW,QAAQC,SAGtB,KAiBAC,EAAAA,EAAAA,YAAU,WACRjC,EAAkBkC,EAAC,CAAC,EAAI7B,GAC1B,GAAG,CAACA,KAEJ8B,EAAAA,EAAAA,GAAe,UAGf,IAsBMC,EAAiB,SAACC,GACtB,GAAI7B,GAA8B,mBAAZA,EACpBA,EAAQ6B,OADV,CAIA,IAAMC,EAAoBC,OAAOC,KAAKnC,GAAeoC,QAAO,SAACC,EAAKd,GAChE,OAAInB,EAAmBkC,SAASf,GAC9BM,EAAAA,EAAA,GAAYQ,GAAG,GAAAE,EAAA,GAAGhB,EAAMvB,EAAcuB,KAExCM,EAAAA,EAAA,GAAYQ,GAAG,GAAAE,EAAA,GAAGhB,EAAM,IAC1B,GAAG,CAAC,GACJhB,GAA6B,GAC7ByB,EAAKQ,MAAMP,EARX,CASF,EAQA,OANAL,EAAAA,EAAAA,YAAU,WACJb,EAAQW,SACVK,EAAehB,EAAQW,QAE3B,GAAG,CAACrB,aAAe,EAAfA,EAAiB5B,KAEjB+B,EAEA7D,EAAAA,cAAA,OAAKC,UAAU,gBACZ0D,EAAU,8BAA+B,eAM9C3D,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAC8F,EAAAA,GAAI,CACHC,SAAU/C,EACVgD,cAAad,EAAA,GAAO7B,GACpB4C,OAAQ,SAAFC,GAAsC,IAAjCC,EAAMD,EAANC,OAAQC,EAAYF,EAAZE,aAAcf,EAAIa,EAAJb,KAG/B,OAFAjB,EAAQW,QAAUM,EAzDN,SAACc,GACnBjC,EACEqB,OAAOc,QAAQF,GAAQG,QAAO,SAAAC,GAAkB,IAAAC,EAAAxC,EAAAuC,EAAA,GAAhB3B,EAAG4B,EAAA,GAAElE,EAAKkE,EAAA,GAElCC,EAAoBC,IAAAA,OACxB3D,EAAY,GAAA7C,OACT0E,EAAG,mBACNxB,GAEIP,EAAa6D,IAAAA,IAAM3D,EAAc,GAAF7C,OAAK0E,EAAG,gBAC7C,QAAI6B,SAAAA,EAAmBE,UAAY9D,SAAAA,EAAY8D,WAI1C5D,EAAa6B,IAAQA,IAAQzB,IAEb,WAAjByD,EAAOtE,GAA4BoE,IAAAA,QAAUpE,IACxCA,GACX,IAAGuE,OAEP,CAsCQC,CAAYX,GAEVnG,EAAAA,cAAA,QAAM+F,SAAUK,EAAcnG,UAAU,aACtCD,EAAAA,cAAA,OAAKC,UAAU,8DACbD,EAAAA,cAAA,OAAKC,UAAU,iDACbD,EAAAA,cAAA,OAAKC,UAAU,6CACZ8G,EAAAA,EAAAA,IAAgBzC,EAAanB,GAC9BnD,EAAAA,cAACyB,EAAuB,CACtBE,aAAcA,EACdD,cAAeA,EACfE,iBAAkBA,KAGtB5B,EAAAA,cAAA,OAAKC,UAAU,sCACbD,EAAAA,cAACgH,EAAAA,EAAM,CACLC,aAAa,QACbC,MAAM,2BACNlG,QAAS,WAAF,OAAQoE,EAAeC,EAAK,EACnC9F,QAAQ,cACRyC,KAAK,WAEPhC,EAAAA,cAACgH,EAAAA,EAAM,CACLC,aAAcnD,EAAkB,SAAW,SAC3CoD,MACEpD,EACI,4BACA,4BAEN6C,UACGrD,GAAoBoD,IAAAA,MAAQP,GAAQ,SAAC7D,GAAK,OAAMA,CAAK,IAExD/C,QAAQ,UACRyC,KAAK,aAKXhC,EAAAA,cAAA,OAAKC,UAAU,+DACXyB,GACAgF,IAAAA,IAAM3D,GAAc,SAACoE,EAAaC,GAAS,OACzCL,EAAAA,EAAAA,IAAgBI,EAAaC,EAAWhE,EAAU,MAMhE,IAIR,EAOMiE,EAAqB,CACzBzD,6BAA8B0D,EAAAA,IAGhC,SAAeC,EAAAA,EAAAA,KATS,SAACC,GAAK,MAAM,CAClC9D,gBAAiB8D,EAAMC,QAAQ/D,gBAC/BC,WAAW+D,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,IAAaH,EAAMI,WAC3D,GAMuCP,EAAxC,CAA4DvE,GAE5DA,EAAW3C,UAAY,CACrB4C,aAAc3C,IAAAA,MAAgB,CAAC,GAAGC,WAClC2C,mBAAoB5C,IAAAA,KAAeC,WACnCmD,QAASpD,IAAAA,KACT6C,uBAAwB7C,IAAAA,OAAiBC,WACzC6C,8BAA+B9C,IAAAA,OAC/BgD,UAAWhD,IAAAA,MAAgB,CAAC,GAC5B+C,cAAe/C,IAAAA,OACfiD,cAAejD,IAAAA,MAAgB,CAAC,GAChCkD,iBAAkBlD,IAAAA,KAClBmD,OAAQnD,IAAAA,KACRqD,mBAAoBrD,IAAAA,QAAkBA,IAAAA,QACtCsD,gBAAiBtD,IAAAA,MAAgB,CAC/B0B,GAAI1B,IAAAA,OAAiBC,aACpBA,WACHsD,UAAWvD,IAAAA,KAAeC,WAC1BuD,6BAA8BxD,IAAAA,KAAeC,WAC7CwD,UAAWzD,IAAAA,KACX0D,gBAAiB1D,IAAAA,MAGnB0C,EAAWzB,aAAe,CACxB6B,8BAA+B,SAC/BC,cAAe,aACfC,UAAW,CAAC,EACZC,cAAe,CAAC,EAChBC,kBAAkB,EAClBC,QAAQ,EACRC,aAASlC,EACTmC,mBAAoB,GACpBI,WAAW,EACXC,iBAAiB,E,wFC1Nb+D,EAAW,SAAHxI,GAAA,IAAMkB,EAAQlB,EAARkB,SAAUN,EAASZ,EAATY,UAAW6H,EAAKzI,EAALyI,MAAK,OAC5C9H,EAAAA,cAAA,OACEe,KAAK,MACLd,UAAS,SAAAC,OAAWD,EAAS,KAAAC,OAAKwG,IAAAA,QAAUoB,GAAwB,GAAf,eAEpDvH,EACG,EAGRsH,EAASxG,aAAe,CACtBpB,eAAWqB,EACXwG,MAAO,CAAC,GAGVD,EAAS1H,UAAY,CACnBI,SAAUH,IAAAA,UAAoB,CAC5BA,IAAAA,QAAkBA,IAAAA,MAClBA,IAAAA,OACCC,WACHJ,UAAWG,IAAAA,OACX0H,MAAO1H,IAAAA,MAAgB,CAAC,IAG1B,S,sjDCXA,IAAM2H,GAAyBC,EAAAA,EAAAA,IAAiBC,KAE1CC,EAAYlI,EAAAA,YAAiB,SAACqC,EAAO8F,GACzC,IACEC,EAOE/F,EAPF+F,KACAC,EAMEhG,EANFgG,gBACAC,EAKEjG,EALFiG,gBACAC,EAIElG,EAJFkG,QACAtI,EAGEoC,EAHFpC,UACAuI,EAEEnG,EAFFmG,UACAC,EACEpG,EADFoG,OAgBF,OACEzI,EAAAA,cAAA,OAAKC,UAAU,0BAA0B,cAAY,cAClDqI,GACCtI,EAAAA,cAAA,OAAKC,UAAU,qCACZqI,KAGLtI,EAAAA,cAAC+H,EAAsB7G,EAAA,GACjBmB,EAAK,CACTqG,SAAUP,EACVlI,UAAS,mBAAAC,OAAqBD,EAAS,KAAAC,OAAoB,IAAhBkI,EAAKvB,OAAe,YAAc,IAC7EuB,KAAMA,EACNG,QAASA,EACTI,oBA1BsB,SAACC,GAAe,OAC1C5I,EAAAA,cAAAA,EAAAA,SAAA,KACG4I,EAAgBP,iBACfrI,EAAAA,cAAA,OAAKC,UAAU,qCACZoI,KAGJD,EAAKvB,OAAS,GACb7G,EAAAA,cAAC6I,EAAAA,EAAe3H,EAAA,GAAK0H,EAAe,CAAEJ,UAAWA,KAElD,EAiBCM,YAAaxI,EAAAA,EACbyI,YAAalB,EAAAA,EACbmB,gBAAiB,SAACxB,EAAOyB,EAAMC,GAAU,MAAM,CAC7CxI,UAAUwI,aAAU,EAAVA,EAAYxI,YAAY8G,aAAK,EAALA,EAAO9G,UAC1C,EACDyI,WAAY,SAAC3B,EAAO4B,GAAO,IAAAC,EAAA,MAAM,CAC/BC,IAAKF,aAAO,EAAPA,EAASE,IACdxB,MAAOpB,IAAAA,IACL+B,EAAOc,YAAW,KAAArJ,OACbkJ,SAAiB,QAAVC,EAAPD,EAASI,gBAAQ,IAAAH,OAAA,EAAjBA,EAAmBI,MAAK,WAC7BnI,GAEH,EACDoI,WAAY,SAAClC,EAAO4B,EAASF,GAAe,IAAAS,EAAAC,EAAAC,EACpCC,EACiC,QADdH,EACvBT,SAAsB,QAAZU,EAAVV,EAAYa,kBAAU,IAAAH,OAAA,EAAtBA,EAAwBI,qBAAa,IAAAL,EAAAA,EAAIT,aAAU,EAAVA,EAAYpH,GACvD,MAAO,CACLgG,MAAOpB,IAAAA,IACL+B,EAAOc,YAAW,KAAArJ,OACbkJ,SAAiB,QAAVS,EAAPT,EAASI,gBAAQ,IAAAK,OAAA,EAAjBA,EAAmBJ,MAAK,QAAAvJ,OAAO4J,EAAmB,WACvDxI,GAGN,KAIR,IAEA4G,EAAU7G,aAAe,CACvBgH,qBAAiB/G,EACjBgH,qBAAiBhH,EACjBZ,UAAU,EACVuJ,WAAW,EACXhK,UAAW,GACXiK,WAAW,EACX1B,eAAWlH,EACXmH,OAAQ,CAAC,GAGXP,EAAU/H,UAAS+E,EAAAA,EAAA,GACdiF,qBAAmB,IACtB9B,gBAAiBjI,IAAAA,KACjBkI,gBAAiBlI,IAAAA,KACjBM,SAAUN,IAAAA,KACV6J,UAAW7J,IAAAA,KACX8J,UAAW9J,IAAAA,KACXH,UAAWG,IAAAA,OACXoI,UAAWpI,IAAAA,OACXqI,OAAQrI,IAAAA,MAAgB,CAAC,KAG3B,S,85FChGA,IAAMgK,EAAW,SAAH/K,GAA2D,IAArDkB,EAAQlB,EAARkB,SAAUC,EAAKnB,EAALmB,MAAO6J,EAAiBhL,EAAjBgL,kBAAmBC,EAAUjL,EAAViL,WAChDC,GAAclG,EAAAA,EAAAA,QAAO,MAGkCN,EAAAC,GAAnBC,EAAAA,EAAAA,eAAS3C,GAAU,GAAtDkJ,EAAazG,EAAA,GAAE0G,EAAgB1G,EAAA,GAStC,OARAkB,EAAAA,EAAAA,YAAU,WAAM,IAAAyF,EACRC,EAA0C,QAAtBD,EAAGH,EAAYxF,eAAO,IAAA2F,OAAA,EAAnBA,EAAqBE,YAC5CC,EAAsBR,aAAiB,EAAjBA,EAAmBS,MAC3CD,EAAsBF,GACxBF,EAAiBI,EAErB,GAAG,CAACP,IAGFtK,EAAAA,cAAA,OACEmI,IAAKoC,EACL,cAAY,8BACZtK,UAAU,0BACVO,MAAK0E,EAAAA,EAAA,GACA1E,GAAK,IACRsK,MAAON,EACPO,KAAMV,EAAkBU,KACxBC,IAAKX,aAAiB,EAAjBA,EAAmBY,UAGzB1K,EAGP,EAEA6J,EAASjK,UAAY,CACnBI,SAAUH,IAAAA,QAAkBC,WAC5BG,MAAOJ,IAAAA,MAAgB,CAAC,GACxBiK,kBAAmBjK,IAAAA,MAAgB,CACjC8K,OAAQ9K,IAAAA,OAAiBC,WACzByK,MAAO1K,IAAAA,OAAiBC,WACxB4K,OAAQ7K,IAAAA,OAAiBC,WACzB2K,IAAK5K,IAAAA,OAAiBC,WACtB8K,MAAO/K,IAAAA,OAAiBC,WACxB0K,KAAM3K,IAAAA,OAAiBC,WACvB+K,EAAGhL,IAAAA,OAAiBC,WACpBgL,EAAGjL,IAAAA,OAAiBC,aACnBA,WACHiK,WAAYlK,IAAAA,KAAeC,YAG7B+J,EAAS/I,aAAe,CACtBb,MAAO,CAAC,GAGV,IAAM8K,EAAO,SAACjJ,GACZ,IAAMkJ,EAAiBC,SAASC,eAAe,GAADvL,OACzCmC,EAAMqJ,YAAY5J,GAAE,eAEzB,OACE9B,EAAAA,cAAC2L,EAAAA,EAAO,CACNC,MAAI,EACJC,UAAU,SACV/G,OAAQyG,EACRO,UAAWN,SAASC,eAAe,SAEnCzL,EAAAA,cAACoK,EAAQ,CACPC,kBAAmBkB,EAAeQ,wBAClCzB,aAAcjI,EAAM2J,QAAQnF,QAE5B7G,EAAAA,cAAA,MAAAkB,EAAA,CAAKjB,UAAU,gCAAmCoC,EAAM4J,YACrD5J,EAAM9B,WAKjB,EAEA+K,EAAKnL,UAAY,CACfI,SAAUH,IAAAA,QAAkBC,WAC5B4L,WAAY7L,IAAAA,MAAgB,CAAC,GAAGC,WAChCqL,YAAatL,IAAAA,MAAgB,CAC3B0B,GAAI1B,IAAAA,OAAiBC,aACpBA,WACH2L,QAAS5L,IAAAA,QACPA,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,MAAgB,CAAC,MACxDC,YAGJ,IAAM6L,EAAS,SAAC7J,GAAK,OACnBrC,EAAAA,cAACmM,EAAAA,EAAWD,OAAW7J,EACrBrC,EAAAA,cAAA,OAAKe,KAAK,WAAWd,UAAU,sCAC5BoC,EAAM+J,SACLpM,EAAAA,cAAA,SAAOgC,KAAK,WAAWqK,QAAShK,EAAMiK,WAAYrM,UAAU,SAE9DD,EAAAA,cAAA,QAAMC,UAAU,gBAAgBoC,EAAM+F,KAAKlB,QAE3B,EAGtBgF,EAAO/L,UAAY,CACjBiM,QAAShM,IAAAA,KAAeC,WACxBiM,WAAYlM,IAAAA,KAAeC,WAC3B+H,KAAMhI,IAAAA,MAAgB,CACpB8G,MAAO9G,IAAAA,OAAiBC,aACvBA,YAGL,IAAMkM,EAAsB,SAAHhG,GAAA,IAAAiG,EAAMjM,EAAQgG,EAARhG,SAAa8B,EAAKoK,EAAAlG,EAAAmG,GAAA,OAC/C1M,EAAAA,cAACmM,EAAAA,EAAWI,oBAAwBlK,EACjCA,EAAMqJ,YAAYU,UAAkC,QAAvBI,EAAAnK,EAAMqJ,YAAYpJ,aAAK,IAAAkK,OAAA,EAAvBA,EAAyB3F,QAAS,GAC9D7G,EAAAA,cAAA,OAAKC,UAAU,mGACbD,EAAAA,cAAA,OACEC,UAAU,iCACV,cAAY,0BAEXoC,EAAMqJ,YAAYpJ,MAAMuE,SAI9BtG,EAC8B,EAGnCgM,EAAoBlL,aAAe,CACjCyJ,WAAOxJ,GAGTiL,EAAoBpM,UAAY,CAC9BI,SAAUH,IAAAA,UAAoB,CAC5BA,IAAAA,QAAkBA,IAAAA,MAClBA,IAAAA,OACCC,WACHqL,YAAatL,IAAAA,MAAgB,CAC3BgM,QAAShM,IAAAA,KAAeC,WACxBiC,MAAOlC,IAAAA,UAAoB,CAACA,IAAAA,MAAiBA,IAAAA,MAAgB,CAAC,OAC7DC,WACHyK,MAAO1K,IAAAA,QAGT,IAAMuM,EAAoB,SAACtK,GAqCzB,OAAOrC,EAAAA,cAAC2C,EAAAA,EAASzB,EAAA,GAAKmB,EAAK,CAAEO,YApCT,SAAH4D,GAAqC,IAA/BvG,EAASuG,EAATvG,UAAc4C,EAAU4J,EAAAjG,EAAAoG,GACPzI,EAAAH,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/B4I,EAAK1I,EAAA,GAAE2I,EAAQ3I,EAAA,GAetB,OACEnE,EAAAA,cAAC+M,EAAAA,EAAM7L,EAAA,CACL8L,KAAMnK,EAAWf,IACbe,EAAU,CACd5C,UAAS,iBAAAC,OAAoBwG,IAAAA,QAAU7D,aAAU,EAAVA,EAAYP,OAAqC,GAA5B,0BAA8B,KAAApC,OAAID,GAC9FgN,gBAAgB,gBAChBC,qBAAqB,EACrBC,0BAA2BtK,EAAWuK,MACtCC,uBAAwB,CACtB/B,KAAAA,EACAY,OAAAA,EACAK,oBAAAA,GAEFe,WAAYT,EACZU,cA3BsB,SAACjL,EAAOkL,GAIV,iBAAlBA,EAAOA,QAA2BV,EAASxK,EACjD,EAuBImL,UArBkB,SAAC9I,GACH,cAAdA,EAAMC,KAAwBiI,GAChClI,EAAME,gBAEV,IAoBF,IAGF,EAEA,UAEA8H,EAAkBxM,UAAY,CAC5BF,UAAWG,IAAAA,QAGbuM,EAAkBtL,aAAe,CAC/BpB,UAAW,G,iHC1LPyN,EAAY,SAAHrO,GAgBT,IAAAsO,EAfJrL,EAAKjD,EAALiD,MACA/B,EAAQlB,EAARkB,SACAqN,EAAOvO,EAAPuO,QACAC,EAAYxO,EAAZwO,aACAC,EAAIzO,EAAJyO,KACAC,EAAS1O,EAAT0O,UACAC,EAAY3O,EAAZ2O,aACA/N,EAASZ,EAATY,UACAgO,EAAgB5O,EAAhB4O,iBACAC,EAAO7O,EAAP6O,QACA1N,EAAKnB,EAALmB,MACA2N,EAAS9O,EAAT8O,UACAC,EAAW/O,EAAX+O,YACAC,EAAgBhP,EAAhBgP,iBACAC,EAAajP,EAAbiP,cAEIC,EAAYhO,GAAY+B,GAAS0L,EAC/BQ,EAAeN,SAAa,QAANP,EAAPO,EAASO,YAAI,IAAAd,OAAA,EAAbA,EAAe7F,MAEhCqG,GAAaK,IACfD,EACEvO,EAAAA,cAAA,OAAKC,UAAU,sCACbD,EAAAA,cAAC0O,EAAAA,QAAO,CACNC,MAAM,OACNC,MAAM,MACNC,SAAS,MACTC,UAAU,KACV7O,UAAU,yBACV8O,KAAMP,GAENxO,EAAAA,cAACgP,EAAAA,IAAkB,CAAC/O,UAAU,UAE/BsO,IAKHX,IACFW,EACEvO,EAAAA,cAAA,OAAKC,UAAS,UAAAC,OAAYmO,IACxBrO,EAAAA,cAAC0O,EAAAA,QAAO,CACNC,MAAM,OACNC,MAAM,MACNC,SAAS,MACTC,UAAU,KACV7O,UAAU,yBACV8O,KAAMlB,GAAgBvL,EACtB9B,MAAO4N,GAAe,CAAEtD,MAAO,SAE9ByD,KAMLD,IACFC,EACEvO,EAAAA,cAACiP,EAAAA,EAAa,CACZC,QAASrB,GAAgBvL,EACzBrC,UAAWoO,GAEVE,IAKP,IAAMY,EAAmBhB,GAAaK,EAAe,eAAiB,GAChEY,EAAiB,GAAHlP,OAAMD,EAAS,4BAAAC,OAA2BiP,GAE1DE,EACFrP,EAAAA,cAAA,OAAKC,UAAWmP,EAAgB5O,MAAOA,EAAO,cAAY,cACvD+N,GAyBL,OArBIT,GAAwB,iBAATA,IAEfuB,EADEtB,EAEA/N,EAAAA,cAACsP,EAAAA,GAAI,CAACrP,UAAWmP,EAAgB5O,MAAOA,EAAO+O,GAAIzB,GAChDS,GAKHvO,EAAAA,cAAA,KACEC,UAAWmP,EACX5O,MAAOA,EACPsE,OAAQmJ,EAAmB,cAAW3M,EACtCkO,KAAM1B,GAELS,IAMFc,CACT,EAEA3B,EAAUrM,aAAe,CACvB2M,kBAAc1M,EACdrB,UAAW,GACX8N,WAAW,EACXE,kBAAkB,EAClBE,WAAW,EACXD,QAAS,CAAC,GAGZR,EAAUvN,UAAY,CACpB2N,KAAM1N,IAAAA,OACN2N,UAAW3N,IAAAA,KACX+N,UAAW/N,IAAAA,KACXH,UAAWG,IAAAA,OACXwN,QAASxN,IAAAA,KACT6N,iBAAkB7N,IAAAA,KAClByN,aAAczN,IAAAA,OACdI,MAAOJ,IAAAA,MAAgB,CAAC,GACxB8N,QAAS9N,IAAAA,MAAgB,CACvBqO,KAAMrO,IAAAA,MAAgB,CACpB0H,MAAO1H,IAAAA,WAGXG,SAAUH,IAAAA,UAAoB,CAC5BA,IAAAA,QAAkBA,IAAAA,MAClBA,IAAAA,OAEF4N,aAAc5N,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SACrDgO,YAAahO,IAAAA,KACbiO,iBAAkBjO,IAAAA,OAClBkO,cAAelO,IAAAA,MAGjB,S,gOCpIA,IAAMyI,EAAkB,SAACxG,GACvB,I,IAA8D0B,G,GAAxBE,EAAAA,EAAAA,UAAS5B,EAAMoN,KAAO,G,EAAE,E,o4BAAvDC,EAAW3L,EAAA,GAAE4L,EAAc5L,EAAA,IAElCkB,EAAAA,EAAAA,YAAU,WACR0K,EAAetN,EAAMoN,KAAO,EAC9B,GAAG,CAACpN,EAAMoN,OAEV,IAqBMG,EAAgBvN,EAAMmG,WAAanG,EAAMwN,aAAahJ,OACtDiJ,EAAkBzN,EAAMoN,KAAOpN,EAAM0N,SAAW,EAClDC,EAAgB3N,EAAMoN,KAAOpN,EAAM0N,SAAW1N,EAAM0N,SACpDH,EAAgBI,IAClBA,EAAgBJ,GAGlB,IAAMK,EAAwB5N,EAAM6N,gBAAgBxQ,KAAI,SAACyQ,GAAI,MAAM,CACjEjJ,MAAO,GAAFhH,OAAKiQ,EAAI,KAAAjQ,OAAImC,EAAMsB,UAAU,yCAA0C,SAC5ErB,MAAO6N,EACR,IACKC,EAAyBH,EAAsBI,MACnD,SAAA9J,GAAQ,OAAAA,EAALjE,QAAsBD,EAAM0N,QAAQ,IAGzC,OACE/P,EAAAA,cAAA,OACEC,UAAS,yFAAAC,OAA2FmC,EAAMpC,YAE1GD,EAAAA,cAAA,OAAKC,UAAU,UACbD,EAAAA,cAAA,eAAAE,OAAU4P,EAAe,KAAA5P,OAAI8P,IAC7BhQ,EAAAA,cAAA,QAAMC,UAAU,QACboC,EAAMsB,UAAU,uCAAwC,OAE3D3D,EAAAA,cAAA,YAAO4P,IAET5P,EAAAA,cAAA,OAAKC,UAAU,yBACbD,EAAAA,cAAA,OAAKC,UAAU,oDACbD,EAAAA,cAAA,UACEgC,KAAK,SACL2E,UAAWtE,EAAMiO,YACjBrQ,UAAU,iCACVe,QAjDW,WACfqB,EAAMiO,aAAajO,EAAMkO,aAAalO,EAAMoN,KAAO,EACzD,GAiDUzP,EAAAA,cAACwQ,EAAAA,IAAgB,OAEnBxQ,EAAAA,cAAA,QAAMC,UAAU,uCACdD,EAAAA,cAAA,SACEgC,KAAK,SACLyO,IAAK,EACLC,IAAKrO,EAAMsO,MACXrO,MAAOoN,EACPjN,SAnDsB,SAACmO,GACjCjB,EAAeiB,EAAE9L,OAAO+L,cAC1B,EAkDY5P,WAjDwB,SAAC0D,GACjB,UAAdA,EAAMC,KACRvC,EAAMkO,aAAab,EAAc,EAErC,IA+CU1P,EAAAA,cAAA,QAAMC,UAAU,QACboC,EAAMsB,UAAU,uCAAwC,OAE3D3D,EAAAA,cAAA,YAAOqC,EAAMsO,QAEf3Q,EAAAA,cAAA,UACEgC,KAAK,SACL2E,UAAWtE,EAAMyO,QACjB7Q,UAAU,6BACVe,QA3EO,WACXqB,EAAMyO,SAASzO,EAAMkO,aAAalO,EAAMoN,KAAO,EACrD,GA2EUzP,EAAAA,cAAC+Q,EAAAA,IAAiB,QAGtB/Q,EAAAA,cAAA,OAAKC,UAAU,eACbD,EAAAA,cAAC+M,EAAAA,GAAM,CACL9M,UAAU,0BACVgN,gBAAgB,0BAChB+D,cAAc,OACdhF,QAASiE,EACT3N,MAAO8N,EACP3N,SA/EoB,SAAHpD,GAAkB,IAAZiD,EAAKjD,EAALiD,MAC/BD,EAAM4O,iBAAiB3O,EACzB,MAmFF,EAMAuG,EAAgBxH,aAAe,CAC7BmH,eAAWlH,EACXrB,UAAW,IAGb4I,EAAgB1I,UAAY,CAC1BsP,KAAMrP,IAAAA,OAAiBC,WACvBsQ,MAAOvQ,IAAAA,OAAiBC,WACxB0P,SAAU3P,IAAAA,OAAiBC,WAC3BwP,aAAczP,IAAAA,QAAkBA,IAAAA,MAAgB,CAAC,IAAIC,WACrD6P,gBAAiB9P,IAAAA,QAAkBA,IAAAA,QAAkBC,WACrD4Q,iBAAkB7Q,IAAAA,KAAeC,WACjCkQ,aAAcnQ,IAAAA,KAAeC,WAC7ByQ,QAAS1Q,IAAAA,KAAeC,WACxBiQ,YAAalQ,IAAAA,KAAeC,WAC5BmI,UAAWpI,IAAAA,OACXuD,UAAWvD,IAAAA,KAAeC,WAC1BJ,UAAWG,IAAAA,QAGb,SAAemH,EAAAA,EAAAA,KAxBS,SAACC,GAAK,MAAM,CAClC7D,WAAW+D,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,IAAaH,EAAMI,WAC3D,GAsBD,CAAwCiB,E,oqDCrIjC,IAoBMqI,EAAc,SAACC,EAAY7H,EAAKjH,GAC3C,IAAA+O,EAAgE/O,EAAxDgP,oBAAAA,OAAmB,IAAAD,EAAG,GAAEA,EAAEE,EAA8BjP,EAA9BiP,YAAaC,EAAiBlP,EAAjBkP,aAiBzCC,EAfmBL,EAAW7K,QAAO,SAACkH,GAC1C,OAAIA,EAAOiE,UACFjE,EAAOiE,SAAS9L,SAAS2D,EAAIE,SAASlK,OAGjD,IAEgDgH,QAAO,SAACkH,GAAM,OAC5DA,EAAOkE,cACHlE,EAAOkE,aAAaC,OAAM,SAACC,GAAI,OAC7BP,EAAoBQ,MAAK,SAACC,GAAQ,OAAKA,IAAaF,CAAI,GAAC,GAEvD,IAGmDtL,QAC3D,SAACkH,GACC,OAAIA,EAAOuE,sBAxCsBhR,EAyCDyM,EAAOuE,oBAzCAC,EAyCqBV,EA9B1DW,GATAC,EAAQ,CACZ,YACA,QACA,UACA,YACA,UACA,gBACA,cAE0BC,QAAQpR,GAC9BqR,EAAuBF,EAAMC,QAAQH,IAEtB,IAAnBC,IAC0B,IAA1BG,GACAA,GAAwBH,GAhBU,IAAClR,EAAMiR,EAErCE,EASAD,EACAG,CAgCJ,IAGF,OAAIb,GAAwC,mBAAjBA,EAClBC,EAA8BlL,QAAO,SAACkH,GAAM,OACjD+D,EAAa/D,EAAQlE,EAAI,IAGtBkI,CACT,EAEaa,EAAwB,SAACC,EAAcC,GAAe,OACjEhN,OAAOC,KAAK8M,GACThM,QAAO,SAAC1B,GAAG,OAAK2N,EAAgB3N,MAAU0N,EAAa1N,EAAI,IAC3Da,QAAO,SAACC,EAAKd,GACZ,IAAA4N,EAA2BD,EAAgB3N,GAAnCoI,EAAIwF,EAAJxF,KAAMyF,EAAQD,EAARC,SAEd,OAAKA,EAGDC,MAAMC,QAAQL,EAAatF,IAC7B9H,EAAAA,EAAA,GAAYQ,GAAG,GAAAE,EAAA,GAAGhB,EAAM8B,IAAAA,IAAM4L,EAAatF,GAAOyF,KAEpDvN,EAAAA,EAAA,GAAYQ,GAAG,GAAAE,EAAA,GAAGhB,EAAM8B,IAAAA,IAAM4L,EAAatF,GAAOyF,KALhDvN,EAAAA,EAAA,GAAYQ,GAAG,GAAAE,EAAA,GAAGhB,EAAM0N,EAAatF,IAMzC,GAAG,CAAC,EAAE,EAGG4F,EAAe,SAACtQ,GAAK,MAAK,GAAGpC,OAAOoC,EAAM,EAE1CuQ,EAAyB,SAAClP,EAAWmP,GAAY,SAAA5S,OACzDyD,EAAU,yCAA0C,iBAAgB,MAAAzD,OAAK4S,QAAAA,EAAgB,UAAS,EAE1FC,EAAyB,SAACpO,EAAOqO,GAAkB,IAAAC,EAAAC,EAC9D,OACEvO,SAAgB,QAAXsO,EAALtO,EAAOwO,iBAAS,IAAAF,GAAhBA,EAAkBG,YAClBzO,SAAgB,QAAXuO,EAALvO,EAAOwO,iBAAS,IAAAD,OAAA,EAAhBA,EAAkBE,aAAcJ,EAEzB,KAEFrO,aAAK,EAALA,EAAO0O,OAChB,EAIaC,EAAmB,SAAHjU,GAAwC,IAAlCkU,EAAclU,EAAdkU,eAAgBC,EAAWnU,EAAXmU,YAC3CC,EAAelO,OAAOc,QAAQmN,GAAa/N,QAC/C,SAACC,EAAGa,GAAmB,I,IAAAC,G,EAAA,E,4CAAAD,I,ykBAAhB3B,EAAG4B,EAAA,GAAElE,EAAKkE,EAAA,GACf,OAAI+M,EAAe5N,SAASf,GAC1BM,EAAAA,EAAA,GACKQ,GAAG,GAAAE,EAAA,GACLhB,EAAMtC,IAGJoD,CACT,GACA,CAAC,GAGH,OAAOgO,EAAAA,EAAYC,UAAUF,EAC/B,EAEaG,EAAuB,SAACxL,GAAI,OACvCA,EAAK3C,QACH,SAACC,EAAKmO,GACJ,OAAIA,SAAAA,EAAgBC,iBAClB5O,EAAAA,EAAA,GACKQ,GAAG,IACNqO,gBAAiB,GAAF7T,Q,EAAMwF,EAAIqO,gB,uVAAe,CAAEF,MAI9C3O,EAAAA,EAAA,GAAYQ,GAAG,IAAEsO,sBAAuBH,I,KAC1C,GACA,CAAEE,gBAAiB,GAAIC,sBAAuB,CAAC,GAChD,C","sources":["webpack://openboxes/./src/js/utils/StatusIndicator.jsx","webpack://openboxes/./src/js/components/DataTable/TableHeaderCell.jsx","webpack://openboxes/./src/js/components/Filter/BadgeCount.jsx","webpack://openboxes/./src/js/components/Filter/FilterVisibilityToggler.jsx","webpack://openboxes/./src/js/utils/SearchInput.jsx","webpack://openboxes/./src/js/components/form-elements/SearchField.jsx","webpack://openboxes/./src/js/components/Filter/FilterForm.jsx","webpack://openboxes/./src/js/components/DataTable/TableRow.jsx","webpack://openboxes/./src/js/components/DataTable/DataTable.jsx","webpack://openboxes/./src/js/components/form-elements/FilterSelectField.jsx","webpack://openboxes/./src/js/components/DataTable/TableCell.jsx","webpack://openboxes/./src/js/components/DataTable/TablePagination.jsx","webpack://openboxes/./src/js/utils/list-utils.jsx"],"sourcesContent":["import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst StatusIndicator = ({ status, variant }) => {\n  // Replace _ with [spaces] and capitalize each word\n  const statusToDisplay = status\n    ?.split(\"_\")\n    .map((word) => word.charAt(0) + word.toLowerCase().substring(1))\n    .join(\" \");\n\n  return (\n    <div\n      data-testid=\"status-indicator\"\n      className=\"d-flex align-items-center justify-content-between\"\n    >\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <span className={`${variant}-circle status-circle`} />\n        <span className=\"px-1\">{statusToDisplay}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default StatusIndicator;\n\nStatusIndicator.propTypes = {\n  status: PropTypes.string.isRequired,\n  variant: PropTypes.string.isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { RiArrowDownSFill, RiArrowUpSFill } from \"react-icons/ri\";\n\nconst TableHeaderCell = ({\n  children,\n  className,\n  style,\n  toggleSort,\n  sortable,\n  columnId,\n  dynamicClassName,\n}) => {\n  const sortableProps = {\n    tabIndex: \"0\",\n    role: \"button\",\n    onClick: columnId ? toggleSort(columnId) : toggleSort,\n    onKeyPress: () => {},\n  };\n\n  return (\n    <div\n      {...(sortable ? sortableProps : {})}\n      style={style}\n      className={`rt-th ${className} ${dynamicClassName?.(columnId)}`}\n    >\n      {children}\n      {sortable && (\n        <div className=\"sorting-arrows\">\n          <RiArrowUpSFill className=\"arrow-up\" />\n          <RiArrowDownSFill className=\"arrow-down\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TableHeaderCell;\n\nTableHeaderCell.defaultProps = {\n  style: undefined,\n  className: undefined,\n  sortable: false,\n  columnId: null,\n  dynamicClassName: () => {},\n  toggleSort: () => {},\n};\n\nTableHeaderCell.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  className: PropTypes.string,\n  sortable: PropTypes.bool,\n  style: PropTypes.shape({}),\n  toggleSort: PropTypes.func,\n  // When passing columnId, it is expected that toggleSort will take this as an argument.\n  // It's needed for differentiate columns while sorting.\n  columnId: PropTypes.string,\n  dynamicClassName: PropTypes.func,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst BadgeCount = ({ count }) => (\n  <span className=\"d-flex justify-content-center align-items-center badge-count\">\n    {count}\n  </span>\n);\n\nexport default BadgeCount;\n\nBadgeCount.propTypes = {\n  count: PropTypes.number.isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { RiArrowDownSLine, RiArrowUpSLine } from \"react-icons/ri\";\n\nimport BadgeCount from \"components/Filter/BadgeCount\";\nimport Translate from \"utils/Translate\";\n\nconst FilterVisibilityToggler = ({\n  filtersHidden,\n  amountFilled,\n  setFiltersHidden,\n}) => {\n  const labelAttributes = filtersHidden\n    ? { id: \"react.button.showFilters.label\", defaultMessage: \"Show Filters\" }\n    : { id: \"react.button.hideFilters.label\", defaultMessage: \"Hide Filters\" };\n\n  return (\n    <button\n      className=\"d-flex align-items-center hide-filters-button\"\n      type=\"button\"\n      onClick={() => setFiltersHidden(!filtersHidden)}\n    >\n      <span className=\"hide-filters-label\">\n        <Translate {...labelAttributes} />\n      </span>\n      {amountFilled > 0 && <BadgeCount count={amountFilled} />}\n      {filtersHidden ? <RiArrowDownSLine /> : <RiArrowUpSLine />}\n    </button>\n  );\n};\n\nexport default FilterVisibilityToggler;\n\nFilterVisibilityToggler.propTypes = {\n  filtersHidden: PropTypes.bool.isRequired,\n  amountFilled: PropTypes.number.isRequired,\n  setFiltersHidden: PropTypes.func.isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { RiCloseLine, RiSearchLine } from \"react-icons/ri\";\n\nimport Input from \"utils/Input\";\n\nconst SearchInput = (props) => {\n  const handleClear = () => {\n    if (props.onChange) {\n      props.onChange(\"\");\n    }\n  };\n\n  return (\n    <div\n      data-testid=\"search-input-div\"\n      className={`d-flex flex-row align-items-center justify-content-center search-input ${props.value ? \"search-input-has-value\" : \"\"}`}\n    >\n      <RiSearchLine />\n      <Input {...props} />\n      {props.value && (\n        <button type=\"button\" onClick={handleClear}>\n          <RiCloseLine />\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default SearchInput;\n\nSearchInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n};\n\nSearchInput.defaultProps = {\n  onChange: null,\n};\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport SearchInput from \"utils/SearchInput\";\n\nconst SearchField = (props) => {\n  const renderInput = (attributes) => <SearchInput {...attributes} />;\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default SearchField;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport { setShouldRebuildFilterParams } from \"actions\";\nimport FilterVisibilityToggler from \"components/Filter/FilterVisibilityToggler\";\nimport Button from \"components/form-elements/Button\";\nimport SearchField from \"components/form-elements/SearchField\";\nimport useTranslation from \"hooks/useTranslation\";\nimport { renderFormField } from \"utils/form-utils\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"components/Filter/FilterStyles.scss\";\n\nconst FilterForm = ({\n  filterFields,\n  updateFilterParams,\n  searchFieldPlaceholder,\n  searchFieldDefaultPlaceholder,\n  searchFieldId,\n  formProps,\n  defaultValues,\n  allowEmptySubmit,\n  hidden,\n  onClear,\n  ignoreClearFilters,\n  currentLocation,\n  translate,\n  setShouldRebuildFilterValues,\n  isLoading,\n  isCycleCountTab,\n}) => {\n  const [amountFilled, setAmountFilled] = useState(0);\n  const [filtersHidden, setFiltersHidden] = useState(hidden);\n  const formRef = useRef(null);\n\n  const submitOnEnter = (event) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      if (event.target.value) {\n        formRef.current.submit();\n      }\n    }\n  };\n\n  const searchField = {\n    type: SearchField,\n    attributes: {\n      placeholder: translate(\n        searchFieldPlaceholder,\n        searchFieldDefaultPlaceholder,\n      ),\n      ariaLabel: \"Search\",\n      filterElement: true,\n      onKeyPress: submitOnEnter,\n    },\n  };\n\n  // Default values can change based on currentLocation\n  // or any async data defaultValues are waiting for\n  useEffect(() => {\n    updateFilterParams({ ...defaultValues });\n  }, [defaultValues]);\n\n  useTranslation(\"button\");\n\n  // Calculate which object's values are not empty\n  const countFilled = (values) => {\n    setAmountFilled(\n      Object.entries(values).filter(([key, value]) => {\n        // Ignore accounting for filter that is disabled\n        const dynamicAttributes = _.invoke(\n          filterFields,\n          `${key}.getDynamicAttr`,\n          formProps,\n        );\n        const attributes = _.get(filterFields, `${key}.attributes`);\n        if (dynamicAttributes?.disabled || attributes?.disabled) return false;\n\n        // Ignore filter that is not specified in filterFields config\n        // and that is not a search field\n        if (!filterFields[key] && key !== searchFieldId) return false;\n        // evaluate filter value\n        if (typeof value === \"object\") return !_.isEmpty(value);\n        return !!value;\n      }).length,\n    );\n  };\n\n  const onClearHandler = (form) => {\n    if (onClear && typeof onClear === \"function\") {\n      onClear(form);\n      return;\n    }\n    const clearedFilterList = Object.keys(defaultValues).reduce((acc, key) => {\n      if (ignoreClearFilters.includes(key)) {\n        return { ...acc, [key]: defaultValues[key] };\n      }\n      return { ...acc, [key]: \"\" };\n    }, {});\n    setShouldRebuildFilterValues(true);\n    form.reset(clearedFilterList);\n  };\n\n  useEffect(() => {\n    if (formRef.current) {\n      onClearHandler(formRef.current);\n    }\n  }, [currentLocation?.id]);\n\n  if (isLoading) {\n    return (\n      <div className=\"loading-text\">\n        {translate(\"react.default.loading.label\", \"Loading...\")}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"filter-form\">\n      <Form\n        onSubmit={updateFilterParams}\n        initialValues={{ ...defaultValues }}\n        render={({ values, handleSubmit, form }) => {\n          formRef.current = form;\n          countFilled(values);\n          return (\n            <form onSubmit={handleSubmit} className=\"w-100 m-0\">\n              <div className=\"classic-form with-description align-items-center flex-wrap\">\n                <div className=\"w-100 d-flex filter-header align-items-center\">\n                  <div className=\"min-w-50 d-flex align-items-center gap-8\">\n                    {renderFormField(searchField, searchFieldId)}\n                    <FilterVisibilityToggler\n                      amountFilled={amountFilled}\n                      filtersHidden={filtersHidden}\n                      setFiltersHidden={setFiltersHidden}\n                    />\n                  </div>\n                  <div className=\"d-flex justify-content-end buttons\">\n                    <Button\n                      defaultLabel=\"Clear\"\n                      label=\"react.button.clear.label\"\n                      onClick={() => onClearHandler(form)}\n                      variant=\"transparent\"\n                      type=\"button\"\n                    />\n                    <Button\n                      defaultLabel={isCycleCountTab ? \"Filter\" : \"Search\"}\n                      label={\n                        isCycleCountTab\n                          ? \"react.button.filter.label\"\n                          : \"react.button.search.label\"\n                      }\n                      disabled={\n                        !allowEmptySubmit && _.every(values, (value) => !value)\n                      }\n                      variant=\"primary\"\n                      type=\"submit\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"d-flex pt-2 flex-wrap gap-8 align-items-center filters-row\">\n                  {!filtersHidden &&\n                    _.map(filterFields, (fieldConfig, fieldName) =>\n                      renderFormField(fieldConfig, fieldName, formProps),\n                    )}\n                </div>\n              </div>\n            </form>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  currentLocation: state.session.currentLocation,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nconst mapDispatchToProps = {\n  setShouldRebuildFilterValues: setShouldRebuildFilterParams,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterForm);\n\nFilterForm.propTypes = {\n  filterFields: PropTypes.shape({}).isRequired,\n  updateFilterParams: PropTypes.func.isRequired,\n  onClear: PropTypes.func,\n  searchFieldPlaceholder: PropTypes.string.isRequired,\n  searchFieldDefaultPlaceholder: PropTypes.string,\n  formProps: PropTypes.shape({}),\n  searchFieldId: PropTypes.string,\n  defaultValues: PropTypes.shape({}),\n  allowEmptySubmit: PropTypes.bool,\n  hidden: PropTypes.bool,\n  ignoreClearFilters: PropTypes.arrayOf(PropTypes.string),\n  currentLocation: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  translate: PropTypes.func.isRequired,\n  setShouldRebuildFilterValues: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  isCycleCountTab: PropTypes.bool,\n};\n\nFilterForm.defaultProps = {\n  searchFieldDefaultPlaceholder: \"Search\",\n  searchFieldId: \"searchTerm\",\n  formProps: {},\n  defaultValues: {},\n  allowEmptySubmit: false,\n  hidden: true,\n  onClear: undefined,\n  ignoreClearFilters: [],\n  isLoading: false,\n  isCycleCountTab: false,\n};\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst TableRow = ({ children, className, error }) => (\n  <div\n    role=\"row\"\n    className={`rt-tr ${className} ${!_.isEmpty(error) ? \"rt-invalid\" : \"\"}`}\n  >\n    {children}\n  </div>\n);\n\nTableRow.defaultProps = {\n  className: undefined,\n  error: {},\n};\n\nTableRow.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  className: PropTypes.string,\n  error: PropTypes.shape({}),\n};\n\nexport default TableRow;\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport ReactTable from \"react-table\";\nimport './DataTable.css';\nimport withFixedColumns from \"react-table-hoc-fixed-columns\";\n\nimport TableHeaderCell from \"components/DataTable/TableHeaderCell\";\nimport TablePagination from \"components/DataTable/TablePagination\";\nimport TableRow from \"components/DataTable/TableRow\";\n\n\n// important: this line must be placed after react-table css import\nimport \"react-table-hoc-fixed-columns/lib/styles.css\";\nimport \"components/DataTable/DataTable.scss\";\n\nconst ReactTableFixedColumns = withFixedColumns(ReactTable);\n\nconst DataTable = React.forwardRef((props, ref) => {\n  const {\n    data,\n    footerComponent,\n    headerComponent,\n    columns,\n    className,\n    totalData,\n    errors,\n  } = props;\n\n  const PaginationComponent = (paginationProps) => (\n    <>\n      {paginationProps.footerComponent && (\n        <div className=\"app-react-table-footer d-flex p-2\">\n          {footerComponent()}\n        </div>\n      )}\n      {data.length > 0 && (\n        <TablePagination {...paginationProps} totalData={totalData} />\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"app-react-table-wrapper\" data-testid=\"data-table\">\n      {headerComponent && (\n        <div className=\"app-react-table-header d-flex p-2\">\n          {headerComponent()}\n        </div>\n      )}\n      <ReactTableFixedColumns\n        {...props}\n        innerRef={ref}\n        className={`app-react-table ${className} ${data.length === 0 ? \"hide-data\" : \"\"}`}\n        data={data}\n        columns={columns}\n        PaginationComponent={PaginationComponent}\n        ThComponent={TableHeaderCell}\n        TrComponent={TableRow}\n        getTheadThProps={(state, _row, columnInfo) => ({\n          sortable: columnInfo?.sortable || state?.sortable,\n        })}\n        getTrProps={(state, rowInfo) => ({\n          row: rowInfo?.row,\n          error: _.get(\n            errors.packingList,\n            `['${rowInfo?.original?.rowId}']`,\n            undefined,\n          ),\n        })}\n        getTdProps={(state, rowInfo, columnInfo) => {\n          const columnErrorAccessor =\n            columnInfo?.getProps()?.errorAccessor ?? columnInfo?.id;\n          return {\n            error: _.get(\n              errors.packingList,\n              `['${rowInfo?.original?.rowId}']['${columnErrorAccessor}']`,\n              undefined,\n            ),\n          };\n        }}\n      />\n    </div>\n  );\n});\n\nDataTable.defaultProps = {\n  footerComponent: undefined,\n  headerComponent: undefined,\n  sortable: false,\n  resizable: false,\n  className: \"\",\n  multiSort: false,\n  totalData: undefined,\n  errors: {},\n};\n\nDataTable.propTypes = {\n  ...ReactTablePropTypes,\n  footerComponent: PropTypes.func,\n  headerComponent: PropTypes.func,\n  sortable: PropTypes.bool,\n  resizable: PropTypes.bool,\n  multiSort: PropTypes.bool,\n  className: PropTypes.string,\n  totalData: PropTypes.number,\n  errors: PropTypes.shape({}),\n};\n\nexport default DataTable;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Overlay } from \"react-overlays\";\nimport { components } from \"react-select\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Select from \"utils/Select\";\n\nimport \"components/Filter/FilterStyles.scss\";\nimport \"components/form-elements/FilterSelectField.scss\";\n\nconst Dropdown = ({ children, style, inputContainerRec, hasOptions }) => {\n  const dropdownRef = useRef(null);\n  // if current dropdown width is smaller than the input container\n  // then change dropdown width to the same width as the input container\n  const [dropdownWidth, setDropdownWidth] = useState(undefined);\n  useEffect(() => {\n    const currentDropdownWidth = dropdownRef.current?.offsetWidth;\n    const inputContainerWidth = inputContainerRec?.width;\n    if (inputContainerWidth > currentDropdownWidth) {\n      setDropdownWidth(inputContainerWidth);\n    }\n  }, [hasOptions]);\n\n  return (\n    <div\n      ref={dropdownRef}\n      data-testid=\"custom-select-dropdown-menu\"\n      className=\"filter-select__dropdown\"\n      style={{\n        ...style,\n        width: dropdownWidth,\n        left: inputContainerRec.left,\n        top: inputContainerRec?.bottom,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nDropdown.propTypes = {\n  children: PropTypes.element.isRequired,\n  style: PropTypes.shape({}),\n  inputContainerRec: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    bottom: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired,\n    right: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }).isRequired,\n  hasOptions: PropTypes.bool.isRequired,\n};\n\nDropdown.defaultProps = {\n  style: {},\n};\n\nconst Menu = (props) => {\n  const inputContainer = document.getElementById(\n    `${props.selectProps.id}-container`,\n  );\n  return (\n    <Overlay\n      show\n      placement=\"bottom\"\n      target={inputContainer}\n      container={document.getElementById(\"root\")}\n    >\n      <Dropdown\n        inputContainerRec={inputContainer.getBoundingClientRect()}\n        hasOptions={!!props.options.length}\n      >\n        <div className=\"filter-select__custom-option\" {...props.innerProps}>\n          {props.children}\n        </div>\n      </Dropdown>\n    </Overlay>\n  );\n};\n\nMenu.propTypes = {\n  children: PropTypes.element.isRequired,\n  innerProps: PropTypes.shape({}).isRequired,\n  selectProps: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\n  ).isRequired,\n};\n\nconst Option = (props) => (\n  <components.Option {...props}>\n    <div role=\"listitem\" className=\"d-flex flex-row align-items-center\">\n      {props.isMulti && (\n        <input type=\"checkbox\" checked={props.isSelected} className=\"mr-1\" />\n      )}\n      <span className=\"option-label\">{props.data.label}</span>\n    </div>\n  </components.Option>\n);\n\nOption.propTypes = {\n  isMulti: PropTypes.bool.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  data: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst IndicatorsContainer = ({ children, ...props }) => (\n  <components.IndicatorsContainer {...props}>\n    {props.selectProps.isMulti && props.selectProps.value?.length > 0 && (\n      <div className=\"d-flex flex-column justify-content-center align-items-center selected-count-indicator-container\">\n        <div\n          className=\"selected-count-indicator-inner\"\n          data-testid=\"filter-count-indicator\"\n        >\n          {props.selectProps.value.length}\n        </div>\n      </div>\n    )}\n    {children}\n  </components.IndicatorsContainer>\n);\n\nIndicatorsContainer.defaultProps = {\n  width: undefined,\n};\n\nIndicatorsContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n  selectProps: PropTypes.shape({\n    isMulti: PropTypes.bool.isRequired,\n    value: PropTypes.oneOfType([PropTypes.array, PropTypes.shape({})]),\n  }).isRequired,\n  width: PropTypes.string,\n};\n\nconst FilterSelectField = (props) => {\n  const renderInput = ({ className, ...attributes }) => {\n    const [input, setInput] = useState(\"\");\n\n    const handleInputChange = (value, action) => {\n      // only set the input when the action that caused the\n      // change equals to \"input-change\" and ignore the other\n      // ones like: \"set-value\", \"input-blur\", and \"menu-close\"\n      if (action.action === \"input-change\") setInput(value);\n    };\n\n    const handleKeyDown = (event) => {\n      if (event.key === \"Backspace\" && !input) {\n        event.preventDefault();\n      }\n    };\n\n    return (\n      <Select\n        name={attributes.id}\n        {...attributes}\n        className={`filter-select ${!_.isEmpty(attributes?.value) ? \"filter-select-has-value\" : \"\"} ${className}`}\n        classNamePrefix=\"filter-select\"\n        hideSelectedOptions={false}\n        controlShouldRenderValue={!attributes.multi}\n        customSelectComponents={{\n          Menu,\n          Option,\n          IndicatorsContainer,\n        }}\n        inputValue={input}\n        onInputChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n      />\n    );\n  };\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default FilterSelectField;\n\nFilterSelectField.propTypes = {\n  className: PropTypes.string,\n};\n\nFilterSelectField.defaultProps = {\n  className: \"\",\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { RiErrorWarningLine } from \"react-icons/ri\";\nimport { Link } from \"react-router-dom\";\nimport { Tooltip } from \"react-tippy\";\n\nimport CustomTooltip from \"wrappers/CustomTooltip\";\n\nconst TableCell = ({\n  value,\n  children,\n  tooltip,\n  tooltipLabel,\n  link,\n  reactLink,\n  defaultValue,\n  className,\n  openLinkInNewTab,\n  tdProps,\n  style,\n  showError,\n  tooltipForm,\n  tooltipClassname,\n  customTooltip,\n}) => {\n  let cellValue = children || value || defaultValue;\n  const errorMessage = tdProps?.rest?.error;\n\n  if (showError && errorMessage) {\n    cellValue = (\n      <div className=\"d-flex flex-row align-items-center\">\n        <Tooltip\n          arrow=\"true\"\n          delay=\"150\"\n          duration=\"250\"\n          hideDelay=\"50\"\n          className=\"text-overflow-ellipsis\"\n          html={errorMessage}\n        >\n          <RiErrorWarningLine className=\"mr-1\" />\n        </Tooltip>\n        {cellValue}\n      </div>\n    );\n  }\n\n  if (tooltip) {\n    cellValue = (\n      <div className={`d-flex ${tooltipClassname}`}>\n        <Tooltip\n          arrow=\"true\"\n          delay=\"150\"\n          duration=\"250\"\n          hideDelay=\"50\"\n          className=\"text-overflow-ellipsis\"\n          html={tooltipLabel || value}\n          style={tooltipForm && { width: \"100%\" }}\n        >\n          {cellValue}\n        </Tooltip>\n      </div>\n    );\n  }\n\n  if (customTooltip) {\n    cellValue = (\n      <CustomTooltip\n        content={tooltipLabel || value}\n        className={tooltipClassname}\n      >\n        {cellValue}\n      </CustomTooltip>\n    );\n  }\n\n  const cellErrorClasses = showError && errorMessage ? \"invalid-cell\" : \"\";\n  const elementClasses = `${className} text-overflow-ellipsis ${cellErrorClasses}`;\n\n  let cellElement = (\n    <div className={elementClasses} style={style} data-testid=\"table-cell\">\n      {cellValue}\n    </div>\n  );\n\n  if (link && typeof link === \"string\") {\n    if (reactLink) {\n      cellElement = (\n        <Link className={elementClasses} style={style} to={link}>\n          {cellValue}\n        </Link>\n      );\n    } else {\n      cellElement = (\n        <a\n          className={elementClasses}\n          style={style}\n          target={openLinkInNewTab ? \"_blank\" : undefined}\n          href={link}\n        >\n          {cellValue}\n        </a>\n      );\n    }\n  }\n\n  return cellElement;\n};\n\nTableCell.defaultProps = {\n  defaultValue: undefined,\n  className: \"\",\n  reactLink: false,\n  openLinkInNewTab: false,\n  showError: false,\n  tdProps: {},\n};\n\nTableCell.propTypes = {\n  link: PropTypes.string,\n  reactLink: PropTypes.bool,\n  showError: PropTypes.bool,\n  className: PropTypes.string,\n  tooltip: PropTypes.bool,\n  openLinkInNewTab: PropTypes.bool,\n  tooltipLabel: PropTypes.string,\n  style: PropTypes.shape({}),\n  tdProps: PropTypes.shape({\n    rest: PropTypes.shape({\n      error: PropTypes.string,\n    }),\n  }),\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  tooltipForm: PropTypes.bool,\n  tooltipClassname: PropTypes.string,\n  customTooltip: PropTypes.bool,\n};\n\nexport default TableCell;\n","import React, { useEffect, useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { RiArrowLeftSLine, RiArrowRightSLine } from \"react-icons/ri\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Select from \"react-select\";\n\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nconst TablePagination = (props) => {\n  const [currentPage, setCurrentPage] = useState(props.page + 1);\n\n  useEffect(() => {\n    setCurrentPage(props.page + 1);\n  }, [props.page]);\n\n  const nextPage = () => {\n    if (props.canNext) props.onPageChange(props.page + 1);\n  };\n\n  const previousPage = () => {\n    if (props.canPrevious) props.onPageChange(props.page - 1);\n  };\n\n  const pageSizeChangeHandler = ({ value }) => {\n    props.onPageSizeChange(value);\n  };\n\n  const changePageOnChangeHandler = (e) => {\n    setCurrentPage(e.target.valueAsNumber);\n  };\n  const changePageOnKeyPressHandler = (event) => {\n    if (event.key === \"Enter\") {\n      props.onPageChange(currentPage - 1);\n    }\n  };\n\n  const totalDataSize = props.totalData || props.resolvedData.length;\n  const rangeNumberFrom = props.page * props.pageSize + 1;\n  let rangeNumberTo = props.page * props.pageSize + props.pageSize;\n  if (totalDataSize < rangeNumberTo) {\n    rangeNumberTo = totalDataSize;\n  }\n\n  const pageSizeSelectOptions = props.pageSizeOptions.map((size) => ({\n    label: `${size} ${props.translate(\"react.reactTable.pagination.rows.label\", \"rows\")}`,\n    value: size,\n  }));\n  const selectedPageSizeOption = pageSizeSelectOptions.find(\n    ({ value }) => value === props.pageSize,\n  );\n\n  return (\n    <div\n      className={`table-pagination d-flex flex-row align-items-center justify-content-between py-2 px-3 ${props.className}`}\n    >\n      <div className=\"d-flex\">\n        <span>{`${rangeNumberFrom}-${rangeNumberTo}`}</span>\n        <span className=\"mx-1\">\n          {props.translate(\"react.reactTable.pagination.of.label\", \"of\")}\n        </span>\n        <span>{totalDataSize}</span>\n      </div>\n      <div className=\"d-flex pages-selector\">\n        <nav className=\"d-flex justify-content-center align-items-center\">\n          <button\n            type=\"button\"\n            disabled={!props.canPrevious}\n            className=\"table-pagination__btn-previous\"\n            onClick={previousPage}\n          >\n            <RiArrowLeftSLine />\n          </button>\n          <span className=\"table-pagination__current-page mx-2\">\n            <input\n              type=\"number\"\n              min={1}\n              max={props.pages}\n              value={currentPage}\n              onChange={changePageOnChangeHandler}\n              onKeyPress={changePageOnKeyPressHandler}\n            />\n            <span className=\"mx-1\">\n              {props.translate(\"react.reactTable.pagination.of.label\", \"of\")}\n            </span>\n            <span>{props.pages}</span>\n          </span>\n          <button\n            type=\"button\"\n            disabled={!props.canNext}\n            className=\"table-pagination__btn-next\"\n            onClick={nextPage}\n          >\n            <RiArrowRightSLine />\n          </button>\n        </nav>\n        <div className=\"d-flex ml-3\">\n          <Select\n            className=\"table-pagination-select\"\n            classNamePrefix=\"table-pagination-select\"\n            menuPlacement=\"auto\"\n            options={pageSizeSelectOptions}\n            value={selectedPageSizeOption}\n            onChange={pageSizeChangeHandler}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nTablePagination.defaultProps = {\n  totalData: undefined,\n  className: \"\",\n};\n\nTablePagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  pages: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  resolvedData: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  onPageSizeChange: PropTypes.func.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  canNext: PropTypes.bool.isRequired,\n  canPrevious: PropTypes.bool.isRequired,\n  totalData: PropTypes.number,\n  translate: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default connect(mapStateToProps)(TablePagination);\n","import _ from \"lodash\";\nimport queryString from \"query-string\";\n// Temporary 'hard-coded' checking for role to display an action in dropdown or not\nexport const hasMinimumRequiredRole = (role, highestUserRole) => {\n  // TODO: Figure out better way to check roles\n  const roles = [\n    \"Superuser\",\n    \"Admin\",\n    \"Manager\",\n    \"Assistant\",\n    \"Browser\",\n    \"Authenticated\",\n    \"Anonymous\",\n  ];\n  const userRoleIndex = roles.indexOf(role);\n  const highestUserRoleIndex = roles.indexOf(highestUserRole);\n  return (\n    userRoleIndex !== -1 &&\n    highestUserRoleIndex !== -1 &&\n    highestUserRoleIndex <= userRoleIndex\n  );\n};\n\nexport const findActions = (actionList, row, props) => {\n  const { supportedActivities = [], highestRole, customFilter } = props;\n  // Filter out by status if any provided\n  const filteredByStatus = actionList.filter((action) => {\n    if (action.statuses) {\n      return action.statuses.includes(row.original.status);\n    }\n    return true;\n  });\n  // Filter by activity code if any provided\n  const filteredByActivityCode = filteredByStatus.filter((action) =>\n    action.activityCode\n      ? action.activityCode.every((code) =>\n          supportedActivities.some((activity) => activity === code),\n        )\n      : true,\n  );\n  // Filter by required user's role if provided\n  const filteredByMinimumRequiredRole = filteredByActivityCode.filter(\n    (action) => {\n      if (action.minimumRequiredRole) {\n        return hasMinimumRequiredRole(action.minimumRequiredRole, highestRole);\n      }\n      return true;\n    },\n  );\n  // Use custom filter callback\n  if (customFilter && typeof customFilter === \"function\") {\n    return filteredByMinimumRequiredRole.filter((action) =>\n      customFilter(action, row),\n    );\n  }\n  return filteredByMinimumRequiredRole;\n};\n\nexport const transformFilterParams = (filterValues, filterAccessors) =>\n  Object.keys(filterValues)\n    .filter((key) => filterAccessors[key] && !!filterValues[key])\n    .reduce((acc, key) => {\n      const { name, accessor } = filterAccessors[key];\n\n      if (!accessor) {\n        return { ...acc, [key]: filterValues[name] };\n      }\n      if (Array.isArray(filterValues[name])) {\n        return { ...acc, [key]: _.map(filterValues[name], accessor) };\n      }\n      return { ...acc, [key]: _.get(filterValues[name], accessor) };\n    }, {});\n\n// Transforms value into an Array\nexport const getParamList = (value) => [].concat(value);\n\nexport const getShipmentTypeTooltip = (translate, shipmentType) =>\n  `${translate(\"react.stockMovement.shipmentType.label\", \"Shipment type\")}: ${shipmentType ?? \"Default\"}`;\n\nexport const getCurrentEventComment = (event, currentStatus) => {\n  if (\n    event?.eventType?.eventCode &&\n    event?.eventType?.eventCode !== currentStatus\n  ) {\n    return null;\n  }\n  return event?.comment;\n};\n\n// Clears query params keeping the ones that are included in fieldsToIgnore,\n// and returns stringified query params\nexport const clearQueryParams = ({ fieldsToIgnore, queryParams }) => {\n  const resultParams = Object.entries(queryParams).reduce(\n    (acc, [key, value]) => {\n      if (fieldsToIgnore.includes(key)) {\n        return {\n          ...acc,\n          [key]: value,\n        };\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return queryString.stringify(resultParams);\n};\n\nexport const splitPreferenceTypes = (data) =>\n  data.reduce(\n    (acc, preferenceType) => {\n      if (preferenceType?.destinationParty) {\n        return {\n          ...acc,\n          preferenceTypes: [...acc.preferenceTypes, preferenceType],\n        };\n      }\n\n      return { ...acc, defaultPreferenceType: preferenceType };\n    },\n    { preferenceTypes: [], defaultPreferenceType: {} },\n  );\n"],"names":["StatusIndicator","_ref","status","variant","statusToDisplay","split","map","word","charAt","toLowerCase","substring","join","React","className","concat","propTypes","PropTypes","isRequired","TableHeaderCell","children","style","toggleSort","sortable","columnId","dynamicClassName","sortableProps","tabIndex","role","onClick","onKeyPress","_extends","RiArrowUpSFill","RiArrowDownSFill","defaultProps","undefined","BadgeCount","count","FilterVisibilityToggler","filtersHidden","amountFilled","setFiltersHidden","labelAttributes","id","defaultMessage","type","Translate","RiArrowDownSLine","RiArrowUpSLine","SearchInput","props","value","RiSearchLine","Input","onChange","RiCloseLine","BaseField","renderInput","attributes","FilterForm","filterFields","updateFilterParams","searchFieldPlaceholder","searchFieldDefaultPlaceholder","searchFieldId","formProps","defaultValues","allowEmptySubmit","hidden","onClear","ignoreClearFilters","currentLocation","translate","setShouldRebuildFilterValues","isLoading","isCycleCountTab","_useState2","_slicedToArray","useState","setAmountFilled","_useState4","formRef","useRef","searchField","SearchField","placeholder","ariaLabel","filterElement","event","key","preventDefault","target","current","submit","useEffect","_objectSpread","useTranslation","onClearHandler","form","clearedFilterList","Object","keys","reduce","acc","includes","_defineProperty","reset","Form","onSubmit","initialValues","render","_ref4","values","handleSubmit","entries","filter","_ref2","_ref3","dynamicAttributes","_","disabled","_typeof","length","countFilled","renderFormField","Button","defaultLabel","label","fieldConfig","fieldName","mapDispatchToProps","setShouldRebuildFilterParams","connect","state","session","translateWithDefaultMessage","getTranslate","localize","TableRow","error","ReactTableFixedColumns","withFixedColumns","ReactTable","DataTable","ref","data","footerComponent","headerComponent","columns","totalData","errors","innerRef","PaginationComponent","paginationProps","TablePagination","ThComponent","TrComponent","getTheadThProps","_row","columnInfo","getTrProps","rowInfo","_rowInfo$original","row","packingList","original","rowId","getTdProps","_columnInfo$getProps$","_columnInfo$getProps","_rowInfo$original2","columnErrorAccessor","getProps","errorAccessor","resizable","multiSort","ReactTablePropTypes","Dropdown","inputContainerRec","hasOptions","dropdownRef","dropdownWidth","setDropdownWidth","_dropdownRef$current","currentDropdownWidth","offsetWidth","inputContainerWidth","width","left","top","bottom","height","right","x","y","Menu","inputContainer","document","getElementById","selectProps","Overlay","show","placement","container","getBoundingClientRect","options","innerProps","Option","components","isMulti","checked","isSelected","IndicatorsContainer","_props$selectProps$va","_objectWithoutProperties","_excluded","FilterSelectField","_excluded2","input","setInput","Select","name","classNamePrefix","hideSelectedOptions","controlShouldRenderValue","multi","customSelectComponents","inputValue","onInputChange","action","onKeyDown","TableCell","_tdProps$rest","tooltip","tooltipLabel","link","reactLink","defaultValue","openLinkInNewTab","tdProps","showError","tooltipForm","tooltipClassname","customTooltip","cellValue","errorMessage","rest","Tooltip","arrow","delay","duration","hideDelay","html","RiErrorWarningLine","CustomTooltip","content","cellErrorClasses","elementClasses","cellElement","Link","to","href","page","currentPage","setCurrentPage","totalDataSize","resolvedData","rangeNumberFrom","pageSize","rangeNumberTo","pageSizeSelectOptions","pageSizeOptions","size","selectedPageSizeOption","find","canPrevious","onPageChange","RiArrowLeftSLine","min","max","pages","e","valueAsNumber","canNext","RiArrowRightSLine","menuPlacement","onPageSizeChange","findActions","actionList","_props$supportedActiv","supportedActivities","highestRole","customFilter","filteredByMinimumRequiredRole","statuses","activityCode","every","code","some","activity","minimumRequiredRole","highestUserRole","userRoleIndex","roles","indexOf","highestUserRoleIndex","transformFilterParams","filterValues","filterAccessors","_filterAccessors$key","accessor","Array","isArray","getParamList","getShipmentTypeTooltip","shipmentType","getCurrentEventComment","currentStatus","_event$eventType","_event$eventType2","eventType","eventCode","comment","clearQueryParams","fieldsToIgnore","queryParams","resultParams","queryString","stringify","splitPreferenceTypes","preferenceType","destinationParty","preferenceTypes","defaultPreferenceType"],"sourceRoot":""}