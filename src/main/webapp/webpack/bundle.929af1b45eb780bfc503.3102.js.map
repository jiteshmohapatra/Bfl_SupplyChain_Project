{"version":3,"file":"bundle.929af1b45eb780bfc503.3102.js","mappings":";mFAAAA,EAAOC,QAAU,SAASC,EAAMC,EAAUC,EAAMC,GAC5C,IACIC,EAAO,IAAIC,UADgB,IAARF,EAAuB,CAACA,EAAKH,GAAQ,CAACA,GAC/B,CAACM,KAAMJ,GAAQ,6BAC7C,QAA2C,IAAhCK,OAAOC,UAAUC,WAKxBF,OAAOC,UAAUC,WAAWL,EAAMH,OAEjC,CACD,IAAIS,EAAWH,OAAOI,KAAOJ,OAAOI,IAAIC,gBAAmBL,OAAOI,IAAIC,gBAAgBR,GAAQG,OAAOM,UAAUD,gBAAgBR,GAC3HU,EAAWC,SAASC,cAAc,KACtCF,EAASG,MAAMC,QAAU,OACzBJ,EAASK,KAAOT,EAChBI,EAASM,aAAa,WAAYnB,QAMD,IAAtBa,EAASO,UAChBP,EAASM,aAAa,SAAU,UAGpCL,SAASO,KAAKC,YAAYT,GAC1BA,EAASU,QAGTC,YAAW,WACPV,SAASO,KAAKI,YAAYZ,GAC1BP,OAAOI,IAAIgB,gBAAgBjB,EAC/B,GAAG,IACP,CACJ,k6CCxBA,IAAMkB,EAAqB,SAAHC,GAAA,IAAMC,EAAWD,EAAXC,YAAaC,EAAWF,EAAXE,YAAaC,EAAYH,EAAZG,aAAcC,EAAIJ,EAAJI,KAAI,SAAAC,OACrEJ,EAAW,OAAAI,OAAMH,IAAeC,aAAY,EAAZA,EAAY,UAAaC,EAAI,EAE5DE,EAAS,SAACC,GAAM,IAAAC,EAAA,OACpBC,EAAAA,cAACC,EAAAA,QAAO,CACNC,KAAMF,EAAAA,cAAA,OAAKG,UAAU,iBAAiBL,EAAOH,MAC7CS,MAAM,cACNC,WAAYP,EAAOL,aAAkC,QAAvBM,EAAID,EAAOJ,oBAAY,IAAAK,GAAnBA,EAAA,SAClCO,SAAS,aAETN,EAAAA,cAAA,UACErB,MAAO,CAAE4B,MAAOT,EAAOS,OAAS,SAChCJ,UAAU,6BAETL,EAAOU,OAASlB,EAAmBQ,GAAQ,KAE3CW,EAAAA,EAAAA,GAAoBX,EAAOY,gBAEtB,EAGNC,EAAgB,SAACb,GAAM,OAC3BE,EAAAA,cAAA,QAAMG,UAAU,6BACdH,EAAAA,cAAA,QACErB,MAAO,CAAE4B,MAAOT,EAAOc,yBAA2Bd,EAAOS,OACzDJ,UAAU,iBAETL,EAAOU,OAASlB,EAAmBQ,KAErCW,EAAAA,EAAAA,GAAoBX,aAAM,EAANA,EAAQY,eACxB,EAGHG,EAAgB,SAAHC,GAMb,IALJC,EAAsBD,EAAtBC,uBACAC,EAAUF,EAAVE,WACAC,EAAQH,EAARG,SACAC,EAAUJ,EAAVI,WACGC,+WAAKC,CAAAN,EAAAO,GAEFC,GAAYC,EAAAA,EAAAA,QAAO,MAC8BC,EAAAC,GAAfC,EAAAA,EAAAA,WAAS,GAAM,GAAhDC,EAAYH,EAAA,GAAEI,EAAeJ,EAAA,GACkBK,EAAAJ,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAA/CI,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACUG,EAAAP,GAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAzCO,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA0CC,EAAAA,EAAAA,KAAY,SAACC,GAAK,MAAM,CAChEC,aAAcD,EAAME,QAAQC,aAAaF,aACzCG,gBAAiBJ,EAAME,QAAQC,aAAaC,gBAC7C,IAHOH,EAAYH,EAAZG,aAAcG,EAAeN,EAAfM,gBAKhBC,GAAyBC,EAAAA,EAAAA,IAC7BL,EACAG,EACAzB,EACA,CAAEE,WAAAA,IAmDJ,OA1CA0B,EAAAA,EAAAA,YAAU,WACR,GAAIjB,GAAgBG,EAAce,QAAUZ,EAAY,CACtD,IAAMa,EAAehB,EAAciB,QACjC,SAACC,GAAO,OAAKA,EAAQC,UAAU,IAE7BC,EAAoB,KAExB,GAA4B,IAAxBJ,EAAaD,OAAc,KAAAM,EAAA1B,EACPqB,EAAY,GAAjCI,EAAiBC,EAAA,EACpB,MAAO,GAAIL,EAAaD,OAAS,EAAG,CAGlC,IAAMO,EAAuBN,EAAaO,MACxC,SAAAC,GAAc,OAAAA,EAAX9D,cAAkCyC,CAAU,IAE7CmB,IAAsBF,EAAoBE,EAChD,CAEIF,GACF5B,EAAUiC,QAAQC,OAAOA,OAAOC,SAASP,GAEvCnC,GAIF5B,YACE,kBAAM4B,EAAuB,CAAEiC,QAASE,GAAoB,GAC5D,GAGJtB,GAAgB,GAChBG,EAAiB,GACnB,CACF,GAAG,CAACJ,EAAcG,EAAeG,IAU/BjC,EAAAA,cAAC0D,EAAAA,EAAMC,EAAA,GACDxC,EAAK,CACTF,SAAU,SAAC2C,GACTtC,EAAUiC,QAAUK,EAChB3C,GAAUA,EAAS2C,EACzB,EACAC,OAAK,EACLC,QAAS,GACTC,YAAa5C,EAAM4C,aAhBI,SAACC,EAAcC,GAAQ,OAChDvB,EAAuBsB,GAAc,SAACE,GACpCnC,EAAiBmC,GACjBhC,EAAc8B,GACdC,EAASC,EACX,GAAE,EAYAC,YAAa,WACXpC,EAAiB,IACjBG,EAAc,GAChB,EACAkC,aAAc,SAACC,GAAI,OAAKA,CAAI,EAC5BC,aA/DiB,SAACC,GACpBA,EAAMC,iBACND,EAAME,kBACN7C,GAAgB,EAClB,EA4DI8C,eAAgB7E,EAChB8E,cAAehE,IAGrB,EAEAE,EAAc+D,aAAe,CAC3BzE,UAAW,YACX0E,aAAa,EACbC,UAAU,EACVC,OAAO,EACPC,kBAAkB,EAClBjE,4BAAwBkE,EACxBhE,cAAUgE,EACVlB,iBAAakB,EACb/D,YAAY,GAGdL,EAAcqE,UAAY,CACxB/E,UAAWgF,IAAAA,OACXN,YAAaM,IAAAA,KACbL,SAAUK,IAAAA,KACVJ,MAAOI,IAAAA,KACPH,iBAAkBG,IAAAA,KAClBnE,WAAYmE,IAAAA,OAAiBC,WAC7BrE,uBAAwBoE,IAAAA,KACxBlE,SAAUkE,IAAAA,KACVpB,YAAaoB,IAAAA,KACbjE,WAAYiE,IAAAA,MAGd,gqBChKAE,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAAxH,KAAA,SAAAkJ,IAAA3B,EAAA4B,KAAA7B,EAAAE,GAAA,OAAAD,GAAA,OAAAvH,KAAA,QAAAkJ,IAAA3B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAQ,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAX,IAAA,UAAAY,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAnB,EAAAmB,EAAAzB,GAAA,8BAAA0B,EAAAnC,OAAAoC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAtC,GAAAG,EAAAwB,KAAAW,EAAA5B,KAAAyB,EAAAG,GAAA,IAAAE,EAAAN,EAAAhC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAa,GAAA,SAAAM,EAAA1C,GAAA,0BAAA2C,SAAA,SAAA5C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA4C,QAAA7C,EAAAC,EAAA,gBAAA6C,EAAA7C,EAAAD,GAAA,SAAA+C,EAAA7C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAApI,KAAA,KAAAsI,EAAAF,EAAAc,IAAAE,EAAAd,EAAAP,MAAA,OAAAqB,GAAA,UAAAkB,EAAAlB,IAAAzB,EAAAwB,KAAAC,EAAA,WAAA9B,EAAAiD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAlD,GAAA8C,EAAA,OAAA9C,EAAAS,EAAAE,EAAA,aAAAX,GAAA8C,EAAA,QAAA9C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAiD,QAAAnB,GAAAqB,MAAA,SAAAlD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA8C,EAAA,QAAA9C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAc,IAAA,KAAA1B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAA+C,IAAA,WAAApD,GAAA,SAAAA,EAAAE,GAAA6C,EAAA9C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAiD,KAAAC,EAAAA,GAAAA,GAAA,aAAA1B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAuB,EAAA,gBAAApB,EAAAE,GAAA,GAAAL,IAAAyB,EAAA,MAAAqB,MAAA,mCAAA9C,IAAA0B,EAAA,cAAAvB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAqD,MAAA,OAAAjD,EAAAkD,OAAA7C,EAAAL,EAAAuB,IAAAhB,IAAA,KAAAE,EAAAT,EAAAmD,SAAA,GAAA1C,EAAA,KAAAE,EAAAyC,EAAA3C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAkB,EAAA,gBAAAlB,CAAA,cAAAX,EAAAkD,OAAAlD,EAAAqD,KAAArD,EAAAsD,MAAAtD,EAAAuB,SAAA,aAAAvB,EAAAkD,OAAA,IAAAhD,IAAAuB,EAAA,MAAAvB,EAAA0B,EAAA5B,EAAAuB,IAAAvB,EAAAuD,kBAAAvD,EAAAuB,IAAA,gBAAAvB,EAAAkD,QAAAlD,EAAAwD,OAAA,SAAAxD,EAAAuB,KAAArB,EAAAyB,EAAA,IAAAK,EAAAV,EAAA3B,EAAAE,EAAAG,GAAA,cAAAgC,EAAA3J,KAAA,IAAA6H,EAAAF,EAAAiD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAAzB,MAAA4B,EAAAT,IAAA0B,KAAAjD,EAAAiD,KAAA,WAAAjB,EAAA3J,OAAA6H,EAAA0B,EAAA5B,EAAAkD,OAAA,QAAAlD,EAAAuB,IAAAS,EAAAT,IAAA,YAAA6B,EAAAzD,EAAAE,GAAA,IAAAG,EAAAH,EAAAqD,OAAAhD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAsD,SAAA,eAAAnD,GAAAL,EAAAa,SAAA,SAAAX,EAAAqD,OAAA,SAAArD,EAAA0B,IAAA3B,EAAAwD,EAAAzD,EAAAE,GAAA,UAAAA,EAAAqD,SAAA,WAAAlD,IAAAH,EAAAqD,OAAA,QAAArD,EAAA0B,IAAA,IAAAkC,UAAA,oCAAAzD,EAAA,aAAA6B,EAAA,IAAAxB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA0B,KAAA,aAAAlB,EAAAhI,KAAA,OAAAwH,EAAAqD,OAAA,QAAArD,EAAA0B,IAAAlB,EAAAkB,IAAA1B,EAAAsD,SAAA,KAAAtB,EAAA,IAAAtB,EAAAF,EAAAkB,IAAA,OAAAhB,EAAAA,EAAA0C,MAAApD,EAAAF,EAAA+D,YAAAnD,EAAAH,MAAAP,EAAA8D,KAAAhE,EAAAiE,QAAA,WAAA/D,EAAAqD,SAAArD,EAAAqD,OAAA,OAAArD,EAAA0B,IAAA3B,GAAAC,EAAAsD,SAAA,KAAAtB,GAAAtB,GAAAV,EAAAqD,OAAA,QAAArD,EAAA0B,IAAA,IAAAkC,UAAA,oCAAA5D,EAAAsD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAjE,GAAA,IAAAD,EAAA,CAAAmE,OAAAlE,EAAA,SAAAA,IAAAD,EAAAoE,SAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,WAAApE,EAAA,GAAAD,EAAAsE,SAAArE,EAAA,SAAAsE,WAAAC,KAAAxE,EAAA,UAAAyE,EAAAxE,GAAA,IAAAD,EAAAC,EAAAyE,YAAA,GAAA1E,EAAAtH,KAAA,gBAAAsH,EAAA4B,IAAA3B,EAAAyE,WAAA1E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAsE,WAAA,EAAAJ,OAAA,SAAAlE,EAAA2C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAAzC,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA2B,KAAA7B,GAAA,sBAAAA,EAAAgE,KAAA,OAAAhE,EAAA,IAAA4E,MAAA5E,EAAAzC,QAAA,KAAAgD,GAAA,EAAAG,EAAA,SAAAsD,IAAA,OAAAzD,EAAAP,EAAAzC,QAAA,GAAA8C,EAAAwB,KAAA7B,EAAAO,GAAA,OAAAyD,EAAAvD,MAAAT,EAAAO,GAAAyD,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAvD,MAAAR,EAAA+D,EAAAV,MAAA,EAAAU,CAAA,SAAAtD,EAAAsD,KAAAtD,CAAA,YAAAoD,UAAAd,EAAAhD,GAAA,2BAAAmC,EAAA/B,UAAAgC,EAAA7B,EAAAmC,EAAA,eAAAjC,MAAA2B,EAAAhB,cAAA,IAAAb,EAAA6B,EAAA,eAAA3B,MAAA0B,EAAAf,cAAA,IAAAe,EAAAhI,YAAA+G,EAAAkB,EAAApB,EAAA,qBAAAhB,EAAA6E,oBAAA,SAAA5E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA6E,YAAA,QAAA9E,IAAAA,IAAAmC,GAAA,uBAAAnC,EAAA7F,aAAA6F,EAAA3F,MAAA,EAAA2F,EAAA+E,KAAA,SAAA9E,GAAA,OAAAE,OAAA6E,eAAA7E,OAAA6E,eAAA/E,EAAAmC,IAAAnC,EAAAgF,UAAA7C,EAAAlB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAkB,GAAAzC,CAAA,EAAAD,EAAAkF,MAAA,SAAAjF,GAAA,OAAAiD,QAAAjD,EAAA,EAAA0C,EAAAG,EAAA1C,WAAAc,EAAA4B,EAAA1C,UAAAU,GAAA,0BAAAd,EAAA8C,cAAAA,EAAA9C,EAAAzB,MAAA,SAAA0B,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAAyE,SAAA,IAAAvE,EAAA,IAAAkC,EAAAxB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAA6E,oBAAA3E,GAAAU,EAAAA,EAAAoD,OAAAb,MAAA,SAAAlD,GAAA,OAAAA,EAAAqD,KAAArD,EAAAQ,MAAAG,EAAAoD,MAAA,KAAArB,EAAAD,GAAAxB,EAAAwB,EAAA1B,EAAA,aAAAE,EAAAwB,EAAA9B,GAAA,0BAAAM,EAAAwB,EAAA,qDAAA1C,EAAAoF,KAAA,SAAAnF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAsE,KAAAnE,GAAA,OAAAH,EAAAmF,UAAA,SAAArB,IAAA,KAAA9D,EAAA3C,QAAA,KAAA0C,EAAAC,EAAAoF,MAAA,GAAArF,KAAAD,EAAA,OAAAgE,EAAAvD,MAAAR,EAAA+D,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAhE,EAAAyC,OAAAA,EAAAhB,EAAArB,UAAA,CAAA0E,YAAArD,EAAAkD,MAAA,SAAA3E,GAAA,QAAAuF,KAAA,OAAAvB,KAAA,OAAAN,KAAA,KAAAC,MAAA1D,EAAA,KAAAqD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA3B,EAAA,KAAAsE,WAAA3B,QAAA6B,IAAAzE,EAAA,QAAAE,KAAA,WAAAA,EAAAsF,OAAA,IAAAnF,EAAAwB,KAAA,KAAA3B,KAAA0E,OAAA1E,EAAAuF,MAAA,WAAAvF,GAAAD,EAAA,EAAAyF,KAAA,gBAAApC,MAAA,MAAArD,EAAA,KAAAsE,WAAA,GAAAG,WAAA,aAAAzE,EAAAvH,KAAA,MAAAuH,EAAA2B,IAAA,YAAA+D,IAAA,EAAA/B,kBAAA,SAAA5D,GAAA,QAAAsD,KAAA,MAAAtD,EAAA,IAAAE,EAAA,cAAA0F,EAAAvF,EAAAE,GAAA,OAAAK,EAAAlI,KAAA,QAAAkI,EAAAgB,IAAA5B,EAAAE,EAAA8D,KAAA3D,EAAAE,IAAAL,EAAAqD,OAAA,OAAArD,EAAA0B,IAAA3B,KAAAM,CAAA,SAAAA,EAAA,KAAAgE,WAAAhH,OAAA,EAAAgD,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA6D,WAAAhE,GAAAK,EAAAF,EAAAgE,WAAA,YAAAhE,EAAAyD,OAAA,OAAAyB,EAAA,UAAAlF,EAAAyD,QAAA,KAAAoB,KAAA,KAAAzE,EAAAT,EAAAwB,KAAAnB,EAAA,YAAAM,EAAAX,EAAAwB,KAAAnB,EAAA,iBAAAI,GAAAE,EAAA,SAAAuE,KAAA7E,EAAA0D,SAAA,OAAAwB,EAAAlF,EAAA0D,UAAA,WAAAmB,KAAA7E,EAAA2D,WAAA,OAAAuB,EAAAlF,EAAA2D,WAAA,SAAAvD,GAAA,QAAAyE,KAAA7E,EAAA0D,SAAA,OAAAwB,EAAAlF,EAAA0D,UAAA,YAAApD,EAAA,MAAAqC,MAAA,kDAAAkC,KAAA7E,EAAA2D,WAAA,OAAAuB,EAAAlF,EAAA2D,WAAA,KAAAR,OAAA,SAAA5D,EAAAD,GAAA,QAAAE,EAAA,KAAAqE,WAAAhH,OAAA,EAAA2C,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAgE,WAAArE,GAAA,GAAAK,EAAA4D,QAAA,KAAAoB,MAAAlF,EAAAwB,KAAAtB,EAAA,oBAAAgF,KAAAhF,EAAA8D,WAAA,KAAA3D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAAyD,QAAAnE,GAAAA,GAAAU,EAAA2D,aAAA3D,EAAA,UAAAE,EAAAF,EAAAA,EAAAgE,WAAA,UAAA9D,EAAAlI,KAAAuH,EAAAW,EAAAgB,IAAA5B,EAAAU,GAAA,KAAA6C,OAAA,YAAAS,KAAAtD,EAAA2D,WAAAnC,GAAA,KAAA2D,SAAAjF,EAAA,EAAAiF,SAAA,SAAA5F,EAAAD,GAAA,aAAAC,EAAAvH,KAAA,MAAAuH,EAAA2B,IAAA,gBAAA3B,EAAAvH,MAAA,aAAAuH,EAAAvH,KAAA,KAAAsL,KAAA/D,EAAA2B,IAAA,WAAA3B,EAAAvH,MAAA,KAAAiN,KAAA,KAAA/D,IAAA3B,EAAA2B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAA/D,EAAAvH,MAAAsH,IAAA,KAAAgE,KAAAhE,GAAAkC,CAAA,EAAA4D,OAAA,SAAA7F,GAAA,QAAAD,EAAA,KAAAuE,WAAAhH,OAAA,EAAAyC,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAqE,WAAAvE,GAAA,GAAAE,EAAAmE,aAAApE,EAAA,YAAA4F,SAAA3F,EAAAwE,WAAAxE,EAAAoE,UAAAG,EAAAvE,GAAAgC,CAAA,kBAAAjC,GAAA,QAAAD,EAAA,KAAAuE,WAAAhH,OAAA,EAAAyC,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAqE,WAAAvE,GAAA,GAAAE,EAAAiE,SAAAlE,EAAA,KAAAI,EAAAH,EAAAwE,WAAA,aAAArE,EAAA3H,KAAA,KAAA6H,EAAAF,EAAAuB,IAAA6C,EAAAvE,EAAA,QAAAK,CAAA,QAAA8C,MAAA,0BAAA0C,cAAA,SAAA/F,EAAAE,EAAAG,GAAA,YAAAmD,SAAA,CAAA3C,SAAA4B,EAAAzC,GAAA+D,WAAA7D,EAAA+D,QAAA5D,GAAA,cAAAkD,SAAA,KAAA3B,IAAA3B,GAAAiC,CAAA,GAAAlC,CAAA,UAAAgG,EAAA3F,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA4C,KAAArD,EAAAe,GAAAmE,QAAAlC,QAAAjC,GAAAmC,KAAAjD,EAAAK,EAAA,UAAA0F,EAAAjG,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAA3C,OAAA0C,IAAA,KAAAM,EAAAL,EAAAD,GAAAM,EAAAY,WAAAZ,EAAAY,aAAA,EAAAZ,EAAAa,cAAA,YAAAb,IAAAA,EAAAc,UAAA,GAAAlB,OAAAK,eAAAR,EAAAkG,EAAA3F,EAAA4F,KAAA5F,EAAA,WAAA6F,IAAA,QAAAnG,GAAAoG,QAAAjG,UAAAkG,QAAAzE,KAAA0E,QAAAC,UAAAH,QAAA,0BAAApG,GAAA,QAAAmG,EAAA,mBAAAnG,CAAA,cAAAwG,EAAAxG,GAAA,OAAAwG,EAAAtG,OAAA6E,eAAA7E,OAAAoC,eAAAmE,OAAA,SAAAzG,GAAA,OAAAA,EAAAgF,WAAA9E,OAAAoC,eAAAtC,EAAA,EAAAwG,EAAAxG,EAAA,UAAA0G,EAAA1G,EAAAD,GAAA,OAAA2G,EAAAxG,OAAA6E,eAAA7E,OAAA6E,eAAA0B,OAAA,SAAAzG,EAAAD,GAAA,OAAAC,EAAAgF,UAAAjF,EAAAC,CAAA,EAAA0G,EAAA1G,EAAAD,EAAA,UAAA4G,EAAA5G,EAAAE,GAAA,IAAAD,EAAAE,OAAAiF,KAAApF,GAAA,GAAAG,OAAA0G,sBAAA,KAAAtG,EAAAJ,OAAA0G,sBAAA7G,GAAAE,IAAAK,EAAAA,EAAA9C,QAAA,SAAAyC,GAAA,OAAAC,OAAA2G,yBAAA9G,EAAAE,GAAAiB,UAAA,KAAAlB,EAAAuE,KAAAuC,MAAA9G,EAAAM,EAAA,QAAAN,CAAA,UAAA+G,EAAAhH,GAAA,QAAAE,EAAA,EAAAA,EAAA+G,UAAA1J,OAAA2C,IAAA,KAAAD,EAAA,MAAAgH,UAAA/G,GAAA+G,UAAA/G,GAAA,GAAAA,EAAA,EAAA0G,EAAAzG,OAAAF,IAAA,GAAA2C,SAAA,SAAA1C,GAAAgH,EAAAlH,EAAAE,EAAAD,EAAAC,GAAA,IAAAC,OAAAgH,0BAAAhH,OAAAiH,iBAAApH,EAAAG,OAAAgH,0BAAAlH,IAAA2G,EAAAzG,OAAAF,IAAA2C,SAAA,SAAA1C,GAAAC,OAAAK,eAAAR,EAAAE,EAAAC,OAAA2G,yBAAA7G,EAAAC,GAAA,WAAAF,CAAA,UAAAkH,EAAAlH,EAAAE,EAAAD,GAAA,OAAAC,EAAAgG,EAAAhG,MAAAF,EAAAG,OAAAK,eAAAR,EAAAE,EAAA,CAAAO,MAAAR,EAAAkB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAArB,EAAAE,GAAAD,EAAAD,CAAA,UAAAkG,EAAAjG,GAAA,IAAAS,EAAA,SAAAT,GAAA,aAAA+C,EAAA/C,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAU,OAAA0G,aAAA,YAAArH,EAAA,KAAAU,EAAAV,EAAA6B,KAAA5B,EAAAC,UAAA,aAAA8C,EAAAtC,GAAA,OAAAA,EAAA,UAAAoD,UAAA,uDAAAwD,OAAArH,EAAA,CAAAsH,CAAAtH,GAAA,gBAAA+C,EAAAtC,GAAAA,EAAAA,EAAA,GA8DA,IAAM8G,EACI,CACNC,0BAA2B,iBAFzBD,EAIiB,CACnBC,0BAA2B,mBALzBD,EAOiB,CACnBC,0BAA2B,gCAIzBC,EAAS,CACbhK,QAAS,CACPhF,KAAMiP,EAAAA,EACNzM,MAAO,6CACP0M,eAAgB,oBAChBC,YAAa,OACbC,UAAW,IACXC,WAAY,CACVzM,yBAAyB,EACzBM,YAAY,IAGhBoM,eAAgB,CACdtP,KAAMuP,EAAAA,EACN/M,MAAO,2CACP0M,eAAgB,MAChBE,UAAW,MACXC,WAAY,CACVrP,KAAM,WAGVwP,4BAA6B,CAC3BxP,KAAMyP,EAAAA,EACNL,UAAW,MACX5M,MAAO,wDACP0M,eAAgB,sBAChBG,WAAY,CACVrP,KAAM,WAGV0P,kBAAmB,CACjB1P,KAAMuP,EAAAA,EACN/M,MAAO,sCACP0M,eAAgB,YAChBE,UAAW,MACXC,WAAY,CACVrP,KAAM,WAGV2P,gBAAiB,CACf3P,KAAMuP,EAAAA,EACN/M,MAAO,wCACP0M,eAAgB,UAChBE,UAAW,MACXC,WAAY,CACVrP,KAAM,WAGV4P,cAAe,CACb5P,KAAMuP,EAAAA,EACN/M,MAAO,2CACP0M,eAAgB,mBAChBE,UAAW,MACXC,WAAY,CACVrP,KAAM,WAGV6P,kBAAmB,CACjB7P,KAAMyP,EAAAA,EACNjN,MAAO,2CACP0M,eAAgB,aAChBE,UAAW,MACXC,WAAY,CACVrP,KAAM,WAGV8P,SAAU,CACR9P,KAAMyP,EAAAA,EACNjN,MAAO,qCACP0M,eAAgB,WAChBE,UAAW,MACXW,eAAgB,SAAFjN,GAAA,IACZkN,EAAMlN,EAANkN,OACAC,EAAQnN,EAARmN,SACAC,EAAQpN,EAARoN,SACAC,EAAYrN,EAAZqN,aACAC,EAAgBtN,EAAhBsN,iBACAC,EAASvN,EAATuN,UACAtG,EAAMjH,EAANiH,OAAM,MACD,CACLuG,WACEL,IAAaC,EAAW,EACpB,WACEE,EAAiB,GACjBJ,EAAO,CAAEO,UAAWJ,KACtB,EACA,KACNK,WACEP,IAAaC,EAAW,EACpB,WACEE,EAAiB,GACjBJ,EAAO,CAAEO,UAAWJ,KACtB,EACA,KACNM,UACER,IAAaC,EAAW,EACpB,kBAAM,WACJE,EAAiB,GACjBJ,EAAO,CAAEO,UAAWJ,KACtB,CAAC,EACD,KACNO,OAAQ,WAAF,OAAQL,EAAUtG,EAAQmG,EAAS,EAC1C,GAEHS,6BAA8B,CAC5B3Q,KAAMuP,EAAAA,EACN/M,MAAO,yDACP0M,eAAgB,kCAChBE,UAAW,MACXC,WAAY,CACVrP,KAAM,WAGV4Q,uBAAwB,CACtB5Q,KAAMuP,EAAAA,EACN/M,MAAO,mDACP0M,eAAgB,4BAChBE,UAAW,MACXC,WAAY,CACVrP,KAAM,YAKN6Q,EAAsB,CAC1B7Q,KAAM8Q,EAAAA,EACNtO,MAAO,oCACP0M,eAAgB,SAChBE,UAAW,IACX2B,SAAU,GACVC,YAAa,oCACbC,qBAAsB,SACtBlB,eAAgB,SAAFzK,GAAA,IACZ4L,EAAU5L,EAAV4L,WACAC,EAAU7L,EAAV6L,WACAC,EAAS9L,EAAT8L,UACAhB,EAAgB9K,EAAhB8K,iBAAgB,MACX,CACLiB,QACEH,GAAcA,EAAWI,GACrB,WACEH,EAAWD,EAAWI,IAAI7G,MAAK,WAC7B2F,GAAkB,GAClBgB,GACF,GACF,EACA,WACEhB,GAAkB,GAClBgB,GACF,EACP,EACD/B,WAAY,CACVlN,UAAW,2BAIToP,EAAkB,CACtBvR,KAAMwR,EAAAA,EACNC,kBAAkB,EAClBC,aAAa,EACbC,WAAY,SAAFC,GAAe,OAAAA,EAAVD,UAA2B,EAC1CE,YAAa,SAAFC,GAAgB,OAAAA,EAAXD,WAA6B,EAC7CE,aAAc,SAAFC,GAAiB,OAAOD,EAAPC,EAAZD,eAAiC,EAClDE,kBAAmB,SAAFC,GAAsB,OAAAA,EAAjBD,iBAAyC,EAC/DE,UA9MF,SAAkB5Q,GAMf,IAJDyO,EAAMzO,EAANyO,OACAG,EAAY5O,EAAZ4O,aACAiC,EAAY7Q,EAAZ6Q,aACAhC,EAAgB7O,EAAhB6O,iBAEA,OACEpO,EAAAA,cAAA,UACEhC,KAAK,SACLmC,UAAU,iCACVkP,QAAS,WACPjB,EAAiB,GACjBJ,EAAO,CAAEO,UAAWJ,MACpBiC,GACF,GAEApQ,EAAAA,cAAA,YACEA,EAAAA,cAAA,KAAGG,UAAU,oBACbH,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,qCACHpC,eAAe,cAKzB,GAuLMoD,GAAsB,CAC1BC,UAASjE,EAAAA,EAAA,GACJiD,GAAe,IAClBiB,OAAQ,CACNxN,QAAOsJ,EAAAA,EAAA,GACFU,EAAOhK,SAAO,IACjB+L,SAAU,GACV3B,UAAW,MACXW,eAAgB,SAAF0C,GAAA,IACZvC,EAAQuC,EAARvC,SACAD,EAAQwC,EAARxC,SACAyC,EAAiBD,EAAjBC,kBACA3I,EAAM0I,EAAN1I,OACA4I,EAAQF,EAARE,SACAC,EAAUH,EAAVG,WAAU,MACL,CACLC,SAAU,SAAC9K,GAAK,OAAK2K,EAAkB3K,EAAOgC,EAAQmG,EAAS,EAC/D4C,UAAW5C,IAAaD,EAAW,EACnCjN,WAAY2P,EACZ5P,uBAAwB,SAAFgQ,GAAmB,IAAd/N,EAAO+N,EAAP/N,QACrB4N,GAAc5N,GAChB4N,EAAW1C,EAAU,oBAEzB,EACD,IAEHZ,eAAgBN,EAAOM,eACvBI,kBAAmBV,EAAOU,kBAC1BE,cAAeZ,EAAOY,cACtBC,kBAAiBvB,EAAAA,EAAA,GACZU,EAAOa,mBAAiB,IAC3BT,UAAW,MACX2B,SAAU,GACVhB,eAAgB,SAAFiD,GAAA,IAAK3C,EAAS2C,EAAT3C,UAAWtG,EAAMiJ,EAANjJ,OAAQmG,EAAQ8C,EAAR9C,SAAQ,MAAQ,CACpDQ,OAAQ,WAAF,OAAQL,EAAUtG,EAAQmG,EAAS,EAC1C,IAEHJ,SAAUd,EAAOc,SACjBmD,aAAcpC,MAKdqC,GAA6B,CACjCX,UAASjE,EAAAA,EAAA,GACJiD,GAAe,IAClBiB,OAAQ,CACNxN,QAAOsJ,EAAAA,EAAA,GACFU,EAAOhK,SAAO,IACjB+L,SAAU,WACVhB,eAAgB,SAAFoD,GAAA,IACZjC,EAAUiC,EAAVjC,WACAhB,EAAQiD,EAARjD,SACAD,EAAQkD,EAARlD,SACAmD,EAAOD,EAAPC,QACAT,EAAQQ,EAARR,SACAC,EAAUO,EAAVP,WAAU,MACL,CACL5P,WAAY2P,EACZtQ,WAAY6O,EACZ4B,UAAWM,GAAWlD,IAAaD,EAAW,EAC9ClN,uBAAwB,SAAFsQ,GAAmB,IAAdrO,EAAOqO,EAAPrO,QACrB4N,GAAc5N,GAChB4N,EAAW1C,EAAU,oBAEzB,EACD,IAEHP,gBAAiBX,EAAOW,gBACxBL,eAAgBN,EAAOM,eACvBI,kBAAmBV,EAAOU,kBAC1BG,kBAAiBvB,EAAAA,EAAA,GACZU,EAAOa,mBAAiB,IAC3BE,eAAgB,SAAFuD,GAAA,IAAKpD,EAAQoD,EAARpD,SAAUnG,EAAMuJ,EAANvJ,OAAQsG,EAASiD,EAATjD,UAAS,MAAQ,CACpDK,OAAQ,WAAF,OAAQL,EAAUtG,EAAQmG,EAAS,EAC1C,IAEHJ,SAAUd,EAAOc,SACjBmD,aAAcpC,MAKd0C,GAA6B,CACjChB,UAASjE,EAAAA,EAAA,GACJiD,GAAe,IAClBiB,OAAQ,CACNxN,QAAOsJ,EAAAA,EAAA,GACFU,EAAOhK,SAAO,IACjB+L,SAAU,WACVhB,eAAgB,SAAFyD,GAAA,IACZtC,EAAUsC,EAAVtC,WACAhB,EAAQsD,EAARtD,SACAD,EAAQuD,EAARvD,SACAmD,EAAOI,EAAPJ,QACAT,EAAQa,EAARb,SACAC,EAAUY,EAAVZ,WAAU,MACL,CACL5P,WAAY2P,EACZtQ,WAAY6O,EACZ4B,UAAWM,GAAWlD,IAAaD,EAAW,EAC9ClN,uBAAwB,SAAF0Q,GAAmB,IAAdzO,EAAOyO,EAAPzO,QACrB4N,GAAc5N,GAChB4N,EAAW1C,EAAU,oBAEzB,EACD,IAEHS,6BAA8B3B,EAAO2B,6BACrCrB,eAAgBN,EAAOM,eACvBI,kBAAmBV,EAAOU,kBAC1BG,kBAAmBb,EAAOa,kBAC1BC,SAAUd,EAAOc,SACjBmD,aAAcpC,MAKd6C,GAA+C,CACnDnB,UAASjE,EAAAA,EAAA,GACJiD,GAAe,IAClBiB,OAAQ,CACNxN,QAAOsJ,EAAAA,EAAA,GACFU,EAAOhK,SAAO,IACjB+L,SAAU,WACVhB,eAAgB,SAAF4D,GAAA,IACZzC,EAAUyC,EAAVzC,WACAhB,EAAQyD,EAARzD,SACAD,EAAQ0D,EAAR1D,SACAmD,EAAOO,EAAPP,QACAT,EAAQgB,EAARhB,SACAC,EAAUe,EAAVf,WAAU,MACL,CACL5P,WAAY2P,EACZtQ,WAAY6O,EACZ4B,UAAWM,GAAWlD,IAAaD,EAAW,EAC9ClN,uBAAwB,SAAF6Q,GAAmB,IAAd5O,EAAO4O,EAAP5O,QACrB4N,GAAc5N,GAChB4N,EAAW1C,EAAU,iBAEzB,EACD,IAEHP,gBAAerB,EAAAA,EAAA,GACVU,EAAOW,iBAAe,IACzBkE,cAAe,gDACf1E,YAAa,QACbE,WAAUf,EAAAA,EAAA,GACLU,EAAOW,gBAAgBN,YAAU,IACpCyE,cAAe,iBAGnBxE,eAAchB,EAAAA,EAAA,GACTU,EAAOM,gBAAc,IACxBtP,KAAMyP,EAAAA,EACNoE,cAAe,mDACf1E,YAAa,QACbE,WAAUf,EAAAA,EAAA,GACLU,EAAOM,eAAeD,YAAU,IACnCyE,cAAe,eAEjB/D,eAAgB,SAAFgE,GAAA,IACZ7C,EAAU6C,EAAV7C,WACAhB,EAAQ6D,EAAR7D,SACAnG,EAAMgK,EAANhK,OACAsG,EAAS0D,EAAT1D,UACA2D,EAAqBD,EAArBC,sBAAqB,MAChB,CACLtD,OAAQ,WACN,IAAMuD,EAAgCD,EACpCjK,EACAmG,EACAgB,EACApC,GAEFuB,EAAU4D,EAA+B/D,EAC3C,EACD,IAEHL,kBAAiBvB,EAAAA,EAAA,GACZU,EAAOa,mBAAiB,IAC3BV,YAAa,QACb+E,UAAU,EACVL,cAAe,sDACfxE,WAAUf,EAAAA,EAAA,GACLU,EAAOa,kBAAkBR,YAAU,IACtCyE,cAAe,eAEjB/D,eAAgB,SAAFoE,GAAA,IAAKjE,EAAQiE,EAARjE,SAAUnG,EAAMoK,EAANpK,OAAQsG,EAAS8D,EAAT9D,UAAS,MAAQ,CACpDK,OAAQ,WAAF,OAAQL,EAAUtG,EAAQmG,EAAS,EAC1C,IAEHJ,SAAQxB,EAAAA,EAAA,GACHU,EAAOc,UAAQ,IAClB+D,cAAe,6CACf1E,YAAa,OACbE,WAAUf,EAAAA,EAAA,GACLU,EAAOc,SAAST,YAAU,IAC7ByE,cAAe,gBAGnBb,aAAcpC,MAKduD,GAA+C,CACnD7B,UAASjE,EAAAA,EAAA,GACJiD,GAAe,IAClBiB,OAAQ,CACNxN,QAAOsJ,EAAAA,EAAA,GACFU,EAAOhK,SAAO,IACjB+L,SAAU,WACV3B,UAAW,IACXW,eAAgB,SAAFsE,GAAA,IACZnD,EAAUmD,EAAVnD,WACAhB,EAAQmE,EAARnE,SACAD,EAAQoE,EAARpE,SACAmD,EAAOiB,EAAPjB,QACAT,EAAQ0B,EAAR1B,SACAC,EAAUyB,EAAVzB,WAAU,MACL,CACL5P,WAAY2P,EACZtQ,WAAY6O,EACZ4B,UAAWM,GAAWlD,IAAaD,EAAW,EAC9ClN,uBAAwB,SAAFuR,GAAmB,IAAdtP,EAAOsP,EAAPtP,QACrB4N,GAAc5N,GAChB4N,EAAW1C,EAAU,iBAEzB,EACD,IAEHS,6BAA8B,CAC5B3Q,KAAMuP,EAAAA,EACN/M,MAAO,mDACP0M,eAAgB,4BAChBE,UAAW,IACXD,YAAa,QACb0E,cACE,iEACFU,qBACE,0DACFlF,WAAY,CACVrP,KAAM,SACNmC,UAAW,eAGfmN,eAAchB,EAAAA,EAAA,GACTU,EAAOQ,6BAA2B,IACrChN,MAAO,2CACP0M,eAAgB,MAChBE,UAAW,MACXD,YAAa,QACb0E,cAAe,yDACfU,qBACE,uDACFlF,WAAY,CACVrP,KAAM,UAER+P,eAAgB,SAAFyE,GAAA,IACZtD,EAAUsD,EAAVtD,WACAhB,EAAQsE,EAARtE,SACAnG,EAAMyK,EAANzK,OACAsG,EAASmE,EAATnE,UACA2D,EAAqBQ,EAArBR,sBAAqB,MAChB,CACLtD,OAAQ,WACN,IAAMuD,EAAgCD,EACpCjK,EACAmG,EACAgB,EACApC,GAEFuB,EAAU4D,EAA+B/D,EAC3C,EACD,IAEHL,kBAAmB,CACjB7P,KAAMyP,EAAAA,EACNjN,MAAO,2CACP0M,eAAgB,aAChBE,UAAW,MACX8E,UAAU,EACV/E,YAAa,QACb0E,cACE,4DACFU,qBACE,qEACFlF,WAAY,CACVrP,KAAM,UAER+P,eAAgB,SAAF0E,GAAA,IAAKvE,EAAQuE,EAARvE,SAAUnG,EAAM0K,EAAN1K,OAAQsG,EAASoE,EAATpE,UAAS,MAAQ,CACpDK,OAAQ,WAAF,OAAQL,EAAUtG,EAAQmG,EAAS,EAC1C,GAEHJ,SAAU,CACR9P,KAAMyP,EAAAA,EACNjN,MAAO,qCACP0M,eAAgB,WAChBE,UAAW,MACXD,YAAa,OACb0E,cAAe,mDACfU,qBACE,+DACFxE,eAAgB,SAAF2E,GAAA,IACZ1E,EAAM0E,EAAN1E,OACAC,EAAQyE,EAARzE,SACAC,EAAQwE,EAARxE,SACAC,EAAYuE,EAAZvE,aACAC,EAAgBsE,EAAhBtE,iBACAC,EAASqE,EAATrE,UACAtG,EAAM2K,EAAN3K,OAAM,MACD,CACLuG,WACEL,IAAaC,EAAW,EACpB,WACEE,EAAiB,GACjBJ,EAAO,CAAEO,UAAWJ,KACtB,EACA,KACNK,WACEP,IAAaC,EAAW,EACpB,WACEE,EAAiB,GACjBJ,EAAO,CAAEO,UAAWJ,KACtB,EACA,KACNM,UACER,IAAaC,EAAW,EACpB,kBAAM,WACJE,EAAiB,GACjBJ,EAAO,CAAEO,UAAWJ,KACtB,CAAC,EACD,KACNO,OAAQ,WAAF,OAAQL,EAAUtG,EAAQmG,EAAS,EAC1C,GAEH+C,aAAcpC,MAKd8D,GAA2B,CAC/BpC,UAASjE,EAAAA,EAAA,GACJiD,GAAe,IAClBiB,OAAQ,CACNxN,QAAOsJ,EAAAA,EAAA,GACFU,EAAOhK,SAAO,IACjB+L,SAAU,WACV3B,UAAW,MACXW,eAAgB,SAAF6E,GAAA,IACZ1E,EAAQ0E,EAAR1E,SACAD,EAAQ2E,EAAR3E,SACAyC,EAAiBkC,EAAjBlC,kBACA3I,EAAM6K,EAAN7K,OACAqJ,EAAOwB,EAAPxB,QACAT,EAAQiC,EAARjC,SACAC,EAAUgC,EAAVhC,WAAU,MACL,CACL5P,WAAY2P,EACZE,SAAU,SAAC9K,GAAK,OAAK2K,EAAkB3K,EAAOgC,EAAQmG,EAAS,EAC/D4C,UAAWM,GAAWlD,IAAaD,EAAW,EAC9ClN,uBAAwB,SAAF8R,GAAmB,IAAd7P,EAAO6P,EAAP7P,QACrB4N,GAAc5N,GAChB4N,EAAW1C,EAAU,iBAEzB,EACD,IAEHN,cAAe,CACb5P,KAAMuP,EAAAA,EACN/M,MAAO,2CACP0M,eAAgB,mBAChBC,YAAa,QACbC,UAAW,MACXyE,cACE,iEACFU,qBACE,0DACFlF,WAAY,CACVrP,KAAM,SACNmC,UAAW,eAGfmN,eAAgB,CACdtP,KAAMyP,EAAAA,EACNjN,MAAO,2CACP0M,eAAgB,MAChBE,UAAW,MACXD,YAAa,QACb0E,cAAe,yDACfU,qBACE,uDACFlF,WAAY,CACVrP,KAAM,UAER+P,eAAgB,SAAF+E,GAAA,IACZ5D,EAAU4D,EAAV5D,WACAhB,EAAQ4E,EAAR5E,SACAnG,EAAM+K,EAAN/K,OACAsG,EAASyE,EAATzE,UACA2D,EAAqBc,EAArBd,sBAAqB,MAChB,CACLtD,OAAQ,WACN,IAAMuD,EAAgCD,EACpCjK,EACAmG,EACAgB,EACApC,GAEFuB,EAAU4D,EAA+B/D,EAC3C,EACD,GAEHL,kBAAmB,CACjB7P,KAAMyP,EAAAA,EACNjN,MAAO,2CACP0M,eAAgB,aAChBE,UAAW,MACX8E,UAAU,EACV/E,YAAa,QACb0E,cACE,4DACFU,qBACE,qEACFlF,WAAY,CACVrP,KAAM,UAER+P,eAAgB,SAAFgF,GAAA,IAAK7E,EAAQ6E,EAAR7E,SAAUnG,EAAMgL,EAANhL,OAAQsG,EAAS0E,EAAT1E,UAAS,MAAQ,CACpDK,OAAQ,WAAF,OAAQL,EAAUtG,EAAQmG,EAAS,EAC1C,GAEHJ,SAAU,CACR9P,KAAMyP,EAAAA,EACNjN,MAAO,qCACP0M,eAAgB,WAChBE,UAAW,MACXD,YAAa,OACb0E,cAAe,mDACfU,qBACE,+DACFxE,eAAgB,SAAFiF,GAAA,IACZhF,EAAMgF,EAANhF,OACAC,EAAQ+E,EAAR/E,SACAC,EAAQ8E,EAAR9E,SACAC,EAAY6E,EAAZ7E,aACAC,EAAgB4E,EAAhB5E,iBACAC,EAAS2E,EAAT3E,UACAtG,EAAMiL,EAANjL,OAAM,MACD,CACLuG,WACEL,IAAaC,EAAW,EACpB,WACEE,EAAiB,GACjBJ,EAAO,CAAEO,UAAWJ,KACtB,EACA,KACNK,WACEP,IAAaC,EAAW,EACpB,WACEE,EAAiB,GACjBJ,EAAO,CAAEO,UAAWJ,KACtB,EACA,KACNM,UACER,IAAaC,EAAW,EACpB,kBAAM,WACJE,EAAiB,GACjBJ,EAAO,CAAEO,UAAWJ,KACtB,CAAC,EACD,KACNO,OAAQ,WAAF,OAAQL,EAAUtG,EAAQmG,EAAS,EAC1C,GAEH+C,aAAcpC,MAKdoE,GAA0B,OAEhC,SAASC,GAA2BnL,EAAQmG,EAAUgB,EAAYiE,GAChE,IAAMlB,EAAgClK,EAIhCqL,EAHWnB,EAA8B1B,UAAUrC,GAG9BiF,EAAYpG,2BACvC,GAAIqG,GAAalE,EAAY,CAC3B,IAAMnJ,EAAQqN,EAAYlE,EAC1B+C,EAA8B1B,UAAUrC,GAAUL,kBAChD9H,GAAS,EAAIA,EAAQ,CACzB,CACA,OAAOkM,CACT,CAEA,IAKMoB,GAAY,SAAAC,GAChB,SAAAD,EAAYlS,GAAO,IAAAoS,EA6B8B,OAnwBnD,SAAArN,EAAAP,GAAA,KAAAO,aAAAP,GAAA,UAAAyD,UAAA,qCAsuBqBoK,CAAA,KAAAH,GACJ7G,EAAb+G,EAvuBJ,SAAAhO,EAAAM,EAAAP,GAAA,OAAAO,EAAAkG,EAAAlG,GAAA,SAAAN,EAAAD,GAAA,GAAAA,IAAA,UAAAgD,EAAAhD,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAA8D,UAAA,4EAAA9D,GAAA,YAAAA,EAAA,UAAAmO,eAAA,oEAAAnO,CAAA,CAAAoO,CAAAnO,EAAA,CAAAoO,CAAApO,EAAAmG,IAAAG,QAAAC,UAAAjG,EAAAP,GAAA,GAAAyG,EAAAxG,GAAA6E,aAAAvE,EAAAwG,MAAA9G,EAAAD,GAAA,CAuuBIsO,CAAA,KAAAP,EAAA,CAAMlS,IAAO,eAqSD,GApSZoS,EAAKlR,MAAQ,CACXwR,iBAAkB,GAClBtF,UAAW,EACXxG,OAAMuE,EAAAA,EAAA,GAAOiH,EAAKpS,MAAM2S,eAAa,IAAEvD,UAAW,KAClDa,SAAS,EACTzB,WAAY,EACZM,mBAAmB,EACnB8D,mBAAmB,GAGrBR,EAAKpS,MAAM6S,cACXT,EAAKpE,WAAaoE,EAAKpE,WAAWnD,KAAIuH,GACtCA,EAAKU,eAAiBV,EAAKU,eAAejI,KAAIuH,GAC9CA,EAAKpF,aAAeoF,EAAKpF,aAAanC,KAAIuH,GAC1CA,EAAKW,YAAcX,EAAKW,YAAYlI,KAAIuH,GACxCA,EAAKY,kBAAoBZ,EAAKY,kBAAkBnI,KAAIuH,GACpDA,EAAKnD,aAAemD,EAAKnD,aAAapE,KAAIuH,GAC1CA,EAAKa,SAAWb,EAAKa,SAASpI,KAAIuH,GAClCA,EAAK1D,YAAc0D,EAAK1D,YAAY7D,KAAIuH,GACxCA,EAAKxD,aAAewD,EAAKxD,aAAa/D,KAAIuH,GAC1CA,EAAKnF,iBAAmBmF,EAAKnF,iBAAiBpC,KAAIuH,GAClDA,EAAKlF,UAAYkF,EAAKlF,UAAUrC,KAAIuH,GACpCA,EAAK7C,kBAAoB6C,EAAK7C,kBAAkB1E,KAAIuH,GACpDA,EAAKc,cAAgBd,EAAKc,cAAcrI,KAAIuH,GAC5CA,EAAKL,2BAA6BA,GAA2BlH,KAAIuH,GACjEA,EAAKe,cAAgBf,EAAKe,cAActI,KAAIuH,GAC5CA,EAAKgB,KAAOhB,EAAKgB,KAAKvI,KAAIuH,GAC1BA,EAAKiB,YAAcjB,EAAKiB,YAAYxI,KAAIuH,GAAOA,CACjD,CAAC,OApwBH,SAAAhO,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA8D,UAAA,sDAAA7D,EAAAG,UAAAD,OAAAqB,OAAAxB,GAAAA,EAAAI,UAAA,CAAA0E,YAAA,CAAArE,MAAAR,EAAAoB,UAAA,EAAAD,cAAA,KAAAjB,OAAAK,eAAAP,EAAA,aAAAoB,UAAA,IAAArB,GAAA2G,EAAA1G,EAAAD,EAAA,CAowBGmP,CAAApB,EAAAC,GApwBHhO,EAowBG+N,EApwBH7N,EAowBG,EAAAiG,IAAA,oBAAA1F,MAED,WACM2O,KAAKvT,MAAMwT,mCACbD,KAAKE,aAAc,EAEnBF,KAAKG,eAET,GAAC,CAAApJ,IAAA,4BAAA1F,MAED,SAA0B+O,GACpBA,EAAUH,mCAAqCD,KAAKE,cACtDF,KAAKE,aAAc,EAEnBF,KAAKG,eAET,GAEA,CAAApJ,IAAA,YAAA1F,MAIA,WACE,OAAI2O,KAAKrS,MAAM0R,kBACTgB,IAAAA,IAAML,KAAKrS,MAAM0F,OAAOiN,UAAW,MAEnCD,IAAAA,IAAML,KAAKrS,MAAM0F,OAAOkN,kBAAmB,UAC3ChC,GAEOb,GAEFV,GAEFiB,GAGLoC,IAAAA,IAAML,KAAKrS,MAAM0F,OAAOiN,UAAW,MAEnCD,IAAAA,IAAML,KAAKrS,MAAM0F,OAAOkN,kBAAmB,UAC3ChC,GAEO1B,GAEFL,GAGFZ,EACT,GAEA,CAAA7E,IAAA,wBAAA1F,MAMA,SAAsBwK,GAAW,IAAA2E,EAAA,KAEzBC,EAAqBJ,IAAAA,OACzBxE,GACA,SAAClM,GAAI,OACFA,EAAK+Q,YACN/Q,EAAKwJ,mBACsB,MAA3BxJ,EAAKwJ,mBACLxJ,EAAKrB,OAAO,IAGVqS,EAAsBN,IAAAA,OAASxE,GAAW,SAAClM,GAAI,OAAKA,EAAK+Q,UAAU,IACnEE,EAAuB,GAE7BP,IAAAA,QAAUM,GAAqB,SAAChR,GAC9B,IAAMkR,EAAUR,IAAAA,KACdG,EAAK7S,MAAMwR,kBACX,SAAC2B,GAAG,OAAKA,EAAIlG,KAAOjL,EAAKiL,EAAE,IAEvBmG,EAASC,SAASH,EAAQ1H,kBAAmB,IAC7C8H,EAASD,SAASrR,EAAKwJ,kBAAmB,IAC1C+H,EAAeF,SAASH,EAAQjI,eAAgB,IAChDuI,EAAeH,SAASC,EAAOrI,eAAgB,IAE/CwI,EAAkBf,IAAAA,OACtBA,IAAAA,aAAeA,IAAAA,KAAOQ,GAAUR,IAAAA,KAAO1Q,KACvC,SAACoH,GAAG,MAAa,YAARA,CAAiB,KAIS,aAAlCyJ,EAAK7S,MAAM0F,OAAOgO,OAAO/X,MACvBkX,EAAK7S,MAAM0F,OAAOiO,oBACnBjB,IAAAA,QACAA,IAAAA,KAAO1Q,EAAMyR,GACbf,IAAAA,KAAOQ,EAASO,KAEhBzR,EAAKrB,QAAQsM,KAAOiG,EAAQvS,QAAQsM,KAItCqG,IAAWF,GACVpR,EAAKwJ,oBACL0H,EAAQzH,WAAazJ,EAAKyJ,UAAaiH,IAAAA,MAAQ1Q,EAAKyJ,YACrD8H,IAAiBC,GALjBP,EAAqBxL,KAAKzF,EAS9B,IAEA,IAAM4R,EAAgC,SAAC5R,GACrC,IAAM6R,EAAsB7R,EAAKiJ,eAC7B,CAAE6I,gBAAiBT,SAASrR,EAAKiJ,eAAgB,KACjD,CAAC,EACL,OAAAhB,EAAA,CACEtJ,QAAS,CAAEsM,GAAIjL,EAAKrB,QAAQsM,IAC5BzB,kBAAmBxJ,EAAKwJ,kBACxBU,UAAWlK,EAAKkK,UAChBT,SAAWiH,IAAAA,MAAQ1Q,EAAKyJ,UAA4B,GAAhBzJ,EAAKyJ,UACtCoI,EAEP,EAGA,MAAO,GAAGtW,OACRmV,IAAAA,IAAMI,EAAoBc,GAC1BlB,IAAAA,IAAMO,GAAsB,SAACjR,GAAI,OAAAiI,EAAA,CAC/BgD,GAAIjL,EAAKiL,IACN2G,EAA8B5R,GAAK,IAG5C,GAAC,CAAAoH,IAAA,eAAA1F,MAED,WAKE,OAJA2O,KAAK0B,UAAS,SAACvL,GAAI,MAAM,CACvB0D,UAAW1D,EAAK0D,UAAY,IAC7B,IAEMmG,KAAKrS,MAAMkM,SACpB,GAAC,CAAA9C,IAAA,eAAA1F,MAED,SAAasQ,EAAUC,GAAY,IAE7BC,EAF6BC,EAAA,KACzB9Y,EAAS2Y,EAAS3Y,KAAlBA,KAGF+Y,EACJ1B,IAAAA,IAAML,KAAKrS,MAAM0F,OAAOkN,kBAAmB,UAC3ChC,GACIyD,EACJhC,KAAKvT,MAAMwV,oBAAsBjC,KAAKrS,MAAM0F,OAAOgO,OAAOzG,GAQ1DiH,EANyC,IAAvC7B,KAAKrS,MAAM0F,OAAOwI,UAAU1N,QAAiBnF,EAAKmF,OAGpD6R,KAAKrS,MAAM0R,mBACXgB,IAAAA,IAAML,KAAKrS,MAAM0F,OAAOiN,UAAW,MAEnBD,IAAAA,IAAMrX,GAAM,SAACkZ,GAC3B,IAOIC,EANFhJ,EAIE+I,EAJF/I,kBACAc,EAGEiI,EAHFjI,6BACArB,EAEEsJ,EAFFtJ,eACAK,EACEiJ,EADFjJ,gBASF,OALuBkJ,EAAnBhJ,IACK4I,EACQ9H,EAA+BrB,EAC5BK,GAEpBrB,EAAAA,EAAA,GACKsK,GAAG,IACNtJ,eAAgBsJ,EAAIT,gBACpB9V,UAAU,EACVwN,kBAAmBgJ,GAAgB,EAAIA,EAAe,GAE1D,IACSJ,EACO1B,IAAAA,IAAMrX,GAAM,SAACkZ,GAC3B,IACE/I,EAGE+I,EAHF/I,kBACAc,EAEEiI,EAFFjI,6BACAjB,EACEkJ,EADFlJ,kBAEImJ,EACJhJ,GAAqBc,EAA+BjB,EACtD,OAAApB,EAAAA,EAAA,GACKsK,GAAG,IACNvW,UAAU,EACVwN,kBAAmBgJ,GAAgB,EAAIA,EAAe,EACtDvJ,eACEkJ,EAAKnU,MAAM0R,mBAAqB2C,EAC5BE,EAAIT,gBACJS,EAAItJ,gBAEd,IAEgByH,IAAAA,IAAMrX,GAAM,SAACkZ,GAAG,OAAAtK,EAAAA,EAAA,GAC3BsK,GAAG,IACNvW,UAAU,EACViN,eACEkJ,EAAKnU,MAAM0R,mBAAqB2C,EAC5BE,EAAIT,gBACJS,EAAItJ,gBAAc,IApDV,IAAIwJ,MAAM,GAAGC,KAAK,CAAExI,UAAW,MAwDjD,IAAMA,EAAYwG,IAAAA,UAAYA,IAAAA,KAAOwB,GAAehI,WAAa,IACjEmG,KAAK0B,UACH,SAACvL,GAAI,MAAM,CACTgJ,iBAAkB2C,EAAKrV,MAAM6V,YACzBjC,IAAAA,OAASA,IAAAA,OAASlK,EAAKgJ,iBAAkBnW,GAAO,MAChDA,EACJqK,OAAMuE,EAAAA,EAAA,GACDzB,EAAK9C,QAAM,IACdwI,UAAWiG,EAAKrV,MAAM6V,YAClBjC,IAAAA,OAASA,IAAAA,OAASlK,EAAK9C,OAAOwI,UAAWgG,GAAgB,MACzDA,IAENhI,UAAAA,EACD,IACD,WAEKwG,IAAAA,OAASuB,IACVE,EAAKnU,MAAM0F,OAAOwI,UAAU1N,SAAW2T,EAAKnU,MAAMsN,YAElD6G,EAAKzG,aAAa,CAAEuG,WAAYA,EAAaE,EAAKrV,MAAM8V,WAE1DT,EAAKrV,MAAM+V,aACb,GAEJ,GAAC,CAAAzL,IAAA,4BAAA1F,MAED,SAAyBoR,GAA0B,IAAAC,EAAA,KAAvB7G,EAAS4G,EAAT5G,UAAWtM,EAAQkT,EAARlT,SAM/BoT,EAAmB9G,EACtBxN,QAAO,SAACuU,GAAQ,IAAAC,EAAA,QAAsB,QAAjBA,EAACD,EAAStU,eAAO,IAAAuU,GAAhBA,EAAkBC,OAAM,IAC9CC,KAPgB,SACjBH,EACAI,GAAG,SAAA9X,OACG8X,EAAM,EAAC,MAAA9X,OAAKwX,EAAKjW,MAAMwW,UAAU,oCAAqC,WAAU,KAAA/X,OAAI0X,aAAQ,EAARA,EAAU9X,YAAW,aAAAI,OAC7GwX,EAAKjW,MAAMwW,UAAU,wDAAyD,gEAA+D,IAIjJ,OAAIN,EAAiBxU,QACZ+U,EAAAA,EAAAA,GAAaC,EAAAA,EAAiBC,aAA9BF,CAA4C,CACjDG,QAASrD,KAAKvT,MAAMwW,UAClB,4CACA,oBAEFK,aAAcX,IAGXpT,GACT,GAAC,CAAAwH,IAAA,mBAAA1F,MAED,SAAiBA,GACf2O,KAAK0B,UAAS,SAACvL,GAAI,MAAM,CACvB8E,WAAY9E,EAAK8E,WAAa5J,IAAU,EAAI,EAAI8E,EAAK8E,WAAa5J,EACnE,GACH,GAAC,CAAA0F,IAAA,YAAA1F,MAED,SAAUgC,EAAQkQ,GAChB,IAAM5T,EAAO0D,EAAOwI,UAAU0H,GAC9BvD,KAAK0B,SAAS,CACZrO,OAAQmQ,IAAOnQ,EAAQ,CACrBwI,UAAS/D,EAAA,GAAKyL,EAAQ,CAAEE,KAAM9T,OAGpC,GAAC,CAAAoH,IAAA,WAAA1F,MAID,SAASgC,GAAQ,IAAAqQ,EAAA,KACTC,EAAS,CACfA,UAAmB,IACbC,EAAOC,IAAO7D,KAAKvT,MAAMqX,sBAAuB,cA4BtD,OA3BAzD,IAAAA,QAAUhN,EAAOwI,WAAW,SAAClM,EAAMoH,GACjC,IAAMgN,EAAY,CAAC,EACd1D,IAAAA,MAAQ1Q,EAAKrB,WACZ+R,IAAAA,MAAQ1Q,EAAKwJ,oBAAsBxJ,EAAKwJ,kBAAoB,KAC9D4K,EAAU5K,kBACR,kDAGDkH,IAAAA,QAAU1Q,EAAKqU,UAAY3D,IAAAA,QAAU1Q,EAAKsU,cAC7CF,EAAUC,QAAU,oDAEtB,IAAME,EAAgBL,IAAOlU,EAAKwU,eAAgB,cAC9CP,EAAKQ,KAAKF,GAAiB,IAC7BH,EAAUI,eACR,+CAGAT,EAAK/V,MAAM0R,oBACTgB,IAAAA,MAAQ1Q,EAAKwJ,oBAAsBxJ,EAAKwJ,kBAAoB,KAC9D4K,EAAU5K,kBACR,iDAGDkH,IAAAA,QAAU0D,KACbJ,EAAO9H,UAAU9E,GAAOgN,EAE5B,IACOJ,CACT,GAAC,CAAA5M,IAAA,eAAA1F,MAED,WACE2O,KAAK0B,SAAS,CACZhF,SAAS,GAEb,GAEA,CAAA3F,IAAA,iBAAA1F,MAKA,SAAegT,GACb,IAAMxI,EAAYwE,IAAAA,OAChBgE,EAAWxI,WACX,SAAClM,GAAI,OAAM0Q,IAAAA,QAAU1Q,EAAK,IAG5BqQ,KAAKsE,2BAA2BD,EAAYxI,EAC9C,GAEA,CAAA9E,IAAA,6BAAA1F,MAMA,SAA2BgT,EAAYxI,GAAW,IAAA0I,EAAA,KACxCC,EAAoCH,EAApCG,eAAgBC,EAAoBJ,EAApBI,gBAClBC,EAAM,4BAAHxZ,OAA+BuZ,GAExC,OADAzE,KAAKvT,MAAM6S,cACJU,KAAK2E,kCAAkC9I,GAC3C9H,MAAK,WACJ6Q,EAAAA,GAAUC,IAAIH,EAAK,CAAEI,aAAc,SAAU/Q,MAAK,SAAC4N,GACjDoD,IACEpD,EAAS3Y,KAAI,WAAAkC,OACFsZ,EAAiB,IAAHtZ,OAAOsZ,GAAmB,GAAE,QACrD,YAEFD,EAAK9X,MAAM+V,aACb,GACF,IAAE,OACK,kBAAM+B,EAAK9X,MAAM+V,aAAa,GACzC,GAEA,CAAAzL,IAAA,iBAAA1F,MAKA,SAAexB,GAAO,IAAAmV,EAAA,KACpBhF,KAAKvT,MAAM6S,cACX,IAAM2F,EAAW,IAAIC,SACfC,EAAOtV,EAAMuV,OAAOC,MAAM,GACxBZ,EAAoBzE,KAAKrS,MAAM0F,OAA/BoR,gBAERQ,EAASK,OAAO,aAAcH,EAAK9O,MAAM,EAAG8O,EAAKI,KAAM,aACvD,IAMMb,EAAM,4BAAHxZ,OAA+BuZ,GAExC,OAAOG,EAAAA,GACJY,KAAKd,EAAKO,EATE,CACbQ,QAAS,CACP,eAAgB,yBAQjB1R,MAAK,WACJiR,EAAKtD,UAAS,SAACvL,GAAI,MAAM,CACvB9C,OAAMuE,EAAAA,EAAA,GACDzB,EAAK9C,QAAM,IACdwI,UAAW,KAEd,IACDmJ,EAAKU,gBACP,IAAE,OACK,WACLV,EAAKvY,MAAM+V,aACb,GACJ,GAEA,CAAAzL,IAAA,cAAA1F,MAKA,SAAYsU,IACVC,EAAAA,EAAAA,IAAa,CACXC,MAAO7F,KAAKvT,MAAMwW,UAChB,gDACA,gBAEFI,QAASrD,KAAKrS,MAAM0R,kBAChBW,KAAKvT,MAAMwW,UACT,gDACA,iHAEFjD,KAAKvT,MAAMwW,UACT,0CACA,iHAEN6C,QAAS,CACP,CACEha,MAAOkU,KAAKvT,MAAMwW,UAAU,0BAA2B,OACvDtI,QAASgL,GAEX,CACE7Z,MAAOkU,KAAKvT,MAAMwW,UAAU,yBAA0B,SAI9D,GAEA,CAAAlM,IAAA,oBAAA1F,MAMA,SAAkBsU,EAAWI,IAC3BH,EAAAA,EAAAA,IAAa,CACXC,MAAO7F,KAAKvT,MAAMwW,UAChB,8CACA,kEAEFI,QAAShD,IAAAA,IAAM0F,GAAO,SAACpW,GAAI,IAAAqW,EAAA,OACzB1a,EAAAA,cAAA,KAAGyL,IAAKpH,EAAKkK,WAAU,GAAA3O,OACjByE,EAAKrB,QAAQxD,YAAW,KAAAI,QAA6B,QAAzB8a,EAAArW,EAAKrB,QAAQtD,oBAAY,IAAAgb,OAAA,EAAzBA,EAAA,UAAsCrW,EAAKrB,QAAQrD,KAAI,KAAAC,OAAIyE,EAAKwJ,mBAC9F,IAEN2M,QAAS,CACP,CACEha,MAAOkU,KAAKvT,MAAMwW,UAAU,0BAA2B,OACvDtI,QAASgL,GAEX,CACE7Z,MAAOkU,KAAKvT,MAAMwW,UAAU,yBAA0B,SAI9D,GAEA,CAAAlM,IAAA,eAAA1F,MAKA,WACE2O,KAAKiG,wBACAjG,KAAKvT,MAAM6V,YAELtC,KAAKrS,MAAM4N,mBAGpByE,KAAK3E,aAAa,CAAEuG,WAAY,IAJhC5B,KAAK0F,gBAMT,GAEA,CAAA3O,IAAA,iBAAA1F,MAIA,WAAiB,IAAA6U,EAAA,KACTxB,EAAM,uBAAHxZ,OAA0B8U,KAAKrS,MAAM0F,OAAOoR,gBAAe,oCAEpE,OAAOG,EAAAA,GACJC,IAAIH,GACJ3Q,MAAK,SAAC4N,GACLuE,EAAKxE,SACH,CACEzG,WAAY0G,EAAS3Y,KAAKA,KAAKmF,SAEjC,kBAAM+X,EAAKC,aAAaxE,EAAU,KAAK,GAE3C,IAAE,OACK,SAACyE,GAAG,OAAKA,CAAG,GACvB,GAAC,CAAArP,IAAA,cAAA1F,MAED,SAAWgV,GAAY,IAAT9C,EAAK8C,EAAL9C,MACZ,QAASvD,KAAKrS,MAAM0F,OAAOwI,UAAU0H,EACvC,GAEA,CAAAxM,IAAA,wBAAA1F,MAKA,WAAwB,IAAAiV,EAAA,KACtBtG,KAAKvT,MAAM6S,cACX,IAAMoF,EAAM,uBAAHxZ,OAA0B8U,KAAKrS,MAAM0F,OAAOoR,iBACrDG,EAAAA,GACGC,IAAIH,GACJ3Q,MAAK,SAACwS,GACL,IAAAC,EAGID,EAAKvd,KAAIyd,EAAAD,EAFXxd,KAAQsY,EAAkBmF,EAAlBnF,mBAAoBZ,EAAU+F,EAAV/F,WAC5BzF,EAAUuL,EAAVvL,WAGFqL,EAAK5E,UAAS,SAACvL,GAAI,MAAM,CACvB9C,OAAMuE,EAAAA,EAAA,GACDzB,EAAK9C,QAAM,IACdiO,mBAAAA,EACAZ,WAAAA,IAEFzF,WAA2B,IAAfA,EAAmB,EAAIA,EACnCoE,mBAAmBA,EAAAA,EAAAA,IACjBiH,EAAK7Z,MAAMwV,kBACX9L,EAAK9C,OAAOqT,YAAY9L,GACxB0L,EAAK7Z,MAAMka,qBAEd,IACDL,EAAK7Z,MAAM+V,aACb,IAAE,OACK,kBAAM8D,EAAK7Z,MAAM+V,aAAa,GACzC,GAAC,CAAAzL,IAAA,eAAA1F,MAED,SAAYuV,GAAiB,IAAAC,EAAA,KAAdjF,EAAUgF,EAAVhF,WACb5B,KAAK0B,SAAS,CACZnG,mBAAmB,IAErB,IAAMmJ,EAAM,uBAAHxZ,OAA0B8U,KAAKrS,MAAM0F,OAAOoR,gBAAe,+BAAAvZ,OAA8B0W,EAAU,SAAA1W,OAAQ8U,KAAKvT,MAAM8V,SAAQ,iBACvIqC,EAAAA,GAAUC,IAAIH,GAAK3Q,MAAK,SAAC4N,GACvBkF,EAAKV,aAAaxE,EAAUC,EAC9B,GACF,GAEA,CAAA7K,IAAA,WAAA1F,MAKA,SAASgT,GAAY,IAAAyC,EAAA,KACbjL,EAAYwE,IAAAA,OAChBgE,EAAWxI,WACX,SAACqG,GAAG,OAAM7B,IAAAA,QAAU6B,IAAQA,EAAI5T,OAAO,IAIvC+R,IAAAA,KACExE,GACA,SAAClM,GAAI,OAAMA,EAAKwJ,mBAAgD,MAA3BxJ,EAAKwJ,iBAAyB,IAGrE6G,KAAKR,aAAY,kBACfsH,EAAKC,2CAA2C1C,EAAYxI,EAAU,IAGxEmE,KAAK+G,2CAA2C1C,EAAYxI,EAEhE,GAAC,CAAA9E,IAAA,6CAAA1F,MAED,SAA2CgT,EAAYxI,GAAW,IAAAmL,EAAA,KAC1DC,EAAW,CAAC,EAClB5G,IAAAA,QAAUxE,GAAW,SAAClM,GAChBsX,EAAStX,EAAKrB,QAAQxD,aACxBmc,EAAStX,EAAKrB,QAAQxD,aAAasK,KAAKzF,GAExCsX,EAAStX,EAAKrB,QAAQxD,aAAe,CAAC6E,EAE1C,IACA,IAAMuX,EAAoB7G,IAAAA,OAAS4G,GAAU,SAACtX,GAAI,OAAKA,EAAKxB,OAAS,CAAC,IAGpEkS,IAAAA,KAAO4G,GAAU,SAACtX,GAAI,OAAKA,EAAKxB,OAAS,CAAC,KAEN,aAAlC6R,KAAKrS,MAAM0F,OAAOgO,OAAO/X,MACxB0W,KAAKrS,MAAM0F,OAAOiO,mBAGrBtB,KAAKP,mBACH,kBAAMuH,EAAKG,4BAA4B9C,EAAYxI,EAAU,GAC7DwE,IAAAA,OAAS6G,GAAmB,SAAC1V,EAAG4V,GAAC,OAAK5V,EAAEtG,OAAOkc,EAAE,GAAE,KAGrDpH,KAAKmH,4BAA4B9C,EAAYxI,EAEjD,GAEA,CAAA9E,IAAA,8BAAA1F,MAMA,SAA4BgT,EAAYxI,GAAW,IAAAwL,EAAA,KACjDrH,KAAKvT,MAAM6S,cAGkB,aAA3B+E,EAAWhD,OAAO/X,MACjB+a,EAAW/C,mBAgBZtB,KAAKsH,qBAAqBzL,GACvB9H,MAAK,SAACwS,GACL,IAAIlT,EAASgR,EACTkC,IACFlT,EAAMuE,EAAAA,EAAA,GAAQyM,GAAU,IAAExI,UAAW0K,EAAKvd,KAAKA,KAAK6S,aAEtDwL,EAAKE,qBAAqB,aACvBxT,MAAK,WACJsT,EAAK5a,MAAM+a,SAASnU,EACtB,IAAE,OACK,kBAAMgU,EAAK5a,MAAM+V,aAAa,GACzC,IAAE,OACK,kBAAM6E,EAAK5a,MAAM+V,aAAa,IA1BvCxC,KAAKsH,qBAAqBzL,GACvB9H,MAAK,SAACwS,GACL,IAAIlT,EAASgR,EACTkC,IACFlT,EAAMuE,EAAAA,EAAA,GAAQyM,GAAU,IAAExI,UAAW0K,EAAKvd,KAAKA,KAAK6S,aAEtDwL,EAAKE,qBAAqB,YACvBxT,MAAK,WACJsT,EAAK5a,MAAM+a,SAASnU,EACtB,IAAE,OACK,kBAAMgU,EAAK5a,MAAM+V,aAAa,GACzC,IAAE,OACK,kBAAM6E,EAAK5a,MAAM+V,aAAa,GAgB3C,GAEA,CAAAzL,IAAA,uBAAA1F,MAKA,SAAqBwK,GAAW,IAAA4L,EAAA,KACxBC,EAAc1H,KAAK2H,sBAAsB9L,GACzC+L,EAAiB,uBAAH1c,OAA0B8U,KAAKrS,MAAM0F,OAAOoR,gBAAe,gBACzEoD,EAAU,CACdjN,GAAIoF,KAAKrS,MAAM0F,OAAOoR,gBACtB5I,UAAW6L,GAGb,OAAIG,EAAQhM,UAAU1N,OACbyW,EAAAA,GACJY,KAAKoC,EAAgBC,GACrB9T,MAAK,kBAAM0T,EAAKxB,uBAAuB,IAAC,OAClC,kBACLlQ,QAAQ+R,OACN,IAAI7T,MAAM,wDACX,IAIA8B,QAAQlC,SACjB,GAAC,CAAAkD,IAAA,gBAAA1F,MAED,SAAcwK,GAAW,IAAAkM,EAAA,KACjBC,EAAoB3H,IAAAA,OACxBxE,GACA,SAACqG,GAAG,OAAM7B,IAAAA,QAAU6B,IAAQA,EAAI5T,OAAO,IAEzC0R,KAAKsH,qBAAqBU,GAAmBjU,MAAK,WAAM,IAAAkU,GAEpDC,EAAAA,EAAAA,IAC0B,QADlBD,EACNF,EAAKpa,MAAM0F,OAAOgO,cAAM,IAAA4G,OAAA,EAAxBA,EAA0BtB,oBAC1BwB,EAAAA,EAAaC,iBAGfL,EAAKR,qBAAqBc,EAAAA,EAAkBC,kBAE5CP,EAAKR,qBAAqBc,EAAAA,EAAkBE,UAEhD,GACF,GAEA,CAAAxR,IAAA,oCAAA1F,MAKA,SAAkCmX,GAAsB,IAAAC,EAAA,KAChDf,EAAc1H,KAAK2H,sBAAsBa,GACzCZ,EAAiB,uBAAH1c,OAA0B8U,KAAKrS,MAAM0F,OAAOoR,gBAAe,gBACzEoD,EAAU,CACdjN,GAAIoF,KAAKrS,MAAM0F,OAAOoR,gBACtB5I,UAAW6L,GAEb,OAAIG,EAAQhM,UAAU1N,OACbyW,EAAAA,GACJY,KAAKoC,EAAgBC,GACrB9T,MAAK,kBACJ0U,EAAK/G,UACH,SAACvL,GAAI,MAAM,CACTgJ,iBAAkB,GAClB9L,OAAMuE,EAAAA,EAAA,GAAOzB,EAAK9C,QAAM,IAAEwI,UAAW,KACrChC,UAAW,EACX6C,SAAS,EACTzB,WAAY,EACb,IACD,kBAAMwN,EAAKtI,cAAc,GAC1B,IACF,OACM,kBACLpK,QAAQ+R,OACN,IAAI7T,MACFwU,EAAKhc,MAAMwW,UACT,uDACA,qCAGL,IAGAlN,QAAQlC,SACjB,GAEA,CAAAkD,IAAA,OAAA1F,MAKA,SAAKgT,GAAY,IAAAqE,EAAA,KACT7M,EAAYwE,IAAAA,OAChBgE,EAAWxI,WACX,SAAClM,GAAI,OAAM0Q,IAAAA,QAAU1Q,EAAK,IAER0Q,IAAAA,KAClBxE,GACA,SAAClM,GAAI,OAAMA,EAAKwJ,mBAAgD,MAA3BxJ,EAAKwJ,iBAAyB,KAElD6G,KAAKrS,MAAM0R,kBAC5BW,KAAKR,aAAY,kBAAMkJ,EAAKC,UAAU9M,EAAU,IAEhDmE,KAAK2I,UAAU9M,EAEnB,GAAC,CAAA9E,IAAA,gBAAA1F,MAED,WAAgB,IAAAuX,EAAA,MACdhD,EAAAA,EAAAA,IAAa,CACXC,MAAO7F,KAAKvT,MAAMwW,UAChB,wDACA,gCAEFI,QAASrD,KAAKvT,MAAMwW,UAClB,gEACA,qDAEF6C,QAAS,CACP,CACEha,MAAOkU,KAAKvT,MAAMwW,UAAU,0BAA2B,OACvDtI,QAAS,WACPiO,EAAKnc,MAAM6S,cACXsF,EAAAA,GAAS,OACC,uBAAD1Z,OACkB0d,EAAKjb,MAAM0F,OAAOoR,kBAE1C1Q,MAAK,SAAC4N,GACmB,MAApBA,EAASkH,SACXD,EAAKnc,MAAM+V,cACXsG,IAAAA,QACEF,EAAKnc,MAAMwW,UACT,wDACA,oCAEF,CAAE8F,QAAS,MAETH,EAAKjb,MAAM0R,kBACbuJ,EAAKnc,MAAMuc,QAAQ5T,KAAK6T,EAAAA,GAAcC,MAEtCN,EAAKnc,MAAMuc,QAAQ5T,KAAK+T,EAAAA,GAAmBC,eAGjD,IAAE,OACK,kBAAMR,EAAKnc,MAAM+V,aAAa,GACzC,GAEF,CACE1W,MAAOkU,KAAKvT,MAAMwW,UAAU,yBAA0B,SAI9D,GAOA,CAAAlM,IAAA,cAAA1F,MACA,SAAYgT,GAAY,IAAAgF,EAAA,KAChBC,EAAkB,SAACzN,GAEvB,OADAwN,EAAK5c,MAAM6S,cACJ+J,EAAK1E,kCAAkC9I,GAC3C9H,MAAK,YAEDsV,EAAK5c,MAAMka,oBAAoB4C,SAAS,qBACzCF,EAAK5c,MAAMka,oBAAoB4C,SAAS,kBAExCF,EAAK5c,MAAMuc,QAAQ5T,KAAK6T,EAAAA,GAAcC,MAEtCG,EAAK5c,MAAMuc,QAAQ5T,KAAK+T,EAAAA,GAAmBC,cAE/C,IAAE,OACK,WACLC,EAAK5c,MAAM+V,aACb,GACJ,EAEA,GADexC,KAAKN,SAAS2E,GAAYxI,UAC7B1N,QAiBVyX,EAAAA,EAAAA,IAAa,CACXC,MAAO7F,KAAKvT,MAAMwW,UAChB,wCACA,gBAEFI,QAASrD,KAAKvT,MAAMwW,UAClB,0CACA,oFAEF6C,QAAS,CACP,CACEha,MAAOkU,KAAKvT,MAAMwW,UAAU,0BAA2B,OACvDtI,QAAS,YAEJ0O,EAAK5c,MAAMka,oBAAoB4C,SAAS,qBACzCF,EAAK5c,MAAMka,oBAAoB4C,SAAS,kBAExCF,EAAK5c,MAAMuc,QAAQ5T,KAAK6T,EAAAA,GAAcC,MAEtCG,EAAK5c,MAAMuc,QAAQ5T,KAAK+T,EAAAA,GAAmBC,cAE/C,GAEF,CACEtd,MAAOkU,KAAKvT,MAAMwW,UAAU,yBAA0B,cAzC1C,CAClB,IAAMpH,EAAYwE,IAAAA,OAChBgE,EAAWxI,WACX,SAAClM,GAAI,OAAM0Q,IAAAA,QAAU1Q,EAAK,IAER0Q,IAAAA,KAClBxE,GACA,SAAClM,GAAI,OAAMA,EAAKwJ,mBAAgD,MAA3BxJ,EAAKwJ,iBAAyB,KAElD6G,KAAKrS,MAAM0R,kBAC5BW,KAAKR,aAAY,WACf8J,EAAgBzN,EAClB,IAEAyN,EAAgBzN,EAEpB,CA8BF,GAEA,CAAA9E,IAAA,YAAA1F,MAKA,SAAUwK,GAAW,IAAA2N,EAAA,KAEnB,OADAxJ,KAAKvT,MAAM6S,cACJU,KAAK2E,kCAAkC9I,GAC3C9H,MAAK,WACJyV,EAAK/c,MAAM+V,cACXsG,IAAAA,QACEU,EAAK/c,MAAMwW,UACT,8CACA,8BAEF,CAAE8F,QAAS,KAEf,IAAE,OACK,WACLS,EAAK/c,MAAM+V,aACb,GACJ,GAEA,CAAAzL,IAAA,UAAA1F,MAIA,WAAU,IAAAoY,EAAA,MACR7D,EAAAA,EAAAA,IAAa,CACXC,MAAO7F,KAAKvT,MAAMwW,UAChB,mDACA,mBAEFI,QAASrD,KAAKvT,MAAMwW,UAClB,6CACA,iFAEF6C,QAAS,CACP,CACEha,MAAOkU,KAAKvT,MAAMwW,UAAU,0BAA2B,OACvDtI,QAAS,WAAF,OAAQ8O,EAAKtJ,cAAc,GAEpC,CACErU,MAAOkU,KAAKvT,MAAMwW,UAAU,yBAA0B,SAI9D,GAEA,CAAAlM,IAAA,aAAA1F,MAKA,SAAWqY,GAAQ,IAAAC,EAAA,KACXC,EAAiB,2BAAH1e,OAA8Bwe,EAAM,eAExD,OAAO9E,EAAAA,GAAS,OAAQgF,GAAe,OAAO,WAE5C,OADAD,EAAKld,MAAM+V,cACJzM,QAAQ+R,OACb,IAAI7T,MAAM,yDAEd,GACF,GAEA,CAAA8C,IAAA,YAAA1F,MAIA,WAAY,IAAAwY,EAAA,KACJD,EAAiB,uBAAH1e,OAA0B8U,KAAKrS,MAAM0F,OAAOoR,gBAAe,mBAE/E,OAAOG,EAAAA,GAAS,OACNgF,GACP7V,MAAK,WACJ8V,EAAKnI,UAAS,SAACvL,GAAI,MAAM,CACvB8E,WAAY,EACZkE,iBAAkB,GAClB9L,OAAMuE,EAAAA,EAAA,GACDzB,EAAK9C,QAAM,IACdwI,UAAW,IAAIuG,MAAM,GAAGC,KAAK,CAAExI,UAAW,QAE7C,GACH,IAAE,OACK,WAEL,OADAgQ,EAAKnE,iBACE3P,QAAQ+R,OACb,IAAI7T,MAAM,yDAEd,GACJ,GAEA,CAAA8C,IAAA,uBAAA1F,OA/qDFJ,EA+qDEN,IAAAgF,MAOA,SAAAmU,EAA2BjB,GAAM,IAAAnE,EAAAmD,EAAArD,EAAAuF,EAAA,OAAApZ,IAAAuB,MAAA,SAAA8X,GAAA,cAAAA,EAAA7T,KAAA6T,EAAApV,MAAA,OAGT,GAFhB8P,EAAM,uBAAHxZ,OAA0B8U,KAAKrS,MAAM0F,OAAOoR,gBAAe,WAC9DoD,EAAU,CAAEgB,OAAAA,GACVrE,EAAmBxE,KAAKrS,MAAM0F,OAA9BmR,eAC6B,YAAjCxE,KAAKrS,MAAM0F,OAAOqN,WAAwB,CAAAsJ,EAAApV,KAAA,eAAAoV,EAAApV,KAAA,EACtCgQ,EAAAA,GAAUY,KAAKd,EAAKmD,GAAQ,OAc0B,OAZxDkC,EAA0B/J,KAAKvT,MAAMwW,UACzC,kDACA,gHAGCjD,KAAKvT,MAAMka,oBAAoB4C,SAAS,qBACzCvJ,KAAKvT,MAAMka,oBAAoB4C,SAAS,kBAExCvJ,KAAKvT,MAAMuc,QAAQ5T,KAAK6T,EAAAA,GAAcC,MAEtClJ,KAAKvT,MAAMuc,QAAQ5T,KAAK+T,EAAAA,GAAmBC,eAE7CN,IAAAA,QAAc,GAAD5d,OAAI6e,EAAuB,KAAA7e,OAAIsZ,IAAkBwF,EAAAvV,OAAA,SACvDsB,QAAQlC,WAAS,yBAAAmW,EAAA1T,OAAA,GAAAwT,EAAA,SA3B1BG,EA/qDF,eAAApZ,EAAA,KAAAD,EAAAiH,UAAA,WAAA9B,SAAA,SAAAjF,EAAAK,GAAA,IAAAK,EAAAP,EAAA0G,MAAA9G,EAAAD,GAAA,SAAAsZ,EAAAjZ,GAAA2F,EAAApF,EAAAV,EAAAK,EAAA+Y,EAAAC,EAAA,OAAAlZ,EAAA,UAAAkZ,EAAAlZ,GAAA2F,EAAApF,EAAAV,EAAAK,EAAA+Y,EAAAC,EAAA,QAAAlZ,EAAA,CAAAiZ,OAAA,OA2sDG,SArByBE,GAAA,OAAAH,EAAAtS,MAAC,KAADE,UAAA,IA6B1B,CAAAd,IAAA,eAAA1F,MACA,SAAagC,EAAQgX,GAAS,IAAAC,EAAA,KACtBhB,EAAkB,SAACzN,GAEvB,OADAyO,EAAK7d,MAAM6S,cACJgL,EAAK3F,kCAAkC9I,GAC3C9H,MAAK,kBAAMuW,EAAK7d,MAAM8d,aAAalX,EAAO,IAAC,OACrC,WACLiX,EAAK7d,MAAM+V,aACb,GACJ,EACA,GAAK6H,GAcHzE,EAAAA,EAAAA,IAAa,CACXC,MAAO7F,KAAKvT,MAAMwW,UAChB,gDACA,oBAEFI,QAASrD,KAAKvT,MAAMwW,UAClB,wDACA,+CAEF6C,QAAS,CACP,CACEha,MAAOkU,KAAKvT,MAAMwW,UAChB,6DACA,kBAGJ,CACEnX,MAAOkU,KAAKvT,MAAMwW,UAChB,yDACA,gCAEFtI,QAAS,WAAF,OAAQ2P,EAAK7d,MAAM8d,aAAalX,EAAO,UAnCxC,CACZ,IAAMwI,EAAYwE,IAAAA,OAAShN,EAAOwI,WAAW,SAAClM,GAAI,OAAM0Q,IAAAA,QAAU1Q,EAAK,IACnD0Q,IAAAA,KAClBxE,GACA,SAAClM,GAAI,OAAMA,EAAKwJ,mBAAgD,MAA3BxJ,EAAKwJ,iBAAyB,KAElD6G,KAAKrS,MAAM0R,kBAC5BW,KAAKR,aAAY,WACf8J,EAAgBzN,EAClB,IAEAyN,EAAgBzN,EAEpB,CA2BF,GAAC,CAAA9E,IAAA,oBAAA1F,MAED,SAAkB/C,EAAS+E,EAAQkQ,GAAO,IAAAiH,EAAA,KACxC,GAAIlc,EACF,GAAI0R,KAAKrS,MAAM0R,kBAAmB,CAChC,IAAMqF,EAAM,iBAAHxZ,OAAoBoD,EAAQsM,GAAE,4BAAA1P,OAA2B8U,KAAKrS,MAAM0F,OAAOgO,OAAOzG,GAAE,mBAAA1P,OAAkB8U,KAAKrS,MAAM0F,OAAOqT,YAAY9L,IAE7IgK,EAAAA,GACGC,IAAIH,GACJ3Q,MAAK,SAAC4N,GACL,IAAMzI,EAAgBuR,WAAW9I,EAAS3Y,KAAKkQ,eACzCC,EACJD,GAAiByI,EAAS3Y,KAAK4P,gBAAkB,GACnD4R,EAAK9I,SAAS,CACZrO,OAAQmQ,IAAOnQ,EAAQ,CACrBwI,UAAS/D,EAAA,GACNyL,EAAQ,CACPjV,QAAS,CAAEmV,KAAMnV,GACjBsK,eAAgB,CAAE6K,KAAM,IACxBvK,cAAe,CAAEuK,KAAMvK,GACvBC,kBAAmB,CACjBsK,KAAMtK,GAAqB,EAAIA,EAAoB,QAM/D,IAAE,MACK6G,KAAKvT,MAAM+V,cACtB,KAAO,CACL,IAAMkC,EAAM,iBAAHxZ,OAAoBoD,EAAQsM,GAAE,6CAAA1P,OAA4C8U,KAAKrS,MAAM0F,OAAOqT,YAAY9L,IAEjHgK,EAAAA,GACGC,IAAIH,GACJ3Q,MAAK,SAAC4N,GACL,IAAA+I,EACE/I,EAAS3Y,KADHkQ,EAAawR,EAAbxR,cAAeF,EAAiB0R,EAAjB1R,kBAAmBJ,EAAc8R,EAAd9R,eAEpCO,EACJD,EAAgBF,EAAoB,EAChCE,EAAgBF,EAChB,EACNwR,EAAK9I,SAAS,CACZrO,OAAQmQ,IAAOnQ,EAAQ,CACrBwI,UAAS/D,EAAA,GACNyL,EAAQ,CACPjV,QAAS,CAAEmV,KAAMnV,GACjBsK,eAAgB,CAAE6K,KAAM7K,GACxBI,kBAAmB,CAAEyK,KAAMzK,GAC3BE,cAAe,CAAEuK,KAAMvK,GACvBC,kBAAmB,CAAEsK,KAAMtK,QAKrC,IAAE,MACK6G,KAAKvT,MAAM+V,cACtB,MAEAxC,KAAK0B,SAAS,CACZrO,OAAQmQ,IAAOnQ,EAAQ,CACrBwI,UAAS/D,EAAA,GACNyL,EAAQ,CACPjV,QAAS,CAAEmV,KAAM,MACjB7K,eAAgB,CAAE6K,KAAM,IACxBzK,kBAAmB,CAAEyK,KAAM,IAC3BvK,cAAe,CAAEuK,KAAM,IACvBtK,kBAAmB,CAAEsK,KAAM,SAMvC,GAAC,CAAA1M,IAAA,SAAA1F,MAED,WAAS,IAAAsZ,EAAA,KACCtJ,EAAWrB,KAAKrS,MAAM0F,OAAtBgO,OACR,OACE/V,EAAAA,cAACsf,EAAAA,GAAI,CACHC,SAAU,WAAO,EACjBnL,SAAUM,KAAKN,SACfoL,SAAQlT,EAAA,GAAOmT,EAAAA,GACf3L,cAAeY,KAAKrS,MAAM0F,OAC1B2X,OAAQ,SAAFC,GAAA,IAAKC,EAAYD,EAAZC,aAAc7X,EAAM4X,EAAN5X,OAAQgX,EAAOY,EAAPZ,QAAO,OACtC/e,EAAAA,cAAA,OAAKG,UAAU,sBACbH,EAAAA,cAAA,QAAMG,UAAU,qBACdH,EAAAA,cAAA,SACE6f,QAAQ,WACR1f,UAAS,yEAAAP,OAA2Eyf,EAAKhd,MAAM0R,kBAAoB,WAAa,IAChIwG,MACE8E,EAAKhd,MAAM0R,kBAAoB,uBAAyB,IAG1D/T,EAAAA,cAAA,YACEA,EAAAA,cAAA,KAAGG,UAAU,wBACbH,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,4CACHpC,eAAe,qBAGnBlN,EAAAA,cAAA,SACEsP,GAAG,WACHtR,KAAK,OACLW,MAAO,CAAEC,QAAS,QAClBiS,SAAUwO,EAAKpL,eACf5T,SAAUgf,EAAKhd,MAAM0R,kBACrB1E,QAAS,SAAC9K,GAERA,EAAMuV,OAAO/T,MAAQ,IACvB,EACA+Z,OAAO,UAGX9f,EAAAA,cAAA,UACEhC,KAAK,SACLqR,QAAS,WAAF,OAAQgQ,EAAKU,eAAehY,EAAO,EAC1C5H,UAAU,yEAEVH,EAAAA,cAAA,YACEA,EAAAA,cAAA,KAAGG,UAAU,sBACbH,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,4CACHpC,eAAe,sBAIrBlN,EAAAA,cAAA,UACEhC,KAAK,SACLqR,QAAS,WAAF,OAAQgQ,EAAKW,SAAS,EAC7B7f,UAAU,yEAEVH,EAAAA,cAAA,YACEA,EAAAA,cAAA,KAAGG,UAAU,uBACbH,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,qCACHpC,eAAe,aAIrBlN,EAAAA,cAAA,UACEhC,KAAK,SACLqC,SAAU0e,EACV1P,QAAS,WAAF,OAAQgQ,EAAK9K,KAAKxM,EAAO,EAChC5H,UAAU,yEAEVH,EAAAA,cAAA,YACEA,EAAAA,cAAA,KAAGG,UAAU,oBACbH,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,kCACHpC,eAAe,WAIrBlN,EAAAA,cAAA,UACEhC,KAAK,SACLqC,SAAU0e,EACV1P,QAAS,WAAF,OAAQgQ,EAAK7K,YAAYzM,EAAO,EACvC5H,UAAU,yEAEVH,EAAAA,cAAA,YACEA,EAAAA,cAAA,KAAGG,UAAU,wBACbH,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,yCACHpC,eAAe,oBAIrBlN,EAAAA,cAAA,UACEhC,KAAK,SACLqC,SAAU0e,EACV1P,QAAS,WAAF,OAAQgQ,EAAKY,WAAW,EAC/B9f,UAAU,sEAEVH,EAAAA,cAAA,YACEA,EAAAA,cAAA,KAAGG,UAAU,sBACbH,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,uCACHpC,eAAe,iBAIrBlN,EAAAA,cAAA,UACEhC,KAAK,SACLmC,UAAU,qEACVkP,QAAS,WAAF,OAAQgQ,EAAK/K,eAAe,GAEnCtU,EAAAA,cAAA,YACEA,EAAAA,cAAA,KAAGG,UAAU,sBACbH,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,2CACHpC,eAAe,sBAKvBlN,EAAAA,cAAA,QAAMuf,SAAUK,GACd5f,EAAAA,cAAA,OAAKG,UAAU,cACZ4U,IAAAA,IAAMsK,EAAKa,aAAa,SAACC,EAAaC,GAAS,OAC9CC,EAAAA,EAAAA,IAAgBF,EAAaC,EAAW,CACtCpL,UAAWjN,EAAOiN,UAClB7F,WAAYkQ,EAAKlQ,WACjBwB,SAAU0O,EAAKle,MAAM2S,cAAciC,OAAOzG,GAC1CnB,aAAckR,EAAKlR,aACnBiC,aAAciP,EAAKjP,aACnBgB,QAASiO,EAAKhd,MAAM+O,QACpBzB,WAAY0P,EAAKhd,MAAMsN,WACvBI,aAAcsP,EAAKtP,aACnBF,YAAawP,EAAKxP,YAClBzB,iBAAkBiR,EAAKjR,iBACvB4I,YAAaqI,EAAKle,MAAM6V,YACxBsJ,YAAajB,EAAKhd,MAAM0F,OAAOuY,YAC/BjS,UAAWgR,EAAKhR,UAChBtG,OAAAA,EACAkI,kBAAmBoP,EAAKhd,MAAM4N,kBAC9BS,kBAAmB2O,EAAK3O,kBACxBsB,sBAAuBqN,EAAKnM,4BAC5B,KAGNlT,EAAAA,cAAA,OAAKG,UAAU,kBACbH,EAAAA,cAAA,UACEhC,KAAK,SACLqC,SAAU0e,EACV1P,QAAS,WAAF,OAAQgQ,EAAKJ,aAAalX,EAAQgX,EAAQ,EACjD5e,UAAU,2CAEVH,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,sCACHpC,eAAe,cAGnBlN,EAAAA,cAAA,UACEhC,KAAK,SACLqR,QAAS,WAAF,OACLgQ,EAAKkB,0BAA0B,CAC7BhQ,UAAWxI,EAAOwI,UAClBtM,SAAU,WAAF,OAAQob,EAAKhL,cAActM,EAAOwI,UAAU,GACpD,EAEJpQ,UAAU,sDACVE,SACE0e,IACChK,IAAAA,KACChN,EAAOwI,WACP,SAAClM,GAAI,OACHA,EAAKrB,SAAW+R,IAAAA,SAAW1Q,EAAKwJ,kBAAkB,MAIvD+O,EAAAA,EAAAA,IACC7G,aAAM,EAANA,EAAQsF,oBACRwB,EAAAA,EAAaC,iBAEb9c,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,+CACHpC,eAAe,wBAGjBlN,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,2CACHpC,eAAe,sBAMrB,GAId,IAlhEF1H,GAAA+F,EAAAjG,EAAAI,UAAAF,GAAAC,OAAAK,eAAAR,EAAA,aAAAqB,UAAA,IAAArB,EAAA,IAAAA,EAAAE,EAAAG,EA+qDEgZ,CAmWC,CA7yCe,CAAS6B,EAAAA,WA2zCrBC,GAAqB,CACzBzM,YAAAA,EAAAA,GACAkD,YAAAA,EAAAA,GACAwJ,WAAAA,EAAAA,IAGF,UAAeC,EAAAA,EAAAA,aACbC,EAAAA,EAAAA,KAlBsB,SAACve,GAAK,MAAM,CAClCsV,WAAWkJ,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,IAAaze,EAAM0e,WAC1DpM,iCACEtS,EAAME,QAAQye,oBAAoBC,cACpCzI,sBAAuBnW,EAAME,QAAQiW,sBACrCxB,YAAa3U,EAAME,QAAQyU,YAC3BC,SAAU5U,EAAME,QAAQ0U,SACxBN,kBAAmBtU,EAAME,QAAQ2e,gBAAgB5R,GACjD+L,oBAAqBhZ,EAAME,QAAQ8Y,oBACpC,GAS0BoF,GAAzBG,CAA6CvN,KAG/CA,GAAanO,UAAY,CAEvB4O,cAAe3O,IAAAA,MAAgB,CAC7B4Q,OAAQ5Q,IAAAA,MAAgB,CACtBmK,GAAInK,IAAAA,SAEN6Q,mBAAoB7Q,IAAAA,OACnBC,WAEH6Z,aAAc9Z,IAAAA,KAAeC,WAK7B8W,SAAU/W,IAAAA,KAAeC,WAEzB4O,YAAa7O,IAAAA,KAAeC,WAE5B8R,YAAa/R,IAAAA,KAAeC,WAC5BuS,UAAWxS,IAAAA,KAAeC,WAC1BuP,iCAAkCxP,IAAAA,KAAeC,WACjDoT,sBAAuBrT,IAAAA,OAAiBC,WAExC4R,YAAa7R,IAAAA,KAAeC,WAC5B6R,SAAU9R,IAAAA,OAAiBC,WAC3BuR,kBAAmBxR,IAAAA,OAAiBC,WACpCiW,oBAAqBlW,IAAAA,QAAkBA,IAAAA,QAAkBC,WACzDsY,QAASvY,IAAAA,MAAgB,CACvB2E,KAAM3E,IAAAA,OACLC,k9DCxiEL,SAASgP,GAASrM,GAChB,IAAMsQ,EAAS,CAAC,EAgBhB,GAfKtQ,EAAOoZ,cACV9I,EAAO8I,YAAc,2CAElBpZ,EAAOgO,SACVsC,EAAOtC,OAAS,2CAEbhO,EAAOqT,cACV/C,EAAO+C,YAAc,2CAElBrT,EAAOqZ,cACV/I,EAAO+I,YAAc,2CAElBrZ,EAAOoL,cACVkF,EAAOlF,YAAc,2CAElBpL,EAAO6Q,cAEL,CACL,IAAMA,EAAgBL,IAAOxQ,EAAO6Q,cAAe,cAC/CL,MAASO,KAAKF,GAAiB,IACjCP,EAAOO,cAAgB,6CAE3B,MANEP,EAAOO,cAAgB,0CAOzB,OAAOP,CACT,CAEA,IAAMgJ,GAAiB,CACrBF,YAAa,CACXnjB,KAAMyP,EAAAA,EACNjN,MAAO,wCACP0M,eAAgB,cAChBG,WAAY,CACV6E,UAAU,EACVpB,WAAW,IAGfsK,YAAa,CACXpd,KAAMsjB,GAAAA,EACN9gB,MAAO,+CACP0M,eAAgB,sBAChBG,WAAY,CACV6E,UAAU,EACVrO,OAAO,EACPmB,kBAAkB,EAClBH,aAAa,EACbC,UAAU,EACVC,OAAO,EACPjB,QAAS,GACTzD,UAAU,EACVkhB,cAAe,SAACzd,GAAO,OAAKA,CAAO,GAErCiK,eAAgB,SAAC5M,GAAK,MAAM,CAC1B4C,YAAa5C,EAAMqgB,wBACnB3Q,SAAU,SAAC9K,GACLA,GAAS5E,EAAM4U,QAAU5U,EAAM4U,OAAOzG,IACxCnO,EAAMsgB,gBAAgBtgB,EAAM4U,OAAQhQ,EAExC,EACD,GAEHgQ,OAAQ,CACN/X,KAAMsjB,GAAAA,EACN9gB,MAAO,+CACP0M,eAAgB,sBAChBG,WAAY,CACV6E,UAAU,EACVrO,OAAO,EACPmB,kBAAkB,EAClBH,aAAa,EACbC,UAAU,EACVC,OAAO,EACPjB,QAAS,GACTyd,cAAe,SAACzd,GAAO,OAAKA,CAAO,GAErCiK,eAAgB,SAAC5M,GAAK,MAAM,CAC1B4C,YAAa5C,EAAMqgB,wBACnB3Q,SAAU,SAAC9K,GAC+C,IAAA2b,EAApD3b,GAAS5E,EAAMia,aAAeja,EAAMia,YAAY9L,KAClDnO,EAAMsgB,gBAAgB1b,EAAO5E,EAAMia,aAEjCrV,SAA0B,QAArB2b,EAAL3b,EAAOsV,2BAAmB,IAAAqG,GAA1BA,EAA4BzD,SAASpB,EAAAA,EAAaC,kBAElD3b,EAAMwgB,qBAAoB,GAC1BxgB,EAAMygB,wBAAwB7b,EAAMuJ,KAEpCnO,EAAMwgB,qBAAoB,GAGhC,EACAthB,UAAU,EACX,GAEH+gB,YAAa,CACXpjB,KAAMsjB,GAAAA,EACN9gB,MAAO,wCACP0M,eAAgB,eAChBG,WAAY,CACVxJ,OAAO,EACPqO,UAAU,EACVlN,kBAAkB,EAClBH,aAAa,EACbC,UAAU,EACVC,OAAO,EACPjB,QAAS,GACT+d,SAAU,OACVN,cAAe,SAACzd,GAAO,OAAKA,CAAO,GAErCiK,eAAgB,SAAC5M,GAAK,MAAM,CAC1B4C,YAAa5C,EAAM2gB,qBACpB,GAEHlJ,cAAe,CACb5a,KAAM+jB,GAAAA,EACNvhB,MAAO,0CACP0M,eAAgB,iBAChBG,WAAY,CACV6E,UAAU,EACV8P,cAAc,EACdC,oBAAqBC,GAAAA,EAAWC,OAChCC,aAAc,QAGlBjP,YAAa,CACXnV,KAAMsjB,GAAAA,EACN9gB,MAAO,wCACP0M,eAAgB,eAChBG,WAAY,CACVgV,SAAU,KACVR,SAAU,OACV3P,UAAU,EACVlN,kBAAkB,GAEpB+I,eAAgB,SAAFxO,GAAiB,MAAQ,CACrCuE,QAD6BvE,EAAZ+iB,aAElB,GAEHtN,UAAW,CACTxU,MAAO,sCACP0M,eAAgB,YAChBlP,KAAMsjB,GAAAA,EACNvT,eAAgB,SAAFjN,GAAA,IACZiV,EAAMjV,EAANiV,OACAqF,EAAWta,EAAXsa,YACAmH,EAAUzhB,EAAVyhB,WACAC,EAAc1hB,EAAd0hB,eACAza,EAAMjH,EAANiH,OAAM,MACD,CACL1H,WAAY0V,GAAUqF,GAAerF,EAAOzG,IAAM8L,EAAY9L,IAC9DxL,QAASye,EACTvd,kBAAkB,EAClBqd,SAAU,KACVR,SAAU,OACVhR,SAAU,SAAC9K,GACLA,GACFyc,EAAeza,EAAQhC,EAE3B,EACD,GAEH0c,sBAAuB,CACrBjiB,MAAO,4CACP0M,eAAgB,2BAChBlP,KAAM+jB,GAAAA,EACN1U,WAAY,CACV2U,cAAc,EACdC,oBAAqBC,GAAAA,EAAWC,OAChCO,WAAY,KACZN,aAAc,SAKdO,GAAerW,GAAAA,GAAA,GAChB+U,IAAc,IACjBuB,UAAW,CACTpiB,MAAO,8CACP0M,eAAgB,YAChBG,WAAY,CACVwV,OAAO,EACP7d,kBAAkB,EAClBqd,SAAU,KACVR,SAAU,QAEZ7jB,KAAMsjB,GAAAA,EACNvT,eAAgB,SAAC5M,GAAK,MAAM,CAC1B2C,QAAS3C,EAAM2hB,mBAChB,KAOCC,GAAmB,SAAAzP,GACvB,SAAAyP,EAAY5hB,GAAO,IAAAoS,EAwBf,mGAxBeC,CAAA,KAAAuP,IACjBxP,2YAAAK,CAAA,KAAAmP,EAAA,CAAM5hB,KACDkB,MAAQ,CACXkgB,WAAY,GACZO,mBAAoB,GACpBE,kBAAkB,EAClBC,kBAAkB,EAClBlb,OAAQwL,EAAKpS,MAAM2S,cACnBwO,aAAc,IAEhB/O,EAAKkO,gBAAkBlO,EAAKkO,gBAAgBzV,KAAIuH,GAChDA,EAAKiP,eAAiBjP,EAAKiP,eAAexW,KAAIuH,GAC9CA,EAAKqO,wBAA0BrO,EAAKqO,wBAAwB5V,KAAIuH,GAChEA,EAAKoO,oBAAsBpO,EAAKoO,oBAAoB3V,KAAIuH,GAExDA,EAAKuO,sBAAuBoB,EAAAA,GAAAA,IAC1B3P,EAAKpS,MAAMmB,aACXiR,EAAKpS,MAAMsB,iBAGb8Q,EAAKiO,yBAA0B2B,EAAAA,GAAAA,IAC7B5P,EAAKpS,MAAMmB,aACXiR,EAAKpS,MAAMsB,gBACX,CAAC,oBACD8Q,CACJ,CAAC,6RAAAkB,CAAAsO,EAAAzP,KAAAyP,IAAA,EAAAtX,IAAA,oBAAA1F,MAED,WAOgC,IAAAqd,EAN1B1O,KAAKrS,MAAM0F,OAAOgO,QAAUrB,KAAKrS,MAAM0F,OAAOqT,aAChD1G,KAAK+M,gBACH/M,KAAKrS,MAAM0F,OAAOgO,OAClBrB,KAAKrS,MAAM0F,OAAOqT,aAGlB1G,KAAKrS,MAAM0F,OAAOgO,SAEM,QAD1BqN,EACE1O,KAAKrS,MAAM0F,OAAOgO,cAAM,IAAAqN,GAAqB,QAArBA,EAAxBA,EAA0B/H,2BAAmB,IAAA+H,GAA7CA,EAA+CnF,SAC7CpB,EAAAA,EAAaC,kBAGfpI,KAAKiN,qBAAoB,GACzBjN,KAAKkN,wBAAwBlN,KAAKrS,MAAM0F,OAAOgO,OAAOzG,KAEtDoF,KAAKiN,qBAAoB,IAG7BjN,KAAK2O,uBACP,GAAC,CAAA5X,IAAA,4BAAA1F,MAED,SAA0B+O,IAErBJ,KAAKvT,MAAMmiB,MAAMC,OAAOpK,iBACzBzE,KAAKrS,MAAM4gB,kBACXnO,EAAU0O,SAASlU,IAEnBoF,KAAKuO,iBAAiBnO,EAAU0O,SAAU1O,EAAU2O,KAExD,GAAC,CAAAhY,IAAA,iBAAA1F,MAED,SAAegC,EAAQiN,GACrB,IAAQsN,EAAiB5N,KAAKrS,MAAtBigB,aACFnP,EAAc4B,IAAAA,KAAOuN,GAAc,SAACtkB,GAAI,MAAiB,UAAZA,EAAKsR,EAAc,IAEtEoF,KAAK0B,SAAS,CACZrO,OAAQmQ,IAAOnQ,EAAQ,CACrBoL,YAAa,CAAEgF,KAAMhF,GACrB6B,UAAW,CAAEmD,KAAMnD,MAGzB,GAAC,CAAAvJ,IAAA,mBAAA1F,MAED,SAAiByd,EAAUC,GACzB,IAAQnU,EAA2BkU,EAA3BlU,GAAIoU,EAAuBF,EAAvBE,aAAc/jB,EAAS6jB,EAAT7jB,KAEpBoI,EAAS,CACbqT,YAAa,CACX9L,GAAAA,EACAtR,KAAM0lB,EAAeA,EAAaC,iBAAmB,KACrDhkB,KAAAA,EACAa,MAAO,GAAFZ,OAAKD,EAAI,MAAAC,OAAK8jB,EAAeA,EAAavC,YAAc,KAAI,MAEnEC,YAAa,CACX9R,GAAImU,EAAKnU,GACT3P,KAAM8jB,EAAK9jB,KACXa,MAAO,GAAFZ,OAAK6jB,EAAK9jB,OAEjBiZ,cAAeL,IAAO,IAAIqL,MAAQC,OAAO,cACzCjB,eAAW3d,GAEbyP,KAAK0B,SAAS,CAAErO,OAAAA,EAAQkb,kBAAkB,GAC5C,GAAC,CAAAxX,IAAA,sBAAA1F,MAED,SAAoBA,GAClB2O,KAAK0B,SAAS,CACZ4M,iBAAkBjd,GAEtB,GAEA,CAAA0F,IAAA,wBAAA1F,MAIA,WAAwB,IAAAmP,EAAA,KAGtB,OAAOoE,EAAAA,GACJC,IAHS,wBAIT9Q,MAAK,SAAC4N,GACLnB,EAAKkB,SAAS,CAAEkM,aAAcjM,EAAS3Y,KAAKA,OAAQ,kBAClDwX,EAAK/T,MAAM+V,aAAa,GAE5B,IAAE,OACK,kBAAMhC,EAAK/T,MAAM+V,aAAa,GACzC,GAAC,CAAAzL,IAAA,0BAAA1F,MAED,SAAwB/E,GAAY,IAAAwV,EAAA,KAClC,OAAOsN,GAAAA,EACJC,gBAAgB,CACfR,OAAQ,CACNS,UAAWC,GAAAA,EAASC,0BACpBV,SAAUxiB,KAGbyH,MAAK,SAAC4N,GAAa,IAAA8N,EACZrgB,EAA4B,QAArBqgB,EAAG9N,EAAS3Y,KAAKA,YAAI,IAAAymB,OAAA,EAAlBA,EAAoB1M,KAAI,SAACgM,GAAI,MAAM,CACjDnU,GAAImU,EAAKnU,GACTvJ,MAAO0d,EAAKnU,GACZ9O,MAAOijB,EAAK9jB,KACb,IAID,OAFA6W,EAAKJ,SAAS,CAAE0M,mBAAoBhf,IAE7BA,CACT,IAAE,SACO,kBAAM0S,EAAKrV,MAAM+V,aAAa,GAC3C,GAAC,CAAAzL,IAAA,2BAAA1F,MAED,SAAyBqe,GACvB,IAAAC,EAA2C3P,KAAKvT,MAAM2S,cAA9CiC,EAAMsO,EAANtO,OAAQqF,EAAWiJ,EAAXjJ,YAAapG,EAASqP,EAATrP,UAEvBsP,EAAaF,EAAUrO,QAAUA,EACjCwO,EAAgBxO,GAA0B,aAAhBA,EAAO/X,KACjCwmB,EAAgBJ,EAAUrO,QAA6B,aAAnBqO,EAAUpmB,KAC9CymB,KACJH,GAAgBC,KAAkBA,GAAkBC,KAChDJ,EAAUrO,OAAOzG,KAAOyG,EAAOzG,GAG/BoV,KACJ1P,GAAaoP,EAAUhJ,aAAeA,IAClCgJ,EAAUhJ,YAAY9L,KAAO8L,EAAY9L,GAEzCqV,IAAiBP,EAAUjL,iBAC7BpE,IAAAA,IAAMqP,EAAUpP,UAAW,KAAM,QAAUD,IAAAA,IAAMC,EAAW,KAAM,MAGtE,OAAOyP,GAAeC,GAAaC,CACrC,GAEA,CAAAlZ,IAAA,kBAAA1F,MAOA,SAAgBgQ,EAAQqF,EAAawJ,GAAgB,IAAAxN,EAAA,KAEnD,OADA1C,KAAKvT,MAAM6S,cACJsF,EAAAA,GACJC,IAAIsL,GAAAA,GAAe,CAClBtB,OAAQ,CACNxN,OAAQA,EAAOzG,GACf8L,YAAaA,EAAY9L,MAG5B7G,MAAK,SAAC4N,GACL,IAAMkM,EAAaxN,IAAAA,IAAMsB,EAAS3Y,KAAKA,MAAM,SAACsX,GAAS,MAAM,CAC3D1F,GAAI0F,EAAU1F,GACd3P,KAAMqV,EAAUrV,KAChBoG,MAAOiP,EAAU1F,GACjB9O,MAAOwU,EAAUrV,KAClB,KAEyBoV,IAAAA,KACxBwN,GACA,SAACle,GAAI,OAAKA,EAAK0B,MAAMuJ,KAAOyF,IAAAA,IAAMqC,EAAK/U,MAAM0F,OAAQ,YAAY,KAG3C6c,GACtBA,IAGFxN,EAAKhB,SAAS,CAAEmM,WAAAA,IAAc,kBAAMnL,EAAKjW,MAAM+V,aAAa,GAC9D,IAAE,OACK,kBAAME,EAAKjW,MAAM+V,aAAa,GACzC,GAEA,CAAAzL,IAAA,oBAAA1F,MAKA,SAAkBgC,GAAQ,IAAAqQ,EAAA,KACxB,GACErQ,EAAOgO,QACPhO,EAAOqT,aACPrT,EAAOqZ,aACPrZ,EAAO6Q,eACP7Q,EAAOoZ,YACP,KAAA2D,EACApQ,KAAKvT,MAAM6S,cAEX,IAAI+Q,EAEFA,EADEhd,EAAOoR,gBACU,uBAAHvZ,OAA0BmI,EAAOoR,gBAAe,sBAE7C,sBAGrB,IAAMoD,EAAU,CACd5c,KAAM,GACNwhB,YAAapZ,EAAOoZ,YACpBvI,cAAe7Q,EAAO6Q,cACtB7C,OAAQhO,EAAOgO,OAAOzG,GACtB8L,YAAarT,EAAOqT,YAAY9L,GAChC8R,YAAarZ,EAAOqZ,YAAY9R,GAChC0F,UAAW,CAAE1F,GAAIyF,IAAAA,IAAMhN,EAAOiN,UAAW,KAAM,KAC/C7B,YAAapL,EAAOoL,YAAY7D,GAChC0V,WAxOW,aAyOXpC,UAA2B,QAAlBkC,EAAE/c,EAAO6a,iBAAS,IAAAkC,OAAA,EAAhBA,EAAkBrN,KAAI,SAACgM,GAAI,OAAKA,EAAKnU,EAAE,IAClDmT,sBAAuB1a,EAAO0a,sBAC1BlK,IAAOxQ,EAAO0a,uBAAuBoB,OAAO,cAC5C,MAGNvK,EAAAA,GACGY,KAAK6K,EAAkBxI,GACvB9T,MAAK,SAAC4N,GACL,GAAIA,EAAS3Y,KAAM,CACjB,IAAMud,EAAO5E,EAAS3Y,KAAKA,KAC3B0a,EAAKjX,MAAMuc,QAAQ5T,KAAK+T,EAAAA,GAAmBoH,YAAYhK,EAAK3L,KAC5D8I,EAAKjX,MAAM+a,SAAQ5P,GAAAA,GAAC,CAAC,EAChBvE,GAAM,IACToR,gBAAiB8B,EAAK3L,GACtBiB,UAAW0K,EAAK1K,UAChB2I,eAAgB+B,EAAKiK,WACrBvlB,KAAMsb,EAAKtb,KACXqV,UAAWiG,EAAKjG,UAChBC,kBAAmBgG,EAAKhG,oBAE5B,CACF,IAAE,OACK,WAEL,OADAmD,EAAKjX,MAAM+V,cACJzM,QAAQ+R,OACb,IAAI7T,MACFyP,EAAKjX,MAAMwW,UACT,sDACA,oCAIR,GACJ,CACF,GAAC,CAAAlM,IAAA,uBAAA1F,MAED,WAAuB,IAAAkT,EAAA,KACrBvE,KAAK0B,SACH,CACErO,OAAQ,CAAC,IAEX,kBACEkR,EAAK7C,SAAS,CACZrO,OAAQkR,EAAK9X,MAAM2S,eACnB,GAER,GAEA,CAAArI,IAAA,WAAA1F,MAKA,SAASgC,GAAQ,IAAA2R,EAAA,KACGhF,KAAKyQ,yBAAyBpd,IAI9CuS,EAAAA,EAAAA,IAAa,CACXC,MAAO7F,KAAKvT,MAAMwW,UAChB,kDACA,kBAEFI,QAASrD,KAAKvT,MAAMwW,UAClB,4CACA,6HAEF6C,QAAS,CACP,CACEha,MAAOkU,KAAKvT,MAAMwW,UAAU,yBAA0B,MACtDtI,QAAS,WAAF,OAAQqK,EAAK0L,sBAAsB,GAE5C,CACE5kB,MAAOkU,KAAKvT,MAAMwW,UAAU,0BAA2B,OACvDtI,QAAS,WAAF,OAAQqK,EAAK2L,kBAAkBtd,EAAO,MAlBnD2M,KAAK2Q,kBAAkBtd,EAuB3B,GAAC,CAAA0D,IAAA,SAAA1F,MAED,WAAS,IAAA6U,EAAA,KACD5N,EAAS0H,KAAKrS,MAAM2gB,iBACtBL,GACAtB,GACJ,OACErhB,EAAAA,cAACsf,EAAAA,GAAI,CACHC,SAAU,SAACxX,GAAM,OAAK6S,EAAKsB,SAASnU,EAAO,EAC3CqM,SAAUA,GACVN,cAAeY,KAAKrS,MAAM0F,OAC1ByX,SAAU,CACRoF,eAAgB,SAACU,EAAMjjB,EAAOkjB,GAC5BA,EAAMC,YAAYnjB,EAAO,aAAa,kBAAM,IAAI,GAClD,EACAojB,mBAAoB,SAACH,EAAMjjB,EAAOkjB,GAChC,IAAOG,45BAAPjkB,CAA0B6jB,EAAI,GAAR,GACtBC,EAAMC,YAAYnjB,EAAO,aAAa,kBAAMqjB,CAAe,GAC7D,GAEFhG,OAAQ,SAAFpc,GAAA,IAAakc,EAAQlc,EAAhBqiB,KAAQnG,SAAYI,EAAYtc,EAAZsc,aAAc7X,EAAMzE,EAANyE,OAAM,OACjD/H,EAAAA,cAAA,QAAMuf,SAAUK,GACd5f,EAAAA,cAAA,OAAKG,UAAU,iCACZ4U,IAAAA,IAAM/H,GAAQ,SAACmT,EAAaC,GAAS,OACpCC,EAAAA,EAAAA,IAAgBF,EAAaC,EAAW,CACtCmC,WAAY3H,EAAKvY,MAAMkgB,WACvBd,gBAAiB,SAAC1L,EAAQqF,GAAW,OACnCR,EAAK6G,gBACH1L,EACAqF,EACAoE,EAASoF,eACV,EACHhD,wBAAyB,SAAC5gB,GACxB4Z,EAAKgH,wBAAwB5gB,GAAYyH,MAAK,SAACwS,GAGxB,KAAjBA,aAAI,EAAJA,EAAMpY,QACR2c,EAASiG,mBAAmBxK,GAE5BuE,EAASiG,mBAAmB,GAEhC,GACF,EACA9D,oBAAqB/G,EAAK+G,oBAC1B5L,OAAQhO,EAAOgO,OACfqF,YAAarT,EAAOqT,YACpBwK,YAAahL,EAAKzZ,MAAMykB,YACxB9D,qBAAsBlH,EAAKkH,qBAC3BN,wBAAyB5G,EAAK4G,wBAC9Bc,aAAc1H,EAAKvY,MAAMigB,aACzBE,eAAgB5H,EAAK4H,eACrBM,mBAAoBlI,EAAKvY,MAAMygB,mBAC/B/a,OAAAA,GACA,KAGN/H,EAAAA,cAAA,OAAKG,UAAU,kBACbH,EAAAA,cAAA,UACEhC,KAAK,SACLmC,UAAU,8CAEVH,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAG,kCACHpC,eAAe,WAIhB,GAIf,qFAAC,CA7XsB,CAASsT,EAAAA,WAyYlC,UAAeG,EAAAA,EAAAA,aACbC,EAAAA,EAAAA,KAVsB,SAACve,GAAK,MAAM,CAClCmhB,SAAUnhB,EAAME,QAAQ2e,gBACxB0E,YAAavjB,EAAME,QAAQqjB,YAC3BjO,WAAWkJ,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,IAAaze,EAAM0e,WAC1Dze,aAAcD,EAAME,QAAQC,aAAaF,aACzCG,gBAAiBJ,EAAME,QAAQC,aAAaC,gBAC5CghB,KAAMphB,EAAME,QAAQkhB,KACrB,GAG0B,CACvBzP,YAAAA,EAAAA,GACAkD,YAAAA,EAAAA,IAFF0J,CAGGmC,KAGLA,GAAoB7d,UAAY,CAE9Boe,MAAOne,IAAAA,MAAgB,CACrBoe,OAAQpe,IAAAA,MAAgB,CAAEgU,gBAAiBhU,IAAAA,WAC1CC,WAEH0O,cAAe3O,IAAAA,MAAgB,CAC7B4Q,OAAQ5Q,IAAAA,MAAgB,CACtBmK,GAAInK,IAAAA,SAENiW,YAAajW,IAAAA,MAAgB,CAC3BmK,GAAInK,IAAAA,SAEN6P,UAAW7P,IAAAA,MAAgB,CAAC,KAC3BC,WAEH4O,YAAa7O,IAAAA,KAAeC,WAE5B8R,YAAa/R,IAAAA,KAAeC,WAK5B8W,SAAU/W,IAAAA,KAAeC,WAEzBsY,QAASvY,IAAAA,MAAgB,CACvB2E,KAAM3E,IAAAA,OACLC,WAEHoe,SAAUre,IAAAA,MAAgB,CACxBxF,KAAMwF,IAAAA,OACNmK,GAAInK,IAAAA,OACJue,aAAcve,IAAAA,MAAgB,CAC5Bgc,YAAahc,IAAAA,OACbwe,iBAAkBxe,IAAAA,WAEnBC,WAEHwgB,YAAazgB,IAAAA,KAAeC,WAC5BuS,UAAWxS,IAAAA,KAAeC,WAC1B9C,aAAc6C,IAAAA,OAAiBC,WAC/B3C,gBAAiB0C,IAAAA,OAAiBC,WAClCqe,KAAMte,IAAAA,MAAgB,CACpB0gB,SAAU1gB,IAAAA,OACVmK,GAAInK,IAAAA,OACJxF,KAAMwF,IAAAA,SACLC,izDC9oBL,IACM0gB,GAAqB,SAAAxS,GACzB,SAAAwS,EAAY3kB,GAAO,IAAAoS,EAQ4C,mGAR5CC,CAAA,KAAAsS,GAgHnBtZ,GA/GE+G,2YAAAK,CAAA,KAAAkS,EAAA,CAAM3kB,IA+GR,WAIW,CAAC4hB,GAAqB1P,KAAa7G,GAAA+G,EAAA,eAEhC,GAnHZA,EAAKlR,MAAQ,CACX0F,OAAQwL,EAAKpS,MAAM2S,cACnBiS,YAAa,GAGfxS,EAAKyS,mBAAqBzS,EAAKyS,mBAAmBha,KAAIuH,GAAOA,CAC/D,CAAC,6RAAAkB,CAAAqR,EAAAxS,KAAAwS,KAAA,EAAAra,IAAA,oBAAA1F,MAED,WACE2O,KAAKvT,MAAM8kB,kBAAkB,GAAI,iBAE7BvR,KAAKvT,MAAMwT,mCACbD,KAAKE,aAAc,EAEnBF,KAAKwR,qBAET,GAAC,CAAAza,IAAA,4BAAA1F,MAED,SAA0B+O,GACpBJ,KAAKvT,MAAMglB,QAAUzR,KAAKvT,MAAMglB,SAAWrR,EAAUqR,QACvDzR,KAAKvT,MAAM8kB,kBAAkBnR,EAAUqR,OAAQ,iBAG7CrR,EAAUH,mCAAqCD,KAAKE,cACtDF,KAAKE,aAAc,EAEnBF,KAAKwR,qBAET,GAEA,CAAAza,IAAA,cAAA8N,IAKA,WACE,IAAQxR,EAAW2M,KAAKrS,MAAhB0F,OACR,OAAKA,EAAOmR,gBAAmBnR,EAAOqe,eAG/B,CACL,CACEC,KAAM3R,KAAKvT,MAAMwW,UACf,4BACA,kBAEFpX,MAAO,UACP+lB,UAAW,OAEb,CACED,KAAMte,EAAOmR,eACb3Y,MAAO,UACP+lB,UAAW,OAEb,CACED,KAAMte,EAAOgO,OAAOpW,KACpBY,MAAO,UACP+lB,UAAW,QAEb,CACED,KAAMte,EAAOqT,YAAYzb,KACzBY,MAAO,UACP+lB,UAAW,MAEb,CACED,KAAM3R,KAAKvT,MAAMolB,oBACfxe,EAAO6Q,cACPsJ,GAAAA,EAAWC,QAEb5hB,MAAO,UACP+lB,UAAW,MAEb,CACED,KAAMte,EAAOoZ,YACb5gB,MAAO,UACP+lB,UAAW,KArCN,EAwCX,GAAC,CAAA7a,IAAA,wBAAA8N,IAED,WACE,IAAAiN,EAAgC9R,KAAKrS,MAA7B0jB,EAAWS,EAAXT,YAAahe,EAAMye,EAANze,OACf0e,EAAU1e,EAAO0e,QAAU,UAAY,GACvCC,EAAW3e,EAAO2e,SAAW,WAAa,GAChD,OAAoB,IAAhBX,EAEA/lB,EAAAA,cAAA,QAAMG,UAAU,+BAA6B,GAAAP,OACvC6mB,GAAWC,GAAY,YAI1B,IACT,GAEA,CAAAjb,IAAA,WAAA8N,IAIA,WACE,MAAO,CACL7E,KAAKvT,MAAMwW,UAAU,mCAAoC,UACzDjD,KAAKvT,MAAMwW,UAAU,qCAAsC,aAE/D,GAAC,CAAAlM,IAAA,qBAAA1F,MAED,SAAmBggB,EAAahe,GAC9B2M,KAAK0B,SAAS,CAAE2P,YAAAA,EAAahe,OAAAA,GAC/B,GAAC,CAAA0D,IAAA,qBAAA1F,MAcD,WAAqB,IAAAmP,EAAA,KACnB,GAAIR,KAAKvT,MAAMmiB,MAAMC,OAAOpK,gBAAiB,CAC3CzE,KAAKvT,MAAM6S,cACX,IAAMoF,EAAM,uBAAHxZ,OAA0B8U,KAAKvT,MAAMmiB,MAAMC,OAAOpK,iBAC3DG,EAAAA,GACGC,IAAIH,GACJ3Q,MAAK,SAAC4N,GAAa,IAAAsQ,EACZ1L,EAAO5E,EAAS3Y,KAAKA,KACrBkpB,EAAa3L,EAAKlF,OAAO2N,aACzBmD,EAAkB5L,EAAKG,YAAYsI,aACnC3b,EAAMuE,GAAAA,GAAA,GACP2O,GAAI,IACP9B,gBAAiB8B,EAAK3L,GACtB4J,eAAgB+B,EAAKiK,WACrBtC,UAAyB,QAAhB+D,EAAE1L,EAAK2H,iBAAS,IAAA+D,OAAA,EAAdA,EAAgBlP,KAAI,SAACgM,GAAI,MAAM,CACxCnU,GAAImU,EAAKnU,GACTvJ,MAAO0d,EAAKnU,GACZ9O,MAAOijB,EAAK9jB,KACb,IACDoW,OAAQ,CACNzG,GAAI2L,EAAKlF,OAAOzG,GAChBtR,KAAM4oB,EAAaA,EAAWjD,iBAAmB,KACjDhkB,KAAMsb,EAAKlF,OAAOpW,KAClBa,MAAO,GAAFZ,OAAKqb,EAAKlF,OAAOpW,KAAI,MAAAC,OAAKgnB,EAAaA,EAAWzF,YAAc,KAAI,KACzE9F,oBAAqBJ,EAAKlF,OAAOsF,qBAEnCD,YAAa,CACX9L,GAAI2L,EAAKG,YAAY9L,GACrBtR,KAAM6oB,EAAkBA,EAAgBlD,iBAAmB,KAC3DhkB,KAAMsb,EAAKG,YAAYzb,KACvBa,MAAO,GAAFZ,OAAKqb,EAAKG,YAAYzb,KAAI,MAAAC,OAAKinB,EAAkBA,EAAgB1F,YAAc,KAAI,KACxF9F,oBAAqBJ,EAAKG,YAAYC,qBAExC+F,YAAa,CACX9R,GAAI2L,EAAKmG,YAAY9R,GACrB3P,KAAMsb,EAAKmG,YAAYzhB,KACvBa,MAAOya,EAAKmG,YAAYzhB,QAI5BuV,EAAKkB,SAAS,CACZrO,OAAAA,EACAge,YAAmC,QAAtBhe,EAAOqN,WAAuB,EAAI,GAEnD,IAAE,OACK,kBAAMF,EAAK/T,MAAM+V,aAAa,GACzC,CACF,GAAC,CAAAzL,IAAA,SAAA1F,MAED,WACE,IAAA+gB,EAAgCpS,KAAKrS,MAA7B0F,EAAM+e,EAAN/e,OAAQge,EAAWe,EAAXf,YAEhB,OACE/lB,EAAAA,cAAC+mB,GAAAA,EAAM,CACLC,SAAUtS,KAAKsS,SACfC,SAAUvS,KAAKuS,SACfnT,cAAe/L,EACfwS,MAAO7F,KAAKwS,YACZC,gBAAiBzS,KAAK0S,sBACtBrB,YAAaA,EACbsB,SAA0B,IAAhBtB,EAAoB,EAAIA,EAAc,EAChDC,mBAAoBtR,KAAKsR,oBAG/B,oFAAC,CA7LwB,CAASxF,EAAAA,WAwMpC,UAAeI,EAAAA,EAAAA,KARS,SAACve,GAAK,MAAM,CAClC8jB,OAAQ9jB,EAAME,QAAQ+kB,eACtB3S,iCACEtS,EAAME,QAAQye,oBAAoBC,cACpCtJ,WAAWkJ,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,IAAaze,EAAM0e,WAC1DwF,qBAAqBgB,EAAAA,GAAAA,IAAWllB,EAAM0e,UACvC,GAEuC,CACtC/M,YAAAA,EAAAA,GACAkD,YAAAA,EAAAA,GACA+O,kBAAAA,EAAAA,IAHF,CAIGH,IAEHA,GAAsB5gB,UAAY,CAEhCoe,MAAOne,IAAAA,MAAgB,CACrBoe,OAAQpe,IAAAA,MAAgB,CAAEgU,gBAAiBhU,IAAAA,WAC1CC,WAEH4O,YAAa7O,IAAAA,KAAeC,WAE5B8R,YAAa/R,IAAAA,KAAeC,WAE5B0O,cAAe3O,IAAAA,MAAgB,CAC7BqiB,eAAgBriB,IAAAA,SAElBghB,OAAQhhB,IAAAA,OAAiBC,WACzBuP,iCAAkCxP,IAAAA,KAAeC,WACjD6gB,kBAAmB9gB,IAAAA,KAAeC,WAClCuS,UAAWxS,IAAAA,KAAeC,WAC1BmhB,oBAAqBphB,IAAAA,KAAeC,YAGtC0gB,GAAsBlhB,aAAe,CACnCkP,cAAe,CAAC,8TCpOlB,QAd2B,SAAC3S,GAW1B,OAAOnB,EAAAA,cAACynB,EAAAA,EAAS9jB,EAAA,GAAKxC,EAAK,CAAEumB,YATT,SAAHnoB,GAAA,IAAMY,EAASZ,EAATY,UAAckN,+WAAUjM,CAAA7B,EAAA8B,GAAA,OAC7CrB,EAAAA,cAACa,EAAAA,EAAa8C,EAAA,GACR0J,EAAU,CACd1N,KAAM0N,EAAWiC,GACjBnP,UAAS,aAAAP,OAAeO,GAAa,IACrCwnB,gBAAgB,iBAChB,IAIN,iDCOA,QAxB0B,CACxBC,QAAS,UACTC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,OAAQ,SACRC,QAAS,UACTC,SAAU,WACVC,OAAQ,SACRC,SAAU,WACVC,SAAU,WACVC,QAAS,UACTC,MAAO,QACPC,WAAY,aACZvL,UAAW,YACXwL,KAAM,OACNC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZ5L,iBAAkB,mBAClB6L,SAAU,WACVC,SAAU,6FCfC/U,EAAoB,SAAC4C,EAAmBoS,EAAe1N,GAAmB,OACrF1E,IAAsBoS,IAClB1N,EAAoB4C,SAASpB,EAAAA,EAAamM,mBAC3C3N,EAAoB4C,SAASpB,EAAAA,EAAaoM,eAAe,EAEjDrM,EAAW,SAACsM,EAA6BC,GAAQ,OAC5DD,aAA2B,EAA3BA,EAA6BjL,SAASkL,EAAS,EAEpCC,EAA0B,SAAC/N,GAAmB,OACzDuB,EAASvB,EAAqBwB,EAAAA,EAAawM,gBACxCzM,EAASvB,EAAqBwB,EAAAA,EAAayM,WAAW,m/CCT3D,IAAMxa,EAAc,SAAC3N,GACnB,IACEif,EAOEjf,EAPFif,UAASmJ,EAOPpoB,EANFgf,YACeqJ,EAAWD,EAAxBva,YACAC,EAAoBsa,EAApBta,qBACAlB,EAAcwb,EAAdxb,eAAc0b,EAAAF,EACdlc,WAAAA,OAAU,IAAAoc,EAAG,CAAEtpB,UAAW,uBAAuBspB,EAG/CC,EAAc3b,EAAiBA,EAAe5M,GAAS,CAAC,EACxDwoB,EAAIrd,EAAAA,EAAA,GAAQe,GAAeqc,GAEjC,OACE1pB,EAAAA,cAAA,SAAA2D,EAAA,CACE3F,KAAK,SACLyN,IAAK2U,GACDuJ,EAAI,CACRxpB,UAAS,4BAAAP,OAA8B+pB,EAAKxpB,aAEpB,iBAAhBqpB,EACNxpB,EAAAA,cAACC,EAAAA,QAAO,CACNC,KACEspB,GACExpB,EAAAA,cAACqQ,EAAAA,EAAS,CACRf,GAAIka,EACJtc,eAAgB+B,IAItB7O,MAAM,cACNwpB,MAAM,OACNC,MAAM,MACNC,SAAS,MACTC,UAAU,MAET,IACD/pB,EAAAA,cAACqQ,EAAAA,EAAS,CAACf,GAAIka,EAAatc,eAAgB+B,KAG9CjP,EAAAA,cAACwpB,EAAW,MAIpB,EAEA,UAEA1a,EAAY5J,UAAY,CACtBkb,UAAWjb,IAAAA,OAAiBC,WAC5B+a,YAAahb,IAAAA,MAAgB,CAC3B4I,eAAgB5I,IAAAA,OACfC","sources":["webpack://openboxes/./node_modules/js-file-download/file-download.js","webpack://openboxes/./src/js/components/product-select/ProductSelect.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/request/AddItemsPage.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/request/CreateStockMovement.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/StockMovementRequest.jsx","webpack://openboxes/./src/js/components/form-elements/ProductSelectField.jsx","webpack://openboxes/./src/js/consts/requisitionStatus.js","webpack://openboxes/./src/js/utils/supportedActivitiesUtils.js","webpack://openboxes/./src/js/components/form-elements/ButtonField.jsx"],"sourcesContent":["module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Tooltip } from \"react-tippy\";\n\nimport { debounceProductsFetch } from \"utils/option-utils\";\nimport renderHandlingIcons from \"utils/product-handling-icons\";\nimport Select from \"utils/Select\";\n\nconst productOptionLabel = ({ productCode, displayName, displayNames, name }) =>\n  `${productCode} - ${displayName || displayNames?.default || name}`;\n\nconst Option = (option) => (\n  <Tooltip\n    html={<div className=\"text-truncate\">{option.name}</div>}\n    theme=\"transparent\"\n    disabled={!(option.displayName || option.displayNames?.default)}\n    position=\"top-start\"\n  >\n    <strong\n      style={{ color: option.color || \"black\" }}\n      className=\"d-flex align-items-center\"\n    >\n      {option.label || productOptionLabel(option)}\n      &nbsp;\n      {renderHandlingIcons(option.handlingIcons)}\n    </strong>\n  </Tooltip>\n);\n\nconst SelectedValue = (option) => (\n  <span className=\"d-flex align-items-center\">\n    <span\n      style={{ color: option.showSelectedOptionColor && option.color }}\n      className=\"text-truncate\"\n    >\n      {option.label || productOptionLabel(option)}\n    </span>\n    {renderHandlingIcons(option?.handlingIcons)}\n  </span>\n);\n\nconst ProductSelect = ({\n  onExactProductSelected,\n  locationId,\n  fieldRef,\n  includeUom,\n  ...props\n}) => {\n  const selectRef = useRef(null);\n  const [isExactMatch, setIsExactMatch] = useState(false);\n  const [loadedOptions, setLoadedOptions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const { debounceTime, minSearchLength } = useSelector((state) => ({\n    debounceTime: state.session.searchConfig.debounceTime,\n    minSearchLength: state.session.searchConfig.minSearchLength,\n  }));\n\n  const debouncedProductsFetch = debounceProductsFetch(\n    debounceTime,\n    minSearchLength,\n    locationId,\n    { includeUom },\n  );\n\n  const onEnterPress = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setIsExactMatch(true);\n  };\n\n  useEffect(() => {\n    if (isExactMatch && loadedOptions.length && searchTerm) {\n      const exactMatches = loadedOptions.filter(\n        (product) => product.exactMatch,\n      );\n      let exactMatchProduct = null;\n\n      if (exactMatches.length === 1) {\n        [exactMatchProduct] = exactMatches;\n      } else if (exactMatches.length > 1) {\n        // if there are more than one exact match\n        // then select one that matches productCode with search string\n        const matchedByProductCode = exactMatches.find(\n          ({ productCode }) => productCode === searchTerm,\n        );\n        if (matchedByProductCode) exactMatchProduct = matchedByProductCode;\n      }\n\n      if (exactMatchProduct) {\n        selectRef.current.select.select.setValue(exactMatchProduct);\n      }\n      if (onExactProductSelected) {\n        /* There are cases when we want to call this callback right after the state change.\n         * Wrapping this callback inside a setTimeout puts it in an event que just like the setState\n         * unlike the regular code which is being executed immediately. */\n        setTimeout(\n          () => onExactProductSelected({ product: exactMatchProduct }),\n          0,\n        );\n      }\n      setIsExactMatch(false);\n      setLoadedOptions([]);\n    }\n  }, [isExactMatch, loadedOptions, searchTerm]);\n\n  const loadProductOptions = (searchString, callback) =>\n    debouncedProductsFetch(searchString, (resultOptions) => {\n      setLoadedOptions(resultOptions);\n      setSearchTerm(searchString);\n      callback(resultOptions);\n    });\n\n  return (\n    <Select\n      {...props}\n      fieldRef={(el) => {\n        selectRef.current = el;\n        if (fieldRef) fieldRef(el);\n      }}\n      async\n      options={[]}\n      loadOptions={props.loadOptions || loadProductOptions}\n      onMenuClose={() => {\n        setLoadedOptions([]);\n        setSearchTerm(\"\");\n      }}\n      filterOption={(item) => item}\n      onEnterPress={onEnterPress}\n      optionRenderer={Option}\n      valueRenderer={SelectedValue}\n    />\n  );\n};\n\nProductSelect.defaultProps = {\n  className: \"text-left\",\n  openOnClick: true,\n  autoload: true,\n  cache: false,\n  showValueTooltip: true,\n  onExactProductSelected: undefined,\n  fieldRef: undefined,\n  loadOptions: undefined,\n  includeUom: false,\n};\n\nProductSelect.propTypes = {\n  className: PropTypes.string,\n  openOnClick: PropTypes.bool,\n  autoload: PropTypes.bool,\n  cache: PropTypes.bool,\n  showValueTooltip: PropTypes.bool,\n  locationId: PropTypes.string.isRequired,\n  onExactProductSelected: PropTypes.func,\n  fieldRef: PropTypes.func,\n  loadOptions: PropTypes.func,\n  includeUom: PropTypes.bool,\n};\n\nexport default ProductSelect;\n","import React, { Component } from \"react\";\n\nimport arrayMutators from \"final-form-arrays\";\nimport update from \"immutability-helper\";\nimport fileDownload from \"js-file-download\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Alert from \"react-s-alert\";\n\nimport { fetchUsers, hideSpinner, showSpinner } from \"actions\";\nimport ArrayField from \"components/form-elements/ArrayField\";\nimport ButtonField from \"components/form-elements/ButtonField\";\nimport LabelField from \"components/form-elements/LabelField\";\nimport ProductSelectField from \"components/form-elements/ProductSelectField\";\nimport TextField from \"components/form-elements/TextField\";\nimport notification from \"components/Layout/notifications/notification\";\nimport ActivityCode from \"consts/activityCode\";\nimport { DASHBOARD_URL, STOCK_MOVEMENT_URL } from \"consts/applicationUrls\";\nimport NotificationType from \"consts/notificationTypes\";\nimport RequisitionStatus from \"consts/requisitionStatus\";\nimport apiClient from \"utils/apiClient\";\nimport { renderFormField } from \"utils/form-utils\";\nimport { isRequestFromWard, supports } from \"utils/supportedActivitiesUtils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nfunction addButton({\n  // eslint-disable-next-line react/prop-types\n  addRow,\n  getSortOrder,\n  newItemAdded,\n  updateTotalCount,\n}) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-outline-success btn-xs\"\n      onClick={() => {\n        updateTotalCount(1);\n        addRow({ sortOrder: getSortOrder() });\n        newItemAdded();\n      }}\n    >\n      <span>\n        <i className=\"fa fa-plus pr-2\" />\n        <Translate\n          id=\"react.default.button.addLine.label\"\n          defaultMessage=\"Add line\"\n        />\n      </span>\n    </button>\n  );\n}\n\n// Used for util function to calculate quantityRequested for requests from wards\n// where quantityRequested is calculated by subtracting one of below from QOH\nconst RequestFromWardTypes = {\n  MANUAL: {\n    calculateQtyRequestedFrom: \"monthlyDemand\",\n  },\n  STOCKLIST_PUSH_TYPE: {\n    calculateQtyRequestedFrom: \"quantityAllowed\",\n  },\n  STOCKLIST_PULL_TYPE: {\n    calculateQtyRequestedFrom: \"demandPerReplenishmentPeriod\",\n  },\n};\n\nconst FIELDS = {\n  product: {\n    type: ProductSelectField,\n    label: \"react.stockMovement.requestedProduct.label\",\n    defaultMessage: \"Requested product\",\n    headerAlign: \"left\",\n    flexWidth: \"9\",\n    attributes: {\n      showSelectedOptionColor: true,\n      includeUom: true,\n    },\n  },\n  quantityOnHand: {\n    type: LabelField,\n    label: \"react.stockMovement.quantityOnHand.label\",\n    defaultMessage: \"QoH\",\n    flexWidth: \"1.7\",\n    attributes: {\n      type: \"number\",\n    },\n  },\n  quantityOnHandAtRequestSite: {\n    type: TextField,\n    flexWidth: \"1.7\",\n    label: \"react.stockMovement.quantityOnHandAtRequestSite.label\",\n    defaultMessage: \"QOH at Request Site\",\n    attributes: {\n      type: \"number\",\n    },\n  },\n  quantityAvailable: {\n    type: LabelField,\n    label: \"react.stockMovement.available.label\",\n    defaultMessage: \"Available\",\n    flexWidth: \"1.7\",\n    attributes: {\n      type: \"number\",\n    },\n  },\n  quantityAllowed: {\n    type: LabelField,\n    label: \"react.stockMovement.maxQuantity.label\",\n    defaultMessage: \"Max Qty\",\n    flexWidth: \"1.7\",\n    attributes: {\n      type: \"number\",\n    },\n  },\n  monthlyDemand: {\n    type: LabelField,\n    label: \"react.stockMovement.demandPerMonth.label\",\n    defaultMessage: \"Demand per Month\",\n    flexWidth: \"1.7\",\n    attributes: {\n      type: \"number\",\n    },\n  },\n  quantityRequested: {\n    type: TextField,\n    label: \"react.stockMovement.neededQuantity.label\",\n    defaultMessage: \"Needed Qty\",\n    flexWidth: \"1.7\",\n    attributes: {\n      type: \"number\",\n    },\n  },\n  comments: {\n    type: TextField,\n    label: \"react.stockMovement.comments.label\",\n    defaultMessage: \"Comments\",\n    flexWidth: \"1.7\",\n    getDynamicAttr: ({\n      addRow,\n      rowCount,\n      rowIndex,\n      getSortOrder,\n      updateTotalCount,\n      updateRow,\n      values,\n    }) => ({\n      onTabPress:\n        rowCount === rowIndex + 1\n          ? () => {\n              updateTotalCount(1);\n              addRow({ sortOrder: getSortOrder() });\n            }\n          : null,\n      arrowRight:\n        rowCount === rowIndex + 1\n          ? () => {\n              updateTotalCount(1);\n              addRow({ sortOrder: getSortOrder() });\n            }\n          : null,\n      arrowDown:\n        rowCount === rowIndex + 1\n          ? () => () => {\n              updateTotalCount(1);\n              addRow({ sortOrder: getSortOrder() });\n            }\n          : null,\n      onBlur: () => updateRow(values, rowIndex),\n    }),\n  },\n  demandPerReplenishmentPeriod: {\n    type: LabelField,\n    label: \"react.stockMovement.demandPerReplenishmentPeriod.label\",\n    defaultMessage: \"Demand per Replenishment Period\",\n    flexWidth: \"1.7\",\n    attributes: {\n      type: \"number\",\n    },\n  },\n  demandPerRequestPeriod: {\n    type: LabelField,\n    label: \"react.stockMovement.demandPerRequestPeriod.label\",\n    defaultMessage: \"Demand per Request Period\",\n    flexWidth: \"1.7\",\n    attributes: {\n      type: \"number\",\n    },\n  },\n};\n\nconst DELETE_BUTTON_FIELD = {\n  type: ButtonField,\n  label: \"react.default.button.delete.label\",\n  defaultMessage: \"Delete\",\n  flexWidth: \"1\",\n  fieldKey: \"\",\n  buttonLabel: \"react.default.button.delete.label\",\n  buttonDefaultMessage: \"Delete\",\n  getDynamicAttr: ({\n    fieldValue,\n    removeItem,\n    removeRow,\n    updateTotalCount,\n  }) => ({\n    onClick:\n      fieldValue && fieldValue.id\n        ? () => {\n            removeItem(fieldValue.id).then(() => {\n              updateTotalCount(-1);\n              removeRow();\n            });\n          }\n        : () => {\n            updateTotalCount(-1);\n            removeRow();\n          },\n  }),\n  attributes: {\n    className: \"btn btn-outline-danger\",\n  },\n};\n\nconst LINE_ITEMS_ATTR = {\n  type: ArrayField,\n  arrowsNavigation: true,\n  virtualized: true,\n  totalCount: ({ totalCount }) => totalCount,\n  isRowLoaded: ({ isRowLoaded }) => isRowLoaded,\n  loadMoreRows: ({ loadMoreRows }) => loadMoreRows(),\n  isFirstPageLoaded: ({ isFirstPageLoaded }) => isFirstPageLoaded,\n  addButton,\n};\n\nconst NO_STOCKLIST_FIELDS = {\n  lineItems: {\n    ...LINE_ITEMS_ATTR,\n    fields: {\n      product: {\n        ...FIELDS.product,\n        fieldKey: \"\",\n        flexWidth: \"9.5\",\n        getDynamicAttr: ({\n          rowIndex,\n          rowCount,\n          updateProductData,\n          values,\n          originId,\n          focusField,\n        }) => ({\n          onChange: (value) => updateProductData(value, values, rowIndex),\n          autoFocus: rowIndex === rowCount - 1,\n          locationId: originId,\n          onExactProductSelected: ({ product }) => {\n            if (focusField && product) {\n              focusField(rowIndex, \"quantityRequested\");\n            }\n          },\n        }),\n      },\n      quantityOnHand: FIELDS.quantityOnHand,\n      quantityAvailable: FIELDS.quantityAvailable,\n      monthlyDemand: FIELDS.monthlyDemand,\n      quantityRequested: {\n        ...FIELDS.quantityRequested,\n        flexWidth: \"2.5\",\n        fieldKey: \"\",\n        getDynamicAttr: ({ updateRow, values, rowIndex }) => ({\n          onBlur: () => updateRow(values, rowIndex),\n        }),\n      },\n      comments: FIELDS.comments,\n      deleteButton: DELETE_BUTTON_FIELD,\n    },\n  },\n};\n\nconst STOCKLIST_FIELDS_PUSH_TYPE = {\n  lineItems: {\n    ...LINE_ITEMS_ATTR,\n    fields: {\n      product: {\n        ...FIELDS.product,\n        fieldKey: \"disabled\",\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          rowCount,\n          newItem,\n          originId,\n          focusField,\n        }) => ({\n          locationId: originId,\n          disabled: !!fieldValue,\n          autoFocus: newItem && rowIndex === rowCount - 1,\n          onExactProductSelected: ({ product }) => {\n            if (focusField && product) {\n              focusField(rowIndex, \"quantityRequested\");\n            }\n          },\n        }),\n      },\n      quantityAllowed: FIELDS.quantityAllowed,\n      quantityOnHand: FIELDS.quantityOnHand,\n      quantityAvailable: FIELDS.quantityAvailable,\n      quantityRequested: {\n        ...FIELDS.quantityRequested,\n        getDynamicAttr: ({ rowIndex, values, updateRow }) => ({\n          onBlur: () => updateRow(values, rowIndex),\n        }),\n      },\n      comments: FIELDS.comments,\n      deleteButton: DELETE_BUTTON_FIELD,\n    },\n  },\n};\n\nconst STOCKLIST_FIELDS_PULL_TYPE = {\n  lineItems: {\n    ...LINE_ITEMS_ATTR,\n    fields: {\n      product: {\n        ...FIELDS.product,\n        fieldKey: \"disabled\",\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          rowCount,\n          newItem,\n          originId,\n          focusField,\n        }) => ({\n          locationId: originId,\n          disabled: !!fieldValue,\n          autoFocus: newItem && rowIndex === rowCount - 1,\n          onExactProductSelected: ({ product }) => {\n            if (focusField && product) {\n              focusField(rowIndex, \"quantityRequested\");\n            }\n          },\n        }),\n      },\n      demandPerReplenishmentPeriod: FIELDS.demandPerReplenishmentPeriod,\n      quantityOnHand: FIELDS.quantityOnHand,\n      quantityAvailable: FIELDS.quantityAvailable,\n      quantityRequested: FIELDS.quantityRequested,\n      comments: FIELDS.comments,\n      deleteButton: DELETE_BUTTON_FIELD,\n    },\n  },\n};\n\nconst REQUEST_FROM_WARD_STOCKLIST_FIELDS_PUSH_TYPE = {\n  lineItems: {\n    ...LINE_ITEMS_ATTR,\n    fields: {\n      product: {\n        ...FIELDS.product,\n        fieldKey: \"disabled\",\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          rowCount,\n          newItem,\n          originId,\n          focusField,\n        }) => ({\n          locationId: originId,\n          disabled: !!fieldValue,\n          autoFocus: newItem && rowIndex === rowCount - 1,\n          onExactProductSelected: ({ product }) => {\n            if (focusField && product) {\n              focusField(rowIndex, \"quantityOnHand\");\n            }\n          },\n        }),\n      },\n      quantityAllowed: {\n        ...FIELDS.quantityAllowed,\n        headerTooltip: \"react.stockMovement.tooltip.maxQuantity.label\",\n        headerAlign: \"right\",\n        attributes: {\n          ...FIELDS.quantityAllowed.attributes,\n          cellClassName: \"text-right\",\n        },\n      },\n      quantityOnHand: {\n        ...FIELDS.quantityOnHand,\n        type: TextField,\n        headerTooltip: \"react.stockMovement.tooltip.quantityOnHand.label\",\n        headerAlign: \"right\",\n        attributes: {\n          ...FIELDS.quantityOnHand.attributes,\n          cellClassName: \"text-right\",\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          values,\n          updateRow,\n          calculateQtyRequested,\n        }) => ({\n          onBlur: () => {\n            const valuesWithUpdatedQtyRequested = calculateQtyRequested(\n              values,\n              rowIndex,\n              fieldValue,\n              RequestFromWardTypes.STOCKLIST_PUSH_TYPE,\n            );\n            updateRow(valuesWithUpdatedQtyRequested, rowIndex);\n          },\n        }),\n      },\n      quantityRequested: {\n        ...FIELDS.quantityRequested,\n        headerAlign: \"right\",\n        required: true,\n        headerTooltip: \"react.stockMovement.tooltip.quantityRequested.label\",\n        attributes: {\n          ...FIELDS.quantityRequested.attributes,\n          cellClassName: \"text-right\",\n        },\n        getDynamicAttr: ({ rowIndex, values, updateRow }) => ({\n          onBlur: () => updateRow(values, rowIndex),\n        }),\n      },\n      comments: {\n        ...FIELDS.comments,\n        headerTooltip: \"react.stockMovement.tooltip.comments.label\",\n        headerAlign: \"left\",\n        attributes: {\n          ...FIELDS.comments.attributes,\n          cellClassName: \"text-left\",\n        },\n      },\n      deleteButton: DELETE_BUTTON_FIELD,\n    },\n  },\n};\n\nconst REQUEST_FROM_WARD_STOCKLIST_FIELDS_PULL_TYPE = {\n  lineItems: {\n    ...LINE_ITEMS_ATTR,\n    fields: {\n      product: {\n        ...FIELDS.product,\n        fieldKey: \"disabled\",\n        flexWidth: \"2\",\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          rowCount,\n          newItem,\n          originId,\n          focusField,\n        }) => ({\n          locationId: originId,\n          disabled: !!fieldValue,\n          autoFocus: newItem && rowIndex === rowCount - 1,\n          onExactProductSelected: ({ product }) => {\n            if (focusField && product) {\n              focusField(rowIndex, \"quantityOnHand\");\n            }\n          },\n        }),\n      },\n      demandPerReplenishmentPeriod: {\n        type: LabelField,\n        label: \"react.stockMovement.demandPerRequestPeriod.label\",\n        defaultMessage: \"Demand per Request Period\",\n        flexWidth: \"1\",\n        headerAlign: \"right\",\n        headerTooltip:\n          \"react.stockMovement.demandPerRequestPeriod.headerTooltip.label\",\n        headerDefaultTooltip:\n          \"The average of your previous requests for this product.\",\n        attributes: {\n          type: \"number\",\n          className: \"text-right\",\n        },\n      },\n      quantityOnHand: {\n        ...FIELDS.quantityOnHandAtRequestSite,\n        label: \"react.stockMovement.quantityOnHand.label\",\n        defaultMessage: \"QOH\",\n        flexWidth: \"0.6\",\n        headerAlign: \"right\",\n        headerTooltip: \"react.stockMovement.quantityOnHand.headerTooltip.label\",\n        headerDefaultTooltip:\n          \"Enter your current quantity on hand for this product\",\n        attributes: {\n          type: \"number\",\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          values,\n          updateRow,\n          calculateQtyRequested,\n        }) => ({\n          onBlur: () => {\n            const valuesWithUpdatedQtyRequested = calculateQtyRequested(\n              values,\n              rowIndex,\n              fieldValue,\n              RequestFromWardTypes.STOCKLIST_PULL_TYPE,\n            );\n            updateRow(valuesWithUpdatedQtyRequested, rowIndex);\n          },\n        }),\n      },\n      quantityRequested: {\n        type: TextField,\n        label: \"react.stockMovement.neededQuantity.label\",\n        defaultMessage: \"Needed Qty\",\n        flexWidth: \"0.6\",\n        required: true,\n        headerAlign: \"right\",\n        headerTooltip:\n          \"react.stockMovement.quantityRequested.headerTooltip.label\",\n        headerDefaultTooltip:\n          \"Your demand for the request period minus your QOH. Edit as needed.\",\n        attributes: {\n          type: \"number\",\n        },\n        getDynamicAttr: ({ rowIndex, values, updateRow }) => ({\n          onBlur: () => updateRow(values, rowIndex),\n        }),\n      },\n      comments: {\n        type: TextField,\n        label: \"react.stockMovement.comments.label\",\n        defaultMessage: \"Comments\",\n        flexWidth: \"1.6\",\n        headerAlign: \"left\",\n        headerTooltip: \"react.stockMovement.comments.headerTooltip.label\",\n        headerDefaultTooltip:\n          \"Leave a comment for the person who will review this request.\",\n        getDynamicAttr: ({\n          addRow,\n          rowCount,\n          rowIndex,\n          getSortOrder,\n          updateTotalCount,\n          updateRow,\n          values,\n        }) => ({\n          onTabPress:\n            rowCount === rowIndex + 1\n              ? () => {\n                  updateTotalCount(1);\n                  addRow({ sortOrder: getSortOrder() });\n                }\n              : null,\n          arrowRight:\n            rowCount === rowIndex + 1\n              ? () => {\n                  updateTotalCount(1);\n                  addRow({ sortOrder: getSortOrder() });\n                }\n              : null,\n          arrowDown:\n            rowCount === rowIndex + 1\n              ? () => () => {\n                  updateTotalCount(1);\n                  addRow({ sortOrder: getSortOrder() });\n                }\n              : null,\n          onBlur: () => updateRow(values, rowIndex),\n        }),\n      },\n      deleteButton: DELETE_BUTTON_FIELD,\n    },\n  },\n};\n\nconst REQUEST_FROM_WARD_FIELDS = {\n  lineItems: {\n    ...LINE_ITEMS_ATTR,\n    fields: {\n      product: {\n        ...FIELDS.product,\n        fieldKey: \"disabled\",\n        flexWidth: \"2.4\",\n        getDynamicAttr: ({\n          rowIndex,\n          rowCount,\n          updateProductData,\n          values,\n          newItem,\n          originId,\n          focusField,\n        }) => ({\n          locationId: originId,\n          onChange: (value) => updateProductData(value, values, rowIndex),\n          autoFocus: newItem && rowIndex === rowCount - 1,\n          onExactProductSelected: ({ product }) => {\n            if (focusField && product) {\n              focusField(rowIndex, \"quantityOnHand\");\n            }\n          },\n        }),\n      },\n      monthlyDemand: {\n        type: LabelField,\n        label: \"react.stockMovement.demandPerMonth.label\",\n        defaultMessage: \"Demand per Month\",\n        headerAlign: \"right\",\n        flexWidth: \"0.8\",\n        headerTooltip:\n          \"react.stockMovement.demandPerRequestPeriod.headerTooltip.label\",\n        headerDefaultTooltip:\n          \"The average of your previous requests for this product.\",\n        attributes: {\n          type: \"number\",\n          className: \"text-right\",\n        },\n      },\n      quantityOnHand: {\n        type: TextField,\n        label: \"react.stockMovement.quantityOnHand.label\",\n        defaultMessage: \"QOH\",\n        flexWidth: \"0.6\",\n        headerAlign: \"right\",\n        headerTooltip: \"react.stockMovement.quantityOnHand.headerTooltip.label\",\n        headerDefaultTooltip:\n          \"Enter your current quantity on hand for this product\",\n        attributes: {\n          type: \"number\",\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          values,\n          updateRow,\n          calculateQtyRequested,\n        }) => ({\n          onBlur: () => {\n            const valuesWithUpdatedQtyRequested = calculateQtyRequested(\n              values,\n              rowIndex,\n              fieldValue,\n              RequestFromWardTypes.MANUAL,\n            );\n            updateRow(valuesWithUpdatedQtyRequested, rowIndex);\n          },\n        }),\n      },\n      quantityRequested: {\n        type: TextField,\n        label: \"react.stockMovement.neededQuantity.label\",\n        defaultMessage: \"Needed Qty\",\n        flexWidth: \"0.6\",\n        required: true,\n        headerAlign: \"right\",\n        headerTooltip:\n          \"react.stockMovement.quantityRequested.headerTooltip.label\",\n        headerDefaultTooltip:\n          \"Your demand for the request period minus your QOH. Edit as needed.\",\n        attributes: {\n          type: \"number\",\n        },\n        getDynamicAttr: ({ rowIndex, values, updateRow }) => ({\n          onBlur: () => updateRow(values, rowIndex),\n        }),\n      },\n      comments: {\n        type: TextField,\n        label: \"react.stockMovement.comments.label\",\n        defaultMessage: \"Comments\",\n        flexWidth: \"2.4\",\n        headerAlign: \"left\",\n        headerTooltip: \"react.stockMovement.comments.headerTooltip.label\",\n        headerDefaultTooltip:\n          \"Leave a comment for the person who will review this request.\",\n        getDynamicAttr: ({\n          addRow,\n          rowCount,\n          rowIndex,\n          getSortOrder,\n          updateTotalCount,\n          updateRow,\n          values,\n        }) => ({\n          onTabPress:\n            rowCount === rowIndex + 1\n              ? () => {\n                  updateTotalCount(1);\n                  addRow({ sortOrder: getSortOrder() });\n                }\n              : null,\n          arrowRight:\n            rowCount === rowIndex + 1\n              ? () => {\n                  updateTotalCount(1);\n                  addRow({ sortOrder: getSortOrder() });\n                }\n              : null,\n          arrowDown:\n            rowCount === rowIndex + 1\n              ? () => () => {\n                  updateTotalCount(1);\n                  addRow({ sortOrder: getSortOrder() });\n                }\n              : null,\n          onBlur: () => updateRow(values, rowIndex),\n        }),\n      },\n      deleteButton: DELETE_BUTTON_FIELD,\n    },\n  },\n};\n\nconst REPLENISHMENT_TYPE_PULL = \"PULL\";\n\nfunction calculateQuantityRequested(values, rowIndex, fieldValue, requestType) {\n  const valuesWithUpdatedQtyRequested = values;\n  const lineItem = valuesWithUpdatedQtyRequested.lineItems[rowIndex];\n  // Options: quantityAllowed, demandPerReplenishmentPeriod, monthlyDemand\n  // depending on request from ward type: stocklist push, stocklist pull, manual respectively\n  const baseValue = lineItem[requestType.calculateQtyRequestedFrom];\n  if (baseValue && fieldValue) {\n    const value = baseValue - fieldValue;\n    valuesWithUpdatedQtyRequested.lineItems[rowIndex].quantityRequested =\n      value >= 0 ? value : 0;\n  }\n  return valuesWithUpdatedQtyRequested;\n}\n\n/**\n * The second step of stock movement where user can add items to stock list.\n * This component supports three different cases: with or without stocklist\n * when movement is from a depot and when movement is from a vendor.\n */\nclass AddItemsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentLineItems: [],\n      sortOrder: 0,\n      values: { ...this.props.initialValues, lineItems: [] },\n      newItem: false,\n      totalCount: 0,\n      isFirstPageLoaded: false,\n      isRequestFromWard: false,\n    };\n\n    this.props.showSpinner();\n    this.removeItem = this.removeItem.bind(this);\n    this.importTemplate = this.importTemplate.bind(this);\n    this.getSortOrder = this.getSortOrder.bind(this);\n    this.confirmSave = this.confirmSave.bind(this);\n    this.confirmTransition = this.confirmTransition.bind(this);\n    this.newItemAdded = this.newItemAdded.bind(this);\n    this.validate = this.validate.bind(this);\n    this.isRowLoaded = this.isRowLoaded.bind(this);\n    this.loadMoreRows = this.loadMoreRows.bind(this);\n    this.updateTotalCount = this.updateTotalCount.bind(this);\n    this.updateRow = this.updateRow.bind(this);\n    this.updateProductData = this.updateProductData.bind(this);\n    this.submitRequest = this.submitRequest.bind(this);\n    this.calculateQuantityRequested = calculateQuantityRequested.bind(this);\n    this.cancelRequest = this.cancelRequest.bind(this);\n    this.save = this.save.bind(this);\n    this.saveAndExit = this.saveAndExit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.stockMovementTranslationsFetched) {\n      this.dataFetched = true;\n\n      this.fetchAllData();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.stockMovementTranslationsFetched && !this.dataFetched) {\n      this.dataFetched = true;\n\n      this.fetchAllData();\n    }\n  }\n\n  /**\n   * Returns proper fields depending on origin type or if stock list is chosen.\n   * @public\n   */\n  getFields() {\n    if (this.state.isRequestFromWard) {\n      if (_.get(this.state.values.stocklist, \"id\")) {\n        if (\n          _.get(this.state.values.replenishmentType, \"name\") ===\n          REPLENISHMENT_TYPE_PULL\n        ) {\n          return REQUEST_FROM_WARD_STOCKLIST_FIELDS_PULL_TYPE;\n        }\n        return REQUEST_FROM_WARD_STOCKLIST_FIELDS_PUSH_TYPE;\n      }\n      return REQUEST_FROM_WARD_FIELDS;\n    }\n\n    if (_.get(this.state.values.stocklist, \"id\")) {\n      if (\n        _.get(this.state.values.replenishmentType, \"name\") ===\n        REPLENISHMENT_TYPE_PULL\n      ) {\n        return STOCKLIST_FIELDS_PULL_TYPE;\n      }\n      return STOCKLIST_FIELDS_PUSH_TYPE;\n    }\n\n    return NO_STOCKLIST_FIELDS;\n  }\n\n  /**\n   * Returns an array of new stock movement's items and items to be\n   * updated (comparing to previous state of line items).\n   * @param {object} lineItems\n   * @public\n   */\n  getLineItemsToBeSaved(lineItems) {\n    // First find items that are new and should be added (don't have status code)\n    const lineItemsToBeAdded = _.filter(\n      lineItems,\n      (item) =>\n        !item.statusCode &&\n        item.quantityRequested &&\n        item.quantityRequested !== \"0\" &&\n        item.product,\n    );\n    // Then get a list of items that already exist in this request (have status code)\n    const lineItemsWithStatus = _.filter(lineItems, (item) => item.statusCode);\n    const lineItemsToBeUpdated = [];\n    // For each already existing items - find the ones that have changed\n    _.forEach(lineItemsWithStatus, (item) => {\n      const oldItem = _.find(\n        this.state.currentLineItems,\n        (old) => old.id === item.id,\n      );\n      const oldQty = parseInt(oldItem.quantityRequested, 10);\n      const newQty = parseInt(item.quantityRequested, 10);\n      const oldQtyOnHand = parseInt(oldItem.quantityOnHand, 10);\n      const newQtyOnHand = parseInt(newQty.quantityOnHand, 10);\n      // Intersection of keys common to both objects (excluding product key)\n      const keyIntersection = _.remove(\n        _.intersection(_.keys(oldItem), _.keys(item)),\n        (key) => key !== \"product\",\n      );\n\n      if (\n        (this.state.values.origin.type === \"SUPPLIER\" ||\n          !this.state.values.hasManageInventory) &&\n        (!_.isEqual(\n          _.pick(item, keyIntersection),\n          _.pick(oldItem, keyIntersection),\n        ) ||\n          item.product.id !== oldItem.product.id)\n      ) {\n        lineItemsToBeUpdated.push(item);\n      } else if (\n        newQty !== oldQty ||\n        !item.quantityRequested ||\n        (oldItem.comments !== item.comments && !_.isNil(item.comments)) ||\n        oldQtyOnHand !== newQtyOnHand\n      ) {\n        lineItemsToBeUpdated.push(item);\n      }\n    });\n\n    const mapPropertiesOfItemsToBeAdded = (item) => {\n      const itemQuantityCounted = item.quantityOnHand\n        ? { quantityCounted: parseInt(item.quantityOnHand, 10) }\n        : {};\n      return {\n        product: { id: item.product.id },\n        quantityRequested: item.quantityRequested,\n        sortOrder: item.sortOrder,\n        comments: !_.isNil(item.comments) ? item.comments : \"\",\n        ...itemQuantityCounted,\n      };\n    };\n\n    // Combine items to be added and items to be updated into one list to be saved\n    return [].concat(\n      _.map(lineItemsToBeAdded, mapPropertiesOfItemsToBeAdded),\n      _.map(lineItemsToBeUpdated, (item) => ({\n        id: item.id,\n        ...mapPropertiesOfItemsToBeAdded(item),\n      })),\n    );\n  }\n\n  getSortOrder() {\n    this.setState((prev) => ({\n      sortOrder: prev.sortOrder + 100,\n    }));\n\n    return this.state.sortOrder;\n  }\n\n  setLineItems(response, startIndex) {\n    const { data } = response.data;\n    let lineItemsData;\n\n    const isPullType =\n      _.get(this.state.values.replenishmentType, \"name\") ===\n      REPLENISHMENT_TYPE_PULL;\n    const isRequestOrigin =\n      this.props.currentLocationId === this.state.values.origin.id;\n\n    if (this.state.values.lineItems.length === 0 && !data.length) {\n      lineItemsData = new Array(1).fill({ sortOrder: 100 });\n    } else if (\n      this.state.isRequestFromWard &&\n      _.get(this.state.values.stocklist, \"id\")\n    ) {\n      lineItemsData = _.map(data, (val) => {\n        const {\n          quantityRequested,\n          demandPerReplenishmentPeriod,\n          quantityOnHand,\n          quantityAllowed,\n        } = val;\n\n        let qtyRequested = 0;\n        if (quantityRequested) qtyRequested = quantityRequested;\n        else if (isPullType)\n          qtyRequested = demandPerReplenishmentPeriod - quantityOnHand;\n        else qtyRequested = quantityAllowed;\n\n        return {\n          ...val,\n          quantityOnHand: val.quantityCounted,\n          disabled: true,\n          quantityRequested: qtyRequested >= 0 ? qtyRequested : 0,\n        };\n      });\n    } else if (isPullType) {\n      lineItemsData = _.map(data, (val) => {\n        const {\n          quantityRequested,\n          demandPerReplenishmentPeriod,\n          quantityAvailable,\n        } = val;\n        const qtyRequested =\n          quantityRequested || demandPerReplenishmentPeriod - quantityAvailable;\n        return {\n          ...val,\n          disabled: true,\n          quantityRequested: qtyRequested >= 0 ? qtyRequested : 0,\n          quantityOnHand:\n            this.state.isRequestFromWard || isRequestOrigin\n              ? val.quantityCounted\n              : val.quantityOnHand,\n        };\n      });\n    } else {\n      lineItemsData = _.map(data, (val) => ({\n        ...val,\n        disabled: true,\n        quantityOnHand:\n          this.state.isRequestFromWard || isRequestOrigin\n            ? val.quantityCounted\n            : val.quantityOnHand,\n      }));\n    }\n\n    const sortOrder = _.toInteger(_.last(lineItemsData).sortOrder) + 100;\n    this.setState(\n      (prev) => ({\n        currentLineItems: this.props.isPaginated\n          ? _.uniqBy(_.concat(prev.currentLineItems, data), \"id\")\n          : data,\n        values: {\n          ...prev.values,\n          lineItems: this.props.isPaginated\n            ? _.uniqBy(_.concat(prev.values.lineItems, lineItemsData), \"id\")\n            : lineItemsData,\n        },\n        sortOrder,\n      }),\n      () => {\n        if (\n          !_.isNull(startIndex) &&\n          this.state.values.lineItems.length !== this.state.totalCount\n        ) {\n          this.loadMoreRows({ startIndex: startIndex + this.props.pageSize });\n        }\n        this.props.hideSpinner();\n      },\n    );\n  }\n\n  inactiveProductValidation({ lineItems, callback }) {\n    const printError = (\n      lineItem,\n      idx,\n    ) => `${idx + 1}: ${this.props.translate(\"react.stockMovement.product.label\", \"Product\")} ${lineItem?.productCode} \n      ${this.props.translate(\"react.stockMovement.product.inactive.validation.label\", \"has been discontinued. Please remove it from the requisition\")}`;\n    const inactiveProducts = lineItems\n      .filter((lineItem) => !lineItem.product?.active)\n      .map(printError);\n    if (inactiveProducts.length) {\n      return notification(NotificationType.ERROR_FILLED)({\n        message: this.props.translate(\n          \"react.default.error.validationError.label\",\n          \"Validation error\",\n        ),\n        detailsArray: inactiveProducts,\n      });\n    }\n    return callback();\n  }\n\n  updateTotalCount(value) {\n    this.setState((prev) => ({\n      totalCount: prev.totalCount + value === 0 ? 1 : prev.totalCount + value,\n    }));\n  }\n\n  updateRow(values, index) {\n    const item = values.lineItems[index];\n    this.setState({\n      values: update(values, {\n        lineItems: { [index]: { $set: item } },\n      }),\n    });\n  }\n\n  dataFetched = false;\n\n  validate(values) {\n    const errors = {};\n    errors.lineItems = [];\n    const date = moment(this.props.minimumExpirationDate, \"MM/DD/YYYY\");\n    _.forEach(values.lineItems, (item, key) => {\n      const rowErrors = {};\n      if (!_.isNil(item.product)) {\n        if (_.isNil(item.quantityRequested) || item.quantityRequested < 0) {\n          rowErrors.quantityRequested =\n            \"react.stockMovement.error.enterQuantity.label\";\n        }\n      }\n      if (!_.isEmpty(item.boxName) && _.isEmpty(item.palletName)) {\n        rowErrors.boxName = \"react.stockMovement.error.boxWithoutPallet.label\";\n      }\n      const dateRequested = moment(item.expirationDate, \"MM/DD/YYYY\");\n      if (date.diff(dateRequested) > 0) {\n        rowErrors.expirationDate =\n          \"react.stockMovement.error.invalidDate.label\";\n      }\n\n      if (this.state.isRequestFromWard) {\n        if (_.isNil(item.quantityRequested) || item.quantityRequested < 0) {\n          rowErrors.quantityRequested =\n            \"react.stockMovement.error.enterQuantity.label\";\n        }\n      }\n      if (!_.isEmpty(rowErrors)) {\n        errors.lineItems[key] = rowErrors;\n      }\n    });\n    return errors;\n  }\n\n  newItemAdded() {\n    this.setState({\n      newItem: true,\n    });\n  }\n\n  /**\n   * Exports current state of stock movement's to csv file.\n   * @param {object} formValues\n   * @public\n   */\n  exportTemplate(formValues) {\n    const lineItems = _.filter(\n      formValues.lineItems,\n      (item) => !_.isEmpty(item),\n    );\n\n    this.saveItemsAndExportTemplate(formValues, lineItems);\n  }\n\n  /**\n   * Exports current state of stock movement's to csv file.\n   * @param {object} formValues\n   * @param {object} lineItems\n   * @public\n   */\n  saveItemsAndExportTemplate(formValues, lineItems) {\n    const { movementNumber, stockMovementId } = formValues;\n    const url = `/stockMovement/exportCsv/${stockMovementId}`;\n    this.props.showSpinner();\n    return this.saveRequisitionItemsInCurrentStep(lineItems)\n      .then(() => {\n        apiClient.get(url, { responseType: \"blob\" }).then((response) => {\n          fileDownload(\n            response.data,\n            `ItemList${movementNumber ? `-${movementNumber}` : \"\"}.csv`,\n            \"text/csv\",\n          );\n          this.props.hideSpinner();\n        });\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Imports chosen file to backend and then fetches line items.\n   * @param {object} event\n   * @public\n   */\n  importTemplate(event) {\n    this.props.showSpinner();\n    const formData = new FormData();\n    const file = event.target.files[0];\n    const { stockMovementId } = this.state.values;\n\n    formData.append(\"importFile\", file.slice(0, file.size, \"text/csv\"));\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n\n    const url = `/stockMovement/importCsv/${stockMovementId}`;\n\n    return apiClient\n      .post(url, formData, config)\n      .then(() => {\n        this.setState((prev) => ({\n          values: {\n            ...prev.values,\n            lineItems: [],\n          },\n        }));\n        this.fetchLineItems();\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n      });\n  }\n\n  /**\n   * Shows save confirmation dialog.\n   * @param {function} onConfirm\n   * @public\n   */\n  confirmSave(onConfirm) {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.message.confirmSave.label\",\n        \"Confirm save\",\n      ),\n      message: this.state.isRequestFromWard\n        ? this.props.translate(\n            \"react.stockMovement.QOHWillNotBeSaved.message\",\n            \"If there are any empty or zero quantity lines, those lines will be deleted. Are you sure you want to proceed?\",\n          )\n        : this.props.translate(\n            \"react.stockMovement.confirmSave.message\",\n            \"Are you sure you want to save? There are some lines with empty or zero quantity, those lines will be deleted.\",\n          ),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: onConfirm,\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  }\n\n  /**\n   * Shows transition confirmation dialog if there are items with the same code.\n   * @param {function} onConfirm\n   * @param {object} items\n   * @public\n   */\n  confirmTransition(onConfirm, items) {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.confirmTransition.label\",\n        \"You have entered the same code twice. Do you want to continue?\",\n      ),\n      message: _.map(items, (item) => (\n        <p key={item.sortOrder}>\n          {`${item.product.productCode} ${item.product.displayNames?.default || item.product.name} ${item.quantityRequested}`}\n        </p>\n      )),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: onConfirm,\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  }\n\n  /**\n   * Fetches all required data.\n   * @param {boolean} forceFetch\n   * @public\n   */\n  fetchAllData() {\n    this.fetchAddItemsPageData();\n    if (!this.props.isPaginated) {\n      this.fetchLineItems();\n    } else if (this.state.isFirstPageLoaded) {\n      // Workaround for refetching items from scratch\n      // when the first page was already loaded and table is paginated\n      this.loadMoreRows({ startIndex: 0 });\n    }\n  }\n\n  /**\n   * Fetches 2nd step data from current stock movement.\n   * @public\n   */\n  fetchLineItems() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?stepNumber=2`;\n\n    return apiClient\n      .get(url)\n      .then((response) => {\n        this.setState(\n          {\n            totalCount: response.data.data.length,\n          },\n          () => this.setLineItems(response, null),\n        );\n      })\n      .catch((err) => err);\n  }\n\n  isRowLoaded({ index }) {\n    return !!this.state.values.lineItems[index];\n  }\n\n  /**\n   * Fetches stock movement's line items and sets them in redux form and in\n   * state as current line items.\n   * @public\n   */\n  fetchAddItemsPageData() {\n    this.props.showSpinner();\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}`;\n    apiClient\n      .get(url)\n      .then((resp) => {\n        const {\n          data: { hasManageInventory, statusCode },\n          totalCount,\n        } = resp.data;\n\n        this.setState((prev) => ({\n          values: {\n            ...prev.values,\n            hasManageInventory,\n            statusCode,\n          },\n          totalCount: totalCount === 0 ? 1 : totalCount,\n          isRequestFromWard: isRequestFromWard(\n            this.props.currentLocationId,\n            prev.values.destination.id,\n            this.props.supportedActivities,\n          ),\n        }));\n        this.props.hideSpinner();\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  loadMoreRows({ startIndex }) {\n    this.setState({\n      isFirstPageLoaded: true,\n    });\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?offset=${startIndex}&max=${this.props.pageSize}&stepNumber=2`;\n    apiClient.get(url).then((response) => {\n      this.setLineItems(response, startIndex);\n    });\n  }\n\n  /**\n   * Saves current stock movement progress (line items) and goes to the next stock movement step.\n   * @param {object} formValues\n   * @public\n   */\n  nextPage(formValues) {\n    const lineItems = _.filter(\n      formValues.lineItems,\n      (val) => !_.isEmpty(val) && val.product,\n    );\n\n    if (\n      _.some(\n        lineItems,\n        (item) => !item.quantityRequested || item.quantityRequested === \"0\",\n      )\n    ) {\n      this.confirmSave(() =>\n        this.checkDuplicatesSaveAndTransitionToNextStep(formValues, lineItems),\n      );\n    } else {\n      this.checkDuplicatesSaveAndTransitionToNextStep(formValues, lineItems);\n    }\n  }\n\n  checkDuplicatesSaveAndTransitionToNextStep(formValues, lineItems) {\n    const itemsMap = {};\n    _.forEach(lineItems, (item) => {\n      if (itemsMap[item.product.productCode]) {\n        itemsMap[item.product.productCode].push(item);\n      } else {\n        itemsMap[item.product.productCode] = [item];\n      }\n    });\n    const itemsWithSameCode = _.filter(itemsMap, (item) => item.length > 1);\n\n    if (\n      _.some(itemsMap, (item) => item.length > 1) &&\n      !(\n        this.state.values.origin.type === \"SUPPLIER\" ||\n        !this.state.values.hasManageInventory\n      )\n    ) {\n      this.confirmTransition(\n        () => this.saveAndTransitionToNextStep(formValues, lineItems),\n        _.reduce(itemsWithSameCode, (a, b) => a.concat(b), []),\n      );\n    } else {\n      this.saveAndTransitionToNextStep(formValues, lineItems);\n    }\n  }\n\n  /**\n   * Saves current stock movement progress (line items) and goes to the next stock movement step.\n   * @param {object} formValues\n   * @param {object} lineItems\n   * @public\n   */\n  saveAndTransitionToNextStep(formValues, lineItems) {\n    this.props.showSpinner();\n\n    if (\n      formValues.origin.type === \"SUPPLIER\" ||\n      !formValues.hasManageInventory\n    ) {\n      this.saveRequisitionItems(lineItems)\n        .then((resp) => {\n          let values = formValues;\n          if (resp) {\n            values = { ...formValues, lineItems: resp.data.data.lineItems };\n          }\n          this.transitionToNextStep(\"CHECKING\")\n            .then(() => {\n              this.props.nextPage(values);\n            })\n            .catch(() => this.props.hideSpinner());\n        })\n        .catch(() => this.props.hideSpinner());\n    } else {\n      this.saveRequisitionItems(lineItems)\n        .then((resp) => {\n          let values = formValues;\n          if (resp) {\n            values = { ...formValues, lineItems: resp.data.data.lineItems };\n          }\n          this.transitionToNextStep(\"VERIFYING\")\n            .then(() => {\n              this.props.nextPage(values);\n            })\n            .catch(() => this.props.hideSpinner());\n        })\n        .catch(() => this.props.hideSpinner());\n    }\n  }\n\n  /**\n   * Saves list of stock movement items with post method.\n   * @param {object} lineItems\n   * @public\n   */\n  saveRequisitionItems(lineItems) {\n    const itemsToSave = this.getLineItemsToBeSaved(lineItems);\n    const updateItemsUrl = `/api/stockMovements/${this.state.values.stockMovementId}/updateItems`;\n    const payload = {\n      id: this.state.values.stockMovementId,\n      lineItems: itemsToSave,\n    };\n\n    if (payload.lineItems.length) {\n      return apiClient\n        .post(updateItemsUrl, payload)\n        .then(() => this.fetchAddItemsPageData())\n        .catch(() =>\n          Promise.reject(\n            new Error(\"react.stockMovement.error.saveRequisitionItems.label\"),\n          ),\n        );\n    }\n\n    return Promise.resolve();\n  }\n\n  submitRequest(lineItems) {\n    const nonEmptyLineItems = _.filter(\n      lineItems,\n      (val) => !_.isEmpty(val) && val.product,\n    );\n    this.saveRequisitionItems(nonEmptyLineItems).then(() => {\n      if (\n        supports(\n          this.state.values.origin?.supportedActivities,\n          ActivityCode.APPROVE_REQUEST,\n        )\n      ) {\n        this.transitionToNextStep(RequisitionStatus.PENDING_APPROVAL);\n      } else {\n        this.transitionToNextStep(RequisitionStatus.REQUESTED);\n      }\n    });\n  }\n\n  /**\n   * Saves list of requisition items in current step (without step change). Used to export template.\n   * @param {object} itemCandidatesToSave\n   * @public\n   */\n  saveRequisitionItemsInCurrentStep(itemCandidatesToSave) {\n    const itemsToSave = this.getLineItemsToBeSaved(itemCandidatesToSave);\n    const updateItemsUrl = `/api/stockMovements/${this.state.values.stockMovementId}/updateItems`;\n    const payload = {\n      id: this.state.values.stockMovementId,\n      lineItems: itemsToSave,\n    };\n    if (payload.lineItems.length) {\n      return apiClient\n        .post(updateItemsUrl, payload)\n        .then(() =>\n          this.setState(\n            (prev) => ({\n              currentLineItems: [],\n              values: { ...prev.values, lineItems: [] },\n              sortOrder: 0,\n              newItem: false,\n              totalCount: 0,\n            }),\n            () => this.fetchAllData(),\n          ),\n        )\n        .catch(() =>\n          Promise.reject(\n            new Error(\n              this.props.translate(\n                \"react.stockMovement.error.saveRequisitionItems.label\",\n                \"Could not save requisition items\",\n              ),\n            ),\n          ),\n        );\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves list of requisition items in current step (without step change).\n   * @param {object} formValues\n   * @public\n   */\n  save(formValues) {\n    const lineItems = _.filter(\n      formValues.lineItems,\n      (item) => !_.isEmpty(item),\n    );\n    const zeroedLines = _.some(\n      lineItems,\n      (item) => !item.quantityRequested || item.quantityRequested === \"0\",\n    );\n    if (zeroedLines || this.state.isRequestFromWard) {\n      this.confirmSave(() => this.saveItems(lineItems));\n    } else {\n      this.saveItems(lineItems);\n    }\n  }\n\n  cancelRequest() {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.request.confirmCancellation.label\",\n        \"Confirm request cancellation\",\n      ),\n      message: this.props.translate(\n        \"react.stockMovement.request.confirmCancellation.message.label\",\n        \"Are you sure you want to delete current request ?\",\n      ),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: () => {\n            this.props.showSpinner();\n            apiClient\n              .delete(\n                `/api/stockMovements/${this.state.values.stockMovementId}`,\n              )\n              .then((response) => {\n                if (response.status === 204) {\n                  this.props.hideSpinner();\n                  Alert.success(\n                    this.props.translate(\n                      \"react.stockMovement.request.successfullyDeleted.label\",\n                      \"Request was successfully deleted\",\n                    ),\n                    { timeout: 3000 },\n                  );\n                  if (this.state.isRequestFromWard) {\n                    this.props.history.push(DASHBOARD_URL.base);\n                  } else {\n                    this.props.history.push(STOCK_MOVEMENT_URL.listInbound());\n                  }\n                }\n              })\n              .catch(() => this.props.hideSpinner());\n          },\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  }\n\n  /**\n   * Saves changes made by user in this step and redirects to the shipment view page\n   * @param {object} formValues\n   * @public\n   */\n  // eslint-disable-next-line consistent-return\n  saveAndExit(formValues) {\n    const saveAndRedirect = (lineItems) => {\n      this.props.showSpinner();\n      return this.saveRequisitionItemsInCurrentStep(lineItems)\n        .then(() => {\n          if (\n            !this.props.supportedActivities.includes(\"MANAGE_INVENTORY\") &&\n            this.props.supportedActivities.includes(\"SUBMIT_REQUEST\")\n          ) {\n            this.props.history.push(DASHBOARD_URL.base);\n          } else {\n            this.props.history.push(STOCK_MOVEMENT_URL.listInbound());\n          }\n        })\n        .catch(() => {\n          this.props.hideSpinner();\n        });\n    };\n    const errors = this.validate(formValues).lineItems;\n    if (!errors.length) {\n      const lineItems = _.filter(\n        formValues.lineItems,\n        (item) => !_.isEmpty(item),\n      );\n      const zeroedLines = _.some(\n        lineItems,\n        (item) => !item.quantityRequested || item.quantityRequested === \"0\",\n      );\n      if (zeroedLines || this.state.isRequestFromWard) {\n        this.confirmSave(() => {\n          saveAndRedirect(lineItems);\n        });\n      } else {\n        saveAndRedirect(lineItems);\n      }\n    } else {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.confirmExit.label\",\n          \"Confirm save\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmExit.message\",\n          \"Validation errors occurred. Are you sure you want to exit and lose unsaved data?\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n            onClick: () => {\n              if (\n                !this.props.supportedActivities.includes(\"MANAGE_INVENTORY\") &&\n                this.props.supportedActivities.includes(\"SUBMIT_REQUEST\")\n              ) {\n                this.props.history.push(DASHBOARD_URL.base);\n              } else {\n                this.props.history.push(STOCK_MOVEMENT_URL.listInbound());\n              }\n            },\n          },\n          {\n            label: this.props.translate(\"react.default.no.label\", \"No\"),\n          },\n        ],\n      });\n    }\n  }\n\n  /**\n   * Saves list of requisition items in current step (without step change).\n   * @param {object} lineItems\n   * @public\n   */\n  saveItems(lineItems) {\n    this.props.showSpinner();\n    return this.saveRequisitionItemsInCurrentStep(lineItems)\n      .then(() => {\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.stockMovement.alert.saveSuccess.label\",\n            \"Changes saved successfully\",\n          ),\n          { timeout: 3000 },\n        );\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n      });\n  }\n\n  /**\n   * Refetch the data, all not saved changes will be lost.\n   * @public\n   */\n  refresh() {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.message.confirmRefresh.label\",\n        \"Confirm refresh\",\n      ),\n      message: this.props.translate(\n        \"react.stockMovement.confirmRefresh.message\",\n        \"Are you sure you want to refresh? Your progress since last save will be lost.\",\n      ),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: () => this.fetchAllData(),\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  }\n\n  /**\n   * Removes chosen item from requisition's items list.\n   * @param {string} itemId\n   * @public\n   */\n  removeItem(itemId) {\n    const removeItemsUrl = `/api/stockMovementItems/${itemId}/removeItem`;\n\n    return apiClient.delete(removeItemsUrl).catch(() => {\n      this.props.hideSpinner();\n      return Promise.reject(\n        new Error(\"react.stockMovement.error.deleteRequisitionItem.label\"),\n      );\n    });\n  }\n\n  /**\n   * Removes all items from requisition's items list.\n   * @public\n   */\n  removeAll() {\n    const removeItemsUrl = `/api/stockMovements/${this.state.values.stockMovementId}/removeAllItems`;\n\n    return apiClient\n      .delete(removeItemsUrl)\n      .then(() => {\n        this.setState((prev) => ({\n          totalCount: 1,\n          currentLineItems: [],\n          values: {\n            ...prev.values,\n            lineItems: new Array(1).fill({ sortOrder: 100 }),\n          },\n        }));\n      })\n      .catch(() => {\n        this.fetchLineItems();\n        return Promise.reject(\n          new Error(\"react.stockMovement.error.deleteRequisitionItem.label\"),\n        );\n      });\n  }\n\n  /**\n   * Transition to next stock movement status:\n   * - 'CHECKING' if origin type is supplier.\n   * - 'VERIFYING' if origin type is other than supplier.\n   * @param {string} status\n   * @public\n   */\n  async transitionToNextStep(status) {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/status`;\n    const payload = { status };\n    const { movementNumber } = this.state.values;\n    if (this.state.values.statusCode === \"CREATED\") {\n      await apiClient.post(url, payload);\n    }\n    const translatedSubmitMessage = this.props.translate(\n      \"react.stockMovement.request.submitMessage.label\",\n      \"Thank you for submitting your request. You can check the status of your request using stock movement number\",\n    );\n    if (\n      !this.props.supportedActivities.includes(\"MANAGE_INVENTORY\") &&\n      this.props.supportedActivities.includes(\"SUBMIT_REQUEST\")\n    ) {\n      this.props.history.push(DASHBOARD_URL.base);\n    } else {\n      this.props.history.push(STOCK_MOVEMENT_URL.listInbound());\n    }\n    Alert.success(`${translatedSubmitMessage} ${movementNumber}`);\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves changes made by user in this step and go back to previous page\n   * @param {object} values\n   * @param {boolean} invalid\n   * @public\n   */\n  // eslint-disable-next-line consistent-return\n  previousPage(values, invalid) {\n    const saveAndRedirect = (lineItems) => {\n      this.props.showSpinner();\n      return this.saveRequisitionItemsInCurrentStep(lineItems)\n        .then(() => this.props.previousPage(values))\n        .catch(() => {\n          this.props.hideSpinner();\n        });\n    };\n    if (!invalid) {\n      const lineItems = _.filter(values.lineItems, (item) => !_.isEmpty(item));\n      const zeroedLines = _.some(\n        lineItems,\n        (item) => !item.quantityRequested || item.quantityRequested === \"0\",\n      );\n      if (zeroedLines || this.state.isRequestFromWard) {\n        this.confirmSave(() => {\n          saveAndRedirect(lineItems);\n        });\n      } else {\n        saveAndRedirect(lineItems);\n      }\n    } else {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.confirmPreviousPage.label\",\n          \"Validation error\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmPreviousPage.message.label\",\n          \"Cannot save due to validation error on page\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\n              \"react.stockMovement.confirmPreviousPage.correctError.label\",\n              \"Correct error\",\n            ),\n          },\n          {\n            label: this.props.translate(\n              \"react.stockMovement.confirmPreviousPage.continue.label\",\n              \"Continue (lose unsaved work)\",\n            ),\n            onClick: () => this.props.previousPage(values),\n          },\n        ],\n      });\n    }\n  }\n\n  updateProductData(product, values, index) {\n    if (product) {\n      if (this.state.isRequestFromWard) {\n        const url = `/api/products/${product.id}/productDemand?originId=${this.state.values.origin.id}&destinationId=${this.state.values.destination.id}`;\n\n        apiClient\n          .get(url)\n          .then((response) => {\n            const monthlyDemand = parseFloat(response.data.monthlyDemand);\n            const quantityRequested =\n              monthlyDemand - (response.data.quantityOnHand || 0);\n            this.setState({\n              values: update(values, {\n                lineItems: {\n                  [index]: {\n                    product: { $set: product },\n                    quantityOnHand: { $set: \"\" },\n                    monthlyDemand: { $set: monthlyDemand },\n                    quantityRequested: {\n                      $set: quantityRequested >= 0 ? quantityRequested : 0,\n                    },\n                  },\n                },\n              }),\n            });\n          })\n          .catch(this.props.hideSpinner());\n      } else {\n        const url = `/api/products/${product.id}/productAvailabilityAndDemand?locationId=${this.state.values.destination.id}`;\n\n        apiClient\n          .get(url)\n          .then((response) => {\n            const { monthlyDemand, quantityAvailable, quantityOnHand } =\n              response.data;\n            const quantityRequested =\n              monthlyDemand - quantityAvailable > 0\n                ? monthlyDemand - quantityAvailable\n                : 0;\n            this.setState({\n              values: update(values, {\n                lineItems: {\n                  [index]: {\n                    product: { $set: product },\n                    quantityOnHand: { $set: quantityOnHand },\n                    quantityAvailable: { $set: quantityAvailable },\n                    monthlyDemand: { $set: monthlyDemand },\n                    quantityRequested: { $set: quantityRequested },\n                  },\n                },\n              }),\n            });\n          })\n          .catch(this.props.hideSpinner());\n      }\n    } else {\n      this.setState({\n        values: update(values, {\n          lineItems: {\n            [index]: {\n              product: { $set: null },\n              quantityOnHand: { $set: \"\" },\n              quantityAvailable: { $set: \"\" },\n              monthlyDemand: { $set: \"\" },\n              quantityRequested: { $set: \"\" },\n            },\n          },\n        }),\n      });\n    }\n  }\n\n  render() {\n    const { origin } = this.state.values;\n    return (\n      <Form\n        onSubmit={() => {}}\n        validate={this.validate}\n        mutators={{ ...arrayMutators }}\n        initialValues={this.state.values}\n        render={({ handleSubmit, values, invalid }) => (\n          <div className=\"d-flex flex-column\">\n            <span className=\"buttons-container\">\n              <label\n                htmlFor=\"csvInput\"\n                className={`float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs ${this.state.isRequestFromWard ? \"disabled\" : \"\"}`}\n                title={\n                  this.state.isRequestFromWard ? \"Temporarily disabled\" : \"\"\n                }\n              >\n                <span>\n                  <i className=\"fa fa-download pr-2\" />\n                  <Translate\n                    id=\"react.default.button.importTemplate.label\"\n                    defaultMessage=\"Import template\"\n                  />\n                </span>\n                <input\n                  id=\"csvInput\"\n                  type=\"file\"\n                  style={{ display: \"none\" }}\n                  onChange={this.importTemplate}\n                  disabled={this.state.isRequestFromWard}\n                  onClick={(event) => {\n                    // eslint-disable-next-line no-param-reassign\n                    event.target.value = null;\n                  }}\n                  accept=\".csv\"\n                />\n              </label>\n              <button\n                type=\"button\"\n                onClick={() => this.exportTemplate(values)}\n                className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n              >\n                <span>\n                  <i className=\"fa fa-upload pr-2\" />\n                  <Translate\n                    id=\"react.default.button.exportTemplate.label\"\n                    defaultMessage=\"Export template\"\n                  />\n                </span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => this.refresh()}\n                className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n              >\n                <span>\n                  <i className=\"fa fa-refresh pr-2\" />\n                  <Translate\n                    id=\"react.default.button.refresh.label\"\n                    defaultMessage=\"Reload\"\n                  />\n                </span>\n              </button>\n              <button\n                type=\"button\"\n                disabled={invalid}\n                onClick={() => this.save(values)}\n                className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n              >\n                <span>\n                  <i className=\"fa fa-save pr-2\" />\n                  <Translate\n                    id=\"react.default.button.save.label\"\n                    defaultMessage=\"Save\"\n                  />\n                </span>\n              </button>\n              <button\n                type=\"button\"\n                disabled={invalid}\n                onClick={() => this.saveAndExit(values)}\n                className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n              >\n                <span>\n                  <i className=\"fa fa-sign-out pr-2\" />\n                  <Translate\n                    id=\"react.default.button.saveAndExit.label\"\n                    defaultMessage=\"Save and exit\"\n                  />\n                </span>\n              </button>\n              <button\n                type=\"button\"\n                disabled={invalid}\n                onClick={() => this.removeAll()}\n                className=\"float-right mb-1 btn btn-outline-danger align-self-end ml-1 btn-xs\"\n              >\n                <span>\n                  <i className=\"fa fa-remove pr-2\" />\n                  <Translate\n                    id=\"react.default.button.deleteAll.label\"\n                    defaultMessage=\"Delete all\"\n                  />\n                </span>\n              </button>\n              <button\n                type=\"button\"\n                className=\"float-right mb-1 btn btn-outline-danger align-self-end ml-1 btn-xs\"\n                onClick={() => this.cancelRequest()}\n              >\n                <span>\n                  <i className=\"fa fa-remove pr-2\" />\n                  <Translate\n                    id=\"react.stockMovement.request.cancel.label\"\n                    defaultMessage=\"Cancel Request\"\n                  />\n                </span>\n              </button>\n            </span>\n            <form onSubmit={handleSubmit}>\n              <div className=\"table-form\">\n                {_.map(this.getFields(), (fieldConfig, fieldName) =>\n                  renderFormField(fieldConfig, fieldName, {\n                    stocklist: values.stocklist,\n                    removeItem: this.removeItem,\n                    originId: this.props.initialValues.origin.id,\n                    getSortOrder: this.getSortOrder,\n                    newItemAdded: this.newItemAdded,\n                    newItem: this.state.newItem,\n                    totalCount: this.state.totalCount,\n                    loadMoreRows: this.loadMoreRows,\n                    isRowLoaded: this.isRowLoaded,\n                    updateTotalCount: this.updateTotalCount,\n                    isPaginated: this.props.isPaginated,\n                    isFromOrder: this.state.values.isFromOrder,\n                    updateRow: this.updateRow,\n                    values,\n                    isFirstPageLoaded: this.state.isFirstPageLoaded,\n                    updateProductData: this.updateProductData,\n                    calculateQtyRequested: this.calculateQuantityRequested,\n                  }),\n                )}\n              </div>\n              <div className=\"submit-buttons\">\n                <button\n                  type=\"submit\"\n                  disabled={invalid}\n                  onClick={() => this.previousPage(values, invalid)}\n                  className=\"btn btn-outline-primary btn-form btn-xs\"\n                >\n                  <Translate\n                    id=\"react.default.button.previous.label\"\n                    defaultMessage=\"Previous\"\n                  />\n                </button>\n                <button\n                  type=\"submit\"\n                  onClick={() =>\n                    this.inactiveProductValidation({\n                      lineItems: values.lineItems,\n                      callback: () => this.submitRequest(values.lineItems),\n                    })\n                  }\n                  className=\"btn btn-outline-primary btn-form float-right btn-xs\"\n                  disabled={\n                    invalid ||\n                    !_.some(\n                      values.lineItems,\n                      (item) =>\n                        item.product && _.parseInt(item.quantityRequested),\n                    )\n                  }\n                >\n                  {supports(\n                    origin?.supportedActivities,\n                    ActivityCode.APPROVE_REQUEST,\n                  ) ? (\n                    <Translate\n                      id=\"react.default.button.submitForApproval.label\"\n                      defaultMessage=\"Submit for approval\"\n                    />\n                  ) : (\n                    <Translate\n                      id=\"react.default.button.submitRequest.label\"\n                      defaultMessage=\"Submit request\"\n                    />\n                  )}\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  minimumExpirationDate: state.session.minimumExpirationDate,\n  isPaginated: state.session.isPaginated,\n  pageSize: state.session.pageSize,\n  currentLocationId: state.session.currentLocation.id,\n  supportedActivities: state.session.supportedActivities,\n});\n\nconst mapDispatchToProps = {\n  showSpinner,\n  hideSpinner,\n  fetchUsers,\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(AddItemsPage),\n);\n\nAddItemsPage.propTypes = {\n  /** Initial component's data */\n  initialValues: PropTypes.shape({\n    origin: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n    hasManageInventory: PropTypes.bool,\n  }).isRequired,\n  /** Function returning user to the previous page */\n  previousPage: PropTypes.func.isRequired,\n  /**\n   * Function called with the form data when the handleSubmit()\n   * is fired from within the form component.\n   */\n  nextPage: PropTypes.func.isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  stockMovementTranslationsFetched: PropTypes.bool.isRequired,\n  minimumExpirationDate: PropTypes.string.isRequired,\n  /** Return true if pagination is enabled */\n  isPaginated: PropTypes.bool.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentLocationId: PropTypes.string.isRequired,\n  supportedActivities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport update from \"immutability-helper\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport userApi from \"api/services/UserApi\";\nimport { STOCKLIST_API } from \"api/urls\";\nimport DateField from \"components/form-elements/DateField\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TextField from \"components/form-elements/TextField\";\nimport ActivityCode from \"consts/activityCode\";\nimport { STOCK_MOVEMENT_URL } from \"consts/applicationUrls\";\nimport DateFormat from \"consts/dateFormat\";\nimport RoleType from \"consts/roleType\";\nimport apiClient from \"utils/apiClient\";\nimport { renderFormField } from \"utils/form-utils\";\nimport {\n  debounceLocationsFetch,\n  debouncePeopleFetch,\n} from \"utils/option-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nfunction validate(values) {\n  const errors = {};\n  if (!values.description) {\n    errors.description = \"react.default.error.requiredField.label\";\n  }\n  if (!values.origin) {\n    errors.origin = \"react.default.error.requiredField.label\";\n  }\n  if (!values.destination) {\n    errors.destination = \"react.default.error.requiredField.label\";\n  }\n  if (!values.requestedBy) {\n    errors.requestedBy = \"react.default.error.requiredField.label\";\n  }\n  if (!values.requestType) {\n    errors.requestType = \"react.default.error.requiredField.label\";\n  }\n  if (!values.dateRequested) {\n    errors.dateRequested = \"react.default.error.requiredField.label\";\n  } else {\n    const dateRequested = moment(values.dateRequested, \"MM/DD/YYYY\");\n    if (moment().diff(dateRequested) < 0) {\n      errors.dateRequested = \"react.stockMovement.error.futureDate.label\";\n    }\n  }\n  return errors;\n}\n\nconst DEFAULT_FIELDS = {\n  description: {\n    type: TextField,\n    label: \"react.stockMovement.description.label\",\n    defaultMessage: \"Description\",\n    attributes: {\n      required: true,\n      autoFocus: true,\n    },\n  },\n  destination: {\n    type: SelectField,\n    label: \"react.stockMovement.requestingLocation.label\",\n    defaultMessage: \"Requesting Location\",\n    attributes: {\n      required: true,\n      async: true,\n      showValueTooltip: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      options: [],\n      disabled: true,\n      filterOptions: (options) => options,\n    },\n    getDynamicAttr: (props) => ({\n      loadOptions: props.debouncedLocationsFetch,\n      onChange: (value) => {\n        if (value && props.origin && props.origin.id) {\n          props.fetchStockLists(props.origin, value);\n        }\n      },\n    }),\n  },\n  origin: {\n    type: SelectField,\n    label: \"react.stockMovement.fulfillingLocation.label\",\n    defaultMessage: \"Fulfilling Location\",\n    attributes: {\n      required: true,\n      async: true,\n      showValueTooltip: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      options: [],\n      filterOptions: (options) => options,\n    },\n    getDynamicAttr: (props) => ({\n      loadOptions: props.debouncedLocationsFetch,\n      onChange: (value) => {\n        if (value && props.destination && props.destination.id) {\n          props.fetchStockLists(value, props.destination);\n          if (\n            value?.supportedActivities?.includes(ActivityCode.APPROVE_REQUEST)\n          ) {\n            props.setSupportsApprover(true);\n            props.fetchAvailableApprovers(value.id);\n          } else {\n            props.setSupportsApprover(false);\n          }\n        }\n      },\n      disabled: false,\n    }),\n  },\n  requestedBy: {\n    type: SelectField,\n    label: \"react.stockMovement.requestedBy.label\",\n    defaultMessage: \"Requested by\",\n    attributes: {\n      async: true,\n      required: true,\n      showValueTooltip: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      options: [],\n      labelKey: \"name\",\n      filterOptions: (options) => options,\n    },\n    getDynamicAttr: (props) => ({\n      loadOptions: props.debouncedPeopleFetch,\n    }),\n  },\n  dateRequested: {\n    type: DateField,\n    label: \"react.stockMovement.dateRequested.label\",\n    defaultMessage: \"Date requested\",\n    attributes: {\n      required: true,\n      localizeDate: true,\n      localizedDateFormat: DateFormat.COMMON,\n      autoComplete: \"off\",\n    },\n  },\n  requestType: {\n    type: SelectField,\n    label: \"react.stockMovement.requestType.label\",\n    defaultMessage: \"Request type\",\n    attributes: {\n      valueKey: \"id\",\n      labelKey: \"name\",\n      required: true,\n      showValueTooltip: true,\n    },\n    getDynamicAttr: ({ requestTypes }) => ({\n      options: requestTypes,\n    }),\n  },\n  stocklist: {\n    label: \"react.stockMovement.stocklist.label\",\n    defaultMessage: \"Stocklist\",\n    type: SelectField,\n    getDynamicAttr: ({\n      origin,\n      destination,\n      stocklists,\n      setRequestType,\n      values,\n    }) => ({\n      disabled: !(origin && destination && origin.id && destination.id),\n      options: stocklists,\n      showValueTooltip: true,\n      valueKey: \"id\",\n      labelKey: \"name\",\n      onChange: (value) => {\n        if (value) {\n          setRequestType(values, value);\n        }\n      },\n    }),\n  },\n  dateDeliveryRequested: {\n    label: \"react.stockMovement.desiredDateOfDelivery\",\n    defaultMessage: \"Desired date of delivery\",\n    type: DateField,\n    attributes: {\n      localizeDate: true,\n      localizedDateFormat: DateFormat.COMMON,\n      dateFormat: null,\n      autoComplete: \"off\",\n    },\n  },\n};\n\nconst APPROVER_FIELDS = {\n  ...DEFAULT_FIELDS,\n  approvers: {\n    label: \"react.stockMovement.request.approvers.label\",\n    defaultMessage: \"Approvers\",\n    attributes: {\n      multi: true,\n      showValueTooltip: true,\n      valueKey: \"id\",\n      labelKey: \"name\",\n    },\n    type: SelectField,\n    getDynamicAttr: (props) => ({\n      options: props.availableApprovers,\n    }),\n  },\n};\n\nconst ELECTRONIC = \"ELECTRONIC\";\n\n/** The first step of stock movement where user can add all the basic information. */\nclass CreateStockMovement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stocklists: [],\n      availableApprovers: [],\n      supportsApprover: false,\n      setInitialValues: true,\n      values: this.props.initialValues,\n      requestTypes: [],\n    };\n    this.fetchStockLists = this.fetchStockLists.bind(this);\n    this.setRequestType = this.setRequestType.bind(this);\n    this.fetchAvailableApprovers = this.fetchAvailableApprovers.bind(this);\n    this.setSupportsApprover = this.setSupportsApprover.bind(this);\n\n    this.debouncedPeopleFetch = debouncePeopleFetch(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n    );\n\n    this.debouncedLocationsFetch = debounceLocationsFetch(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n      [\"FULFILL_REQUEST\"],\n    );\n  }\n\n  componentDidMount() {\n    if (this.state.values.origin && this.state.values.destination) {\n      this.fetchStockLists(\n        this.state.values.origin,\n        this.state.values.destination,\n      );\n    }\n    if (this.state.values.origin) {\n      if (\n        this.state.values.origin?.supportedActivities?.includes(\n          ActivityCode.APPROVE_REQUEST,\n        )\n      ) {\n        this.setSupportsApprover(true);\n        this.fetchAvailableApprovers(this.state.values.origin.id);\n      } else {\n        this.setSupportsApprover(false);\n      }\n    }\n    this.fetchRequisitionTypes();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      !this.props.match.params.stockMovementId &&\n      this.state.setInitialValues &&\n      nextProps.location.id\n    ) {\n      this.setInitialValues(nextProps.location, nextProps.user);\n    }\n  }\n\n  setRequestType(values, stocklist) {\n    const { requestTypes } = this.state;\n    const requestType = _.find(requestTypes, (type) => type.id === \"STOCK\");\n\n    this.setState({\n      values: update(values, {\n        requestType: { $set: requestType },\n        stocklist: { $set: stocklist },\n      }),\n    });\n  }\n\n  setInitialValues(location, user) {\n    const { id, locationType, name } = location;\n\n    const values = {\n      destination: {\n        id,\n        type: locationType ? locationType.locationTypeCode : null,\n        name,\n        label: `${name} [${locationType ? locationType.description : null}]`,\n      },\n      requestedBy: {\n        id: user.id,\n        name: user.name,\n        label: `${user.name}`,\n      },\n      dateRequested: moment(new Date()).format(\"MM/DD/YYYY\"),\n      approvers: undefined,\n    };\n    this.setState({ values, setInitialValues: false });\n  }\n\n  setSupportsApprover(value) {\n    this.setState({\n      supportsApprover: value,\n    });\n  }\n\n  /**\n   * Fetches available shipment types from API.\n   * @public\n   */\n  fetchRequisitionTypes() {\n    const url = \"/api/getRequestTypes\";\n\n    return apiClient\n      .get(url)\n      .then((response) => {\n        this.setState({ requestTypes: response.data.data }, () =>\n          this.props.hideSpinner(),\n        );\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  fetchAvailableApprovers(locationId) {\n    return userApi\n      .getUsersOptions({\n        params: {\n          roleTypes: RoleType.ROLE_REQUISITION_APPROVER,\n          location: locationId,\n        },\n      })\n      .then((response) => {\n        const options = response.data.data?.map((user) => ({\n          id: user.id,\n          value: user.id,\n          label: user.name,\n        }));\n\n        this.setState({ availableApprovers: options });\n\n        return options;\n      })\n      .finally(() => this.props.hideSpinner());\n  }\n\n  checkStockMovementChange(newValues) {\n    const { origin, destination, stocklist } = this.props.initialValues;\n\n    const originLocs = newValues.origin && origin;\n    const isOldSupplier = origin && origin.type === \"SUPPLIER\";\n    const isNewSupplier = newValues.origin && newValues.type === \"SUPPLIER\";\n    const checkOrigin =\n      originLocs && (!isOldSupplier || (isOldSupplier && !isNewSupplier))\n        ? newValues.origin.id !== origin.id\n        : false;\n\n    const checkDest =\n      stocklist && newValues.destination && destination\n        ? newValues.destination.id !== destination.id\n        : false;\n    const checkStockList = newValues.stockMovementId\n      ? _.get(newValues.stocklist, \"id\", null) !== _.get(stocklist, \"id\", null)\n      : false;\n\n    return checkOrigin || checkDest || checkStockList;\n  }\n\n  /**\n   * Fetches available stock lists from API with given origin and destination.\n   * @param {object} origin\n   * @param {object} destination\n   * @param {function} clearStocklist\n   * @public\n   */\n  fetchStockLists(origin, destination, clearStocklist) {\n    this.props.showSpinner();\n    return apiClient\n      .get(STOCKLIST_API, {\n        params: {\n          origin: origin.id,\n          destination: destination.id,\n        },\n      })\n      .then((response) => {\n        const stocklists = _.map(response.data.data, (stocklist) => ({\n          id: stocklist.id,\n          name: stocklist.name,\n          value: stocklist.id,\n          label: stocklist.name,\n        }));\n\n        const stocklistChanged = !_.find(\n          stocklists,\n          (item) => item.value.id === _.get(this.state.values, \"stocklist\"),\n        );\n\n        if (stocklistChanged && clearStocklist) {\n          clearStocklist();\n        }\n\n        this.setState({ stocklists }, () => this.props.hideSpinner());\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Creates or updates stock movement with given data\n   * @param {object} values\n   * @public\n   */\n  saveStockMovement(values) {\n    if (\n      values.origin &&\n      values.destination &&\n      values.requestedBy &&\n      values.dateRequested &&\n      values.description\n    ) {\n      this.props.showSpinner();\n\n      let stockMovementUrl = \"\";\n      if (values.stockMovementId) {\n        stockMovementUrl = `/api/stockMovements/${values.stockMovementId}/updateRequisition`;\n      } else {\n        stockMovementUrl = \"/api/stockMovements\";\n      }\n\n      const payload = {\n        name: \"\",\n        description: values.description,\n        dateRequested: values.dateRequested,\n        origin: values.origin.id,\n        destination: values.destination.id,\n        requestedBy: values.requestedBy.id,\n        stocklist: { id: _.get(values.stocklist, \"id\", \"\") },\n        requestType: values.requestType.id,\n        sourceType: ELECTRONIC,\n        approvers: values.approvers?.map((user) => user.id),\n        dateDeliveryRequested: values.dateDeliveryRequested\n          ? moment(values.dateDeliveryRequested).format(\"MM/DD/YYYY\")\n          : null,\n      };\n\n      apiClient\n        .post(stockMovementUrl, payload)\n        .then((response) => {\n          if (response.data) {\n            const resp = response.data.data;\n            this.props.history.push(STOCK_MOVEMENT_URL.editRequest(resp.id));\n            this.props.nextPage({\n              ...values,\n              stockMovementId: resp.id,\n              lineItems: resp.lineItems,\n              movementNumber: resp.identifier,\n              name: resp.name,\n              stocklist: resp.stocklist,\n              replenishmentType: resp.replenishmentType,\n            });\n          }\n        })\n        .catch(() => {\n          this.props.hideSpinner();\n          return Promise.reject(\n            new Error(\n              this.props.translate(\n                \"react.stockMovement.error.createStockMovement.label\",\n                \"Could not create stock movement\",\n              ),\n            ),\n          );\n        });\n    }\n  }\n\n  resetToInitialValues() {\n    this.setState(\n      {\n        values: {},\n      },\n      () =>\n        this.setState({\n          values: this.props.initialValues,\n        }),\n    );\n  }\n\n  /**\n   * Calls method creating or saving stock movement and moves user to the next page.\n   * @param {object} values\n   * @public\n   */\n  nextPage(values) {\n    const showModal = this.checkStockMovementChange(values);\n    if (!showModal) {\n      this.saveStockMovement(values);\n    } else {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.message.confirmChange.label\",\n          \"Confirm change\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmChange.message\",\n          \"Do you want to change stock movement data? Changing origin, destination or stock list can cause loss of your current work\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\"react.default.no.label\", \"No\"),\n            onClick: () => this.resetToInitialValues(),\n          },\n          {\n            label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n            onClick: () => this.saveStockMovement(values),\n          },\n        ],\n      });\n    }\n  }\n\n  render() {\n    const FIELDS = this.state.supportsApprover\n      ? APPROVER_FIELDS\n      : DEFAULT_FIELDS;\n    return (\n      <Form\n        onSubmit={(values) => this.nextPage(values)}\n        validate={validate}\n        initialValues={this.state.values}\n        mutators={{\n          clearStocklist: (args, state, utils) => {\n            utils.changeValue(state, \"stocklist\", () => null);\n          },\n          setApproversValues: (args, state, utils) => {\n            const [selectedOptions] = args;\n            utils.changeValue(state, \"approvers\", () => selectedOptions);\n          },\n        }}\n        render={({ form: { mutators }, handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <div className=\"classic-form with-description\">\n              {_.map(FIELDS, (fieldConfig, fieldName) =>\n                renderFormField(fieldConfig, fieldName, {\n                  stocklists: this.state.stocklists,\n                  fetchStockLists: (origin, destination) =>\n                    this.fetchStockLists(\n                      origin,\n                      destination,\n                      mutators.clearStocklist,\n                    ),\n                  fetchAvailableApprovers: (locationId) => {\n                    this.fetchAvailableApprovers(locationId).then((resp) => {\n                      // if there is only one available approver to choose from\n                      // then preselect this options by default\n                      if (resp?.length === 1) {\n                        mutators.setApproversValues(resp);\n                      } else {\n                        mutators.setApproversValues([]);\n                      }\n                    });\n                  },\n                  setSupportsApprover: this.setSupportsApprover,\n                  origin: values.origin,\n                  destination: values.destination,\n                  isSuperuser: this.props.isSuperuser,\n                  debouncedPeopleFetch: this.debouncedPeopleFetch,\n                  debouncedLocationsFetch: this.debouncedLocationsFetch,\n                  requestTypes: this.state.requestTypes,\n                  setRequestType: this.setRequestType,\n                  availableApprovers: this.state.availableApprovers,\n                  values,\n                }),\n              )}\n            </div>\n            <div className=\"submit-buttons\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-outline-primary float-right btn-xs\"\n              >\n                <Translate\n                  id=\"react.default.button.next.label\"\n                  defaultMessage=\"Next\"\n                />\n              </button>\n            </div>\n          </form>\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  location: state.session.currentLocation,\n  isSuperuser: state.session.isSuperuser,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  debounceTime: state.session.searchConfig.debounceTime,\n  minSearchLength: state.session.searchConfig.minSearchLength,\n  user: state.session.user,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    showSpinner,\n    hideSpinner,\n  })(CreateStockMovement),\n);\n\nCreateStockMovement.propTypes = {\n  /** React router's object which contains information about url varaiables and params */\n  match: PropTypes.shape({\n    params: PropTypes.shape({ stockMovementId: PropTypes.string }),\n  }).isRequired,\n  /** Initial component's data */\n  initialValues: PropTypes.shape({\n    origin: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n    destination: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n    stocklist: PropTypes.shape({}),\n  }).isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  /**\n   * Function called with the form data when the handleSubmit()\n   * is fired from within the form component.\n   */\n  nextPage: PropTypes.func.isRequired,\n  /** React router's object used to manage session history */\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  /** Current location */\n  location: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    locationType: PropTypes.shape({\n      description: PropTypes.string,\n      locationTypeCode: PropTypes.string,\n    }),\n  }).isRequired,\n  /** Return true if current user is superuser */\n  isSuperuser: PropTypes.bool.isRequired,\n  translate: PropTypes.func.isRequired,\n  debounceTime: PropTypes.number.isRequired,\n  minSearchLength: PropTypes.number.isRequired,\n  user: PropTypes.shape({\n    username: PropTypes.string,\n    id: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport { fetchTranslations, hideSpinner, showSpinner } from \"actions\";\nimport AddItemsPage from \"components/stock-movement-wizard/request/AddItemsPage\";\nimport CreateStockMovement from \"components/stock-movement-wizard/request/CreateStockMovement\";\nimport Wizard from \"components/wizard/Wizard\";\nimport DateFormat from \"consts/dateFormat\";\nimport apiClient from \"utils/apiClient\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\nimport { formatDate } from \"utils/translation-utils\";\n\nimport \"components/stock-movement-wizard/StockMovement.scss\";\n\n// TODO: check docs for SM wizard and Wizard related components\n\n/** Main outbound stock movement form's wizard component. */\nclass StockMovementsRequest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      values: this.props.initialValues,\n      currentPage: 1,\n    };\n\n    this.updateWizardValues = this.updateWizardValues.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTranslations(\"\", \"stockMovement\");\n\n    if (this.props.stockMovementTranslationsFetched) {\n      this.dataFetched = true;\n\n      this.fetchInitialValues();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.locale && this.props.locale !== nextProps.locale) {\n      this.props.fetchTranslations(nextProps.locale, \"stockMovement\");\n    }\n\n    if (nextProps.stockMovementTranslationsFetched && !this.dataFetched) {\n      this.dataFetched = true;\n\n      this.fetchInitialValues();\n    }\n  }\n\n  /**\n   * Returns shipment's name containing shipment's origin, destination, requisition date,\n   * tracking number given by user on the last step, description and stock list if chosen.\n   * @public\n   */\n  get wizardTitle() {\n    const { values } = this.state;\n    if (!values.movementNumber && !values.trackingNumber) {\n      return [];\n    }\n    return [\n      {\n        text: this.props.translate(\n          \"react.stockMovement.label\",\n          \"Stock Movement\",\n        ),\n        color: \"#000000\",\n        delimeter: \" | \",\n      },\n      {\n        text: values.movementNumber,\n        color: \"#000000\",\n        delimeter: \" - \",\n      },\n      {\n        text: values.origin.name,\n        color: \"#004d40\",\n        delimeter: \" to \",\n      },\n      {\n        text: values.destination.name,\n        color: \"#01579b\",\n        delimeter: \", \",\n      },\n      {\n        text: this.props.formatLocalizedDate(\n          values.dateRequested,\n          DateFormat.COMMON,\n        ),\n        color: \"#4a148c\",\n        delimeter: \", \",\n      },\n      {\n        text: values.description,\n        color: \"#770838\",\n        delimeter: \"\",\n      },\n    ];\n  }\n\n  get additionalWizardTitle() {\n    const { currentPage, values } = this.state;\n    const shipped = values.shipped ? \"SHIPPED\" : \"\";\n    const received = values.received ? \"RECEIVED\" : \"\";\n    if (currentPage === 6) {\n      return (\n        <span className=\"shipment-status float-right\">\n          {`${shipped || received || \"PENDING\"}`}\n        </span>\n      );\n    }\n    return null;\n  }\n\n  /**\n   * Returns array of form steps.\n   * @public\n   */\n  get stepList() {\n    return [\n      this.props.translate(\"react.stockMovement.create.label\", \"Create\"),\n      this.props.translate(\"react.stockMovement.addItems.label\", \"Add items\"),\n    ];\n  }\n\n  updateWizardValues(currentPage, values) {\n    this.setState({ currentPage, values });\n  }\n\n  /**\n   * Returns array of form's components.\n   * @public\n   */\n  pageList = [CreateStockMovement, AddItemsPage];\n\n  dataFetched = false;\n\n  /**\n   * Fetches initial values from API.\n   * @public\n   */\n  fetchInitialValues() {\n    if (this.props.match.params.stockMovementId) {\n      this.props.showSpinner();\n      const url = `/api/stockMovements/${this.props.match.params.stockMovementId}`;\n      apiClient\n        .get(url)\n        .then((response) => {\n          const resp = response.data.data;\n          const originType = resp.origin.locationType;\n          const destinationType = resp.destination.locationType;\n          const values = {\n            ...resp,\n            stockMovementId: resp.id,\n            movementNumber: resp.identifier,\n            approvers: resp.approvers?.map((user) => ({\n              id: user.id,\n              value: user.id,\n              label: user.name,\n            })),\n            origin: {\n              id: resp.origin.id,\n              type: originType ? originType.locationTypeCode : null,\n              name: resp.origin.name,\n              label: `${resp.origin.name} [${originType ? originType.description : null}]`,\n              supportedActivities: resp.origin.supportedActivities,\n            },\n            destination: {\n              id: resp.destination.id,\n              type: destinationType ? destinationType.locationTypeCode : null,\n              name: resp.destination.name,\n              label: `${resp.destination.name} [${destinationType ? destinationType.description : null}]`,\n              supportedActivities: resp.destination.supportedActivities,\n            },\n            requestedBy: {\n              id: resp.requestedBy.id,\n              name: resp.requestedBy.name,\n              label: resp.requestedBy.name,\n            },\n          };\n\n          this.setState({\n            values,\n            currentPage: values.statusCode === \"NEW\" ? 1 : 2,\n          });\n        })\n        .catch(() => this.props.hideSpinner());\n    }\n  }\n\n  render() {\n    const { values, currentPage } = this.state;\n\n    return (\n      <Wizard\n        pageList={this.pageList}\n        stepList={this.stepList}\n        initialValues={values}\n        title={this.wizardTitle}\n        additionalTitle={this.additionalWizardTitle}\n        currentPage={currentPage}\n        prevPage={currentPage === 1 ? 1 : currentPage - 1}\n        updateWizardValues={this.updateWizardValues}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  formatLocalizedDate: formatDate(state.localize),\n});\n\nexport default connect(mapStateToProps, {\n  showSpinner,\n  hideSpinner,\n  fetchTranslations,\n})(StockMovementsRequest);\n\nStockMovementsRequest.propTypes = {\n  /** React router's object which contains information about url variables and params */\n  match: PropTypes.shape({\n    params: PropTypes.shape({ stockMovementId: PropTypes.string }),\n  }).isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  /** Initial components' data */\n  initialValues: PropTypes.shape({\n    shipmentStatus: PropTypes.string,\n  }),\n  locale: PropTypes.string.isRequired,\n  stockMovementTranslationsFetched: PropTypes.bool.isRequired,\n  fetchTranslations: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  formatLocalizedDate: PropTypes.func.isRequired,\n};\n\nStockMovementsRequest.defaultProps = {\n  initialValues: {},\n};\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport ProductSelect from \"components/product-select/ProductSelect\";\n\nconst ProductSelectField = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const renderInput = ({ className, ...attributes }) => (\n    <ProductSelect\n      {...attributes}\n      name={attributes.id}\n      className={`select-xs ${className || \"\"}`}\n      classNamePrefix=\"react-select\"\n    />\n  );\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default ProductSelectField;\n","const RequisitionStatus = {\n  CREATED: 'CREATED',\n  EDITING: 'EDITING',\n  VERIFYING: 'VERIFYING',\n  PICKING: 'PICKING',\n  PICKED: 'PICKED',\n  PENDING: 'PENDING',\n  CHECKING: 'CHECKING',\n  ISSUED: 'ISSUED',\n  RECEIVED: 'RECEIVED',\n  CANCELED: 'CANCELED',\n  DELETED: 'DELETED',\n  ERROR: 'ERROR',\n  DISPATCHED: 'DISPATCHED',\n  REQUESTED: 'REQUESTED',\n  OPEN: 'OPEN',\n  FULFILLED: 'FULFILLED',\n  REVIEWING: 'REVIEWING',\n  CONFIRMING: 'CONFIRMING',\n  PENDING_APPROVAL: 'PENDING_APPROVAL',\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED',\n};\n\nexport default RequisitionStatus;\n","import ActivityCode from 'consts/activityCode';\n\n/**\n * Request from Ward = request from any location (not only ward),\n * that does not support MANAGE INVENTORY activity but, it supports SUBMIT REQUEST\n * */\nexport const isRequestFromWard = (currentLocationId, destinationId, supportedActivities) =>\n  currentLocationId === destinationId\n  && !supportedActivities.includes(ActivityCode.MANAGE_INVENTORY)\n  && supportedActivities.includes(ActivityCode.SUBMIT_REQUEST);\n\nexport const supports = (locationSupportedActivities, activity) =>\n  locationSupportedActivities?.includes(activity);\n\nexport const checkBinLocationSupport = (supportedActivities) =>\n  supports(supportedActivities, ActivityCode.PUTAWAY_STOCK)\n  && supports(supportedActivities, ActivityCode.PICK_STOCK);\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { Tooltip } from \"react-tippy\";\n\nimport Translate from \"utils/Translate\";\n\nconst ButtonField = (props) => {\n  const {\n    fieldName,\n    fieldConfig: {\n      buttonLabel: ButtonLabel,\n      buttonDefaultMessage,\n      getDynamicAttr,\n      attributes = { className: \"btn-outline-primary\" },\n    },\n  } = props;\n  const dynamicAttr = getDynamicAttr ? getDynamicAttr(props) : {};\n  const attr = { ...attributes, ...dynamicAttr };\n\n  return (\n    <button\n      type=\"button\"\n      key={fieldName}\n      {...attr}\n      className={`text-truncate btn btn-xs ${attr.className}`}\n    >\n      {typeof ButtonLabel === \"string\" ? (\n        <Tooltip\n          html={\n            ButtonLabel && (\n              <Translate\n                id={ButtonLabel}\n                defaultMessage={buttonDefaultMessage}\n              />\n            )\n          }\n          theme=\"transparent\"\n          arrow=\"true\"\n          delay=\"150\"\n          duration=\"250\"\n          hideDelay=\"50\"\n        >\n          {\" \"}\n          <Translate id={ButtonLabel} defaultMessage={buttonDefaultMessage} />\n        </Tooltip>\n      ) : (\n        <ButtonLabel />\n      )}\n    </button>\n  );\n};\n\nexport default ButtonField;\n\nButtonField.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  fieldConfig: PropTypes.shape({\n    getDynamicAttr: PropTypes.func,\n  }).isRequired,\n};\n"],"names":["module","exports","data","filename","mime","bom","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","productOptionLabel","_ref","productCode","displayName","displayNames","name","concat","Option","option","_option$displayNames","React","Tooltip","html","className","theme","disabled","position","color","label","renderHandlingIcons","handlingIcons","SelectedValue","showSelectedOptionColor","ProductSelect","_ref2","onExactProductSelected","locationId","fieldRef","includeUom","props","_objectWithoutProperties","_excluded","selectRef","useRef","_useState2","_slicedToArray","useState","isExactMatch","setIsExactMatch","_useState4","loadedOptions","setLoadedOptions","_useState6","searchTerm","setSearchTerm","_useSelector","useSelector","state","debounceTime","session","searchConfig","minSearchLength","debouncedProductsFetch","debounceProductsFetch","useEffect","length","exactMatches","filter","product","exactMatch","exactMatchProduct","_exactMatches","matchedByProductCode","find","_ref3","current","select","setValue","Select","_extends","el","async","options","loadOptions","searchString","callback","resultOptions","onMenuClose","filterOption","item","onEnterPress","event","preventDefault","stopPropagation","optionRenderer","valueRenderer","defaultProps","openOnClick","autoload","cache","showValueTooltip","undefined","propTypes","PropTypes","isRequired","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_defineProperties","_toPropertyKey","key","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_getPrototypeOf","bind","_setPrototypeOf","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","RequestFromWardTypes","calculateQtyRequestedFrom","FIELDS","ProductSelectField","defaultMessage","headerAlign","flexWidth","attributes","quantityOnHand","LabelField","quantityOnHandAtRequestSite","TextField","quantityAvailable","quantityAllowed","monthlyDemand","quantityRequested","comments","getDynamicAttr","addRow","rowCount","rowIndex","getSortOrder","updateTotalCount","updateRow","onTabPress","sortOrder","arrowRight","arrowDown","onBlur","demandPerReplenishmentPeriod","demandPerRequestPeriod","DELETE_BUTTON_FIELD","ButtonField","fieldKey","buttonLabel","buttonDefaultMessage","fieldValue","removeItem","removeRow","onClick","id","LINE_ITEMS_ATTR","ArrayField","arrowsNavigation","virtualized","totalCount","_ref4","isRowLoaded","_ref5","loadMoreRows","_ref6","isFirstPageLoaded","_ref7","addButton","newItemAdded","Translate","NO_STOCKLIST_FIELDS","lineItems","fields","_ref8","updateProductData","originId","focusField","onChange","autoFocus","_ref9","_ref10","deleteButton","STOCKLIST_FIELDS_PUSH_TYPE","_ref11","newItem","_ref12","_ref13","STOCKLIST_FIELDS_PULL_TYPE","_ref14","_ref15","REQUEST_FROM_WARD_STOCKLIST_FIELDS_PUSH_TYPE","_ref16","_ref17","headerTooltip","cellClassName","_ref18","calculateQtyRequested","valuesWithUpdatedQtyRequested","required","_ref19","REQUEST_FROM_WARD_STOCKLIST_FIELDS_PULL_TYPE","_ref20","_ref21","headerDefaultTooltip","_ref22","_ref23","_ref24","REQUEST_FROM_WARD_FIELDS","_ref25","_ref26","_ref27","_ref28","_ref29","REPLENISHMENT_TYPE_PULL","calculateQuantityRequested","requestType","baseValue","AddItemsPage","_Component","_this","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","currentLineItems","initialValues","isRequestFromWard","showSpinner","importTemplate","confirmSave","confirmTransition","validate","submitRequest","cancelRequest","save","saveAndExit","_inherits","this","stockMovementTranslationsFetched","dataFetched","fetchAllData","nextProps","_","stocklist","replenishmentType","_this2","lineItemsToBeAdded","statusCode","lineItemsWithStatus","lineItemsToBeUpdated","oldItem","old","oldQty","parseInt","newQty","oldQtyOnHand","newQtyOnHand","keyIntersection","origin","hasManageInventory","mapPropertiesOfItemsToBeAdded","itemQuantityCounted","quantityCounted","setState","response","startIndex","lineItemsData","_this3","isPullType","isRequestOrigin","currentLocationId","val","qtyRequested","Array","fill","isPaginated","pageSize","hideSpinner","_ref30","_this4","inactiveProducts","lineItem","_lineItem$product","active","map","idx","translate","notification","NotificationType","ERROR_FILLED","message","detailsArray","index","update","$set","_this5","errors","date","moment","minimumExpirationDate","rowErrors","boxName","palletName","dateRequested","expirationDate","diff","formValues","saveItemsAndExportTemplate","_this6","movementNumber","stockMovementId","url","saveRequisitionItemsInCurrentStep","apiClient","get","responseType","fileDownload","_this7","formData","FormData","file","target","files","append","size","post","headers","fetchLineItems","onConfirm","confirmAlert","title","buttons","items","_item$product$display","fetchAddItemsPageData","_this8","setLineItems","err","_ref31","_this9","resp","_resp$data","_resp$data$data","destination","supportedActivities","_ref32","_this10","_this11","checkDuplicatesSaveAndTransitionToNextStep","_this12","itemsMap","itemsWithSameCode","saveAndTransitionToNextStep","b","_this13","saveRequisitionItems","transitionToNextStep","nextPage","_this14","itemsToSave","getLineItemsToBeSaved","updateItemsUrl","payload","reject","_this15","nonEmptyLineItems","_this15$state$values$","supports","ActivityCode","APPROVE_REQUEST","RequisitionStatus","PENDING_APPROVAL","REQUESTED","itemCandidatesToSave","_this16","_this17","saveItems","_this18","status","Alert","timeout","history","DASHBOARD_URL","base","STOCK_MOVEMENT_URL","listInbound","_this19","saveAndRedirect","includes","_this20","_this21","itemId","_this22","removeItemsUrl","_this23","_callee","translatedSubmitMessage","_context","_transitionToNextStep","_next","_throw","_x","invalid","_this24","previousPage","_this25","parseFloat","_response$data","_this26","Form","onSubmit","mutators","arrayMutators","render","_ref33","handleSubmit","htmlFor","accept","exportTemplate","refresh","removeAll","getFields","fieldConfig","fieldName","renderFormField","isFromOrder","inactiveProductValidation","Component","mapDispatchToProps","fetchUsers","withRouter","connect","translateWithDefaultMessage","getTranslate","localize","fetchedTranslations","stockMovement","currentLocation","description","requestedBy","DEFAULT_FIELDS","SelectField","filterOptions","debouncedLocationsFetch","fetchStockLists","_value$supportedActiv","setSupportsApprover","fetchAvailableApprovers","labelKey","debouncedPeopleFetch","DateField","localizeDate","localizedDateFormat","DateFormat","COMMON","autoComplete","valueKey","requestTypes","stocklists","setRequestType","dateDeliveryRequested","dateFormat","APPROVER_FIELDS","approvers","multi","availableApprovers","CreateStockMovement","supportsApprover","setInitialValues","debouncePeopleFetch","debounceLocationsFetch","_this$state$values$or","fetchRequisitionTypes","match","params","location","user","locationType","locationTypeCode","Date","format","userApi","getUsersOptions","roleTypes","RoleType","ROLE_REQUISITION_APPROVER","_response$data$data","newValues","_this$props$initialVa","originLocs","isOldSupplier","isNewSupplier","checkOrigin","checkDest","checkStockList","clearStocklist","STOCKLIST_API","_values$approvers","stockMovementUrl","sourceType","editRequest","identifier","checkStockMovementChange","resetToInitialValues","saveStockMovement","args","utils","changeValue","setApproversValues","selectedOptions","form","isSuperuser","username","StockMovementsRequest","currentPage","updateWizardValues","fetchTranslations","fetchInitialValues","locale","trackingNumber","text","delimeter","formatLocalizedDate","_this$state","shipped","received","_resp$approvers","originType","destinationType","_this$state2","Wizard","pageList","stepList","wizardTitle","additionalTitle","additionalWizardTitle","prevPage","activeLanguage","formatDate","shipmentStatus","BaseField","renderInput","classNamePrefix","CREATED","EDITING","VERIFYING","PICKING","PICKED","PENDING","CHECKING","ISSUED","RECEIVED","CANCELED","DELETED","ERROR","DISPATCHED","OPEN","FULFILLED","REVIEWING","CONFIRMING","APPROVED","REJECTED","destinationId","MANAGE_INVENTORY","SUBMIT_REQUEST","locationSupportedActivities","activity","checkBinLocationSupport","PUTAWAY_STOCK","PICK_STOCK","_props$fieldConfig","ButtonLabel","_props$fieldConfig$at","dynamicAttr","attr","arrow","delay","duration","hideDelay"],"sourceRoot":""}