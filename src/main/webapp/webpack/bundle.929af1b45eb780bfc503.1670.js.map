{"version":3,"file":"bundle.929af1b45eb780bfc503.1670.js","mappings":"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","sources":["webpack://openboxes/./src/js/components/form-elements/SelectField.jsx","webpack://openboxes/./src/js/components/form-elements/ModalWrapper.jsx","webpack://openboxes/./src/js/utils/Textarea.jsx","webpack://openboxes/./src/js/components/form-elements/TextareaField.jsx","webpack://openboxes/./src/js/components/form-elements/TextField.jsx","webpack://openboxes/./src/js/components/form-elements/v2/FileSelect.jsx","webpack://openboxes/./src/js/components/locations-configuration/ForecastingNotsupported.jsx","webpack://openboxes/./src/js/components/locations-configuration/SuccessMessage.jsx","webpack://openboxes/./src/js/components/locations-configuration/Forecasting.jsx","webpack://openboxes/./src/js/components/locations-configuration/LocationAddress.jsx","webpack://openboxes/./src/js/utils/ColorPicker.jsx","webpack://openboxes/./src/js/components/form-elements/ColorPickerField.jsx","webpack://openboxes/./src/js/components/locations-configuration/modals/AddLocationGroupModal.jsx","webpack://openboxes/./src/js/components/locations-configuration/modals/AddOrganizationModal.jsx","webpack://openboxes/./src/js/components/locations-configuration/LocationDetails.jsx","webpack://openboxes/./src/js/components/form-elements/FileField.jsx","webpack://openboxes/./src/js/utils/file-utils.jsx","webpack://openboxes/./src/js/components/locations-configuration/BinTable.jsx","webpack://openboxes/./src/js/components/locations-configuration/modals/AddBinModal.jsx","webpack://openboxes/./src/js/components/locations-configuration/modals/AddZoneModal.jsx","webpack://openboxes/./src/js/components/locations-configuration/modals/ImportBinModal.jsx","webpack://openboxes/./src/js/components/locations-configuration/ZoneTable.jsx","webpack://openboxes/./src/js/components/locations-configuration/ZoneAndBinLocations.jsx","webpack://openboxes/./src/js/components/locations-configuration/LocationsConfigurationWizard.jsx","webpack://openboxes/./src/js/components/wizard/WizardPage.jsx","webpack://openboxes/./src/js/components/wizard/WizardSteps.jsx","webpack://openboxes/./src/js/components/wizard/WizardTitle.jsx","webpack://openboxes/./src/js/components/wizard/Wizard.jsx","webpack://openboxes/./src/js/utils/Checkbox.jsx","webpack://openboxes/./src/js/components/form-elements/CheckboxField.jsx"],"sourcesContent":["import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Select from \"utils/Select\";\n\nconst SelectField = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const renderInput = ({ className, ...attributes }) => (\n    <Select\n      name={attributes.id}\n      {...attributes}\n      className={`select-xs ${className}`}\n      classNamePrefix=\"react-select\"\n    />\n  );\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default SelectField;\n","import React, { Component } from \"react\";\n\nimport arrayMutators from \"final-form-arrays\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\nimport Modal from \"react-modal\";\n\nimport { renderFormField } from \"utils/form-utils\";\nimport Translate from \"utils/Translate\";\n\nclass ModalWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  openModal() {\n    this.props.onOpen();\n    this.setState({ showModal: true });\n  }\n\n  closeModal() {\n    this.props.onClose();\n    this.setState({ showModal: false });\n  }\n\n  save(values) {\n    this.props.onSave(values);\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    const Title = this.props.title;\n    const { defaultTitleMessage } = this.props;\n\n    return (\n      <div className={this.props.wrapperClassName}>\n        {this.props.renderButton ? (\n          this.props.renderButton({ openModal: this.openModal })\n        ) : (\n          <button\n            type=\"button\"\n            className={`btn-xs ${this.props.btnOpenClassName}`}\n            style={this.props.btnOpenStyle}\n            disabled={this.props.btnOpenDisabled}\n            onClick={() => this.openModal()}\n          >\n            {this.props.btnOpenIcon && (\n              <i\n                className={`fa ${this.props.btnOpenIcon} mr-1`}\n                aria-hidden=\"true\"\n              />\n            )}\n            {this.props.btnOpenText && !this.props.btnOpenAsIcon && (\n              <Translate\n                id={this.props.btnOpenText}\n                defaultMessage={this.props.btnOpenDefaultText}\n              />\n            )}\n          </button>\n        )}\n        <Modal\n          isOpen={this.props.showModal || this.state.showModal}\n          onRequestClose={this.closeModal}\n          className=\"modal-content-custom\"\n          shouldCloseOnOverlayClick={false}\n        >\n          <div\n            className={this.props.bodyContainerClassName}\n            style={this.props.bodyContainerStyle}\n          >\n            {typeof Title === \"string\" ? (\n              <h5 className=\"text-center\">\n                {\" \"}\n                <Translate id={Title} defaultMessage={defaultTitleMessage} />\n              </h5>\n            ) : (\n              <Title />\n            )}\n            <hr />\n            <Form\n              onSubmit={(values) => this.save(values)}\n              initialValues={this.props.initialValues}\n              validate={this.props.validate}\n              mutators={{ ...arrayMutators }}\n              render={({ handleSubmit, values }) => (\n                <form id=\"modalForm\" onSubmit={handleSubmit}>\n                  {this.props.children}\n                  {this.props.renderBodyWithValues(values)}\n\n                  {_.map(this.props.fields, (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName, {\n                      ...this.props.formProps,\n                      values,\n                    }),\n                  )}\n\n                  <hr />\n\n                  <div\n                    className={this.props.btnContainerClassName}\n                    role=\"group\"\n                    style={this.props.btnContainerStyle}\n                  >\n                    <button\n                      type=\"button\"\n                      className={this.props.btnCancelClassName}\n                      style={this.props.btnCancelStyle}\n                      onClick={() => this.closeModal()}\n                    >\n                      <Translate\n                        id={this.props.btnCancelText}\n                        defaultMessage={this.props.btnCancelDefaultText}\n                      />\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className={this.props.btnSaveClassName}\n                      style={this.props.btnSaveStyle}\n                      disabled={this.props.btnSaveDisabled}\n                    >\n                      <Translate\n                        id={this.props.btnSaveText}\n                        defaultMessage={this.props.btnSaveDefaultText}\n                      />\n                    </button>\n                  </div>\n                </form>\n              )}\n            />\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalWrapper;\n\nModalWrapper.propTypes = {\n  /** Open button properties */\n  btnOpenText: PropTypes.string,\n  btnOpenDefaultText: PropTypes.string,\n  btnOpenClassName: PropTypes.string,\n  btnOpenStyle: PropTypes.shape({}),\n  btnOpenDisabled: PropTypes.bool,\n  btnOpenAsIcon: PropTypes.bool,\n  btnOpenIcon: PropTypes.string,\n\n  /** Modal title property */\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  defaultTitleMessage: PropTypes.string.isRequired,\n\n  /** Modal body container properties */\n  children: PropTypes.element,\n  bodyContainerClassName: PropTypes.string,\n  bodyContainerStyle: PropTypes.shape({}),\n\n  /** Button container properties */\n  btnContainerClassName: PropTypes.string,\n  btnContainerStyle: PropTypes.shape({}),\n  renderButton: PropTypes.func,\n\n  /** Wrapper properties */\n  wrapperClassName: PropTypes.string,\n\n  /** Save button properties */\n  btnSaveText: PropTypes.string,\n  btnSaveDefaultText: PropTypes.string,\n  btnSaveClassName: PropTypes.string,\n  btnSaveStyle: PropTypes.shape({}),\n  btnSaveDisabled: PropTypes.bool,\n\n  /** Cancel button properties */\n  btnCancelText: PropTypes.string,\n  btnCancelDefaultText: PropTypes.string,\n  btnCancelClassName: PropTypes.string,\n  btnCancelStyle: PropTypes.shape({}),\n\n  /** Functional properties */\n  onOpen: PropTypes.func,\n  onSave: PropTypes.func,\n  onClose: PropTypes.func,\n\n  /** Form elements */\n  validate: PropTypes.func,\n  renderBodyWithValues: PropTypes.func,\n  initialValues: PropTypes.oneOfType([\n    PropTypes.shape({}),\n    PropTypes.arrayOf(PropTypes.shape({})),\n  ]),\n  fields: PropTypes.shape({}),\n  formProps: PropTypes.shape({}),\n  showModal: PropTypes.bool,\n};\n\nModalWrapper.defaultProps = {\n  btnOpenText: \"react.default.button.open.label\",\n  btnOpenDefaultText: \"Open\",\n  btnOpenClassName: \"btn btn-outline-primary\",\n  btnOpenStyle: {},\n  btnOpenDisabled: false,\n  btnOpenAsIcon: false,\n  btnOpenIcon: \"\",\n\n  children: null,\n  bodyContainerClassName: \"modal-body-container\",\n  bodyContainerStyle: {},\n\n  btnContainerClassName: \"btn-group float-right\",\n  btnContainerStyle: {},\n\n  wrapperClassName: null,\n\n  btnSaveText: \"react.default.button.save.label\",\n  btnSaveDefaultText: \"Save\",\n  btnSaveClassName: \"btn btn-outline-success\",\n  btnSaveStyle: {},\n  btnSaveDisabled: false,\n\n  btnCancelText: \"react.default.button.cancel.label\",\n  btnCancelDefaultText: \"Cancel\",\n  btnCancelClassName: \"btn btn-outline-secondary\",\n  btnCancelStyle: {},\n\n  renderButton: undefined,\n\n  onOpen: () => null,\n  onSave: () => null,\n  onClose: () => null,\n\n  validate: () => null,\n  renderBodyWithValues: () => null,\n  initialValues: [],\n  fields: {},\n  formProps: {},\n  showModal: false,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst Textarea = ({\n  onChange,\n  className = \"\",\n  fieldRef,\n  isResizable,\n  ...props\n}) => {\n  const handleChange = (event) => {\n    const { value } = event.target;\n\n    if (onChange) {\n      onChange(value);\n    }\n  };\n\n  return (\n    <textarea\n      ref={fieldRef}\n      onKeyPress={(event) => {\n        if (event.which === 13 /* Enter */) {\n          event.preventDefault();\n        }\n      }}\n      className={`form-control form-control-xs ${className} resizable-${isResizable}`}\n      {...props}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default Textarea;\n\nTextarea.propTypes = {\n  onChange: PropTypes.func,\n  className: PropTypes.string,\n  fieldRef: PropTypes.func,\n  isResizable: PropTypes.bool,\n};\n\nTextarea.defaultProps = {\n  isResizable: true,\n  onChange: null,\n  className: \"\",\n  fieldRef: null,\n};\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Textarea from \"utils/Textarea\";\n\nconst TextareaField = (props) => {\n  const renderInput = (attributes) => <Textarea {...attributes} />;\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default TextareaField;\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Input from \"utils/Input\";\n\nconst TextField = (props) => {\n  const renderInput = ({ inputClassName, className, ...attributes }) => (\n    <Input\n      isFormElement\n      className={inputClassName || className}\n      {...attributes}\n    />\n  );\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default TextField;\n","import React, { useCallback } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport Button from \"components/form-elements/Button\";\nimport useTranslate from \"hooks/useTranslate\";\n\nimport \"./style.scss\";\n\nconst FileSelect = ({\n  height,\n  width,\n  minHeight,\n  dropzoneText,\n  buttonLabel,\n  buttonVariant,\n  className,\n  multiple,\n  maxFiles,\n  allowedExtensions,\n  ...fieldProps\n}) => {\n  const onDrop = useCallback((acceptedFiles) => {\n    fieldProps.onChange?.(multiple ? acceptedFiles : acceptedFiles[0]);\n  }, []);\n\n  const translate = useTranslate();\n\n  const getFileExtension = (file) => file.path.split(\".\")?.[1];\n\n  const validateFileType = (file) => {\n    if (\n      !allowedExtensions.length ||\n      allowedExtensions.includes(getFileExtension(file))\n    ) {\n      return null;\n    }\n\n    return {\n      code: \"invalid-extension\",\n      message: translate(\n        \"react.default.error.invalidFileExtension.label\",\n        `File extension should be one of: ${allowedExtensions.join(\", \")}`,\n        [allowedExtensions.join(\", \")],\n      ),\n    };\n  };\n\n  const { getRootProps, getInputProps, open, acceptedFiles, fileRejections } =\n    useDropzone({\n      onDrop,\n      noClick: true,\n      noKeyboard: true,\n      validator: validateFileType,\n      multiple,\n      maxFiles,\n    });\n\n  const mapFiles = (files) =>\n    files.map((file) => {\n      const data = file?.path ? file : file.file;\n      return (\n        <li key={data.path}>\n          {data.path} ({data.size} bytes)\n          {file?.errors?.length ? (\n            <ul>\n              {file.errors.map((e) => (\n                <li key={e.code}>{e.message}</li>\n              ))}\n            </ul>\n          ) : null}\n        </li>\n      );\n    });\n\n  return (\n    <div style={{ width, height, minHeight }}>\n      <div\n        {...getRootProps({\n          className: `dropzone d-flex flex-column justify-content-center align-items-center p-3 bg-light ${className}`,\n        })}\n        {...fieldProps}\n      >\n        <input {...getInputProps()} />\n        <h5 className=\"text-secondary font-italic\">\n          {translate(dropzoneText.id, dropzoneText.defaultMessage)}\n        </h5>\n        <Button\n          className=\"mt-3\"\n          onClick={open}\n          variant={buttonVariant}\n          defaultLabel={buttonLabel.defaultMessage}\n          label={buttonLabel.id}\n        />\n      </div>\n      {acceptedFiles.length ? (\n        <aside>\n          <h6 className=\"text-success\">\n            {translate(\"react.default.acceptedFiles.label\", \"Accepted Files\")}:\n          </h6>\n          <ul>{mapFiles(acceptedFiles)}</ul>\n        </aside>\n      ) : null}\n      {fileRejections.length ? (\n        <aside>\n          <h6 className=\"text-danger\">\n            {translate(\"react.default.rejectedFiles.label\", \"Rejected Files\")}:\n          </h6>\n          <ul>{mapFiles(fileRejections)}</ul>\n        </aside>\n      ) : null}\n    </div>\n  );\n};\n\nexport default FileSelect;\n\nFileSelect.propTypes = {\n  // Text displayed on the dropzone\n  dropzoneText: PropTypes.shape({\n    id: PropTypes.string,\n    defaultMessage: PropTypes.string,\n  }),\n  // Label displayed on the button for uploading files\n  buttonLabel: PropTypes.shape({\n    id: PropTypes.string,\n    defaultMessage: PropTypes.string,\n  }),\n  buttonVariant: PropTypes.string,\n  // width of the dropzone\n  width: PropTypes.string,\n  // height of the dropzone\n  height: PropTypes.string,\n  minHeight: PropTypes.string,\n  // classname applied to the dropzone\n  className: PropTypes.string,\n  // indicator whether we can upload multiple files\n  multiple: PropTypes.bool,\n  // maximal count of files to upload (disabled when set to null)\n  maxFiles: PropTypes.number,\n  // allowed extensions for importing (disabled when set to empty array)\n  allowedExtensions: PropTypes.arrayOf(PropTypes.string),\n};\n\nFileSelect.defaultProps = {\n  dropzoneText: {\n    id: \"react.default.dragDropHere.label\",\n    defaultMessage: \"Drag and drop file here.\",\n  },\n  buttonLabel: {\n    id: \"react.default.fileDialog.label\",\n    defaultMessage: \"OPEN FILE DIALOG\",\n  },\n  buttonVariant: \"grayed\",\n  width: \"auto\",\n  height: \"auto\",\n  minHeight: \"200px\",\n  className: \"\",\n  multiple: false,\n  maxFiles: null,\n  allowedExtensions: [],\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Translate from \"utils/Translate\";\n\nconst ForecastingNotsupported = ({ previousPage }) => (\n  <>\n    <div className=\"classic-form with-description forecasting\">\n      <div className=\"form-title\">\n        <Translate\n          id=\"react.locationsConfiguration.forecasting.label\"\n          defaultMessage=\"Forecasting\"\n        />\n      </div>\n      <div className=\"form-subtitle\">\n        <Translate\n          id=\"react.locationsConfiguration.forecast.notsupported.label\"\n          defaultMessage=\"This section is not supported for the chosen Location Type.\"\n        />\n      </div>\n    </div>\n    <div className=\"submit-buttons\">\n      <button\n        type=\"button\"\n        onClick={previousPage}\n        className=\"btn btn-outline-primary float-left btn-xs\"\n      >\n        <Translate\n          id=\"react.default.button.previous.label\"\n          defaultMessage=\"Previous\"\n        />\n      </button>\n      <button\n        type=\"submit\"\n        className=\"btn btn-outline-primary float-right btn-xs\"\n      >\n        <Translate\n          id=\"react.default.button.finish.label\"\n          defaultMessage=\"Finish\"\n        />\n      </button>\n    </div>\n  </>\n);\n\nexport default ForecastingNotsupported;\n\nForecastingNotsupported.propTypes = {\n  previousPage: PropTypes.func.isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-modal\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n  LOCATION_CONFIGURATION_URL,\n  LOCATION_URL,\n  PRODUCT_CONFIGURATION_URL,\n} from \"consts/applicationUrls\";\nimport Translate from \"utils/Translate\";\n\nimport \"components/locations-configuration/SuccessMessage.scss\";\n\nconst SuccessMessage = ({\n  setShowSuccessMessage,\n  history,\n  successMessageOpen,\n}) => (\n  <Modal\n    isOpen={successMessageOpen}\n    className=\"location-modal\"\n    onRequestClose={setShowSuccessMessage}\n  >\n    <div className=\"success-main\">\n      <div className=\"success-wrapper\">\n        <div className=\"cancel-icon\">\n          <i\n            className=\"fa fa-times\"\n            aria-hidden=\"true\"\n            onClick={setShowSuccessMessage}\n          />\n        </div>\n        <div className=\"success-content\">\n          <i className=\"fa fa-check-circle-o success-icon\" aria-hidden=\"true\" />\n          <h2>\n            <Translate\n              id=\"react.locationsConfiguration.success.congratulations\"\n              defaultMessage=\"Congratulations\"\n            />\n          </h2>\n          <p>\n            <Translate\n              id=\"react.locationsConfiguration.success.subtitle\"\n              defaultMessage=\"You have created your first location!\"\n            />\n          </p>\n          <div className=\"success-buttons-section d-flex flex-column\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary\"\n              onClick={() => {\n                window.location = LOCATION_CONFIGURATION_URL.create();\n              }}\n            >\n              <Translate\n                id=\"react.locationsConfiguration.success.createAnother\"\n                defaultMessage=\"Create another location\"\n              />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary\"\n              onClick={() => {\n                window.location = LOCATION_URL.list();\n              }}\n            >\n              <Translate\n                id=\"react.locationsConfiguration.success.viewLocationList\"\n                defaultMessage=\"View Location List\"\n              />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary\"\n              onClick={() => history.push(PRODUCT_CONFIGURATION_URL.index())}\n            >\n              <Translate\n                id=\"react.locationsConfiguration.success.createCategoriesAndProducts=\"\n                defaultMessage=\"Create Categories and Products\"\n              />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Modal>\n);\n\nSuccessMessage.propTypes = {\n  setShowSuccessMessage: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  successMessageOpen: PropTypes.bool.isRequired,\n};\n\nexport default withRouter(SuccessMessage);\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport TextField from \"components/form-elements/TextField\";\nimport ForecastingNotsupported from \"components/locations-configuration/ForecastingNotsupported\";\nimport SuccessMessage from \"components/locations-configuration/SuccessMessage\";\nimport apiClient from \"utils/apiClient\";\nimport { renderFormField } from \"utils/form-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"components/locations-configuration/Forecasting.scss\";\n\nconst FIELDS = {\n  expectedLeadTimeDays: {\n    type: TextField,\n    label: \"address.address.label\",\n    defaultMessage: \"Expected Lead Time Days\",\n    attributes: {\n      type: \"number\",\n      withTooltip: true,\n      tooltip:\n        \"react.locationsConfiguration.forecast.expectedLeadTime.tooltip.label\",\n    },\n  },\n  replenishmentPeriodDays: {\n    type: TextField,\n    label: \"address.address.label\",\n    defaultMessage: \"Replenishment Period Days\",\n    attributes: {\n      type: \"number\",\n      withTooltip: true,\n      tooltip:\n        \"react.locationsConfiguration.forecast.replenishmentPeriod.tooltip.label\",\n    },\n  },\n  demandTimePeriodDays: {\n    type: TextField,\n    label: \"address.address.label\",\n    defaultMessage: \"Demand Time Period Days\",\n    attributes: {\n      type: \"number\",\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.forecast.demandTime.tooltip.label\",\n    },\n  },\n};\n\nconst validate = (values) => {\n  const requiredFields = [];\n  const isNumeric = (n) => !Number.isNaN(parseFloat(n));\n\n  return Object.keys(FIELDS).reduce((acc, fieldName) => {\n    if (!values[fieldName] && requiredFields.includes(fieldName)) {\n      return {\n        ...acc,\n        [fieldName]: \"react.default.error.requiredField.label\",\n      };\n    }\n    if (values[fieldName] && !isNumeric(values[fieldName])) {\n      return {\n        ...acc,\n        [fieldName]: \"react.default.error.numericField.label\",\n      };\n    }\n    if (values[fieldName] < 0) {\n      return {\n        ...acc,\n        [fieldName]: \"react.default.error.positiveNumberField.label\",\n      };\n    }\n    return acc;\n  }, {});\n};\n\nclass Forecasting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: this.props.initialValues,\n      locationId: this.props.initialValues.locationId,\n      isForecastingSupported: true,\n      showSuccessMessage: false,\n    };\n    this.setShowSuccessMessage = this.setShowSuccessMessage.bind(this);\n  }\n\n  setShowSuccessMessage() {\n    this.setState((prev) => ({ showSuccessMessage: !prev.showSuccessMessage }));\n  }\n\n  saveForecasting(values) {\n    this.props.showSpinner();\n    const locationUrl = `/api/locations/${this.state.locationId}/updateForecastingConfiguration`;\n    this.props.hideSpinner();\n    apiClient\n      .post(locationUrl, values)\n      .then(() => {\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.locationsConfiguration.alert.forecastSaveCompleted.label\",\n            \"Forecast values for the location have been set!\",\n          ),\n          { timeout: 3000 },\n        );\n        this.setState({ showSuccessMessage: true });\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n        return Promise.reject(\n          new Error(\n            this.props.translate(\n              \"react.locationsConfiguration.forecasting.error.forecastSave.label\",\n              \"Could not set values of forecasting for this location\",\n            ),\n          ),\n        );\n      });\n  }\n\n  previousPage(values) {\n    this.props.previousPage({ ...this.state.values, forecasting: values });\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex flex-column\">\n        <SuccessMessage\n          successMessageOpen={this.state.showSuccessMessage}\n          setShowSuccessMessage={this.setShowSuccessMessage}\n        />\n        {this.state.isForecastingSupported ? (\n          <div className=\"configuration-wizard-content flex-column\">\n            <Form\n              onSubmit={(values) => this.saveForecasting(values)}\n              validate={validate}\n              initialValues={_.get(this.state.values, \"forecasting\")}\n              render={({ handleSubmit, values }) => (\n                <form onSubmit={handleSubmit} className=\"w-100\">\n                  <div className=\"classic-form with-description forecasting\">\n                    <div className=\"form-title\">\n                      <Translate\n                        id=\"react.locationsConfiguration.forecasting.label\"\n                        defaultMessage=\"Forecasting\"\n                      />\n                    </div>\n                    <div className=\"form-subtitle\">\n                      <Translate\n                        id=\"react.locationsConfiguration.forecasting.additionalTitle.label\"\n                        defaultMessage=\"On this page, you can set default values to use in forecasting for this location.\n                                      These values are used in the average demand calculation and in the forecast report.\"\n                      />\n                    </div>\n\n                    {_.map(FIELDS, (fieldConfig, fieldName) =>\n                      renderFormField(fieldConfig, fieldName),\n                    )}\n                  </div>\n                  <div className=\"submit-buttons\">\n                    <button\n                      type=\"button\"\n                      onClick={() => this.previousPage(values)}\n                      className=\"btn btn-outline-primary float-left btn-xs\"\n                    >\n                      <Translate\n                        id=\"react.default.button.previous.label\"\n                        defaultMessage=\"Previous\"\n                      />\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-outline-primary float-right btn-xs\"\n                    >\n                      <Translate\n                        id=\"react.default.button.finish.label\"\n                        defaultMessage=\"Finish\"\n                      />\n                    </button>\n                  </div>\n                </form>\n              )}\n            />\n          </div>\n        ) : (\n          <ForecastingNotsupported previousPage={this.props.previousPage} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nconst mapDispatchToProps = {\n  showSpinner,\n  hideSpinner,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Forecasting);\n\nForecasting.propTypes = {\n  previousPage: PropTypes.func.isRequired,\n  initialValues: PropTypes.shape({\n    active: PropTypes.bool,\n    name: PropTypes.string,\n    locationNumber: PropTypes.string,\n    locationType: PropTypes.string,\n    organization: PropTypes.string,\n    locationGroup: PropTypes.string,\n    manager: PropTypes.string,\n    locationId: PropTypes.string,\n  }).isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport { LOCATION } from \"api/urls\";\nimport TextField from \"components/form-elements/TextField\";\nimport apiClient, { mapToEmptyString } from \"utils/apiClient\";\nimport { renderFormField } from \"utils/form-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"components/locations-configuration/LocationAddress.scss\";\n\nconst FIELDS = {\n  address: {\n    type: TextField,\n    label: \"address.address.label\",\n    defaultMessage: \"Street address\",\n  },\n  address2: {\n    type: TextField,\n    label: \"address.address2.label\",\n    defaultMessage: \"Street address 2\",\n  },\n  city: {\n    type: TextField,\n    label: \"address.city.label\",\n    defaultMessage: \"City\",\n  },\n  stateOrProvince: {\n    type: TextField,\n    label: \"address.stateOrProvince.label\",\n    defaultMessage: \"State/Province\",\n  },\n  postalCode: {\n    type: TextField,\n    label: \"address.postalCode.label\",\n    defaultMessage: \"Postal code\",\n  },\n  country: {\n    type: TextField,\n    label: \"address.country.label\",\n    defaultMessage: \"Country\",\n  },\n  description: {\n    type: TextField,\n    label: \"address.description.label\",\n    defaultMessage: \"Description\",\n  },\n};\n\nconst validate = (values) =>\n  Object.keys(FIELDS).reduce((acc, fieldName) => {\n    if (values[fieldName] && values[fieldName].length > 255) {\n      return {\n        ...acc,\n        [fieldName]: \"react.default.error.tooLongInput.label\",\n      };\n    }\n    return acc;\n  }, {});\n\nclass LocationAddress extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: this.props.initialValues,\n      locationId: this.props.initialValues.locationId,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.locationId) {\n      this.fetchLocation();\n    }\n  }\n\n  fetchLocation() {\n    const url = `/api/locations/${this.props.match.params.locationId}`;\n    apiClient\n      .get(url)\n      .then((response) => {\n        const location = response.data.data;\n        this.setState((prev) => ({\n          values: {\n            ...prev.values,\n            address: location.address,\n          },\n        }));\n      })\n      .catch(() =>\n        Promise.reject(\n          new Error(\n            this.props.translate(\n              \"react.locationsConfiguration.error.fetchingLocation\",\n              \"Could not load location data\",\n            ),\n          ),\n        ),\n      );\n  }\n\n  saveAddressOfLocation(values, callback) {\n    this.props.showSpinner();\n    const payload = mapToEmptyString(values, [null]);\n    // If field was edited it is undefined and we need to send empty string\n    // to remove it from location. If it is null, there is no need to send it, because\n    // it will be null be default\n    // We can't send empty address, because address.address is not nullable field\n    const addressPayload = !_.isEmpty(payload) ? { address: payload } : {};\n    apiClient\n      .post(LOCATION(this.state.locationId), addressPayload)\n      .then(() => {\n        this.props.hideSpinner();\n        callback({\n          ...this.state.values,\n          address: values,\n          locationId: this.state.locationId,\n        });\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n        return Promise.reject(\n          new Error(\n            this.props.translate(\n              \"react.locationsConfiguration.error.addAddress.label\",\n              \"Could not add address\",\n            ),\n          ),\n        );\n      });\n  }\n\n  nextPage(values) {\n    this.saveAddressOfLocation(values, (val) => {\n      Alert.success(\n        this.props.translate(\n          \"react.locationsConfiguration.alert.addressSaveCompleted.label\",\n          \"Address was succesfully added to the location!\",\n        ),\n        { timeout: 3000 },\n      );\n      this.props.nextPage(val);\n    });\n  }\n\n  previousPage(values) {\n    this.saveAddressOfLocation(values, this.props.previousPage);\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex flex-column\">\n        <div className=\"configuration-wizard-content flex-column\">\n          <Form\n            onSubmit={(values) => this.nextPage(values)}\n            validate={validate}\n            initialValues={_.get(this.state.values, \"address\")}\n            render={({ values, handleSubmit }) => (\n              <form onSubmit={handleSubmit} className=\"w-100\">\n                <div className=\"classic-form with-description location-address\">\n                  <div className=\"form-title\">\n                    <Translate id=\"address.label\" defaultMessage=\"Address\" />\n                  </div>\n                  <div className=\"form-subtitle\">\n                    <Translate\n                      id=\"react.locationsConfiguration.address.additionalTitle.label\"\n                      defaultMessage=\"Enter the address for your location below. This address can be referenced in custom purchasing or shipping documentation.\"\n                    />\n                  </div>\n\n                  {_.map(FIELDS, (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName),\n                  )}\n                </div>\n                <div className=\"submit-buttons\">\n                  <button\n                    type=\"button\"\n                    onClick={() => this.previousPage(values)}\n                    className=\"btn btn-outline-primary float-left btn-xs\"\n                  >\n                    <Translate\n                      id=\"react.default.button.previous.label\"\n                      defaultMessage=\"Previous\"\n                    />\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary float-right btn-xs\"\n                  >\n                    <Translate\n                      id=\"react.default.button.next.label\"\n                      defaultMessage=\"Next\"\n                    />\n                  </button>\n                </div>\n              </form>\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nconst mapDispatchToProps = {\n  showSpinner,\n  hideSpinner,\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(LocationAddress),\n);\n\nLocationAddress.propTypes = {\n  initialValues: PropTypes.shape({\n    active: PropTypes.bool,\n    name: PropTypes.string,\n    locationNumber: PropTypes.string,\n    locationType: PropTypes.string,\n    organization: PropTypes.string,\n    locationGroup: PropTypes.string,\n    manager: PropTypes.string,\n    locationId: PropTypes.string,\n    zoneTypeId: PropTypes.string,\n    binTypeId: PropTypes.string,\n  }).isRequired,\n  nextPage: PropTypes.func.isRequired,\n  previousPage: PropTypes.func.isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  locationId: PropTypes.string.isRequired,\n  translate: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({ locationId: PropTypes.string }),\n  }).isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { SliderPicker } from \"react-color\";\nimport { Tooltip } from \"react-tippy\";\n\nimport Input from \"utils/Input\";\n\nconst ColorPicker = ({ value, onChange }) => {\n  const handleChange = (color) => {\n    const hex = color.hex.split(\"#\")[1];\n    onChange(hex);\n  };\n\n  const colorHex = value ? `#${value}` : \"#ffffff\";\n\n  return (\n    <Tooltip\n      html={\n        <div style={{ width: 350 }}>\n          <SliderPicker color={colorHex} onChangeComplete={handleChange} />\n        </div>\n      }\n      theme=\"transparent\"\n      arrow=\"true\"\n      trigger=\"click\"\n      interactive\n      delay=\"150\"\n      duration=\"250\"\n    >\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <span\n            className=\"input-group-text\"\n            style={{ backgroundColor: colorHex }}\n          >\n            &nbsp;&nbsp;\n          </span>\n        </div>\n        <Input value={value} onChange={(val) => onChange(val)} />\n        <div className=\"input-group-append\">\n          <button\n            type=\"button\"\n            className=\"input-group-text\"\n            onClick={() => onChange(null)}\n          >\n            <i className=\"fa fa-close\" />\n          </button>\n        </div>\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default ColorPicker;\n\nColorPicker.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nColorPicker.defaultProps = {\n  value: null,\n};\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport ColorPicker from \"utils/ColorPicker\";\n\nconst ColorPickerField = (props) => {\n  const renderInput = (attributes) => <ColorPicker {...attributes} />;\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default ColorPickerField;\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport Modal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport TextField from \"components/form-elements/TextField\";\nimport apiClient from \"utils/apiClient\";\nimport { renderFormField } from \"utils/form-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"components/locations-configuration/modals/ConfigurationModal.scss\";\n\nfunction validate(values) {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"react.default.error.requiredField.label\";\n  }\n\n  return errors;\n}\n\nconst FIELDS = {\n  name: {\n    type: TextField,\n    label: \"react.locationsConfiguration.name.label\",\n    defaultMessage: \"Name\",\n    attributes: {\n      required: true,\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.locationGroupName.tooltip.label\",\n    },\n  },\n};\n\nclass AddLocationGroupModal extends Component {\n  save(values) {\n    if (values.name) {\n      this.props.showSpinner();\n\n      const locationUrl = \"/api/locationGroups\";\n\n      const payload = {\n        name: values.name,\n      };\n\n      apiClient\n        .post(locationUrl, payload)\n        .then((response) => {\n          this.props.hideSpinner();\n          Alert.success(\n            this.props.translate(\n              \"react.locationsConfiguration.alert.locationGroupSaveCompleted.label\",\n              \"Location group was successfully saved!\",\n            ),\n            { timeout: 3000 },\n          );\n          const resp = response.data.data;\n          this.props.onResponse({ id: resp.id, name: values.name });\n          this.props.onClose();\n        })\n        .catch(() => {\n          this.props.hideSpinner();\n          return Promise.reject(\n            new Error(\n              this.props.translate(\n                \"react.locationsConfiguration.error.createLocationGroup.label\",\n                \"Could not create location group\",\n              ),\n            ),\n          );\n        });\n    }\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        className=\"modal-content\"\n        shouldCloseOnOverlayClick={false}\n      >\n        <div>\n          <h4>\n            <Translate\n              id=\"react.locationsConfiguration.locationGroupModal.title.label\"\n              defaultMessage=\"Add new Location Group\"\n            />\n          </h4>\n          <div className=\"my-3\">\n            <Translate\n              id=\"react.locationsConfiguration.locationGroupModal.subtitle.label\"\n              defaultMessage=\"Location groups allow users with large numbers of locations to group them into networks or geographical areas. Depots within a location group will be able to ship to any other depot, but they will only be able to see and ship to receiving locations within their group. Learn more about location groups\"\n            />\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://openboxes.atlassian.net/wiki/spaces/OBW/pages/1744732161/Location+Groups\"\n            >\n              <Translate\n                id=\"react.locationsConfiguration.here.label\"\n                defaultMessage=\"here\"\n              />\n            </a>\n            .&nbsp;\n          </div>\n          <Form\n            onSubmit={(values) => this.save(values)}\n            initialValues={this.initialValues}\n            validate={validate}\n            render={({ handleSubmit, values }) => (\n              <form id=\"modalForm\" onSubmit={handleSubmit}>\n                <div className=\"classic-form with-description\">\n                  {_.map(FIELDS, (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName, {\n                      ...this.formProps,\n                      values,\n                    }),\n                  )}\n                </div>\n                <div className=\"btn-toolbar justify-content-between pt-3\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-primary ml-1\"\n                    onClick={() => this.props.onClose()}\n                  >\n                    <Translate id=\"Cancel\" defaultMessage=\"Cancel\" />\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary align-self-end\"\n                  >\n                    <Translate id=\"Save\" defaultMessage=\"Save\" />\n                  </button>\n                </div>\n              </form>\n            )}\n          />\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    showSpinner,\n    hideSpinner,\n  })(AddLocationGroupModal),\n);\n\nAddLocationGroupModal.propTypes = {\n  hideSpinner: PropTypes.func.isRequired,\n  isOpen: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onResponse: PropTypes.func.isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport Modal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport TextareaField from \"components/form-elements/TextareaField\";\nimport TextField from \"components/form-elements/TextField\";\nimport apiClient from \"utils/apiClient\";\nimport { renderFormField } from \"utils/form-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"components/locations-configuration/modals/ConfigurationModal.scss\";\n\nfunction validate(values) {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"react.default.error.requiredField.label\";\n  }\n\n  return errors;\n}\n\nconst FIELDS = {\n  name: {\n    type: TextField,\n    label: \"react.locationsConfiguration.name.label\",\n    defaultMessage: \"Name\",\n    attributes: {\n      required: true,\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.organizationName.tooltip.label\",\n    },\n  },\n  description: {\n    type: TextareaField,\n    label: \"react.locationsConfiguration.description.label\",\n    defaultMessage: \"Description\",\n    attributes: {\n      rows: 3,\n      withTooltip: true,\n      tooltip:\n        \"react.locationsConfiguration.organizationDescription.tooltip.label\",\n    },\n  },\n};\n\nclass AddOrganizationModal extends Component {\n  save(values) {\n    if (values.name) {\n      this.props.showSpinner();\n\n      const locationUrl = \"/api/organizations\";\n\n      const payload = {\n        name: values.name,\n        description: values.description,\n      };\n\n      apiClient\n        .post(locationUrl, payload)\n        .then((response) => {\n          this.props.hideSpinner();\n          Alert.success(\n            this.props.translate(\n              \"react.locationsConfiguration.alert.organizationSaveCompleted.label\",\n              \"Organization was successfully saved!\",\n            ),\n            { timeout: 3000 },\n          );\n          const resp = response.data.data;\n          this.props.onResponse({ id: resp.id, name: values.name });\n          this.props.onClose();\n        })\n        .catch(() => {\n          this.props.hideSpinner();\n          return Promise.reject(\n            new Error(\n              this.props.translate(\n                \"react.locationsConfiguration.error.createOrganization.label\",\n                \"Could not create organization\",\n              ),\n            ),\n          );\n        });\n    }\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        className=\"modal-content\"\n        shouldCloseOnOverlayClick={false}\n      >\n        <div>\n          <h4>\n            <Translate\n              id=\"react.locationsConfiguration.organizationModal.title.label\"\n              defaultMessage=\"Add new Organization\"\n            />\n          </h4>\n          <div className=\"my-3\">\n            <Translate\n              id=\"react.locationsConfiguration.organizationModal.subtitle.label\"\n              defaultMessage=\"Enter a name and description for your organization. This organization is the company or entity that owns and manages the location. Read more about organizations\"\n            />\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://openboxes.atlassian.net/wiki/spaces/OBW/pages/1291452471/Configure+Organizations+and+Locations\"\n            >\n              <Translate\n                id=\"react.locationsConfiguration.here.label\"\n                defaultMessage=\"here\"\n              />\n            </a>\n            .&nbsp;\n          </div>\n          <Form\n            onSubmit={(values) => this.save(values)}\n            initialValues={this.initialValues}\n            validate={validate}\n            render={({ handleSubmit, values }) => (\n              <form id=\"modalForm\" onSubmit={handleSubmit}>\n                <div className=\"classic-form with-description\">\n                  {_.map(FIELDS, (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName, {\n                      ...this.formProps,\n                      values,\n                    }),\n                  )}\n                </div>\n                <div className=\"btn-toolbar justify-content-between pt-3\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-primary ml-1\"\n                    onClick={() => this.props.onClose()}\n                  >\n                    <Translate id=\"Cancel\" defaultMessage=\"Cancel\" />\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary align-self-end\"\n                  >\n                    <Translate id=\"Save\" defaultMessage=\"Save\" />\n                  </button>\n                </div>\n              </form>\n            )}\n          />\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    showSpinner,\n    hideSpinner,\n  })(AddOrganizationModal),\n);\n\nAddOrganizationModal.propTypes = {\n  hideSpinner: PropTypes.func.isRequired,\n  isOpen: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onResponse: PropTypes.func.isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Alert from \"react-s-alert\";\n\nimport { fetchUsers, hideSpinner, showSpinner } from \"actions\";\nimport CheckboxField from \"components/form-elements/CheckboxField\";\nimport ColorPickerField from \"components/form-elements/ColorPickerField\";\nimport FileField from \"components/form-elements/FileField\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TextField from \"components/form-elements/TextField\";\nimport AddLocationGroupModal from \"components/locations-configuration/modals/AddLocationGroupModal\";\nimport AddOrganizationModal from \"components/locations-configuration/modals/AddOrganizationModal\";\nimport ActivityCode from \"consts/activityCode\";\nimport { LOCATION_CONFIGURATION_URL } from \"consts/applicationUrls\";\nimport apiClient from \"utils/apiClient\";\nimport Checkbox from \"utils/Checkbox\";\nimport { convertToBase64 } from \"utils/file-utils\";\nimport { renderFormField } from \"utils/form-utils\";\nimport {\n  debounceLocationGroupsFetch,\n  debounceOrganizationsFetch,\n  debouncePeopleFetch,\n} from \"utils/option-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\nimport splitTranslation from \"utils/translation-utils\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport \"components/locations-configuration/LocationDetails.scss\";\n\nfunction validate(values) {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"react.default.error.requiredField.label\";\n  }\n\n  if (!values.organization) {\n    errors.organization = \"react.default.error.requiredField.label\";\n  }\n\n  if (!values.locationType) {\n    errors.locationType = \"react.default.error.requiredField.label\";\n  }\n\n  // Don't allow having NONE supported activity in combination with any other supported activity\n  if (\n    values.supportedActivities?.length > 1 &&\n    values.supportedActivities?.find(\n      (activity) => activity.value === ActivityCode.NONE,\n    )\n  ) {\n    errors.supportedActivities =\n      \"react.locationsConfiguration.error.supportedActivities.label\";\n  }\n\n  return errors;\n}\n\nconst FIELDS = {\n  active: {\n    type: CheckboxField,\n    label: \"react.locationsConfiguration.locationStatus.label\",\n    defaultMessage: \"Location Status\",\n    attributes: {\n      withLabel: true,\n      label: \"Active\",\n    },\n  },\n  name: {\n    type: TextField,\n    label: \"react.locationsConfiguration.name.label\",\n    defaultMessage: \"Name\",\n    attributes: {\n      required: true,\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.name.tooltip.label\",\n    },\n  },\n  locationNumber: {\n    type: TextField,\n    label: \"react.locationsConfiguration.locationNumber.label\",\n    defaultMessage: \"Location Number\",\n    attributes: {\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.locationNumber.tooltip.label\",\n    },\n  },\n  organization: {\n    type: SelectField,\n    label: \"react.locationsConfiguration.organization.label\",\n    defaultMessage: \"Organization\",\n    attributes: {\n      createNewFromModal: true,\n      createNewFromModalLabel:\n        \"react.locationsConfiguration.organizationModal.title.label\",\n      defaultMessage: \"Add new Organization\",\n      async: true,\n      required: true,\n      showValueTooltip: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.organization.tooltip.label\",\n      options: [],\n      filterOptions: (options) => options,\n    },\n    getDynamicAttr: ({\n      debouncedOrganizationsFetch,\n      openNewOrganizationModal,\n      injectionData,\n    }) => ({\n      loadOptions: debouncedOrganizationsFetch,\n      newOptionModalOpen: openNewOrganizationModal,\n      injectionData,\n    }),\n  },\n  locationGroup: {\n    type: SelectField,\n    label: \"react.locationsConfiguration.locationGroup.label\",\n    defaultMessage: \"Location Group\",\n    attributes: {\n      createNewFromModal: true,\n      createNewFromModalLabel:\n        \"react.locationsConfiguration.locationGroup.locationModal.title.label\",\n      defaultMessage: \"Add new Location Group\",\n      async: true,\n      showValueTooltip: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.locationGroup.tooltip.label\",\n      options: [],\n      filterOptions: (options) => options,\n    },\n    getDynamicAttr: ({\n      debouncedLocationGroupsFetch,\n      openNewLocationGroupModal,\n    }) => ({\n      loadOptions: debouncedLocationGroupsFetch,\n      newOptionModalOpen: openNewLocationGroupModal,\n    }),\n  },\n  manager: {\n    type: SelectField,\n    label: \"react.locationsConfiguration.manager.label\",\n    defaultMessage: \"Manager\",\n    attributes: {\n      async: true,\n      showValueTooltip: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      options: [],\n      labelKey: \"name\",\n      filterOptions: (options) => options,\n    },\n    getDynamicAttr: ({ debouncedPeopleFetch }) => ({\n      loadOptions: debouncedPeopleFetch,\n    }),\n  },\n};\n\nconst STYLE_FIELDS = {\n  logoFile: {\n    type: FileField,\n    label: \"react.locationsConfiguration.locationLogo.label\",\n    defaultMessage: \"Upload Logo\",\n    attributes: {\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.locationLogo.tooltip.label\",\n    },\n  },\n  bgColor: {\n    type: ColorPickerField,\n    label: \"react.locationsConfiguration.backgroundColor.label\",\n    defaultMessage: \"Background color\",\n    attributes: {\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.color.tooltip.label\",\n    },\n  },\n  fgColor: {\n    type: ColorPickerField,\n    label: \"react.locationsConfiguration.foregroundColor.label\",\n    defaultMessage: \"Foreground color\",\n    attributes: {\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.color.tooltip.label\",\n    },\n  },\n};\n\nclass LocationDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showOrganizationModal: false,\n      showLocationGroupModal: false,\n      values: this.props.initialValues,\n      useDefaultActivities:\n        this.props.initialValues.useDefaultActivities !== false,\n      locationTypes: [],\n      supportedActivities: [],\n      supportLinks: {},\n    };\n    this.openNewOrganizationModal = this.openNewOrganizationModal.bind(this);\n    this.openNewLocationGroupModal = this.openNewLocationGroupModal.bind(this);\n    this.debouncedPeopleFetch = debouncePeopleFetch(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n    );\n\n    this.debouncedLocationGroupsFetch = debounceLocationGroupsFetch(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n    );\n\n    this.debouncedOrganizationsFetch = debounceOrganizationsFetch(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n      [],\n      true,\n    );\n    this.getSupportLinks = this.getSupportLinks.bind(this);\n  }\n\n  componentDidMount() {\n    this.setInitialValues();\n    this.fetchLocationTypes();\n    this.getSupportLinks();\n    if (this.props.locConfTranslationsFetched) {\n      this.dataFetched = true;\n      this.fetchSupportedActivities();\n    }\n    if (this.props.match.params.locationId) {\n      this.fetchLocation();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.dataFetched && nextProps.locConfTranslationsFetched) {\n      this.dataFetched = true;\n      this.fetchSupportedActivities();\n    }\n  }\n\n  setInitialValues() {\n    if (_.isEmpty(this.props.initialValues)) {\n      this.setState({\n        values: {\n          active: true,\n        },\n      });\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getSupportLinks() {\n    const url = \"/api/supportLinks\";\n\n    apiClient.get(url).then((response) => {\n      const supportLinks = response.data.data;\n      this.setState({ supportLinks });\n    });\n  }\n\n  getSupportedActivities(locationType) {\n    return _.chain(locationType)\n      .get(\"supportedActivities\")\n      .map((value) => ({\n        value,\n        label: this.props.translate(\n          `react.locationsConfiguration.ActivityCode.${value}`,\n          value,\n        ),\n      }))\n      .value();\n  }\n\n  dataFetched = false;\n\n  fetchLocation() {\n    const url = `/api/locations/${this.props.match.params.locationId}`;\n    apiClient\n      .get(url)\n      .then((response) => {\n        const location = response.data.data;\n        if (!location) {\n          this.props.history.push(LOCATION_CONFIGURATION_URL.create());\n          return;\n        }\n        this.setState((prev) => ({\n          values: {\n            ...prev.values,\n            locationId: this.props.match.params.locationId,\n            ...location,\n            locationGroup: location.locationGroup\n              ? {\n                  value: location.locationGroup.id,\n                  id: location.locationGroup.id,\n                  name: location.locationGroup.name,\n                  label: location.locationGroup.name,\n                }\n              : \"\",\n            manager: location.manager ? location.manager : \"\",\n            locationType: location.locationType\n              ? {\n                  value: location.locationType.id,\n                  id: location.locationType.id,\n                  name: location.locationType.name,\n                  label: splitTranslation(\n                    location.locationType.name,\n                    this.props.locale,\n                  ),\n                }\n              : \"\",\n            supportedActivities: _.map(\n              location.supportedActivities,\n              (value) => ({\n                value,\n                label: this.props.translate(\n                  `react.locationsConfiguration.ActivityCode.${value}`,\n                  value,\n                ),\n              }),\n            ),\n            organization: {\n              value: location.organization.id,\n              id: location.organization.id,\n              name: location.organization.name,\n              label: `${location.organization.code} ${location.organization.name}`,\n            },\n          },\n        }));\n      })\n      .catch(() =>\n        Promise.reject(\n          new Error(\n            this.props.translate(\n              \"react.locationsConfiguration.error.fetchingLocation\",\n              \"Could not load location data\",\n            ),\n          ),\n        ),\n      );\n  }\n\n  fetchLocationTypes() {\n    const url = \"/api/locations/locationTypes\";\n\n    apiClient.get(url).then((response) => {\n      const resp = response.data.data;\n      const locationTypes = _.map(resp, (locationType) => {\n        const [en, fr] = _.split(locationType.name, \"|fr:\");\n        return {\n          ...locationType,\n          label: this.props.locale === \"fr\" && fr ? fr : en,\n        };\n      });\n\n      if (this.state.values.locationType) {\n        this.setState({ locationTypes });\n      } else {\n        const locationType = _.find(locationTypes, (type) =>\n          _.startsWith(type.name, \"Depot\"),\n        );\n        const supportedActivities = this.getSupportedActivities(locationType);\n        this.setState((prev) => ({\n          locationTypes,\n          values: { ...prev.values, locationType, supportedActivities },\n        }));\n      }\n    });\n  }\n\n  fetchSupportedActivities() {\n    const url = \"/api/locations/supportedActivities\";\n\n    apiClient.get(url).then((response) => {\n      const resp = response.data.data;\n      const supportedActivities = _.map(resp, (value) => ({\n        value,\n        label: this.props.translate(\n          `react.locationsConfiguration.ActivityCode.${value}`,\n          value,\n        ),\n      }));\n      this.setState({ supportedActivities });\n    });\n  }\n\n  openNewOrganizationModal() {\n    this.setState({ showOrganizationModal: true });\n  }\n\n  openNewLocationGroupModal() {\n    this.setState({ showLocationGroupModal: true });\n  }\n\n  saveLocationDetails(values) {\n    if (values.name && values.organization) {\n      this.props.showSpinner();\n\n      let locationUrl = \"\";\n      if (values.locationId) {\n        locationUrl = `/api/locations/${values.locationId}?useDefaultActivities=${this.state.useDefaultActivities}`;\n      } else {\n        locationUrl = `/api/locations?useDefaultActivities=${this.state.useDefaultActivities}`;\n      }\n\n      const payload = {\n        ...values,\n        supportedActivities: _.map(\n          values.supportedActivities,\n          (val) => val.value,\n        ),\n      };\n\n      apiClient\n        .post(locationUrl, payload)\n        .then((response) => {\n          this.props.hideSpinner();\n          Alert.success(\n            this.props.translate(\n              \"react.locationsConfiguration.alert.locationSaveCompleted.label\",\n              \"Location was successfully saved!\",\n            ),\n            { timeout: 3000 },\n          );\n          const resp = response.data.data;\n          this.props.history.push(LOCATION_CONFIGURATION_URL.edit(resp.id));\n          this.props.nextPage({\n            ...values,\n            locationId: resp.id,\n            useDefaultActivities: this.state.useDefaultActivities,\n          });\n        })\n        .catch(() => {\n          this.props.hideSpinner();\n          return Promise.reject(\n            new Error(\n              this.props.translate(\n                \"react.stockMovement.error.createStockMovement.label\",\n                \"Could not create location\",\n              ),\n            ),\n          );\n        });\n    } else {\n      this.props.hideSpinner();\n    }\n  }\n\n  nextPage(values) {\n    if (values.logoFile) {\n      this.props.showSpinner();\n\n      convertToBase64(values.logoFile).then((logo) => {\n        this.saveLocationDetails({ ...values, logo });\n      });\n    } else {\n      this.saveLocationDetails(values);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"configuration-wizard-content flex-column\">\n        <Form\n          onSubmit={(values) => this.nextPage(values)}\n          validate={validate}\n          initialValues={this.state.values}\n          mutators={{\n            setLocationGroupValue: ([{ id, name }], state, utils) => {\n              const data = {\n                id,\n                label: name,\n                name,\n                value: id,\n              };\n              utils.changeValue(state, \"locationGroup\", () => data);\n            },\n            setOrganizationValue: ([{ id, name }], state, utils) => {\n              const data = {\n                id,\n                label: name,\n                name,\n                value: id,\n              };\n              utils.changeValue(state, \"organization\", () => data);\n            },\n            resetSupportedActivities: ([locationType], state, utils) => {\n              const supportedActivities =\n                this.getSupportedActivities(locationType);\n              utils.changeValue(\n                state,\n                \"supportedActivities\",\n                () => supportedActivities,\n              );\n            },\n          }}\n          render={({\n            form: {\n              mutators: {\n                resetSupportedActivities,\n                setLocationGroupValue,\n                setOrganizationValue,\n              },\n            },\n            handleSubmit,\n            values,\n          }) => (\n            <div>\n              <AddOrganizationModal\n                isOpen={this.state.showOrganizationModal}\n                onClose={() => this.setState({ showOrganizationModal: false })}\n                onResponse={setOrganizationValue}\n              />\n              <AddLocationGroupModal\n                isOpen={this.state.showLocationGroupModal}\n                onClose={() => this.setState({ showLocationGroupModal: false })}\n                onResponse={setLocationGroupValue}\n              />\n              <form onSubmit={handleSubmit} className=\"w-100\">\n                <div className=\"classic-form with-description\">\n                  <div className=\"form-title\">\n                    <Translate\n                      id=\"react.locationsConfiguration.details.label\"\n                      defaultMessage=\"Details\"\n                    />\n                  </div>\n                  <div className=\"form-subtitle\">\n                    <Translate\n                      id=\"react.locationsConfiguration.additionalTitle.label\"\n                      defaultMessage=\"Fill in the details for your location. Click the question mark next to the field name to find out more.\"\n                    />\n                  </div>\n\n                  {_.map(FIELDS, (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName, {\n                      active: values.active,\n                      debouncedLocationGroupsFetch:\n                        this.debouncedLocationGroupsFetch,\n                      debouncedOrganizationsFetch:\n                        this.debouncedOrganizationsFetch,\n                      debouncedPeopleFetch: this.debouncedPeopleFetch,\n                      openNewOrganizationModal: this.openNewOrganizationModal,\n                      openNewLocationGroupModal: this.openNewLocationGroupModal,\n                      injectionData: this.state.supportLinks,\n                    }),\n                  )}\n\n                  <div className=\"form-title\">\n                    <Translate\n                      id=\"react.locationsConfiguration.typeAndActivities.label\"\n                      defaultMessage=\"Location Type and Supported Activities\"\n                    />\n                  </div>\n                  <div className=\"form-subtitle\">\n                    <span>\n                      <Translate id=\"react.locationsConfiguration.typeAndActivitiesDescription.label\" />\n                      &nbsp;\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href=\"https://openboxes.atlassian.net/wiki/spaces/OBW/pages/1744633857/Location+Types+and+Supported+Activities\"\n                      >\n                        <Translate\n                          id=\"react.locationsConfiguration.here.label\"\n                          defaultMessage=\"here\"\n                        />\n                      </a>\n                      .\n                    </span>\n                  </div>\n\n                  <SelectField\n                    fieldName=\"locationType\"\n                    fieldConfig={{\n                      label: \"react.locationsConfiguration.locationType.label\",\n                      defaultMessage: \"Location Type\",\n                      attributes: {\n                        className: \"multi-select\",\n                        required: true,\n                        valueKey: \"id\",\n                        withTooltip: true,\n                        tooltip:\n                          \"react.locationsConfiguration.locationType.tooltip.label\",\n                      },\n                      getDynamicAttr: ({ locationTypes }) => ({\n                        options: locationTypes,\n                        onChange: (val) => {\n                          resetSupportedActivities(val);\n                        },\n                      }),\n                    }}\n                    locationTypes={this.state.locationTypes}\n                  />\n                  <div className=\"d-flex w-100 ml-1 pt-2 justify-content-between align-items-center\">\n                    <Checkbox\n                      id=\"useDefaultActivities\"\n                      value={this.state.useDefaultActivities}\n                      onChange={(val) =>\n                        this.setState({ useDefaultActivities: val })\n                      }\n                      withLabel\n                      label={this.props.translate(\n                        \"react.locationsConfiguration.useDefaultActivities.label\",\n                        \"Use default settings for Supported Activities\",\n                      )}\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary btn-xs\"\n                      onClick={() => {\n                        this.setState({ useDefaultActivities: true });\n                        resetSupportedActivities(values.locationType);\n                      }}\n                    >\n                      <span>\n                        <i className=\"fa fa-refresh pr-2\" />\n                        <Translate\n                          id=\"react.locationsConfiguration.resetToDefault.label\"\n                          defaultMessage=\"Reset to default settings\"\n                        />\n                      </span>\n                    </button>\n                  </div>\n                  <div className=\"location-supported-activities\">\n                    <SelectField\n                      fieldName=\"supportedActivities\"\n                      fieldConfig={{\n                        attributes: {\n                          multi: true,\n                        },\n                        getDynamicAttr: ({\n                          supportedActivities,\n                          useDefaultActivities,\n                        }) => ({\n                          disabled: useDefaultActivities,\n                          options: supportedActivities,\n                        }),\n                      }}\n                      supportedActivities={this.state.supportedActivities}\n                      useDefaultActivities={this.state.useDefaultActivities}\n                    />\n                  </div>\n\n                  <div className=\"form-title\">\n                    <Translate\n                      id=\"react.locationsConfiguration.style.label\"\n                      defaultMessage=\"Style\"\n                    />\n                  </div>\n                  <div className=\"form-subtitle\">\n                    <Translate\n                      id=\"react.locationsConfiguration.styleDescription.label\"\n                      defaultMessage=\"Set a custom logo and color scheme. For depot locations only.\"\n                    />\n                  </div>\n\n                  {_.map(STYLE_FIELDS, (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName),\n                  )}\n                </div>\n                <div className=\"submit-buttons\">\n                  <button\n                    type=\"submit\"\n                    onClick={() => {\n                      if (this.state.useDefaultActivities) {\n                        resetSupportedActivities(values.locationType);\n                      }\n                    }}\n                    className=\"btn btn-outline-primary float-right btn-xs\"\n                  >\n                    <Translate\n                      id=\"react.default.button.next.label\"\n                      defaultMessage=\"Next\"\n                    />\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  location: state.session.currentLocation,\n  locale: state.session.activeLanguage,\n  isSuperuser: state.session.isSuperuser,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  debounceTime: state.session.searchConfig.debounceTime,\n  debouncedLocationTypesFetch: state.session.searchConfig,\n  minSearchLength: state.session.searchConfig.minSearchLength,\n  locConfTranslationsFetched:\n    state.session.fetchedTranslations.locationsConfiguration,\n  user: state.session.user,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    showSpinner,\n    hideSpinner,\n    fetchUsers,\n  })(LocationDetails),\n);\n\nLocationDetails.propTypes = {\n  initialValues: PropTypes.shape({\n    active: PropTypes.bool,\n    useDefaultActivities: PropTypes.bool,\n    name: PropTypes.string,\n    locationNumber: PropTypes.string,\n    locationType: PropTypes.string,\n    organization: PropTypes.string,\n    locationGroup: PropTypes.string,\n    manager: PropTypes.string,\n  }).isRequired,\n  nextPage: PropTypes.func.isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  debounceTime: PropTypes.number.isRequired,\n  minSearchLength: PropTypes.number.isRequired,\n  translate: PropTypes.func.isRequired,\n  locConfTranslationsFetched: PropTypes.bool.isRequired,\n  locale: PropTypes.string.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({ locationId: PropTypes.string }),\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","import React from \"react\";\n\nimport { useDropzone } from \"react-dropzone\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Translate from \"utils/Translate\";\n\nconst FileField = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const renderInput = ({ value, onChange }) => {\n    const onDrop = (newFiles) => {\n      if (newFiles && newFiles.length) {\n        onChange(newFiles[0]);\n      }\n    };\n\n    const { getRootProps, getInputProps, open } = useDropzone({\n      onDrop,\n      noClick: true,\n      noKeyboard: true,\n    });\n\n    return (\n      <div className=\"form-element-container\">\n        <div\n          {...getRootProps()}\n          className=\"form-control form-control-xs file-field\"\n        >\n          <input {...getInputProps()} />\n          <div>\n            <button\n              onClick={open}\n              type=\"button\"\n              className=\"btn btn-primary btn-xs\"\n            >\n              <Translate\n                id=\"react.default.button.chooseFile.label\"\n                defaultMessage=\"Choose File\"\n              />\n            </button>\n            <span className=\"ml-3\">\n              {value ? (\n                value.name\n              ) : (\n                <Translate\n                  id=\"react.default.button.noFileChosen.label\"\n                  defaultMessage=\"No file chosen\"\n                />\n              )}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default FileField;\n","// eslint-disable-next-line import/prefer-default-export\nexport const convertToBase64 = (file) => {\n  const reader = new FileReader();\n\n  reader.readAsDataURL(file);\n\n  return new Promise((resolve, reject) => {\n    reader.onload = () => resolve(reader.result.split(\",\")[1]);\n    reader.onerror = (error) => reject(error);\n  });\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport queryString from \"query-string\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport ReactTable from \"react-table\";\n\nimport ModalWrapper from \"components/form-elements/ModalWrapper\";\nimport apiClient from \"utils/apiClient\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nconst INITIAL_STATE = {\n  binPages: -1,\n  binLoading: true,\n};\n\nclass BinTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...INITIAL_STATE,\n    };\n  }\n\n  render() {\n    const binColumns = [\n      {\n        Header: \"Status\",\n        accessor: \"active\",\n        minWidth: 30,\n        className: \"active-circle\",\n        headerClassName: \"header\",\n        Cell: (row) => {\n          if (row.original.active) {\n            return (\n              <i\n                className=\"fa fa-check-circle green-circle\"\n                aria-hidden=\"true\"\n              />\n            );\n          }\n          return (\n            <i className=\"fa fa-times-circle grey-circle\" aria-hidden=\"true\" />\n          );\n        },\n      },\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n        className: \"cell\",\n        headerClassName: \"header text-align-left\",\n      },\n      {\n        Header: \"Bin Type\",\n        accessor: \"locationType.name\",\n        className: \"cell\",\n        headerClassName: \"header text-align-left\",\n      },\n      {\n        Header: \"Zone location\",\n        accessor: \"zoneName\",\n        minWidth: 50,\n        className: \"cell\",\n        headerClassName: \"header text-align-left\",\n      },\n      {\n        Header: \"Actions\",\n        minWidth: 20,\n        accessor: \"actions\",\n        className: \"action-cell\",\n        headerClassName: \"header \",\n        Cell: (row) => (\n          <div className=\"d-flex justify-content-center align-items-center\">\n            <ModalWrapper\n              onSave={(values) => this.props.handleLocationEdit(values)}\n              fields={this.props.FIELDS}\n              validate={this.props.validate}\n              initialValues={{\n                ...row.original,\n                locationType: row.original.locationType,\n                zoneLocation: {\n                  id: row.original.zoneId,\n                  name: row.original.zoneName,\n                },\n              }}\n              formProps={{\n                binTypes: this.props.binTypes,\n                zoneData: this.props.zoneData,\n              }}\n              title=\"react.locationsConfiguration.editBin.label\"\n              defaultTitleMessage=\"Edit Bin Location\"\n              btnSaveDefaultText=\"Save\"\n              btnOpenAsIcon\n              btnOpenIcon=\"fa-pencil\"\n              btnOpenClassName=\"action-icons icon-pointer\"\n              btnContainerClassName=\"d-flex justify-content-end\"\n              btnContainerStyle={{ gap: \"3px\" }}\n              btnSaveClassName=\"btn btn-primary\"\n              btnCancelClassName=\"btn btn-outline-primary\"\n            >\n              <div className=\"form-subtitle mb-lg-4\">\n                <Translate\n                  id=\"react.locationsConfiguration.editBin.additionalTitle.label\"\n                  defaultMessage=\"Bin locations represent a physical storage location within a depot.\n                  Bins are defined by a unique name or code that indicates the position within the depot.\n                  Common bin names might include a pallet position number, rack number, or shelf action.\"\n                />\n              </div>\n            </ModalWrapper>\n            <i\n              className=\"fa fa-trash-o action-icons icon-pointer\"\n              aria-hidden=\"true\"\n              onClick={() => this.props.deleteLocation(row.original)}\n            />\n          </div>\n        ),\n      },\n    ];\n\n    return (\n      <ReactTable\n        data={this.props.binData}\n        ref={this.props.refBinTable}\n        columns={binColumns}\n        loading={this.state.binLoading}\n        pages={this.state.binPages}\n        defaultPageSize={10}\n        manual\n        className=\"-striped -highlight zoneTable\"\n        resizable={false}\n        sortable={false}\n        multiSort={false}\n        previousText={<i className=\"fa fa-chevron-left\" aria-hidden=\"true\" />}\n        nextText={<i className=\"fa fa-chevron-right\" aria-hidden=\"true\" />}\n        pageText=\"\"\n        onFetchData={(state) => {\n          const offset = state.page > 0 ? state.page * state.pageSize : 0;\n          apiClient\n            .get(\"/api/internalLocations/search\", {\n              paramsSerializer: (parameters) =>\n                queryString.stringify(parameters),\n              params: {\n                locationTypeCode: [\"BIN_LOCATION\", \"INTERNAL\"],\n                offset: `${offset}`,\n                max: `${state.pageSize}`,\n                \"parentLocation.id\": `${this.props.currentLocationId}`,\n                includeInactive: true,\n              },\n            })\n            .then((res) => {\n              this.setState({\n                binLoading: false,\n                binPages: Math.ceil(res.data.totalCount / state.pageSize),\n              });\n              this.props.updateBinData(res.data.data);\n            })\n            .catch(() =>\n              Promise.reject(\n                new Error(\n                  this.props.translate(\n                    \"react.locationsConfiguration.error.binList.label\",\n                    \"Could not get list of bin locations\",\n                  ),\n                ),\n              ),\n            );\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nBinTable.propTypes = {\n  currentLocationId: PropTypes.string.isRequired,\n  translate: PropTypes.func.isRequired,\n  binData: PropTypes.shape([]).isRequired,\n  updateBinData: PropTypes.func.isRequired,\n  handleLocationEdit: PropTypes.func.isRequired,\n  deleteLocation: PropTypes.func.isRequired,\n  FIELDS: PropTypes.shape({}).isRequired,\n  validate: PropTypes.func.isRequired,\n  binTypes: PropTypes.shape([]).isRequired,\n  refBinTable: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n  zoneData: PropTypes.shape([]).isRequired,\n};\n\nexport default connect(mapStateToProps)(BinTable);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport ModalWrapper from \"components/form-elements/ModalWrapper\";\nimport apiClient, { flattenRequest } from \"utils/apiClient\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nclass AddBinModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: {\n        active: true,\n      },\n    };\n  }\n\n  handleSubmit(values) {\n    this.props.showSpinner();\n    apiClient\n      .post(\n        \"/api/locations/\",\n        flattenRequest({\n          ...values,\n          parentLocation: { id: this.props.locationId },\n          locationType: { id: values.locationType.id },\n          zone: values.zoneLocation && { id: values.zoneLocation.id },\n        }),\n      )\n      .then(() => {\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.locationsConfiguration.addBin.success.label\",\n            \"Bin location has been created successfully!\",\n          ),\n          { timeout: 3000 },\n        );\n        this.props.addBinLocation();\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n        return Promise.reject(\n          new Error(\n            this.props.translate(\n              \"react.locationsConfiguration.addBin.error.label\",\n              \"Could not add bin location\",\n            ),\n          ),\n        );\n      });\n  }\n\n  render() {\n    return (\n      <ModalWrapper\n        onSave={(values) => this.handleSubmit(values)}\n        fields={this.props.FIELDS}\n        validate={this.props.validate}\n        initialValues={\n          this.props.binTypes.length === 1\n            ? { ...this.state.values, locationType: this.props.binTypes[0] }\n            : this.state.values\n        }\n        formProps={{\n          binTypes: this.props.binTypes,\n          zoneData: this.props.zoneData,\n        }}\n        title=\"react.locationsConfiguration.addBin.label\"\n        defaultTitleMessage=\"Add Bin Location\"\n        btnSaveDefaultText=\"Save\"\n        btnOpenClassName=\"btn btn-outline-primary add-zonebin-btn\"\n        btnOpenText=\"react.locationsConfiguration.addBin.label\"\n        btnOpenDefaultText=\"Add Bin Location\"\n        btnOpenIcon=\"fa-plus\"\n        btnContainerClassName=\"d-flex justify-content-end\"\n        btnContainerStyle={{ gap: \"3px\" }}\n        btnSaveClassName=\"btn btn-primary\"\n        btnCancelClassName=\"btn btn-outline-primary\"\n      >\n        <div className=\"form-subtitle mb-lg-4\">\n          <Translate\n            id=\"react.locationsConfiguration.editBin.additionalTitle.label\"\n            defaultMessage=\"Bin locations represent a physical storage location within a depot.\n                            Bins are defined by a unique name or code that indicates the position within the depot.\n                            Common bin names might include a pallet position number, rack number, or shelf action.\"\n          />\n        </div>\n      </ModalWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nconst mapDispatchToProps = {\n  showSpinner,\n  hideSpinner,\n};\n\nAddBinModal.propTypes = {\n  locationId: PropTypes.string.isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  addBinLocation: PropTypes.func.isRequired,\n  FIELDS: PropTypes.shape({}).isRequired,\n  validate: PropTypes.func.isRequired,\n  binTypes: PropTypes.shape([]).isRequired,\n  zoneData: PropTypes.shape([]).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBinModal);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport ModalWrapper from \"components/form-elements/ModalWrapper\";\nimport apiClient, { flattenRequest } from \"utils/apiClient\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"components/locations-configuration/ZoneTable.scss\";\n\nclass AddZoneModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: {\n        active: true,\n      },\n    };\n  }\n\n  handleSubmit(values) {\n    this.props.showSpinner();\n    apiClient\n      .post(\n        \"/api/locations/\",\n        flattenRequest({\n          ...values,\n          parentLocation: { id: this.props.locationId },\n          locationType: { id: values.locationType.id },\n        }),\n      )\n      .then(() => {\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.locationsConfiguration.addZone.success.label\",\n            \"Zone location has been created successfully!\",\n          ),\n          { timeout: 3000 },\n        );\n        this.props.addZoneLocation();\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n        return Promise.reject(\n          new Error(\n            this.props.translate(\n              \"react.locationsConfiguration.addZone.error.label\",\n              \"Could not add zone location\",\n            ),\n          ),\n        );\n      });\n  }\n\n  render() {\n    return (\n      <ModalWrapper\n        onSave={(values) => this.handleSubmit(values)}\n        fields={this.props.FIELDS}\n        validate={this.props.validate}\n        initialValues={\n          this.props.zoneTypes.length === 1\n            ? { ...this.state.values, locationType: this.props.zoneTypes[0] }\n            : this.state.values\n        }\n        formProps={{\n          zoneTypes: this.props.zoneTypes,\n        }}\n        title=\"react.locationsConfiguration.addZone.label\"\n        defaultTitleMessage=\"Add Zone Location\"\n        btnSaveDefaultText=\"Save\"\n        btnOpenClassName=\"btn btn-outline-primary add-zonebin-btn\"\n        btnOpenText=\"react.locationsConfiguration.addZone.label\"\n        btnOpenDefaultText=\"Add Zone Location\"\n        btnOpenIcon=\"fa-plus\"\n        btnContainerClassName=\"d-flex justify-content-end\"\n        btnContainerStyle={{ gap: \"3px\" }}\n        btnSaveClassName=\"btn btn-primary\"\n        btnCancelClassName=\"btn btn-outline-primary\"\n      >\n        <div className=\"form-subtitle mb-lg-4\">\n          <Translate\n            id=\"react.locationsConfiguration.addZone.additionalTitle.label\"\n            defaultMessage=\"Zones are large areas within a depot encompassing multiple bin locations.\n                                  They may represent different rooms or buildings within a depot space.\n                                  To remove a zone from your depot, uncheck the box to mark it as inactive.\"\n          />\n        </div>\n      </ModalWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nconst mapDispatchToProps = {\n  showSpinner,\n  hideSpinner,\n};\n\nAddZoneModal.propTypes = {\n  locationId: PropTypes.string.isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  addZoneLocation: PropTypes.func.isRequired,\n  FIELDS: PropTypes.shape({}).isRequired,\n  validate: PropTypes.func.isRequired,\n  zoneTypes: PropTypes.shape([]).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddZoneModal);\n","import React, { Component } from \"react\";\n\nimport fileDownload from \"js-file-download\";\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport ModalWrapper from \"components/form-elements/ModalWrapper\";\nimport FileSelect from \"components/form-elements/v2/FileSelect\";\nimport apiClient from \"utils/apiClient\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nclass ImportBinModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      supportLinks: {},\n    };\n    this.onDrop = this.onDrop.bind(this);\n    this.importBinLocation = this.importBinLocation.bind(this);\n    this.getSupportLinks = this.getSupportLinks.bind(this);\n    this.downloadBinLocationsTemplate =\n      this.downloadBinLocationsTemplate.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSupportLinks();\n  }\n\n  onDrop(file) {\n    this.setState({ file });\n  }\n\n  getSupportLinks() {\n    const url = \"/api/supportLinks\";\n\n    apiClient.get(url).then((response) => {\n      const supportLinks = response.data.data;\n      this.setState({ supportLinks });\n    });\n  }\n\n  downloadBinLocationsTemplate() {\n    this.props.showSpinner();\n    apiClient\n      .get(\"/api/locations/binLocations/template\", { responseType: \"blob\" })\n      .then((response) => {\n        fileDownload(\n          response.data,\n          \"BinLocations_template.xls\",\n          \"application/vnd.ms-excel\",\n        );\n        this.props.hideSpinner();\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  importBinLocation() {\n    this.props.showSpinner();\n    const formData = new FormData();\n    formData.append(\"fileContents\", this.state.file);\n\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n\n    const url = `/api/locations/${this.props.locationId}/binLocations/import`;\n\n    return apiClient\n      .post(url, formData, config)\n      .then(() => {\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.locationsConfiguration.importBinLocations.successMessage.label\",\n            \"Bin Location imported successfully\",\n          ),\n        );\n        this.setState({ file: undefined });\n        this.props.onResponse();\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n      });\n  }\n\n  render() {\n    return (\n      <ModalWrapper\n        onSave={this.importBinLocation}\n        btnOpenClassName=\"btn btn-outline-primary add-zonebin-btn\"\n        btnOpenText=\"react.locationsConfiguration.importBin.label\"\n        btnOpenDefaultText=\"Import Bin Locations\"\n        btnOpenIcon=\"fa-download\"\n        title=\"react.locationsConfiguration.importBin.label\"\n        defaultTitleMessage=\"Import Bin Location\"\n        btnContainerClassName=\"d-flex justify-content-between\"\n        btnSaveClassName=\"btn btn-primary\"\n        btnCancelClassName=\"btn btn-outline-primary\"\n        btnSaveText=\"default.button.import.label\"\n        btnSaveDefaultText=\"Import\"\n        btnSaveDisabled={!this.state.file}\n      >\n        <div className=\"form-subtitle mb-lg-4\">\n          <Translate id=\"react.locationsConfiguration.importBinLocations.importInstruction1.label\" />\n          &nbsp;\n          <a href=\"#\" onClick={this.downloadBinLocationsTemplate}>\n            <Translate\n              id=\"react.locationsConfiguration.importBinLocations.here.label\"\n              defaultMessage=\"here\"\n            />\n          </a>\n          {\". \"}\n          <Translate\n            id=\"react.locationsConfiguration.importBinLocations.importInstruction2.label\"\n            data={this.state.supportLinks}\n            options={{ renderInnerHtml: true }}\n          />\n          <FileSelect className=\"my-3\" onChange={this.onDrop} />\n        </div>\n      </ModalWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nconst mapDispatchToProps = {\n  showSpinner,\n  hideSpinner,\n};\n\nImportBinModal.propTypes = {\n  locationId: PropTypes.string.isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  onResponse: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportBinModal);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport ReactTable from \"react-table\";\n\nimport ModalWrapper from \"components/form-elements/ModalWrapper\";\nimport apiClient from \"utils/apiClient\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"components/locations-configuration/ZoneTable.scss\";\n\nconst INITIAL_STATE = {\n  zonePages: -1,\n  zoneLoading: true,\n};\n\nclass ZoneTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...INITIAL_STATE,\n    };\n  }\n\n  render() {\n    const zoneColumns = [\n      {\n        Header: \"Status\",\n        accessor: \"active\",\n        minWidth: 30,\n        className: \"active-circle\",\n        headerClassName: \"header\",\n        Cell: (row) => {\n          if (row.original.active) {\n            return (\n              <i\n                className=\"fa fa-check-circle green-circle\"\n                aria-hidden=\"true\"\n              />\n            );\n          }\n          return (\n            <i className=\"fa fa-times-circle grey-circle\" aria-hidden=\"true\" />\n          );\n        },\n      },\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n        className: \"cell\",\n        headerClassName: \"header text-align-left\",\n      },\n      {\n        Header: \"Location Type\",\n        accessor: \"locationType.locationTypeCode\",\n        className: \"cell\",\n        headerClassName: \"header text-align-left\",\n      },\n      {\n        Header: \"Actions\",\n        minWidth: 20,\n        accessor: \"actions\",\n        className: \"action-cell\",\n        headerClassName: \"header \",\n        Cell: (row) => (\n          <div className=\"d-flex justify-content-center align-items-center\">\n            <ModalWrapper\n              onSave={(values) => this.props.handleLocationEdit(values)}\n              fields={this.props.FIELDS}\n              validate={this.props.validate}\n              initialValues={{\n                ...row.original,\n                locationType: row.original.locationType,\n              }}\n              formProps={{\n                zoneTypes: this.props.zoneTypes,\n              }}\n              title=\"react.locationsConfiguration.editZone.label\"\n              defaultTitleMessage=\"Edit Zone Location\"\n              btnSaveDefaultText=\"Save\"\n              btnOpenAsIcon\n              btnOpenIcon=\"fa-pencil\"\n              btnOpenClassName=\"action-icons\"\n              btnContainerClassName=\"d-flex justify-content-end\"\n              btnContainerStyle={{ gap: \"3px\" }}\n              btnSaveClassName=\"btn btn-primary\"\n              btnCancelClassName=\"btn btn-outline-primary\"\n            >\n              <div className=\"form-subtitle mb-lg-4\">\n                <Translate\n                  id=\"react.locationsConfiguration.addZone.additionalTitle.label\"\n                  defaultMessage=\"Zones are large areas within a depot encompassing multiple bin locations.\n                                    They may represent different rooms or buildings within a depot space.\n                                    To remove a zone from your depot, uncheck the box to mark it as inactive.\"\n                />\n              </div>\n            </ModalWrapper>\n            <i\n              className=\"fa fa-trash-o action-icons icon-pointer\"\n              aria-hidden=\"true\"\n              onClick={() => this.props.deleteLocation(row.original)}\n            />\n          </div>\n        ),\n      },\n    ];\n\n    return (\n      <ReactTable\n        data={this.props.zoneData}\n        ref={this.props.refZoneTable}\n        columns={zoneColumns}\n        loading={this.state.zoneLoading}\n        pages={this.state.zonePages}\n        defaultPageSize={5}\n        manual\n        className=\"-striped -highlight zoneTable\"\n        resizable={false}\n        sortable={false}\n        multiSort={false}\n        previousText={<i className=\"fa fa-chevron-left\" aria-hidden=\"true\" />}\n        nextText={<i className=\"fa fa-chevron-right\" aria-hidden=\"true\" />}\n        pageText=\"\"\n        onFetchData={(state) => {\n          const offset = state.page > 0 ? state.page * state.pageSize : 0;\n          apiClient\n            .get(\"/api/internalLocations/search\", {\n              params: {\n                locationTypeCode: \"ZONE\",\n                offset: `${offset}`,\n                max: `${state.pageSize}`,\n                \"parentLocation.id\": `${this.props.currentLocationId}`,\n                includeInactive: true,\n              },\n            })\n            .then((res) => {\n              this.setState({\n                zoneLoading: false,\n                zonePages: Math.ceil(res.data.totalCount / state.pageSize),\n              });\n              this.props.updateZoneData(res.data.data);\n            })\n            .catch(() =>\n              Promise.reject(\n                new Error(\n                  this.props.translate(\n                    \"react.locationsConfiguration.error.zoneList.label\",\n                    \"Could not get list of zones\",\n                  ),\n                ),\n              ),\n            );\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nZoneTable.propTypes = {\n  currentLocationId: PropTypes.string.isRequired,\n  translate: PropTypes.func.isRequired,\n  zoneData: PropTypes.shape([]).isRequired,\n  updateZoneData: PropTypes.func.isRequired,\n  handleLocationEdit: PropTypes.func.isRequired,\n  deleteLocation: PropTypes.func.isRequired,\n  FIELDS: PropTypes.shape({}).isRequired,\n  validate: PropTypes.func.isRequired,\n  zoneTypes: PropTypes.shape([]).isRequired,\n  refZoneTable: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) }),\n  ]).isRequired,\n};\n\nexport default connect(mapStateToProps)(ZoneTable);\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport CheckboxField from \"components/form-elements/CheckboxField\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TextField from \"components/form-elements/TextField\";\nimport BinTable from \"components/locations-configuration/BinTable\";\nimport AddBinModal from \"components/locations-configuration/modals/AddBinModal\";\nimport AddZoneModal from \"components/locations-configuration/modals/AddZoneModal\";\nimport ImportBinModal from \"components/locations-configuration/modals/ImportBinModal\";\nimport ZoneTable from \"components/locations-configuration/ZoneTable\";\nimport apiClient, { flattenRequest } from \"utils/apiClient\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n//import \"react-table/react-table.css\";\nimport \"components/locations-configuration/ZoneTable.scss\";\n\nconst ZONE_FIELDS = {\n  active: {\n    type: CheckboxField,\n    label: \"react.locationsConfiguration.addZone.status.label\",\n    defaultMessage: \"Status\",\n    attributes: {\n      withLabel: true,\n      label: \"Active\",\n    },\n  },\n  name: {\n    type: TextField,\n    label: \"react.locationsConfiguration.name.label\",\n    defaultMessage: \"Name\",\n    attributes: {\n      required: true,\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.addZone.name.tooltip.label\",\n    },\n  },\n  locationType: {\n    type: SelectField,\n    label: \"react.locationsConfiguration.zoneType.label\",\n    defaultMessage: \"Zone Type\",\n    attributes: {\n      required: true,\n      valueKey: \"id\",\n      labelKey: \"name\",\n    },\n    getDynamicAttr: ({ zoneTypes }) => ({\n      options: zoneTypes,\n    }),\n  },\n};\n\nconst BIN_FIELDS = {\n  active: {\n    type: CheckboxField,\n    label: \"react.locationsConfiguration.addZone.status.label\",\n    defaultMessage: \"Status\",\n    attributes: {\n      withLabel: true,\n      label: \"Active\",\n    },\n  },\n  name: {\n    type: TextField,\n    label: \"react.locationsConfiguration.name.label\",\n    defaultMessage: \"Name\",\n    attributes: {\n      required: true,\n      withTooltip: true,\n      tooltip: \"react.locationsConfiguration.addZone.name.tooltip.label\",\n    },\n  },\n  locationType: {\n    type: SelectField,\n    label: \"react.locationsConfiguration.binType.label\",\n    defaultMessage: \"Bin Type\",\n    attributes: {\n      required: true,\n      valueKey: \"id\",\n      labelKey: \"name\",\n    },\n    getDynamicAttr: ({ binTypes }) => ({\n      options: binTypes,\n    }),\n  },\n  zoneLocation: {\n    type: SelectField,\n    label: \"react.locationsConfiguration.zoneLocation.label\",\n    defaultMessage: \"Zone Location\",\n    attributes: {\n      valueKey: \"id\",\n      labelKey: \"name\",\n    },\n    getDynamicAttr: ({ zoneData }) => ({\n      options: zoneData,\n    }),\n  },\n};\n\nconst zoneValidate = (values) => {\n  const requiredFields = [\"name\", \"locationType\"];\n  return Object.keys(ZONE_FIELDS).reduce((acc, fieldName) => {\n    if (!values[fieldName] && requiredFields.includes(fieldName)) {\n      return {\n        ...acc,\n        [fieldName]: \"react.default.error.requiredField.label\",\n      };\n    }\n    return acc;\n  }, {});\n};\n\nconst binValidate = (values) => {\n  const requiredFields = [\"name\", \"locationType\"];\n  return Object.keys(BIN_FIELDS).reduce((acc, fieldName) => {\n    if (!values[fieldName] && requiredFields.includes(fieldName)) {\n      return {\n        ...acc,\n        [fieldName]: \"react.default.error.requiredField.label\",\n      };\n    }\n    return acc;\n  }, {});\n};\n\nclass ZoneAndBinLocations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zoneData: [],\n      binData: [],\n      values: this.props.initialValues,\n      zoneTypes: [],\n      binTypes: [],\n    };\n    this.updateZoneData = this.updateZoneData.bind(this);\n    this.updateBinData = this.updateBinData.bind(this);\n    this.refetchBinTable = this.refetchBinTable.bind(this);\n    this.refetchZoneTable = this.refetchZoneTable.bind(this);\n    this.deleteLocation = this.deleteLocation.bind(this);\n    this.handleLocationEdit = this.handleLocationEdit.bind(this);\n    this.refBinTable = React.createRef();\n    this.refZoneTable = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchBinAndZoneTypes();\n  }\n\n  fetchBinAndZoneTypes() {\n    const url = \"/api/locations/locationTypes\";\n    apiClient\n      .get(url)\n      .then((response) => {\n        const resp = response.data.data;\n        const locationTypes = _.map(resp, (locationType) => {\n          const [en, fr] = _.split(locationType.name, \"|fr:\");\n          return {\n            ...locationType,\n            label: this.props.locale === \"fr\" && fr ? fr : en,\n          };\n        });\n        const binTypes = locationTypes.filter(\n          (location) =>\n            location.locationTypeCode === \"BIN_LOCATION\" ||\n            location.locationTypeCode === \"INTERNAL\",\n        );\n        const zoneTypes = locationTypes.filter(\n          (location) => location.locationTypeCode === \"ZONE\",\n        );\n        this.setState({ binTypes, zoneTypes });\n      })\n      .catch(() =>\n        Promise.reject(\n          new Error(\n            this.props.translate(\n              \"react.locationsConfiguration.error.fetchingBinAndZoneTypes\",\n              \"Could not load location types\",\n            ),\n          ),\n        ),\n      );\n  }\n\n  handleLocationEdit(values) {\n    this.props.showSpinner();\n    const payload = {\n      name: values.name,\n      parentLocation: { id: values.parentLocation.id },\n      active: values.active,\n      locationType: { id: values.locationType.id },\n      zone: values.zoneLocation && { id: values.zoneLocation.id },\n    };\n\n    apiClient\n      .post(`/api/locations/${values.id}`, flattenRequest(payload))\n      .then(() => {\n        this.props.hideSpinner();\n        if (values.locationType.locationTypeCode === \"ZONE\") {\n          this.zoneEditCallback();\n          return;\n        }\n        this.binEditCallback();\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n        return Promise.reject(\n          new Error(\n            this.props.translate(\n              \"react.locationsConfiguration.editZone.error.label\",\n              \"Could not edit zone location\",\n            ),\n          ),\n        );\n      });\n  }\n\n  zoneEditCallback() {\n    Alert.success(\n      this.props.translate(\n        \"react.locationsConfiguration.editZone.success.label\",\n        \"Zone location has been edited successfully!\",\n      ),\n      { timeout: 3000 },\n    );\n    this.refZoneTable.current.fireFetchData();\n  }\n\n  binEditCallback() {\n    Alert.success(\n      this.props.translate(\n        \"react.locationsConfiguration.editBin.success.label\",\n        \"Bin location has been edited successfully!\",\n      ),\n      { timeout: 3000 },\n    );\n    this.refBinTable.current.fireFetchData();\n  }\n\n  refetchBinTable() {\n    this.refBinTable.current.fireFetchData();\n  }\n\n  refetchZoneTable() {\n    this.refZoneTable.current.fireFetchData();\n  }\n\n  deleteLocation(location) {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.locationsConfiguration.deleteZoneConfirm.title.label\",\n        \"Deleting a location\",\n      ),\n      message: this.props.translate(\n        \"react.locationsConfiguration.deleteZoneConfirm.subtitle.label\",\n        \"If you press 'Yes', this will delete the location. If you decide not to delete the location, press 'No'\",\n      ),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: () => {\n            apiClient\n              .delete(`/api/locations/${location.id}`)\n              .then(() => {\n                if (location.locationType.locationTypeCode === \"ZONE\") {\n                  this.refetchZoneTable();\n                  return;\n                }\n                this.refetchBinTable();\n              })\n              .catch(() => {\n                if (location.locationType.locationTypeCode === \"ZONE\") {\n                  return Promise.reject(\n                    new Error(\n                      this.props.translate(\n                        \"react.locationsConfiguration.deleteZone.error.label\",\n                        \"Could not delete zone location\",\n                      ),\n                    ),\n                  );\n                }\n                return Promise.reject(\n                  new Error(\n                    this.props.translate(\n                      \"react.locationsConfiguration.deleteBin.error.label\",\n                      \"Could not delete bin location\",\n                    ),\n                  ),\n                );\n              });\n          },\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  }\n\n  updateZoneData(data) {\n    this.setState({ zoneData: data });\n  }\n\n  updateBinData(data) {\n    this.setState({ binData: data });\n  }\n\n  nextPage() {\n    this.props.nextPage(this.state.values);\n  }\n\n  previousPage() {\n    this.props.previousPage(this.state.values);\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex flex-column\">\n        <div className=\"configuration-wizard-content flex-column\">\n          <div className=\"classic-form with-description\">\n            <div className=\"form-title\">\n              <Translate\n                id=\"react.locationsConfiguration.zone.label\"\n                defaultMessage=\"Zone Locations\"\n              />\n            </div>\n            <div className=\"form-subtitle zone-subtitle\">\n              <div>\n                <Translate\n                  id=\"react.locationsConfiguration.zone.additionalTitle1.label\"\n                  defaultMessage=\"Zones are large areas within a depot encompassing multiple bin locations.\n                                 They may represent different rooms or buildings within a depot space.\"\n                />\n              </div>\n              <div>\n                <Translate\n                  id=\"react.locationsConfiguration.zone.additionalTitle2.label\"\n                  defaultMessage=\"Zones are optional; bin locations can be entered with or without a zone location.\"\n                />\n              </div>\n            </div>\n            <div className=\"submit-buttons\">\n              <AddZoneModal\n                FIELDS={ZONE_FIELDS}\n                validate={zoneValidate}\n                locationId={this.props.initialValues.locationId}\n                addZoneLocation={this.refetchZoneTable}\n                zoneTypes={this.state.zoneTypes}\n              />\n            </div>\n            <ZoneTable\n              zoneData={this.state.zoneData}\n              updateZoneData={this.updateZoneData}\n              currentLocationId={this.props.initialValues.locationId}\n              handleLocationEdit={this.handleLocationEdit}\n              deleteLocation={this.deleteLocation}\n              FIELDS={ZONE_FIELDS}\n              validate={zoneValidate}\n              zoneTypes={this.state.zoneTypes}\n              refZoneTable={this.refZoneTable}\n            />\n          </div>\n\n          <div className=\"classic-form with-description\">\n            <div className=\"form-title\">\n              <Translate\n                id=\"react.locationsConfiguration.bin.label\"\n                defaultMessage=\"Bin Locations\"\n              />\n            </div>\n            <div className=\"form-subtitle\">\n              <Translate\n                id=\"react.locationsConfiguration.bin.additionalTitle.label\"\n                defaultMessage=\"Bin locations represent a physical storage location within a depot.\n                                  Inventory within the depot is tracked and picked by bin location.\"\n              />\n            </div>\n            <div className=\"d-flex bin-buttons\">\n              <AddBinModal\n                FIELDS={BIN_FIELDS}\n                validate={binValidate}\n                locationId={this.props.initialValues.locationId}\n                addBinLocation={this.refetchBinTable}\n                binTypes={this.state.binTypes}\n                zoneData={this.state.zoneData}\n              />\n              <ImportBinModal\n                locationId={this.props.initialValues.locationId}\n                onResponse={this.refetchBinTable}\n              />\n              <button\n                type=\"button\"\n                className=\"btn-xs btn btn-outline-primary add-zonebin-btn\"\n              >\n                <i className=\"fa fa-arrow-up mr-1\" aria-hidden=\"true\" />\n                <Translate\n                  id=\"react.locationsConfiguration.exportBinLocations.label\"\n                  defaultMessage=\"Export Bin Locations\"\n                />\n              </button>\n            </div>\n            <BinTable\n              binData={this.state.binData}\n              updateBinData={this.updateBinData}\n              currentLocationId={this.props.initialValues.locationId}\n              handleLocationEdit={this.handleLocationEdit}\n              deleteLocation={this.deleteLocation}\n              FIELDS={BIN_FIELDS}\n              validate={binValidate}\n              binTypes={this.state.binTypes}\n              refBinTable={this.refBinTable}\n              zoneData={this.state.zoneData}\n            />\n          </div>\n          <div className=\"submit-buttons d-flex justify-content-between\">\n            <button\n              type=\"button\"\n              onClick={() => this.previousPage()}\n              className=\"btn btn-outline-primary float-left btn-xs\"\n            >\n              <Translate\n                id=\"react.default.button.previous.label\"\n                defaultMessage=\"Previous\"\n              />\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => this.nextPage()}\n              className=\"btn btn-outline-primary float-left btn-xs\"\n            >\n              <Translate\n                id=\"react.default.button.next.label\"\n                defaultMessage=\"Next\"\n              />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  locale: state.session.activeLanguage,\n});\n\nconst mapDispatchToProps = {\n  showSpinner,\n  hideSpinner,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ZoneAndBinLocations);\n\nZoneAndBinLocations.propTypes = {\n  nextPage: PropTypes.func.isRequired,\n  previousPage: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  initialValues: PropTypes.shape({\n    active: PropTypes.bool,\n    name: PropTypes.string,\n    locationNumber: PropTypes.string,\n    locationType: PropTypes.string,\n    organization: PropTypes.string,\n    locationGroup: PropTypes.string,\n    manager: PropTypes.string,\n    locationId: PropTypes.string,\n    zoneTypeId: PropTypes.string,\n  }).isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  locale: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport { fetchTranslations } from \"actions\";\nimport Forecasting from \"components/locations-configuration/Forecasting\";\nimport LocationAddress from \"components/locations-configuration/LocationAddress\";\nimport LocationDetails from \"components/locations-configuration/LocationDetails\";\nimport ZoneAndBinLocations from \"components/locations-configuration/ZoneAndBinLocations\";\nimport Wizard from \"components/wizard/Wizard\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"components/stock-movement-wizard/StockMovement.scss\";\n\nconst SUPPORT_LINKS = {\n  locationDetails: \"Location Details\",\n  locationAddress: \"Address\",\n  zoneAndBinLocations: \"Zone and Bin Locations\",\n  forecasting: \"Forecasting\",\n};\n\nclass LocationsConfigurationWizard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      values: {},\n      currentPage: 1,\n    };\n\n    this.updateWizardValues = this.updateWizardValues.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTranslations(\"\", \"locationsConfiguration\");\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.locale && this.props.locale !== nextProps.locale) {\n      this.props.fetchTranslations(nextProps.locale, \"locationsConfiguration\");\n    }\n  }\n\n  get stepList() {\n    return [\n      this.props.translate(\n        \"react.locationsConfiguration.locationDetails.label\",\n        \"Details\",\n      ),\n      this.props.translate(\n        \"react.locationsConfiguration.address.label\",\n        \"Address\",\n      ),\n      this.props.translate(\n        \"react.locationsConfiguration.zoneAndBin.label\",\n        \"Zone and Bin Locations\",\n      ),\n      this.props.translate(\n        \"react.locationsConfiguration.forecasting.label\",\n        \"Forecasting\",\n      ),\n    ];\n  }\n\n  updateWizardValues(currentPage, values) {\n    this.setState({ currentPage, values });\n  }\n\n  render() {\n    const { values, currentPage } = this.state;\n    const pageList = [\n      LocationDetails,\n      LocationAddress,\n      ZoneAndBinLocations,\n      Forecasting,\n    ];\n    const { history } = this.props;\n\n    return (\n      <Wizard\n        pageList={pageList}\n        stepList={this.stepList}\n        initialValues={values}\n        currentPage={currentPage}\n        prevPage={currentPage === 1 ? 1 : currentPage - 1}\n        updateWizardValues={this.updateWizardValues}\n        additionalProps={{\n          history,\n          supportLinks: SUPPORT_LINKS,\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  location: state.session.currentLocation,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps, {\n  fetchTranslations,\n})(LocationsConfigurationWizard);\n\nLocationsConfigurationWizard.propTypes = {\n  locale: PropTypes.string.isRequired,\n  fetchTranslations: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst WizardPage = (props) => {\n  const Component = props.pageList[props.currentPage - 1];\n  return (\n    <div className=\"panel-body m-4\" data-testid=\"wizardPage\">\n      <Component\n        initialValues={props.initialValues}\n        nextPage={props.nextPage}\n        previousPage={props.prevPage}\n        goToPage={props.goToPage}\n        {...props.additionalProps}\n      />\n    </div>\n  );\n};\n\nexport default WizardPage;\n\nWizardPage.propTypes = {\n  pageList: PropTypes.arrayOf(PropTypes.func).isRequired,\n  nextPage: PropTypes.func.isRequired,\n  prevPage: PropTypes.func.isRequired,\n  goToPage: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  initialValues: PropTypes.shape({}),\n  additionalProps: PropTypes.shape({}),\n};\n\nWizardPage.defaultProps = {\n  initialValues: {},\n  additionalProps: {},\n};\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nimport \"components/wizard/WizardSteps.scss\";\n\nconst WizardSteps = (props) => (\n  <div className=\"steps-main-box\">\n    <div className=\"steps-inside-wrapper\">\n      {_.map(props.steps, (step, index) => (\n        <div\n          key={index}\n          className={`step-container ${props.currentStep === index + 1 ? \"active\" : \"\"}`}\n          data-testid=\"wizard-step\"\n          data-stepstate={\n            props.currentStep === index + 1 ? \"active\" : \"inactive\"\n          }\n        >\n          <div\n            className={props.showStepNumber ? \"circle filled\" : \"circle\"}\n            onClick={() => props.onClick(index + 1)}\n            onKeyPress={() => props.onClick(index + 1)}\n            role=\"button\"\n            tabIndex=\"0\"\n            disabled={!props.stepsClickable}\n          >\n            {props.showStepNumber && (\n              <span className=\"number\">{index + 1}</span>\n            )}\n          </div>\n          <div className=\"step-name\">{step}</div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport default WizardSteps;\n\nWizardSteps.propTypes = {\n  /** Array of steps names */\n  steps: PropTypes.arrayOf(PropTypes.string).isRequired,\n  /** Current step number */\n  currentStep: PropTypes.number.isRequired,\n  /** Function called after clicking on step, (non required) */\n  /* eslint-disable-next-line react/no-unused-prop-types */\n  onClick: PropTypes.func,\n  /** Indicator if steps are clickable (default = false) */\n  stepsClickable: PropTypes.bool,\n  showStepNumber: PropTypes.bool,\n};\n\nWizardSteps.defaultProps = {\n  onClick: (stepIdx) => stepIdx,\n  stepsClickable: false,\n  showStepNumber: false,\n};\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst WizardTitle = (props) => {\n  if (!props.title && !props.additionalTitle) {\n    return null;\n  }\n\n  return (\n    <div className=\"panel-heading movement-number\" data-testid=\"wizardTitle\">\n      {props.title ? (\n        <div>\n          {_.map(props.title, (element) => (\n            <span key={element.text} style={{ color: element.color }}>\n              {element.text}\n              <span style={{ color: \"black\" }}>{element.delimeter}</span>\n            </span>\n          ))}\n        </div>\n      ) : null}\n      {props.additionalTitle}\n    </div>\n  );\n};\n\nexport default WizardTitle;\n\nWizardTitle.propTypes = {\n  /** Array of steps names */\n  title: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  additionalTitle: PropTypes.oneOf([PropTypes.string, PropTypes.func]),\n};\n\nWizardTitle.defaultProps = {\n  additionalTitle: null,\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport WizardPage from \"components/wizard/WizardPage\";\nimport WizardSteps from \"components/wizard/WizardSteps\";\nimport WizardTitle from \"components/wizard/WizardTitle\";\n\n/** Wizard component. */\nclass Wizard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: this.props.currentPage || 1,\n      prevPage: this.props.prevPage || 1,\n      values: this.props.initialValues,\n    };\n\n    this.nextPage = this.nextPage.bind(this);\n    this.prevPage = this.prevPage.bind(this);\n    this.goToPage = this.goToPage.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentPage !== this.props.currentPage) {\n      this.goToPage(nextProps.currentPage, nextProps.initialValues);\n    }\n  }\n\n  /**\n   * Sets current page state as a previous page and takes user to the next page.\n   * @param {object} values\n   * @public\n   */\n  nextPage(values) {\n    const { currentPage } = this.state;\n    if (this.props.pageList.length > currentPage) {\n      this.setState({\n        prevPage: currentPage,\n        currentPage: currentPage + 1,\n        values,\n      });\n      this.props.updateWizardValues(currentPage + 1, values);\n    } else {\n      this.setState({ values });\n      this.props.updateWizardValues(currentPage, values);\n    }\n  }\n\n  /**\n   * Returns user to the previous page.\n   * @param {object} values\n   * @public\n   */\n  prevPage(values) {\n    const { prevPage } = this.state;\n    if (prevPage > 0) {\n      this.setState({\n        prevPage: prevPage - 1,\n        currentPage: prevPage,\n        values,\n      });\n      this.props.updateWizardValues(prevPage, values);\n    } else {\n      this.setState({ values });\n      this.props.updateWizardValues(1, values);\n    }\n  }\n\n  /**\n   * Sets current page state as a previous page and takes user to the given number page.\n   * @param {object} values\n   * @param {number} currentPage\n   * @public\n   */\n  goToPage(currentPage, values) {\n    this.setState({ prevPage: currentPage - 1, currentPage, values });\n    this.props.updateWizardValues(currentPage, values);\n  }\n\n  render() {\n    const { currentPage, values } = this.state;\n    const {\n      title,\n      pageList,\n      stepList,\n      additionalTitle,\n      additionalProps,\n      showStepNumber,\n    } = this.props;\n\n    return (\n      <div className=\"content-wrap\" data-testid=\"content-wrap\">\n        <WizardTitle\n          title={title}\n          additionalTitle={additionalTitle}\n          values={values}\n        />\n        <WizardSteps\n          steps={stepList}\n          currentStep={currentPage}\n          showStepNumber={showStepNumber}\n        />\n        <div className=\"panel panel-primary\">\n          <WizardPage\n            pageList={pageList}\n            currentPage={currentPage}\n            initialValues={values}\n            nextPage={this.nextPage}\n            prevPage={this.prevPage}\n            goToPage={this.goToPage}\n            additionalProps={additionalProps}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  hasPackingSupport: state.session.currentLocation.hasPackingSupport,\n});\n\nexport default connect(mapStateToProps, {\n  // showSpinner, hideSpinner, fetchTranslations,\n})(Wizard);\n\nWizard.propTypes = {\n  /** Initial components' data */\n  initialValues: PropTypes.shape({\n    shipmentStatus: PropTypes.string,\n  }),\n  title: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  additionalTitle: PropTypes.oneOf([PropTypes.string, PropTypes.func]),\n  currentPage: PropTypes.number.isRequired,\n  prevPage: PropTypes.number.isRequired,\n  pageList: PropTypes.arrayOf(PropTypes.func).isRequired,\n  stepList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  updateWizardValues: PropTypes.func,\n  additionalProps: PropTypes.shape({}),\n  showStepNumber: PropTypes.bool,\n};\n\nWizard.defaultProps = {\n  initialValues: {},\n  additionalProps: {},\n  additionalTitle: null,\n  updateWizardValues: () => {},\n  showStepNumber: false,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Translate from \"utils/Translate\";\n\nconst Checkbox = ({\n  value,\n  indeterminate,\n  custom,\n  fieldRef,\n  withLabel,\n  label,\n  defaultMessage,\n  ...props\n}) => {\n  const onChange = (event) => {\n    const { checked } = event.target;\n\n    if (props.onChange) {\n      props.onChange(checked);\n    }\n  };\n\n  if (custom) {\n    return (\n      <div data-testid=\"custom-checkbox\" className=\"custom-checkbox\">\n        <label htmlFor={props.id}>\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            ref={fieldRef}\n            checked={value}\n            {...props}\n            onChange={onChange}\n          />\n        </label>\n      </div>\n    );\n  }\n\n  if (withLabel) {\n    return (\n      <div\n        data-testid=\"with-label-checkbox\"\n        className=\"d-flex align-items-center\"\n      >\n        <input\n          type=\"checkbox\"\n          ref={(elem) => {\n            if (elem) {\n              // eslint-disable-next-line no-param-reassign\n              elem.indeterminate = indeterminate;\n            }\n            if (fieldRef) {\n              fieldRef(elem);\n            }\n          }}\n          checked={value}\n          {...props}\n          onChange={onChange}\n        />\n        <label htmlFor={props.id} style={{ margin: \"0 0 0 5px\" }}>\n          <Translate id={label} defaultMessage={defaultMessage || label} />\n        </label>\n      </div>\n    );\n  }\n\n  return (\n    <input\n      data-testid=\"checkbox\"\n      type=\"checkbox\"\n      ref={(elem) => {\n        if (elem) {\n          // eslint-disable-next-line no-param-reassign\n          elem.indeterminate = indeterminate;\n        }\n        if (fieldRef) {\n          fieldRef(elem);\n        }\n      }}\n      checked={value}\n      {...props}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Checkbox;\n\nCheckbox.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  custom: PropTypes.bool,\n  id: PropTypes.string,\n  fieldRef: PropTypes.func,\n  withLabel: PropTypes.bool,\n  label: PropTypes.string,\n  defaultMessage: PropTypes.string,\n};\n\nCheckbox.defaultProps = {\n  onChange: null,\n  value: null,\n  indeterminate: false,\n  custom: false,\n  id: \"\",\n  fieldRef: undefined,\n  withLabel: false,\n  label: \"\",\n  defaultMessage: \"\",\n};\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport Checkbox from \"utils/Checkbox\";\n\nconst CheckboxField = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const renderInput = ({ value, ...attributes }) => (\n    <Checkbox {...attributes} value={value || false} />\n  );\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default CheckboxField;\n"],"names":["props","React","BaseField","_extends","renderInput","_ref","className","attributes","_objectWithoutProperties","_excluded","Select","name","id","concat","classNamePrefix","ModalWrapper","_Component","_this","_classCallCheck","_callSuper","state","showModal","openModal","bind","closeModal","save","_inherits","key","value","this","onOpen","setState","onClose","values","onSave","_this2","Title","title","defaultTitleMessage","wrapperClassName","renderButton","type","btnOpenClassName","style","btnOpenStyle","disabled","btnOpenDisabled","onClick","btnOpenIcon","btnOpenText","btnOpenAsIcon","Translate","defaultMessage","btnOpenDefaultText","Modal","isOpen","onRequestClose","shouldCloseOnOverlayClick","bodyContainerClassName","bodyContainerStyle","Form","onSubmit","initialValues","validate","mutators","_objectSpread","arrayMutators","render","handleSubmit","children","renderBodyWithValues","_","fields","fieldConfig","fieldName","renderFormField","formProps","btnContainerClassName","role","btnContainerStyle","btnCancelClassName","btnCancelStyle","btnCancelText","btnCancelDefaultText","btnSaveClassName","btnSaveStyle","btnSaveDisabled","btnSaveText","btnSaveDefaultText","Component","propTypes","PropTypes","isRequired","defaultProps","undefined","Textarea","onChange","_ref$className","fieldRef","isResizable","ref","onKeyPress","event","which","preventDefault","target","inputClassName","Input","isFormElement","FileSelect","height","width","minHeight","dropzoneText","buttonLabel","buttonVariant","multiple","maxFiles","allowedExtensions","fieldProps","onDrop","useCallback","acceptedFiles","_fieldProps$onChange","call","translate","useTranslate","_useDropzone","useDropzone","noClick","noKeyboard","validator","file","length","includes","_file$path$split","path","split","getFileExtension","code","message","join","getRootProps","getInputProps","open","fileRejections","mapFiles","files","map","_file$errors","data","size","errors","e","Button","variant","defaultLabel","label","ForecastingNotsupported","previousPage","SuccessMessage","setShowSuccessMessage","history","successMessageOpen","window","location","LOCATION_CONFIGURATION_URL","create","LOCATION_URL","list","push","PRODUCT_CONFIGURATION_URL","index","withRouter","FIELDS","expectedLeadTimeDays","TextField","withTooltip","tooltip","replenishmentPeriodDays","demandTimePeriodDays","requiredFields","Object","keys","reduce","acc","_defineProperty","n","Number","isNaN","parseFloat","Forecasting","locationId","isForecastingSupported","showSuccessMessage","prev","showSpinner","locationUrl","hideSpinner","apiClient","post","then","Alert","timeout","Promise","reject","Error","forecasting","_this3","saveForecasting","mapDispatchToProps","connect","translateWithDefaultMessage","getTranslate","localize","active","locationNumber","locationType","organization","locationGroup","manager","address","address2","city","stateOrProvince","postalCode","country","description","LocationAddress","match","params","fetchLocation","url","get","response","callback","payload","mapToEmptyString","addressPayload","LOCATION","_this4","saveAddressOfLocation","val","nextPage","_this5","zoneTypeId","binTypeId","ColorPicker","colorHex","Tooltip","html","SliderPicker","color","onChangeComplete","hex","theme","arrow","trigger","interactive","delay","duration","backgroundColor","required","AddLocationGroupModal","arguments","resp","onResponse","rel","href","locale","session","activeLanguage","TextareaField","rows","AddOrganizationModal","_values$supportedActi","_values$supportedActi2","supportedActivities","find","activity","ActivityCode","NONE","CheckboxField","withLabel","SelectField","createNewFromModal","createNewFromModalLabel","async","showValueTooltip","openOnClick","autoload","cache","options","filterOptions","getDynamicAttr","loadOptions","debouncedOrganizationsFetch","newOptionModalOpen","openNewOrganizationModal","injectionData","_ref2","debouncedLocationGroupsFetch","openNewLocationGroupModal","labelKey","_ref3","debouncedPeopleFetch","STYLE_FIELDS","logoFile","newFiles","bgColor","ColorPickerField","fgColor","LocationDetails","showOrganizationModal","showLocationGroupModal","useDefaultActivities","locationTypes","supportLinks","debouncePeopleFetch","debounceTime","minSearchLength","debounceLocationGroupsFetch","debounceOrganizationsFetch","getSupportLinks","setInitialValues","fetchLocationTypes","locConfTranslationsFetched","dataFetched","fetchSupportedActivities","nextProps","splitTranslation","_$split2","_slicedToArray","en","fr","getSupportedActivities","_this6","_this7","edit","reader","_this8","FileReader","readAsDataURL","resolve","onload","result","onerror","error","logo","saveLocationDetails","_this9","setLocationGroupValue","_ref4","utils","_ref5$","changeValue","setOrganizationValue","_ref6","_ref7$","resetSupportedActivities","_ref8","_ref10","_ref10$form$mutators","form","valueKey","_ref11","Checkbox","multi","_ref12","currentLocation","isSuperuser","searchConfig","debouncedLocationTypesFetch","fetchedTranslations","locationsConfiguration","user","fetchUsers","INITIAL_STATE","binPages","binLoading","BinTable","binColumns","Header","accessor","minWidth","headerClassName","Cell","row","original","handleLocationEdit","zoneLocation","zoneId","zoneName","binTypes","zoneData","gap","deleteLocation","ReactTable","binData","refBinTable","columns","loading","pages","defaultPageSize","manual","resizable","sortable","multiSort","previousText","nextText","pageText","onFetchData","offset","page","pageSize","paramsSerializer","parameters","queryString","stringify","locationTypeCode","max","currentLocationId","includeInactive","res","Math","ceil","totalCount","updateBinData","current","Element","AddBinModal","flattenRequest","parentLocation","zone","addBinLocation","AddZoneModal","addZoneLocation","zoneTypes","ImportBinModal","importBinLocation","downloadBinLocationsTemplate","responseType","fileDownload","formData","FormData","append","headers","renderInnerHtml","zonePages","zoneLoading","ZoneTable","zoneColumns","refZoneTable","updateZoneData","ZONE_FIELDS","BIN_FIELDS","zoneValidate","binValidate","ZoneAndBinLocations","refetchBinTable","refetchZoneTable","fetchBinAndZoneTypes","filter","binEditCallback","zoneEditCallback","fireFetchData","confirmAlert","buttons","SUPPORT_LINKS","locationDetails","locationAddress","zoneAndBinLocations","LocationsConfigurationWizard","currentPage","updateWizardValues","fetchTranslations","_this$state","pageList","Wizard","stepList","prevPage","additionalProps","WizardPage","goToPage","WizardSteps","steps","step","currentStep","showStepNumber","tabIndex","stepsClickable","stepIdx","WizardTitle","additionalTitle","element","text","delimeter","_this$props","stockMovementTranslationsFetched","stockMovement","hasPackingSupport","shipmentStatus","indeterminate","custom","checked","htmlFor","elem","margin"],"sourceRoot":""}