{"version":3,"file":"bundle.929af1b45eb780bfc503.5395.js","mappings":"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","sources":["webpack://openboxes/./src/js/components/product-select/ProductSelect.jsx","webpack://openboxes/./src/js/components/form-elements/ModalWrapper.jsx","webpack://openboxes/./src/js/utils/AlertMessage.jsx","webpack://openboxes/./src/js/components/form-elements/ProductSelectField.jsx","webpack://openboxes/./src/js/utils/form-values-utils.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/modals/CombinedShipmentItemsModal.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/combined-shipments/AddItemsPage.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/combined-shipments/CreateStockMovement.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/combined-shipments/SendMovementPage.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/StockMovementCombinedShipments.jsx","webpack://openboxes/./src/js/utils/Checkbox.jsx","webpack://openboxes/./src/js/components/DocumentButton.jsx","webpack://openboxes/./src/js/components/form-elements/ButtonField.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { Tooltip } from \"react-tippy\";\n\nimport { debounceProductsFetch } from \"utils/option-utils\";\nimport renderHandlingIcons from \"utils/product-handling-icons\";\nimport Select from \"utils/Select\";\n\nconst productOptionLabel = ({ productCode, displayName, displayNames, name }) =>\n  `${productCode} - ${displayName || displayNames?.default || name}`;\n\nconst Option = (option) => (\n  <Tooltip\n    html={<div className=\"text-truncate\">{option.name}</div>}\n    theme=\"transparent\"\n    disabled={!(option.displayName || option.displayNames?.default)}\n    position=\"top-start\"\n  >\n    <strong\n      style={{ color: option.color || \"black\" }}\n      className=\"d-flex align-items-center\"\n    >\n      {option.label || productOptionLabel(option)}\n      &nbsp;\n      {renderHandlingIcons(option.handlingIcons)}\n    </strong>\n  </Tooltip>\n);\n\nconst SelectedValue = (option) => (\n  <span className=\"d-flex align-items-center\">\n    <span\n      style={{ color: option.showSelectedOptionColor && option.color }}\n      className=\"text-truncate\"\n    >\n      {option.label || productOptionLabel(option)}\n    </span>\n    {renderHandlingIcons(option?.handlingIcons)}\n  </span>\n);\n\nconst ProductSelect = ({\n  onExactProductSelected,\n  locationId,\n  fieldRef,\n  includeUom,\n  ...props\n}) => {\n  const selectRef = useRef(null);\n  const [isExactMatch, setIsExactMatch] = useState(false);\n  const [loadedOptions, setLoadedOptions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const { debounceTime, minSearchLength } = useSelector((state) => ({\n    debounceTime: state.session.searchConfig.debounceTime,\n    minSearchLength: state.session.searchConfig.minSearchLength,\n  }));\n\n  const debouncedProductsFetch = debounceProductsFetch(\n    debounceTime,\n    minSearchLength,\n    locationId,\n    { includeUom },\n  );\n\n  const onEnterPress = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setIsExactMatch(true);\n  };\n\n  useEffect(() => {\n    if (isExactMatch && loadedOptions.length && searchTerm) {\n      const exactMatches = loadedOptions.filter(\n        (product) => product.exactMatch,\n      );\n      let exactMatchProduct = null;\n\n      if (exactMatches.length === 1) {\n        [exactMatchProduct] = exactMatches;\n      } else if (exactMatches.length > 1) {\n        // if there are more than one exact match\n        // then select one that matches productCode with search string\n        const matchedByProductCode = exactMatches.find(\n          ({ productCode }) => productCode === searchTerm,\n        );\n        if (matchedByProductCode) exactMatchProduct = matchedByProductCode;\n      }\n\n      if (exactMatchProduct) {\n        selectRef.current.select.select.setValue(exactMatchProduct);\n      }\n      if (onExactProductSelected) {\n        /* There are cases when we want to call this callback right after the state change.\n         * Wrapping this callback inside a setTimeout puts it in an event que just like the setState\n         * unlike the regular code which is being executed immediately. */\n        setTimeout(\n          () => onExactProductSelected({ product: exactMatchProduct }),\n          0,\n        );\n      }\n      setIsExactMatch(false);\n      setLoadedOptions([]);\n    }\n  }, [isExactMatch, loadedOptions, searchTerm]);\n\n  const loadProductOptions = (searchString, callback) =>\n    debouncedProductsFetch(searchString, (resultOptions) => {\n      setLoadedOptions(resultOptions);\n      setSearchTerm(searchString);\n      callback(resultOptions);\n    });\n\n  return (\n    <Select\n      {...props}\n      fieldRef={(el) => {\n        selectRef.current = el;\n        if (fieldRef) fieldRef(el);\n      }}\n      async\n      options={[]}\n      loadOptions={props.loadOptions || loadProductOptions}\n      onMenuClose={() => {\n        setLoadedOptions([]);\n        setSearchTerm(\"\");\n      }}\n      filterOption={(item) => item}\n      onEnterPress={onEnterPress}\n      optionRenderer={Option}\n      valueRenderer={SelectedValue}\n    />\n  );\n};\n\nProductSelect.defaultProps = {\n  className: \"text-left\",\n  openOnClick: true,\n  autoload: true,\n  cache: false,\n  showValueTooltip: true,\n  onExactProductSelected: undefined,\n  fieldRef: undefined,\n  loadOptions: undefined,\n  includeUom: false,\n};\n\nProductSelect.propTypes = {\n  className: PropTypes.string,\n  openOnClick: PropTypes.bool,\n  autoload: PropTypes.bool,\n  cache: PropTypes.bool,\n  showValueTooltip: PropTypes.bool,\n  locationId: PropTypes.string.isRequired,\n  onExactProductSelected: PropTypes.func,\n  fieldRef: PropTypes.func,\n  loadOptions: PropTypes.func,\n  includeUom: PropTypes.bool,\n};\n\nexport default ProductSelect;\n","import React, { Component } from \"react\";\n\nimport arrayMutators from \"final-form-arrays\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\nimport Modal from \"react-modal\";\n\nimport { renderFormField } from \"utils/form-utils\";\nimport Translate from \"utils/Translate\";\n\nclass ModalWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  openModal() {\n    this.props.onOpen();\n    this.setState({ showModal: true });\n  }\n\n  closeModal() {\n    this.props.onClose();\n    this.setState({ showModal: false });\n  }\n\n  save(values) {\n    this.props.onSave(values);\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    const Title = this.props.title;\n    const { defaultTitleMessage } = this.props;\n\n    return (\n      <div className={this.props.wrapperClassName}>\n        {this.props.renderButton ? (\n          this.props.renderButton({ openModal: this.openModal })\n        ) : (\n          <button\n            type=\"button\"\n            className={`btn-xs ${this.props.btnOpenClassName}`}\n            style={this.props.btnOpenStyle}\n            disabled={this.props.btnOpenDisabled}\n            onClick={() => this.openModal()}\n          >\n            {this.props.btnOpenIcon && (\n              <i\n                className={`fa ${this.props.btnOpenIcon} mr-1`}\n                aria-hidden=\"true\"\n              />\n            )}\n            {this.props.btnOpenText && !this.props.btnOpenAsIcon && (\n              <Translate\n                id={this.props.btnOpenText}\n                defaultMessage={this.props.btnOpenDefaultText}\n              />\n            )}\n          </button>\n        )}\n        <Modal\n          isOpen={this.props.showModal || this.state.showModal}\n          onRequestClose={this.closeModal}\n          className=\"modal-content-custom\"\n          shouldCloseOnOverlayClick={false}\n        >\n          <div\n            className={this.props.bodyContainerClassName}\n            style={this.props.bodyContainerStyle}\n          >\n            {typeof Title === \"string\" ? (\n              <h5 className=\"text-center\">\n                {\" \"}\n                <Translate id={Title} defaultMessage={defaultTitleMessage} />\n              </h5>\n            ) : (\n              <Title />\n            )}\n            <hr />\n            <Form\n              onSubmit={(values) => this.save(values)}\n              initialValues={this.props.initialValues}\n              validate={this.props.validate}\n              mutators={{ ...arrayMutators }}\n              render={({ handleSubmit, values }) => (\n                <form id=\"modalForm\" onSubmit={handleSubmit}>\n                  {this.props.children}\n                  {this.props.renderBodyWithValues(values)}\n\n                  {_.map(this.props.fields, (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName, {\n                      ...this.props.formProps,\n                      values,\n                    }),\n                  )}\n\n                  <hr />\n\n                  <div\n                    className={this.props.btnContainerClassName}\n                    role=\"group\"\n                    style={this.props.btnContainerStyle}\n                  >\n                    <button\n                      type=\"button\"\n                      className={this.props.btnCancelClassName}\n                      style={this.props.btnCancelStyle}\n                      onClick={() => this.closeModal()}\n                    >\n                      <Translate\n                        id={this.props.btnCancelText}\n                        defaultMessage={this.props.btnCancelDefaultText}\n                      />\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className={this.props.btnSaveClassName}\n                      style={this.props.btnSaveStyle}\n                      disabled={this.props.btnSaveDisabled}\n                    >\n                      <Translate\n                        id={this.props.btnSaveText}\n                        defaultMessage={this.props.btnSaveDefaultText}\n                      />\n                    </button>\n                  </div>\n                </form>\n              )}\n            />\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalWrapper;\n\nModalWrapper.propTypes = {\n  /** Open button properties */\n  btnOpenText: PropTypes.string,\n  btnOpenDefaultText: PropTypes.string,\n  btnOpenClassName: PropTypes.string,\n  btnOpenStyle: PropTypes.shape({}),\n  btnOpenDisabled: PropTypes.bool,\n  btnOpenAsIcon: PropTypes.bool,\n  btnOpenIcon: PropTypes.string,\n\n  /** Modal title property */\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  defaultTitleMessage: PropTypes.string.isRequired,\n\n  /** Modal body container properties */\n  children: PropTypes.element,\n  bodyContainerClassName: PropTypes.string,\n  bodyContainerStyle: PropTypes.shape({}),\n\n  /** Button container properties */\n  btnContainerClassName: PropTypes.string,\n  btnContainerStyle: PropTypes.shape({}),\n  renderButton: PropTypes.func,\n\n  /** Wrapper properties */\n  wrapperClassName: PropTypes.string,\n\n  /** Save button properties */\n  btnSaveText: PropTypes.string,\n  btnSaveDefaultText: PropTypes.string,\n  btnSaveClassName: PropTypes.string,\n  btnSaveStyle: PropTypes.shape({}),\n  btnSaveDisabled: PropTypes.bool,\n\n  /** Cancel button properties */\n  btnCancelText: PropTypes.string,\n  btnCancelDefaultText: PropTypes.string,\n  btnCancelClassName: PropTypes.string,\n  btnCancelStyle: PropTypes.shape({}),\n\n  /** Functional properties */\n  onOpen: PropTypes.func,\n  onSave: PropTypes.func,\n  onClose: PropTypes.func,\n\n  /** Form elements */\n  validate: PropTypes.func,\n  renderBodyWithValues: PropTypes.func,\n  initialValues: PropTypes.oneOfType([\n    PropTypes.shape({}),\n    PropTypes.arrayOf(PropTypes.shape({})),\n  ]),\n  fields: PropTypes.shape({}),\n  formProps: PropTypes.shape({}),\n  showModal: PropTypes.bool,\n};\n\nModalWrapper.defaultProps = {\n  btnOpenText: \"react.default.button.open.label\",\n  btnOpenDefaultText: \"Open\",\n  btnOpenClassName: \"btn btn-outline-primary\",\n  btnOpenStyle: {},\n  btnOpenDisabled: false,\n  btnOpenAsIcon: false,\n  btnOpenIcon: \"\",\n\n  children: null,\n  bodyContainerClassName: \"modal-body-container\",\n  bodyContainerStyle: {},\n\n  btnContainerClassName: \"btn-group float-right\",\n  btnContainerStyle: {},\n\n  wrapperClassName: null,\n\n  btnSaveText: \"react.default.button.save.label\",\n  btnSaveDefaultText: \"Save\",\n  btnSaveClassName: \"btn btn-outline-success\",\n  btnSaveStyle: {},\n  btnSaveDisabled: false,\n\n  btnCancelText: \"react.default.button.cancel.label\",\n  btnCancelDefaultText: \"Cancel\",\n  btnCancelClassName: \"btn btn-outline-secondary\",\n  btnCancelStyle: {},\n\n  renderButton: undefined,\n\n  onOpen: () => null,\n  onSave: () => null,\n  onClose: () => null,\n\n  validate: () => null,\n  renderBodyWithValues: () => null,\n  initialValues: [],\n  fields: {},\n  formProps: {},\n  showModal: false,\n};\n","import React, { useMemo } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nconst AlertMessage = ({ show, message, danger, close, className }) => {\n  const getMessageElement = useMemo(() => {\n    const alertMessages =\n      typeof message !== \"string\" && Array.isArray(message)\n        ? message\n        : [message];\n    return alertMessages.map((msg) => (\n      <div>\n        <i\n          className={`fa ${danger ? \"fa-times-circle\" : \"fa-exclamation-circle\"} pr-2`}\n        />\n        {msg}\n      </div>\n    ));\n  }, [message]);\n\n  if (show) {\n    return (\n      <div\n        data-testid=\"alert-message\"\n        className={`${className} alert ${danger ? \"alert-danger\" : \"alert-warning\"}`}\n        style={{\n          cursor: close ? \"pointer\" : \"default\",\n          whiteSpace: \"pre-line\",\n        }}\n        role=\"presentation\"\n        onClick={() => close()}\n      >\n        {getMessageElement}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default AlertMessage;\n\nAlertMessage.propTypes = {\n  className: PropTypes.string,\n  close: PropTypes.func,\n  danger: PropTypes.bool,\n  message: PropTypes.string,\n  show: PropTypes.bool,\n};\n\nAlertMessage.defaultProps = {\n  className: \"\",\n  close: () => null,\n  danger: false,\n  message: \"\",\n  show: false,\n};\n","import React from \"react\";\n\nimport BaseField from \"components/form-elements/BaseField\";\nimport ProductSelect from \"components/product-select/ProductSelect\";\n\nconst ProductSelectField = (props) => {\n  // eslint-disable-next-line react/prop-types\n  const renderInput = ({ className, ...attributes }) => (\n    <ProductSelect\n      {...attributes}\n      name={attributes.id}\n      className={`select-xs ${className || \"\"}`}\n      classNamePrefix=\"react-select\"\n    />\n  );\n\n  return <BaseField {...props} renderInput={renderInput} />;\n};\n\nexport default ProductSelectField;\n","import React from \"react\";\n\nimport _ from \"lodash\";\nimport { Tooltip } from \"react-tippy\";\n\nimport notification from \"components/Layout/notifications/notification\";\nimport NotificationType from \"consts/notificationTypes\";\nimport renderHandlingIcons from \"utils/product-handling-icons\";\n\nexport const getInvoiceDescription = (rowValue) => {\n  if (\n    !rowValue?.orderAdjustment &&\n    !rowValue?.isAdjustment &&\n    rowValue?.displayNames?.default\n  ) {\n    return (\n      <Tooltip\n        html={rowValue?.productName}\n        theme=\"transparent\"\n        delay=\"150\"\n        duration=\"250\"\n        hideDelay=\"50\"\n      >\n        {rowValue.displayNames?.default}\n      </Tooltip>\n    );\n  }\n  return rowValue?.description;\n};\n\nexport const formatProductSupplierSubtext = (productSupplier) =>\n  productSupplier?.name ? `(source: ${productSupplier?.name})` : null;\n\nexport const formatProductDisplayName = (rowValue) => (\n  <div className=\"d-flex\">\n    <span className=\"text-truncate\">\n      {rowValue?.displayName ||\n        rowValue?.displayNames?.default ||\n        rowValue?.name}\n    </span>\n    {renderHandlingIcons(rowValue?.handlingIcons)}\n  </div>\n);\n\nexport const getReceivingPayloadContainers = (formValues) =>\n  _.map(formValues.containers, (container) => ({\n    ...container,\n    shipmentItems: _.map(container.shipmentItems, (item) => {\n      if (!_.get(item, \"recipient.id\")) {\n        return _.omit(\n          {\n            ...item,\n            recipient: \"\",\n          },\n          \"product.displayNames\",\n        );\n      }\n      /** We have to omit product.displayNames, due to an error\n       *  while binding bindData(partialReceiptItem, shipmentItemMap)\n       *  it expects product.displayNames to have a setter, as we pass\n       *  product.displayNames.default: XYZ, to the update method, but it's not a\n       *  writable property.\n       *  With deprecated product.translatedName it was not the case, because\n       *  it was recognizing the transient, and we didn't access product.translatedName.something\n       *  but product.translatedName directly\n       * */\n      return _.omit(item, \"product.displayNames\");\n    }),\n  }));\n\nexport const matchesProductCodeOrName = ({ product, filterValue }) => {\n  const { productCode, name, displayNames } = product;\n  const value = filterValue?.toLowerCase();\n  return (\n    productCode?.toLowerCase()?.includes(value) ||\n    name?.toLowerCase()?.includes(value) ||\n    displayNames?.default?.toLowerCase()?.includes(value)\n  );\n};\n\nexport const showOutboundEditValidationErrors = ({ translate, errors }) => {\n  const errorMessage = `${translate(\"react.stockMovement.errors.errorInLine.label\", \"Error occurred in line\")}:`;\n  const errorDetails = errors.reduce(\n    (acc, message, key) => [\n      ...acc,\n      `${message && `${key + 1} - ${_.map(message, (val) => translate(`${val}`))}`}`,\n    ],\n    [],\n  );\n\n  notification(NotificationType.ERROR_OUTLINED)({\n    message: errorMessage,\n    detailsArray: errorDetails,\n  });\n};\n\nexport const omitEmptyValues = (values) =>\n  _.omitBy(values, (val) => {\n    // Do not omit boolean, numbers and date values\n    if (\n      typeof val === \"boolean\" ||\n      typeof val === \"number\" ||\n      val instanceof Date\n    ) {\n      return false;\n    }\n    return _.isEmpty(val);\n  });\n\nexport const mapStringToLimitedList = (value, elementsSeparator, lengthLimit) =>\n  (value?.length > lengthLimit\n    ? `${_.take(value, lengthLimit).join(\"\")}...`\n    : value\n  )?.split(elementsSeparator);\n","import React, { Component } from \"react\";\n\nimport update from \"immutability-helper\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport ArrayField from \"components/form-elements/ArrayField\";\nimport LabelField from \"components/form-elements/LabelField\";\nimport ModalWrapper from \"components/form-elements/ModalWrapper\";\nimport TextField from \"components/form-elements/TextField\";\nimport ProductSelect from \"components/product-select/ProductSelect\";\nimport { ORDER_URL } from \"consts/applicationUrls\";\nimport apiClient from \"utils/apiClient\";\nimport Checkbox from \"utils/Checkbox\";\nimport { formatProductSupplierSubtext } from \"utils/form-values-utils\";\nimport { debounceProductsInOrders } from \"utils/option-utils\";\nimport Select from \"utils/Select\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nconst FIELDS = {\n  orderItems: {\n    type: ArrayField,\n    arrowsNavigation: true,\n    maxTableHeight: \"calc(100vh - 500px)\",\n    fields: {\n      checked: {\n        fieldKey: \"\",\n        label: \"react.stockMovement.selectAll.label\",\n        defaultMessage: \"Select All\",\n        flexWidth: \"0.4\",\n        headerAlign: \"right\",\n        getDynamicAttr: ({ selectAllItems, allItemsSelected }) => ({\n          headerHtml: () => (\n            <input\n              type=\"checkbox\"\n              className=\"mt-1\"\n              checked={allItemsSelected}\n              onClick={selectAllItems}\n            />\n          ),\n        }),\n        type: ({\n          // eslint-disable-next-line react/prop-types\n          rowIndex,\n          fieldValue,\n          selectRow,\n        }) => (\n          <Checkbox\n            id={rowIndex.toString()}\n            disabled={false}\n            style={{ marginLeft: \"1.1rem\" }}\n            value={fieldValue.checked}\n            onChange={(value) => selectRow(value, rowIndex)}\n          />\n        ),\n      },\n      orderNumber: {\n        type: LabelField,\n        label: \"react.stockMovement.orderNumber.label\",\n        defaultMessage: \"PO Number\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        getDynamicAttr: ({ fieldValue }) => ({\n          url: fieldValue?.orderId ? ORDER_URL.show(fieldValue.orderId) : \"\",\n        }),\n        attributes: {\n          formatValue: (fieldValue) => fieldValue && fieldValue.orderNumber,\n        },\n      },\n      productCode: {\n        type: LabelField,\n        label: \"react.stockMovement.productCode.label\",\n        defaultMessage: \"Product Code\",\n        flexWidth: \"1\",\n      },\n      productName: {\n        type: LabelField,\n        label: \"react.stockMovement.productName.label\",\n        defaultMessage: \"Product name\",\n        flexWidth: \"3\",\n        attributes: {\n          className: \"text-left ml-1\",\n        },\n        getDynamicAttr: ({ values, rowIndex }) => {\n          const orderItem = values.orderItems[rowIndex];\n          const productSupplierName = formatProductSupplierSubtext({\n            name: orderItem?.productSupplierName,\n          });\n\n          return {\n            color: orderItem?.color,\n            showValueTooltip: true,\n            tooltipValue: [orderItem?.productName, productSupplierName]\n              .join(\" \")\n              ?.trim(),\n            formatValue: () => orderItem?.displayName || orderItem?.productName,\n          };\n        },\n      },\n      supplierCode: {\n        type: LabelField,\n        label: \"react.stockMovement.supplierCode.label\",\n        defaultMessage: \"Supplier code\",\n        flexWidth: \"1\",\n      },\n      budgetCode: {\n        type: LabelField,\n        label: \"react.stockMovement.budgetCode.label\",\n        defaultMessage: \"Budget Code\",\n        flexWidth: \"1\",\n      },\n      recipient: {\n        type: LabelField,\n        label: \"react.stockMovement.recipient.label\",\n        defaultMessage: \"Recipient\",\n        flexWidth: \"1.5\",\n        attributes: {\n          showValueTooltip: true,\n        },\n      },\n      quantityAvailable: {\n        type: LabelField,\n        label: \"react.stockMovement.quantityAvailable.label\",\n        defaultMessage: \"Quantity Available\",\n        flexWidth: \"1\",\n      },\n      quantityToShip: {\n        type: TextField,\n        label: \"react.stockMovement.quantityToShip.label\",\n        defaultMessage: \"Quantity to Ship\",\n        flexWidth: \"1\",\n        attributes: {\n          type: \"number\",\n        },\n        getDynamicAttr: ({ updateRow, values, rowIndex }) => ({\n          onChange: () => updateRow(values, rowIndex),\n        }),\n      },\n      uom: {\n        type: LabelField,\n        label: \"react.stockMovement.uom.label\",\n        defaultMessage: \"UoM\",\n        flexWidth: \"1\",\n      },\n    },\n  },\n};\n\nfunction validate(values) {\n  const errors = {};\n  errors.orderItems = [];\n\n  _.forEach(values.orderItems, (item, key) => {\n    if (\n      item.checked &&\n      (_.toInteger(item.quantityToShip) > item.quantityAvailable ||\n        _.toInteger(item.quantityToShip) < 0)\n    ) {\n      errors.orderItems[key] = {\n        quantityToShip: \"react.combinedShipments.errors.quantityToShip.label\",\n      };\n    }\n  });\n\n  return errors;\n}\n\nconst INITIAL_STATE = {\n  orderNumberOptions: [],\n  selectedOrders: [],\n  selectedProductId: \"\",\n  selectedOrderItems: [],\n  formValues: { orderItems: [] },\n  sortOrder: 0,\n};\n\nclass CombinedShipmentItemsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n\n    this.onOpen = this.onOpen.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.selectRow = this.selectRow.bind(this);\n    this.updateRow = this.updateRow.bind(this);\n    this.selectAllItems = this.selectAllItems.bind(this);\n    this.allItemsSelected = this.allItemsSelected.bind(this);\n\n    this.debounceProductsInOrders = debounceProductsInOrders(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n      this.props.vendor,\n      this.props.destination,\n    );\n  }\n\n  onOpen() {\n    this.props.onOpen().then(() => {\n      this.setState(INITIAL_STATE, () => {\n        this.getOrderNumberOptions();\n        this.fetchOrderItems();\n      });\n    });\n  }\n\n  onSave() {\n    this.props.showSpinner();\n    const { shipment } = this.props;\n    const { selectedOrderItems } = this.state;\n    const payload = {\n      itemsToAdd: _.map(selectedOrderItems, (item, key) => ({\n        orderItemId: key,\n        quantityToShip: _.toInteger(item.quantityToShip),\n        sortOrder: _.toInteger(item.sortOrder),\n      })),\n    };\n    const url = `/api/combinedShipmentItems/addToShipment/${shipment}`;\n\n    apiClient\n      .post(url, payload)\n      .then(() => {\n        this.setState(INITIAL_STATE, () => {\n          this.props.hideSpinner();\n          this.props.onResponse(this.props.overrideFormValue);\n        });\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  getSortOrder() {\n    this.setState((prev) => ({\n      sortOrder: prev.sortOrder + 1,\n    }));\n\n    return this.state.sortOrder;\n  }\n\n  getOrderNumberOptions() {\n    const { vendor, destination } = this.props;\n    const url = `/api/orderNumberOptions?vendor=${vendor}&destination=${destination}`;\n    apiClient\n      .get(url)\n      .then((resp) => this.setState({ orderNumberOptions: resp.data.data }));\n  }\n\n  setSelectedOrders(selectedOrders) {\n    this.setState({ selectedOrders }, () => this.fetchOrderItems());\n  }\n\n  setSelectedProduct(selectedProduct) {\n    this.setState(\n      {\n        selectedProductId: selectedProduct ? selectedProduct.id : \"\",\n      },\n      () => this.fetchOrderItems(),\n    );\n  }\n\n  fetchOrderItems() {\n    const { selectedOrders, selectedProductId, selectedOrderItems } =\n      this.state;\n    const { vendor, destination } = this.props;\n    const url = \"/api/combinedShipmentItems/findOrderItems\";\n    const payload = {\n      orderIds: _.map(selectedOrders, (o) => o.id),\n      productId: selectedProductId,\n      vendor,\n      destination,\n    };\n    return apiClient.post(url, payload).then((resp) =>\n      this.setState({\n        formValues: {\n          orderItems: _.map(resp.data.orderItems, (item) => ({\n            ...item,\n            checked: !!selectedOrderItems[item.orderItemId],\n            quantityToShip: selectedOrderItems[item.orderItemId]\n              ? selectedOrderItems[item.orderItemId].quantityToShip\n              : \"\",\n            sortOrder: this.getSortOrder(),\n          })),\n        },\n      }),\n    );\n  }\n\n  selectRow(value, rowIndex) {\n    const { formValues, selectedOrderItems } = this.state;\n    let newState = {\n      formValues: {\n        orderItems: _.map(formValues.orderItems, (item, idx) => {\n          if (rowIndex === idx) {\n            return {\n              ...item,\n              checked: value,\n              quantityToShip: value ? item.quantityAvailable : \"\",\n              sortOrder: value ? item.sortOrder : \"\",\n            };\n          }\n          return { ...item };\n        }),\n      },\n    };\n    if (!value) {\n      delete selectedOrderItems[formValues.orderItems[rowIndex].orderItemId];\n      newState = {\n        ...newState,\n        selectedOrderItems,\n      };\n    } else {\n      newState = {\n        ...newState,\n        selectedOrderItems: {\n          ...selectedOrderItems,\n          [formValues.orderItems[rowIndex].orderItemId]: {\n            quantityToShip: value\n              ? formValues.orderItems[rowIndex].quantityAvailable\n              : \"\",\n            sortOrder: value ? formValues.orderItems[rowIndex].sortOrder : \"\",\n          },\n        },\n      };\n    }\n    this.setState(newState);\n  }\n\n  updateRow(values, index) {\n    const { selectedOrderItems } = this.state;\n    const item = values.orderItems[index];\n    item.checked = true;\n    this.setState({\n      formValues: update(values, {\n        orderItems: { [index]: { $set: item } },\n      }),\n      selectedOrderItems: {\n        ...selectedOrderItems,\n        [item.orderItemId]: {\n          quantityToShip: item.quantityToShip,\n          sortOrder: item.sortOrder,\n        },\n      },\n    });\n  }\n\n  allItemsSelected() {\n    return this.state.formValues.orderItems.every((item) => item.checked);\n  }\n\n  selectAllItems() {\n    const allItemsSelected = this.allItemsSelected();\n    const { orderItems } = this.state.formValues;\n    this.setState(\n      {\n        formValues: {\n          orderItems: orderItems.map((item) => ({\n            ...item,\n            checked: !allItemsSelected,\n            quantityToShip: !allItemsSelected ? item.quantityAvailable : \"\",\n            sortOrder: !allItemsSelected ? item.sortOrder : \"\",\n          })),\n        },\n      },\n      () => this.updateAllSelectedItems(),\n    );\n  }\n\n  updateAllSelectedItems() {\n    const { orderItems } = this.state.formValues;\n    const allItemsSelected = this.allItemsSelected();\n    const updatedSelectedOrderItems = orderItems.reduce((acc, curr) => {\n      if (allItemsSelected) {\n        return {\n          ...acc,\n          [curr.orderItemId]: {\n            quantityToShip: curr.quantityAvailable,\n            sortOrder: curr.sortOrder,\n          },\n        };\n      }\n      return acc;\n    }, {});\n\n    this.setState({ selectedOrderItems: updatedSelectedOrderItems });\n  }\n\n  render() {\n    const { orderNumberOptions, selectedOrders, formValues } = this.state;\n    const { btnOpenText, btnOpenDefaultText, translate, btnOpenDisabled } =\n      this.props;\n\n    return (\n      <ModalWrapper\n        onOpen={this.onOpen}\n        onSave={this.onSave}\n        fields={FIELDS}\n        validate={validate}\n        initialValues={formValues}\n        title=\"react.combinedShipments.addItemsToShipment.label\"\n        defaultTitleMessage=\"Add items to shipment\"\n        formProps={{\n          selectRow: this.selectRow,\n          updateRow: this.updateRow,\n          selectAllItems: this.selectAllItems,\n          allItemsSelected: this.allItemsSelected(),\n        }}\n        btnSaveText=\"react.combinedShipments.addItemsToShipment.label\"\n        btnSaveDefaultText=\"Add items to shipment\"\n        btnOpenText={btnOpenText}\n        btnOpenDefaultText={btnOpenDefaultText}\n        btnOpenDisabled={btnOpenDisabled}\n        btnSaveDisabled={!_.find(formValues.orderItems, (item) => item.checked)}\n      >\n        <div className=\"d-flex mb-3 justify-content-start align-items-center w-100 combined-shipment-filter\">\n          <Select\n            fieldName=\"orderNumber\"\n            placeholder={translate(\n              \"react.combinedShipments.selectOrders.label\",\n              \"Select orders...\",\n            )}\n            value={selectedOrders}\n            multi\n            options={orderNumberOptions}\n            showValueTooltip\n            onChange={(value) => this.setSelectedOrders(value)}\n            valueKey=\"id\"\n            labelKey=\"orderNumber\"\n            classes=\"\"\n            cache={false}\n          />\n          &nbsp;\n          <ProductSelect\n            showSelectedOptionColor\n            placeholder={translate(\n              \"react.combinedShipments.selectProduct.label\",\n              \"Select product...\",\n            )}\n            loadOptions={this.debounceProductsInOrders}\n            onChange={(value) => this.setSelectedProduct(value)}\n          />\n        </div>\n      </ModalWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  debounceTime: state.session.searchConfig.debounceTime,\n  minSearchLength: state.session.searchConfig.minSearchLength,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps, { showSpinner, hideSpinner })(\n  CombinedShipmentItemsModal,\n);\n\nCombinedShipmentItemsModal.propTypes = {\n  vendor: PropTypes.string.isRequired,\n  destination: PropTypes.string.isRequired,\n  shipment: PropTypes.string.isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  debounceTime: PropTypes.number.isRequired,\n  minSearchLength: PropTypes.number.isRequired,\n  translate: PropTypes.func.isRequired,\n  onResponse: PropTypes.func.isRequired,\n  onOpen: PropTypes.func.isRequired,\n  btnOpenText: PropTypes.string,\n  btnOpenDefaultText: PropTypes.string,\n  btnOpenDisabled: PropTypes.bool,\n  overrideFormValue: PropTypes.func.isRequired,\n};\n\nCombinedShipmentItemsModal.defaultProps = {\n  btnOpenText: \"\",\n  btnOpenDefaultText: \"\",\n  btnOpenDisabled: false,\n};\n","import React, { Component } from \"react\";\n\nimport arrayMutators from \"final-form-arrays\";\nimport update from \"immutability-helper\";\nimport fileDownload from \"js-file-download\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { fetchUsers, hideSpinner, showSpinner } from \"actions\";\nimport ProductApi from \"api/services/ProductApi\";\nimport {\n  COMBINED_SHIPMENT_ITEMS_EXPORT_TEMPLATE,\n  COMBINED_SHIPMENT_ITEMS_IMPORT_TEMPLATE,\n  STOCK_MOVEMENT_BY_ID,\n  STOCK_MOVEMENT_ITEM_REMOVE,\n  STOCK_MOVEMENT_ITEMS,\n  STOCK_MOVEMENT_REMOVE_ALL_ITEMS,\n  STOCK_MOVEMENT_STATUS,\n  STOCK_MOVEMENT_UPDATE_ITEMS,\n} from \"api/urls\";\nimport ArrayField from \"components/form-elements/ArrayField\";\nimport ButtonField from \"components/form-elements/ButtonField\";\nimport DateField from \"components/form-elements/DateField\";\nimport LabelField from \"components/form-elements/LabelField\";\nimport ProductSelectField from \"components/form-elements/ProductSelectField\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TextField from \"components/form-elements/TextField\";\nimport CombinedShipmentItemsModal from \"components/stock-movement-wizard/modals/CombinedShipmentItemsModal\";\nimport { ORDER_URL, STOCK_MOVEMENT_URL } from \"consts/applicationUrls\";\nimport AlertMessage from \"utils/AlertMessage\";\nimport apiClient from \"utils/apiClient\";\nimport { renderFormField, setColumnValue } from \"utils/form-utils\";\nimport { formatProductSupplierSubtext } from \"utils/form-values-utils\";\nimport { debounceProductsFetch } from \"utils/option-utils\";\nimport Select from \"utils/Select\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst DELETE_BUTTON_FIELD = {\n  type: ButtonField,\n  label: \"react.default.button.delete.label\",\n  defaultMessage: \"Delete\",\n  flexWidth: \"1\",\n  fieldKey: \"\",\n  buttonLabel: \"react.default.button.delete.label\",\n  buttonDefaultMessage: \"Delete\",\n  getDynamicAttr: ({\n    fieldValue,\n    removeItem,\n    removeRow,\n    updateTotalCount,\n  }) => ({\n    onClick:\n      fieldValue && fieldValue.id\n        ? () => {\n            removeItem(fieldValue.id).then(() => {\n              removeRow();\n              updateTotalCount(-1);\n            });\n          }\n        : () => {\n            updateTotalCount(-1);\n            removeRow();\n          },\n    disabled: fieldValue && fieldValue.statusCode === \"SUBSTITUTED\",\n  }),\n  attributes: {\n    className: \"btn btn-outline-danger\",\n  },\n};\n\nconst FIELDS = {\n  lineItems: {\n    type: ArrayField,\n    arrowsNavigation: true,\n    virtualized: true,\n    isRowLoaded: ({ isRowLoaded }) => isRowLoaded,\n    loadMoreRows: ({ loadMoreRows }) => loadMoreRows(),\n    isFirstPageLoaded: ({ isFirstPageLoaded }) => isFirstPageLoaded,\n    // eslint-disable-next-line react/prop-types\n    addButton: ({\n      // eslint-disable-next-line react/prop-types\n      values,\n      onResponse,\n      saveItems,\n      invalid,\n      overrideFormValue,\n    }) => (\n      <CombinedShipmentItemsModal\n        shipment={values.stockMovementId}\n        vendor={values.origin.id}\n        destination={values.destination.id}\n        onResponse={onResponse}\n        overrideFormValue={overrideFormValue}\n        btnOpenText=\"react.default.button.addLines.label\"\n        btnOpenDefaultText=\"Add lines\"\n        onOpen={() => saveItems(values.lineItems)}\n        btnOpenDisabled={invalid}\n      >\n        <Translate\n          id=\"react.default.button.addLine.label\"\n          defaultMessage=\"Add line\"\n        />\n      </CombinedShipmentItemsModal>\n    ),\n    fields: {\n      orderNumber: {\n        type: LabelField,\n        label: \"react.stockMovement.orderNumber.label\",\n        defaultMessage: \"Order number\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        getDynamicAttr: ({ fieldValue }) => ({\n          url: fieldValue?.orderId ? ORDER_URL.show(fieldValue.orderId) : \"\",\n        }),\n        attributes: {\n          formatValue: (fieldValue) => fieldValue && fieldValue.orderNumber,\n        },\n      },\n      product: {\n        type: ProductSelectField,\n        label: \"react.stockMovement.product.label\",\n        defaultMessage: \"Product\",\n        headerAlign: \"left\",\n        flexWidth: \"4\",\n        required: true,\n        attributes: {\n          showSelectedOptionColor: true,\n          showValueTooltip: true,\n          disabled: true,\n        },\n        getDynamicAttr: ({ rowIndex, values }) => {\n          const row = values.lineItems[rowIndex] || {};\n          const productSupplierNameLabel = formatProductSupplierSubtext(\n            row?.productSupplier,\n          );\n\n          return {\n            tooltipValue: [row?.product?.name, productSupplierNameLabel].join(\n              \" \",\n            ),\n          };\n        },\n      },\n      lotNumber: {\n        type: TextField,\n        label: \"react.stockMovement.lot.label\",\n        defaultMessage: \"Lot\",\n        flexWidth: \"1\",\n        getDynamicAttr: ({\n          rowIndex,\n          values,\n          fetchInventoryItem,\n          debouncedInventoryItemFetch,\n        }) => ({\n          onBlur: () => {\n            fetchInventoryItem(values, rowIndex);\n          },\n          onChange: () => {\n            debouncedInventoryItemFetch(values, rowIndex);\n          },\n        }),\n      },\n      expirationDate: {\n        type: DateField,\n        label: \"react.stockMovement.expiry.label\",\n        defaultMessage: \"Expiry\",\n        flexWidth: \"1.5\",\n        attributes: {\n          dateFormat: \"MM/DD/YYYY\",\n          autoComplete: \"off\",\n          placeholderText: \"MM/DD/YYYY\",\n        },\n        getDynamicAttr: ({ rowIndex, values, validateExpirationDate }) => ({\n          onBlur: () => {\n            validateExpirationDate(values?.lineItems, rowIndex);\n          },\n        }),\n      },\n      packsRequested: {\n        type: TextField,\n        label: \"react.stockMovement.quantityPOUom.label\",\n        defaultMessage: \"Quantity (in PO UoM)\",\n        fixedWidth: \"120px\",\n        required: true,\n        headerTooltip: \"react.stockMovement.quantityPerUom.InputTooltip.label\",\n        multilineHeader: true,\n        attributes: {\n          type: \"number\",\n          showError: true,\n        },\n      },\n      unitOfMeasure: {\n        type: TextField,\n        label: \"react.stockMovement.POUom.label\",\n        defaultMessage: \"PO UoM\",\n        fixedWidth: \"110px\",\n        attributes: {\n          disabled: true,\n        },\n      },\n      calculatedQuantityRequested: {\n        type: TextField,\n        label: \"react.stockMovement.quantityEach.label\",\n        defaultMessage: \"Quantity (each)\",\n        multilineHeader: true,\n        flexWidth: 1,\n        attributes: {\n          disabled: true,\n        },\n        getDynamicAttr: ({ rowIndex, values }) => ({\n          formatValue: () => {\n            const row = values.lineItems[rowIndex] || {};\n            const packsRequested = _.toInteger(row.packsRequested);\n            const packSize = _.toInteger(row.packSize);\n            return packsRequested * packSize;\n          },\n        }),\n      },\n      palletName: {\n        type: TextField,\n        label: \"react.stockMovement.packLevel1.label\",\n        defaultMessage: \"Pack level 1\",\n        flexWidth: \"1\",\n        getDynamicAttr: ({ rowIndex, rowCount }) => ({\n          autoFocus: rowIndex === rowCount - 1,\n        }),\n      },\n      boxName: {\n        type: TextField,\n        label: \"react.stockMovement.packLevel2.label\",\n        defaultMessage: \"Pack level 2\",\n        flexWidth: \"1\",\n      },\n      recipient: {\n        type: SelectField,\n        label: \"react.stockMovement.recipient.label\",\n        defaultMessage: \"Recipient\",\n        flexWidth: \"1.5\",\n        getDynamicAttr: ({ recipients, translate, setRecipientValue }) => ({\n          headerHtml: () => (\n            <Select\n              placeholder={translate(\n                \"react.stockMovement.recipient.label\",\n                \"Recipient\",\n              )}\n              className=\"select-xs my-2\"\n              classNamePrefix=\"react-select\"\n              options={recipients}\n              onChange={(val) => {\n                if (val) {\n                  setRecipientValue(val);\n                }\n              }}\n            />\n          ),\n          options: recipients,\n        }),\n        attributes: {\n          labelKey: \"name\",\n          openOnClick: false,\n        },\n      },\n      split: {\n        type: ButtonField,\n        label: \"react.stockMovement.splitLine.label\",\n        defaultMessage: \"Split\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        buttonLabel: \"react.stockMovement.splitLine.label\",\n        buttonDefaultMessage: \"Split line\",\n        getDynamicAttr: ({\n          fieldValue,\n          addRow,\n          rowIndex,\n          updateTotalCount,\n        }) => ({\n          onClick: () => {\n            updateTotalCount(1);\n            addRow(\n              {\n                product: fieldValue.product,\n                recipient: fieldValue.recipient,\n                sortOrder: fieldValue.sortOrder + 1,\n                orderItemId: fieldValue.orderItemId,\n                referenceId: fieldValue.orderItemId,\n                orderNumber: fieldValue.orderNumber,\n                packSize: fieldValue.packSize,\n                unitOfMeasure: fieldValue.unitOfMeasure,\n                quantityAvailable: fieldValue.quantityAvailable,\n              },\n              rowIndex,\n            );\n          },\n        }),\n        attributes: {\n          className: \"btn btn-outline-success\",\n        },\n      },\n      deleteButton: DELETE_BUTTON_FIELD,\n    },\n  },\n};\n\nconst LOT_AND_EXPIRY_ERROR =\n  \"react.stockMovement.error.lotAndExpiryControl.label\";\n\n// It cannot be in the state, because updating state is not an atomic operation,\n// so the value of this can be changed after triggering the second modal\n// (when the modal is triggered onChange, onBlur triggers it second time)\nlet isModalOpen = false;\n\n/* eslint class-methods-use-this: [\"error\",{ \"exceptMethods\": [\"getLineItemsToBeSaved\"] }] */\n/**\n * The second step of stock movement where user can add items to stock list.\n * This component supports three different cases: with or without stocklist\n * when movement is from a depot and when movement is from a vendor.\n */\nclass AddItemsPage extends Component {\n  static updateSortOrder(lineItems) {\n    return _.map(lineItems, (item, rowIndex) => ({\n      ...item,\n      sortOrder: item.sortOrder - (item.sortOrder % 100) + rowIndex + 1,\n    }));\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: this.props.initialValues,\n      totalCount: 0,\n      isFirstPageLoaded: false,\n      showAlert: false,\n      alertMessage: \"\",\n    };\n\n    this.props.showSpinner();\n    this.confirmSave = this.confirmSave.bind(this);\n    this.validate = this.validate.bind(this);\n    this.validateWithAlertMessage = this.validateWithAlertMessage.bind(this);\n    this.isValidForSave = this.isValidForSave.bind(this);\n    this.isRowLoaded = this.isRowLoaded.bind(this);\n    this.updateTotalCount = this.updateTotalCount.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.fetchLineItems = this.fetchLineItems.bind(this);\n    this.saveRequisitionItemsInCurrentStep =\n      this.saveRequisitionItemsInCurrentStep.bind(this);\n    this.importTemplate = this.importTemplate.bind(this);\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n    this.fetchInventoryItem = this.fetchInventoryItem.bind(this);\n    this.validateExpirationDate = this.validateExpirationDate.bind(this);\n    this.cancelSavingRequisitionItem =\n      this.cancelSavingRequisitionItem.bind(this);\n    this.changeExpirationDate = this.changeExpirationDate.bind(this);\n\n    this.debouncedInventoryItemFetch = _.debounce((lineItems, rowIndex) => {\n      this.fetchInventoryItem(lineItems, rowIndex);\n    }, 1000);\n\n    this.debouncedProductsFetch = debounceProductsFetch(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n      this.props.initialValues.origin.id,\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.stockMovementTranslationsFetched) {\n      this.dataFetched = true;\n      this.fetchAllData();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.stockMovementTranslationsFetched && !this.dataFetched) {\n      this.dataFetched = true;\n\n      this.fetchAllData();\n    }\n  }\n\n  /**\n   * Returns an array of new stock movement's items and items to be\n   * updated (comparing to previous state of line items).\n   * @param {object} lineItems\n   * @public\n   */\n  getLineItemsToBeSaved(lineItems) {\n    const items = AddItemsPage.updateSortOrder(lineItems);\n\n    return _.map(items, (item) => ({\n      id: item.id || null,\n      product: { id: item.product.id },\n      quantityRequested: item.packsRequested * item.packSize,\n      palletName: item.palletName,\n      boxName: item.boxName,\n      lotNumber: item.lotNumber,\n      expirationDate: item.expirationDate,\n      recipient: {\n        id: _.isObject(item.recipient)\n          ? item.recipient.id || \"\"\n          : item.recipient || \"\",\n      },\n      sortOrder: item.sortOrder,\n      orderItemId: item.orderItemId,\n    }));\n  }\n\n  setLineItems({ response, setTableData }) {\n    const { data } = response.data;\n    const lineItemsData = _.map(data, (val) => ({\n      ...val,\n      disabled: true,\n      referenceId: val.orderItemId,\n    }));\n\n    setTableData?.(\"lineItems\", lineItemsData);\n\n    this.props.hideSpinner();\n  }\n\n  updateTotalCount(value) {\n    this.setState((prev) => ({\n      totalCount: prev.totalCount + value,\n    }));\n  }\n\n  dataFetched = false;\n\n  validate(values, ignoreLotAndExpiry) {\n    if (!this.dataFetched) {\n      return {};\n    }\n\n    const errors = {};\n    errors.lineItems = [];\n    const date = moment(this.props.minimumExpirationDate, \"MM/DD/YYYY\");\n\n    _.forEach(values.lineItems, (item, key) => {\n      if (\n        !_.isNil(item.product) &&\n        (!item.packsRequested || item.packsRequested <= 0)\n      ) {\n        errors.lineItems[key] = {\n          packsRequested: \"react.stockMovement.error.enterQuantity.label\",\n        };\n      }\n      if (!_.isEmpty(item.boxName) && _.isEmpty(item.palletName)) {\n        errors.lineItems[key] = {\n          boxName: \"react.stockMovement.error.boxWithoutPallet.label\",\n        };\n      }\n      const dateRequested = moment(item.expirationDate, \"MM/DD/YYYY\");\n      if (date.diff(dateRequested) > 0) {\n        errors.lineItems[key] = {\n          expirationDate: \"react.stockMovement.error.invalidDate.label\",\n        };\n      }\n      if (moment().startOf(\"day\").diff(dateRequested) > 0) {\n        errors.lineItems[key] = {\n          expirationDate: \"react.stockMovement.error.pastDate.label\",\n        };\n      }\n      const splitItems = _.filter(\n        values.lineItems,\n        (lineItem) => lineItem.referenceId === item.referenceId,\n      );\n      if (!item.id || splitItems.length > 1) {\n        const requestedQuantity = _.reduce(\n          splitItems,\n          (sum, val) =>\n            sum +\n            (val.packsRequested\n              ? _.toInteger(val.packsRequested * val.packSize)\n              : 0),\n          0,\n        );\n        if (requestedQuantity > item.quantityAvailable) {\n          _.forEach(values.lineItems, (lineItem, lineItemKey) => {\n            _.forEach(splitItems, (splitItem) => {\n              if (lineItem === splitItem) {\n                errors.lineItems[lineItemKey] = {\n                  packsRequested:\n                    \"react.stockMovement.error.higherSplitQuantity.label\",\n                };\n              }\n            });\n          });\n        }\n      } else if (\n        splitItems.length === 1 &&\n        item &&\n        item.quantityAvailable <\n          _.toInteger(item.packsRequested * item.packSize)\n      ) {\n        errors.lineItems[key] = {\n          packsRequested: \"react.stockMovement.error.higherQuantity.label\",\n        };\n      }\n      if (!ignoreLotAndExpiry) {\n        if (\n          item.expirationDate &&\n          (_.isNil(item.lotNumber) || _.isEmpty(item.lotNumber))\n        ) {\n          errors.lineItems[key] = {\n            lotNumber: \"react.stockMovement.error.expiryWithoutLot.label\",\n          };\n        }\n        if (!_.isNil(item.product) && item.product.lotAndExpiryControl) {\n          if (\n            !item.expirationDate &&\n            (_.isNil(item.lotNumber) || _.isEmpty(item.lotNumber))\n          ) {\n            errors.lineItems[key] = {\n              expirationDate: LOT_AND_EXPIRY_ERROR,\n              lotNumber: LOT_AND_EXPIRY_ERROR,\n            };\n          } else if (!item.expirationDate) {\n            errors.lineItems[key] = { expirationDate: LOT_AND_EXPIRY_ERROR };\n          } else if (_.isNil(item.lotNumber) || _.isEmpty(item.lotNumber)) {\n            errors.lineItems[key] = { lotNumber: LOT_AND_EXPIRY_ERROR };\n          }\n        }\n      }\n    });\n\n    return errors;\n  }\n\n  validateWithAlertMessage(values) {\n    const errors = this.validate(values);\n    let alertMessage = \"\";\n\n    _.forEach(errors.lineItems, (error, index) => {\n      if (error) {\n        const { productCode } = values.lineItems[index];\n        if (!alertMessage) {\n          alertMessage = `${this.props.translate(\"react.stockMovement.errors.followingRowsContainValidationError.label\", \"Following rows contain validation errors: Row\")} ${index + 1}: ${productCode}`;\n        } else {\n          alertMessage += `, Row ${index + 1}: ${productCode}`;\n        }\n      }\n    });\n\n    const { showAlert } = this.state;\n    this.setState({\n      alertMessage,\n      showAlert: showAlert && !alertMessage ? false : showAlert,\n    });\n\n    return errors;\n  }\n\n  isValidForSave(values) {\n    const errors = this.validate(values, true);\n    return !errors.lineItems || errors.lineItems.every(_.isEmpty);\n  }\n\n  /**\n   * Shows save confirmation dialog.\n   * @param {function} onConfirm\n   * @public\n   */\n  confirmSave(onConfirm) {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.message.confirmSave.label\",\n        \"Confirm save\",\n      ),\n      message: this.props.translate(\n        \"react.stockMovement.confirmSave.message\",\n        \"Are you sure you want to save? There are some lines with empty or zero quantity, those lines will be deleted.\",\n      ),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: onConfirm,\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  }\n\n  /**\n   * Shows Inventory item expiration date update confirmation dialog.\n   * @param {function} onConfirm\n   * @param {function} onReject\n   * @public\n   */\n  confirmInventoryItemExpirationDateUpdate(onConfirm, onReject) {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.message.confirmSave.label\",\n        \"Confirm save\",\n      ),\n      message: this.props.translate(\n        \"react.stockMovement.confirmExpiryDateUpdate.message\",\n        \"This will update the expiry date across all depots in the system. Are you sure you want to proceed?\",\n      ),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: onConfirm,\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n          onClick: onReject,\n        },\n      ],\n      afterClose: () => {\n        isModalOpen = false;\n      },\n    });\n  }\n\n  /**\n   * Fetches all required data.\n   * @public\n   */\n  fetchAllData() {\n    this.props.fetchUsers();\n    this.fetchAddItemsPageData();\n    if (!this.props.isPaginated) {\n      this.fetchLineItems();\n    }\n    this.props.hideSpinner();\n  }\n\n  /**\n   * Fetches 2nd step data from current stock movement.\n   * @public\n   */\n  fetchLineItems(mutateTableData) {\n    const url = `${STOCK_MOVEMENT_ITEMS(this.state.values.stockMovementId)}?stepNumber=2`;\n\n    return apiClient\n      .get(url)\n      .then((response) => {\n        this.setState({ totalCount: response.data.data.length });\n        this.setLineItems({\n          response,\n          setTableData: mutateTableData,\n        });\n      })\n      .catch((err) => err);\n  }\n\n  /**\n   * Fetches stock movement's line items and sets them in redux form and in\n   * state as current line items.\n   * @public\n   */\n  fetchAddItemsPageData() {\n    this.props.showSpinner();\n\n    apiClient\n      .get(STOCK_MOVEMENT_BY_ID(this.state.values.stockMovementId))\n      .then((resp) => {\n        const { hasManageInventory } = resp.data.data;\n        const { statusCode, lineItems } = resp.data.data;\n        const { totalCount } = resp.data;\n\n        const sortedLineItems = _.map(\n          _.sortBy(lineItems, [\"sortOrder\"]),\n          (val) => ({\n            ...val,\n            disabled: true,\n            referenceId: val.orderItemId,\n          }),\n        );\n\n        this.setState(\n          (prev) => ({\n            values: {\n              ...prev.values,\n              hasManageInventory,\n              statusCode,\n              // setting initial values for the form\n              lineItems: sortedLineItems,\n            },\n            totalCount,\n          }),\n          () => this.props.hideSpinner(),\n        );\n      });\n  }\n\n  isRowLoaded =\n    (values) =>\n    ({ index }) =>\n      !!values.lineItems[index];\n\n  /**\n   * Saves current stock movement progress (line items) and goes to the next stock movement step.\n   * @param {object} formValues\n   * @public\n   */\n  nextPage(formValues) {\n    const errors = this.validateWithAlertMessage(formValues).lineItems;\n    if (errors.length) {\n      this.setState({ showAlert: true });\n      return;\n    }\n\n    const lineItems = _.filter(\n      formValues.lineItems,\n      (val) => !_.isEmpty(val) && val.product,\n    );\n\n    if (\n      _.some(\n        lineItems,\n        (item) => !item.packsRequested || item.packsRequested === \"0\",\n      )\n    ) {\n      this.confirmSave(() =>\n        this.saveAndTransitionToNextStep(formValues, lineItems),\n      );\n    } else {\n      this.saveAndTransitionToNextStep(formValues, lineItems);\n    }\n  }\n\n  /**\n   * Saves current stock movement progress (line items) and goes to the next stock movement step.\n   * @param {object} formValues\n   * @param {object} lineItems\n   * @public\n   */\n  saveAndTransitionToNextStep(formValues, lineItems) {\n    this.saveRequisitionItemsAndTransitionToNextStep(formValues, lineItems);\n  }\n\n  async fetchInventoryItem(values, rowIndex) {\n    this.debouncedInventoryItemFetch.cancel();\n    const lotNumber = values?.lineItems[rowIndex]?.lotNumber;\n    const productId = values?.lineItems[rowIndex]?.product?.id;\n\n    if (!lotNumber || !productId) {\n      return;\n    }\n\n    const { data } = await ProductApi.getInventoryItem(productId, lotNumber);\n    const mappedLineItems = values?.lineItems.map((lineItem, index) => {\n      if (rowIndex === index) {\n        return {\n          ...lineItem,\n          fetchedInventoryItem: {\n            inventoryItem: data.inventoryItem,\n            quantity: data?.quantityOnHand,\n          },\n        };\n      }\n      return lineItem;\n    });\n\n    this.setState(\n      (previousState) => ({\n        ...previousState,\n        values: {\n          ...previousState.values,\n          lineItems: mappedLineItems,\n        },\n      }),\n      () => {\n        if (!values.lineItems?.[rowIndex]?.expirationDate) {\n          this.changeExpirationDate(\n            mappedLineItems,\n            rowIndex,\n            data?.inventoryItem?.expirationDate,\n          );\n        }\n        this.validateExpirationDate(mappedLineItems, rowIndex);\n      },\n    );\n  }\n\n  validateExpirationDate(lineItems, rowIndex) {\n    const lineItem = lineItems?.[rowIndex];\n    const inventoryItem =\n      lineItem?.fetchedInventoryItem?.inventoryItem || lineItem?.inventoryItem;\n    const quantity =\n      (lineItem?.fetchedInventoryItem\n        ? lineItem?.fetchedInventoryItem?.quantity\n        : lineItem?.inventoryItem?.quantity) || 0;\n    const expirationDateHasChanged =\n      inventoryItem?.expirationDate &&\n      lineItem?.expirationDate &&\n      lineItem?.lotNumber &&\n      lineItem?.expirationDate !== inventoryItem?.expirationDate &&\n      quantity > 0;\n\n    if (expirationDateHasChanged && !isModalOpen) {\n      isModalOpen = true;\n      this.confirmInventoryItemExpirationDateUpdate(\n        () => this.saveRequisitionItems(this.state.values.lineItems),\n        () => this.cancelSavingRequisitionItem(lineItems, rowIndex),\n      );\n    }\n  }\n\n  changeExpirationDate(lineItems, rowIndex, newDate) {\n    const updatedLineItem = {\n      ...lineItems?.[rowIndex],\n      expirationDate: newDate,\n    };\n    this.setState((previousState) => ({\n      ...previousState,\n      values: {\n        ...previousState.values,\n        lineItems: update(previousState?.values?.lineItems, {\n          [rowIndex]: { $set: updatedLineItem },\n        }),\n      },\n    }));\n  }\n\n  cancelSavingRequisitionItem(lineItems, rowIndex) {\n    const mappedLineItems = lineItems?.map((item, index) => {\n      if (index === rowIndex) {\n        const expirationDate =\n          item?.fetchedInventoryItem?.inventoryItem?.expirationDate ||\n          item?.inventoryItem?.expirationDate;\n        return { ...item, expirationDate };\n      }\n      return item;\n    });\n\n    this.setState((prev) => ({\n      ...prev,\n      values: {\n        ...prev.values,\n        lineItems: mappedLineItems,\n      },\n    }));\n  }\n\n  /**\n   * Saves list of stock movement items with post method.\n   * @param {object} lineItems\n   * @public\n   */\n  saveRequisitionItems(lineItems) {\n    const itemsToSave = this.getLineItemsToBeSaved(lineItems);\n    const payload = {\n      id: this.state.values.stockMovementId,\n      lineItems: itemsToSave,\n    };\n\n    if (payload.lineItems.length) {\n      return apiClient\n        .post(\n          STOCK_MOVEMENT_UPDATE_ITEMS(this.state.values.stockMovementId),\n          payload,\n        )\n        .catch(() =>\n          Promise.reject(\n            new Error(\"react.stockMovement.error.saveRequisitionItems.label\"),\n          ),\n        );\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves list of stock movement items and transition to next step.\n   * @param {object} formValues\n   * @param {object} lineItems\n   * @public\n   */\n  saveRequisitionItemsAndTransitionToNextStep(formValues, lineItems) {\n    this.props.showSpinner();\n\n    this.saveRequisitionItems(lineItems)\n      .then((resp) => {\n        let values = formValues;\n        if (resp) {\n          values = {\n            ...formValues,\n            lineItems: _.map(resp.data.data.lineItems, (item) => ({\n              ...item,\n              referenceId: item.orderItemId,\n            })),\n          };\n        }\n        this.transitionToNextStep()\n          .then(() => {\n            this.props.nextPage(values);\n          })\n          .catch(() => this.props.hideSpinner());\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Saves list of requisition items in current step (without step change). Used to export template.\n   * @param {object} itemCandidatesToSave\n   * @public\n   */\n  saveRequisitionItemsInCurrentStep(itemCandidatesToSave) {\n    const itemsToSave = this.getLineItemsToBeSaved(itemCandidatesToSave);\n    const payload = {\n      id: this.state.values.stockMovementId,\n      lineItems: itemsToSave,\n    };\n\n    if (payload.lineItems.length) {\n      return apiClient\n        .post(\n          STOCK_MOVEMENT_UPDATE_ITEMS(this.state.values.stockMovementId),\n          payload,\n        )\n        .then((resp) => {\n          const { lineItems } = resp.data.data;\n\n          const lineItemsBackendData = _.map(\n            _.sortBy(lineItems, [\"sortOrder\"]),\n            (val) => ({ ...val, referenceId: val.orderItemId }),\n          );\n\n          this.setState((prev) => ({\n            values: {\n              ...prev.values,\n              lineItems: lineItemsBackendData,\n            },\n          }));\n        })\n        .catch(() =>\n          Promise.reject(\n            new Error(\n              this.props.translate(\n                \"react.stockMovement.error.saveRequisitionItems.label\",\n                \"Could not save requisition items\",\n              ),\n            ),\n          ),\n        );\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves list of requisition items in current step (without step change).\n   * @param {object} formValues\n   * @public\n   */\n  save(formValues) {\n    const lineItems = _.filter(\n      formValues.lineItems,\n      (item) => !_.isEmpty(item),\n    );\n    if (lineItems.length > 0) {\n      if (\n        _.some(\n          lineItems,\n          (item) => !item.packsRequested || item.packsRequested === \"0\",\n        )\n      ) {\n        this.confirmSave(() => this.saveItems(lineItems));\n      } else {\n        this.saveItems(lineItems);\n      }\n    } else {\n      Alert.error(\n        this.props.translate(\n          \"react.stockMovement.error.noShipmentItems.label\",\n          \"Cannot save shipment from PO with no items.\",\n        ),\n        { timeout: 2000 },\n      );\n    }\n  }\n\n  /**\n   * Saves changes made by user in this step and redirects to the shipment view page\n   * @param {object} formValues\n   * @public\n   */\n  saveAndExit(formValues) {\n    if (formValues.lineItems.length > 0) {\n      const errors = this.validateWithAlertMessage(formValues).lineItems;\n      if (!errors.length) {\n        this.saveRequisitionItemsInCurrentStep(formValues.lineItems).then(\n          () => {\n            window.location = STOCK_MOVEMENT_URL.show(\n              formValues.stockMovementId,\n            );\n          },\n        );\n      } else {\n        confirmAlert({\n          title: this.props.translate(\n            \"react.stockMovement.confirmExit.label\",\n            \"Confirm save\",\n          ),\n          message: this.props.translate(\n            \"react.stockMovement.confirmExit.message\",\n            \"Validation errors occurred. Are you sure you want to exit and lose unsaved data?\",\n          ),\n          buttons: [\n            {\n              label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n              onClick: () => {\n                window.location = STOCK_MOVEMENT_URL.show(\n                  formValues.stockMovementId,\n                );\n              },\n            },\n            {\n              label: this.props.translate(\"react.default.no.label\", \"No\"),\n            },\n          ],\n        });\n      }\n    } else {\n      Alert.error(\n        this.props.translate(\n          \"react.stockMovement.error.noShipmentItems.label\",\n          \"Cannot save shipment from PO with no items.\",\n        ),\n        { timeout: 2000 },\n      );\n    }\n  }\n\n  /**\n   * Saves list of requisition items in current step (without step change).\n   * @param {object} lineItems\n   * @public\n   */\n  saveItems(lineItems) {\n    this.props.showSpinner();\n\n    this.saveRequisitionItemsInCurrentStep(lineItems)\n      .then(() => {\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.stockMovement.alert.saveSuccess.label\",\n            \"Changes saved successfully\",\n          ),\n          { timeout: 3000 },\n        );\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Removes chosen item from items list.\n   * @param {string} itemId\n   * @public\n   */\n  removeItem(itemId) {\n    this.props.showSpinner();\n    return apiClient\n      .delete(STOCK_MOVEMENT_ITEM_REMOVE(itemId))\n      .then(() => this.props.hideSpinner())\n      .catch(() => {\n        this.props.hideSpinner();\n        return Promise.reject(\n          new Error(\"react.stockMovement.error.deleteRequisitionItem.label\"),\n        );\n      });\n  }\n\n  /**\n   * Removes all items from requisition's items list.\n   * @public\n   */\n  removeAll() {\n    this.props.showSpinner();\n\n    return apiClient\n      .delete(\n        STOCK_MOVEMENT_REMOVE_ALL_ITEMS(this.state.values.stockMovementId),\n      )\n      .then(() => {\n        this.setState(\n          (prev) => ({\n            totalCount: 0,\n            values: {\n              ...prev.values,\n              lineItems: [],\n            },\n          }),\n          () => this.props.hideSpinner(),\n        );\n      })\n      .catch(() => {\n        this.fetchLineItems();\n        this.props.hideSpinner();\n        return Promise.reject(\n          new Error(\"react.stockMovement.error.deleteRequisitionItem.label\"),\n        );\n      });\n  }\n\n  /**\n   * Refetch the data, all not saved changes will be lost.\n   * @public\n   */\n  refresh() {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.message.confirmRefresh.label\",\n        \"Confirm refresh\",\n      ),\n      message: this.props.translate(\n        \"react.stockMovement.confirmRefresh.message\",\n        \"Are you sure you want to refresh? Your progress since last save will be lost.\",\n      ),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: () => this.fetchAllData(),\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  }\n\n  /**\n   * Transition to next stock movement status:\n   * - 'CHECKING' if origin type is supplier.\n   * - 'VERIFYING' if origin type is other than supplier.\n   * @param {string} status\n   * @public\n   */\n  transitionToNextStep() {\n    const payload = { status: \"CHECKING\" };\n\n    if (this.state.values.statusCode === \"CREATED\") {\n      return apiClient.post(\n        STOCK_MOVEMENT_STATUS(this.state.values.stockMovementId),\n        payload,\n      );\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves changes made by user in this step and go back to previous page\n   * @param {object} values\n   * @param {boolean} invalid\n   * @public\n   */\n  previousPage(values, invalid) {\n    if (!invalid) {\n      this.saveRequisitionItemsInCurrentStep(values.lineItems).then(() =>\n        this.props.previousPage(values),\n      );\n    } else {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.confirmPreviousPage.label\",\n          \"Validation error\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmPreviousPage.message.label\",\n          \"Cannot save due to validation error on page\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\n              \"react.stockMovement.confirmPreviousPage.correctError.label\",\n              \"Correct error\",\n            ),\n          },\n          {\n            label: this.props.translate(\n              \"react.stockMovement.confirmPreviousPage.continue.label\",\n              \"Continue (lose unsaved work)\",\n            ),\n            onClick: () => this.props.previousPage(values),\n          },\n        ],\n      });\n    }\n  }\n\n  /**\n   * Imports chosen file to backend and then fetches line items.\n   * @param mutateTableData\n   */\n  importTemplate = (mutateTableData) => (event) => {\n    this.props.showSpinner();\n    const formData = new FormData();\n    const file = event.target.files[0];\n    const { stockMovementId } = this.state.values;\n\n    formData.append(\"importFile\", file.slice(0, file.size, \"text/csv\"));\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n\n    return apiClient\n      .post(\n        COMBINED_SHIPMENT_ITEMS_IMPORT_TEMPLATE(stockMovementId),\n        formData,\n        config,\n      )\n      .then(() => {\n        this.fetchLineItems(mutateTableData);\n        if (_.isNil(_.last(this.state.values.lineItems).product)) {\n          this.setState((prev) => ({\n            values: {\n              ...prev.values,\n            },\n          }));\n        }\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n      });\n  };\n\n  exportTemplate(blank) {\n    const url = `${COMBINED_SHIPMENT_ITEMS_EXPORT_TEMPLATE}?vendor=${this.state.values.origin.id}&destination=${this.state.values.destination.id}${blank ? \"&blank=true\" : \"\"}`;\n    apiClient\n      .get(url, { responseType: \"blob\" })\n      .then((response) => {\n        fileDownload(\n          response.data,\n          `${this.props.translate(\"react.combinedShipments.template.fileName.label\", \"Order-items-template\")}.csv`,\n          \"text/csv\",\n        );\n        this.props.hideSpinner();\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Toggle the downloadable files\n   */\n  toggleDropdown() {\n    this.setState((prev) => ({\n      isDropdownVisible: !prev.isDropdownVisible,\n    }));\n  }\n\n  render() {\n    const { showAlert, alertMessage } = this.state;\n\n    return (\n      <Form\n        onSubmit={() => {}}\n        validate={this.validate}\n        mutators={{\n          ...arrayMutators,\n          override: ([field, value], state, { changeValue }) => {\n            changeValue(state, field, () => value);\n          },\n          setColumnValue,\n        }}\n        initialValues={this.state.values}\n        render={({ form, handleSubmit, values, invalid }) => (\n          <div className=\"d-flex flex-column\">\n            <AlertMessage show={showAlert} message={alertMessage} danger />\n            <span className=\"buttons-container\">\n              <label\n                htmlFor=\"csvInput\"\n                className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n              >\n                <span>\n                  <i className=\"fa fa-download pr-2\" />\n                  <Translate\n                    id=\"react.default.button.importTemplate.label\"\n                    defaultMessage=\"Import template\"\n                  />\n                </span>\n                <input\n                  id=\"csvInput\"\n                  type=\"file\"\n                  style={{ display: \"none\" }}\n                  onChange={this.importTemplate(form.mutators.override)}\n                  onClick={(event) => {\n                    // eslint-disable-next-line no-param-reassign\n                    event.target.value = null;\n                  }}\n                  accept=\".csv\"\n                />\n              </label>\n              <div className=\"dropdown\">\n                <button\n                  type=\"button\"\n                  onClick={this.toggleDropdown}\n                  className=\"dropdown-button float-right mb-1 btn btn-outline-secondary align-self-end btn-xs ml-1\"\n                >\n                  <span>\n                    <i className=\"fa fa-sign-out pr-2\" />\n                    <Translate\n                      id=\"react.default.button.download.label\"\n                      defaultMessage=\"Download\"\n                    />\n                  </span>\n                </button>\n                <div\n                  className={`dropdown-content print-buttons-container col-md-3 flex-grow-1 \n                        ${this.state.isDropdownVisible ? \"visible\" : \"\"}`}\n                >\n                  <a\n                    href=\"#\"\n                    className=\"py-1 mb-1 btn btn-outline-secondary\"\n                    onClick={() => {\n                      this.exportTemplate(false);\n                    }}\n                  >\n                    <span>\n                      <i className=\"pr-2 fa fa-download\" />\n                      <Translate\n                        id=\"react.combinedShipments.availableItems.label\"\n                        defaultMessage=\"Available order items\"\n                      />\n                    </span>\n                  </a>\n                  <a\n                    href=\"#\"\n                    className=\"py-1 mb-1 btn btn-outline-secondary\"\n                    onClick={() => {\n                      this.exportTemplate(true);\n                    }}\n                  >\n                    <span>\n                      <i className=\"pr-2 fa fa-download\" />\n                      <Translate\n                        id=\"react.combinedShipments.blankTemplate.label\"\n                        defaultMessage=\"Blank import template\"\n                      />\n                    </span>\n                  </a>\n                </div>\n              </div>\n              <button\n                type=\"button\"\n                onClick={() => this.refresh()}\n                className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n              >\n                <span>\n                  <i className=\"fa fa-refresh pr-2\" />\n                  <Translate\n                    id=\"react.default.button.refresh.label\"\n                    defaultMessage=\"Reload\"\n                  />\n                </span>\n              </button>\n              <button\n                type=\"button\"\n                disabled={!this.isValidForSave(values)}\n                onClick={() => this.save(values)}\n                className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n              >\n                <span>\n                  <i className=\"fa fa-save pr-2\" />\n                  <Translate\n                    id=\"react.default.button.save.label\"\n                    defaultMessage=\"Save\"\n                  />\n                </span>\n              </button>\n              <button\n                type=\"button\"\n                disabled={!this.isValidForSave(values)}\n                onClick={() => this.saveAndExit(values)}\n                className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n              >\n                <span>\n                  <i className=\"fa fa-sign-out pr-2\" />\n                  <Translate\n                    id=\"react.default.button.saveAndExit.label\"\n                    defaultMessage=\"Save and exit\"\n                  />\n                </span>\n              </button>\n              <button\n                type=\"button\"\n                disabled={invalid}\n                onClick={() => this.removeAll()}\n                className=\"float-right mb-1 btn btn-outline-danger align-self-end btn-xs ml-1\"\n              >\n                <span>\n                  <i className=\"fa fa-remove pr-2\" />\n                  <Translate\n                    id=\"react.default.button.deleteAll.label\"\n                    defaultMessage=\"Delete all\"\n                  />\n                </span>\n              </button>\n            </span>\n            <form onSubmit={handleSubmit}>\n              <div className=\"table-form\">\n                {_.map(FIELDS, (fieldConfig, fieldName) =>\n                  renderFormField(fieldConfig, fieldName, {\n                    stocklist: values.stocklist,\n                    recipients: this.props.recipients,\n                    loadMoreRows: () => {},\n                    debouncedProductsFetch: this.debouncedProductsFetch,\n                    totalCount: this.state.totalCount,\n                    isRowLoaded: this.isRowLoaded(values),\n                    updateTotalCount: this.updateTotalCount,\n                    isPaginated: this.props.isPaginated,\n                    isFromOrder: this.state.values?.isFromOrder,\n                    values,\n                    isFirstPageLoaded: this.state.isFirstPageLoaded,\n                    removeItem: this.removeItem,\n                    onResponse: this.fetchLineItems,\n                    saveItems: this.saveRequisitionItemsInCurrentStep,\n                    invalid,\n                    fetchInventoryItem: this.fetchInventoryItem,\n                    debouncedInventoryItemFetch:\n                      this.debouncedInventoryItemFetch,\n                    validateExpirationDate: this.validateExpirationDate,\n                    setRecipientValue: (val) =>\n                      form.mutators.setColumnValue(\n                        \"lineItems\",\n                        \"recipient\",\n                        val,\n                      ),\n                    translate: this.props.translate,\n                    overrideFormValue: form.mutators.override,\n                  }),\n                )}\n              </div>\n              <div className=\"submit-buttons\">\n                <button\n                  type=\"submit\"\n                  disabled={invalid}\n                  onClick={() => this.previousPage(values, invalid)}\n                  className=\"btn btn-outline-primary btn-form btn-xs\"\n                >\n                  <Translate\n                    id=\"react.default.button.previous.label\"\n                    defaultMessage=\"Previous\"\n                  />\n                </button>\n                <button\n                  type=\"submit\"\n                  onClick={() => this.nextPage(values)}\n                  className=\"btn btn-outline-primary btn-form float-right btn-xs\"\n                  disabled={\n                    !_.some(values.lineItems, (item) => !_.isEmpty(item))\n                  }\n                >\n                  <Translate\n                    id=\"react.default.button.next.label\"\n                    defaultMessage=\"Next\"\n                  />\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  recipients: state.users.data,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  debounceTime: state.session.searchConfig.debounceTime,\n  minSearchLength: state.session.searchConfig.minSearchLength,\n  minimumExpirationDate: state.session.minimumExpirationDate,\n  hasPackingSupport: state.session.currentLocation.hasPackingSupport,\n  isPaginated: state.session.isPaginated,\n  pageSize: state.session.pageSize,\n});\n\nexport default connect(mapStateToProps, {\n  showSpinner,\n  hideSpinner,\n  fetchUsers,\n})(AddItemsPage);\n\nAddItemsPage.propTypes = {\n  /** Initial component's data */\n  initialValues: PropTypes.shape({\n    origin: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n    hasManageInventory: PropTypes.bool,\n  }).isRequired,\n  /**\n   * Function called with the form data when the handleSubmit()\n   * is fired from within the form component.\n   */\n  nextPage: PropTypes.func.isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  /** Function fetching users */\n  fetchUsers: PropTypes.func.isRequired,\n  /** Array of available recipients  */\n  recipients: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  translate: PropTypes.func.isRequired,\n  stockMovementTranslationsFetched: PropTypes.bool.isRequired,\n  debounceTime: PropTypes.number.isRequired,\n  minSearchLength: PropTypes.number.isRequired,\n  minimumExpirationDate: PropTypes.string.isRequired,\n  /** Return true if pagination is enabled */\n  isPaginated: PropTypes.bool.isRequired,\n  /** Function returning user to the previous page */\n  previousPage: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport queryString from \"query-string\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TextField from \"components/form-elements/TextField\";\nimport { STOCK_MOVEMENT_URL } from \"consts/applicationUrls\";\nimport apiClient from \"utils/apiClient\";\nimport { renderFormField } from \"utils/form-utils\";\nimport { debounceLocationsFetch } from \"utils/option-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst { orderId } = queryString.parse(window.location.search);\n\nfunction validate(values) {\n  const errors = {};\n  if (!values.description) {\n    errors.description = \"react.default.error.requiredField.label\";\n  }\n  if (!values.origin) {\n    errors.origin = \"react.default.error.requiredField.label\";\n  }\n  if (!values.destination) {\n    errors.destination = \"react.default.error.requiredField.label\";\n  }\n  return errors;\n}\n\nconst FIELDS = {\n  description: {\n    type: TextField,\n    label: \"react.stockMovement.description.label\",\n    defaultMessage: \"Description\",\n    attributes: {\n      required: true,\n      autoFocus: true,\n    },\n  },\n  origin: {\n    type: SelectField,\n    label: \"react.stockMovement.origin.label\",\n    defaultMessage: \"Origin\",\n    attributes: {\n      required: true,\n      async: true,\n      showValueTooltip: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      options: [],\n      filterOptions: (options) => options,\n    },\n    getDynamicAttr: (props) => ({\n      loadOptions: props.debouncedOriginLocationsFetch,\n      disabled: !_.isNil(props.stockMovementId),\n    }),\n  },\n  destination: {\n    type: SelectField,\n    label: \"react.stockMovement.destination.label\",\n    defaultMessage: \"Destination\",\n    attributes: {\n      required: true,\n      async: true,\n      showValueTooltip: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      options: [],\n      filterOptions: (options) => options,\n    },\n    getDynamicAttr: (props) => ({\n      loadOptions: props.debouncedDestinationLocationsFetch,\n      disabled:\n        (!props.isSuperuser || !_.isNil(props.stockMovementId)) &&\n        !props.hasCentralPurchasingEnabled,\n    }),\n  },\n};\n\n/** The first step of stock movement where user can add all the basic information. */\nclass CreateStockMovement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      setInitialValues: true,\n      values: this.props.initialValues,\n    };\n\n    this.debouncedOriginLocationsFetch = debounceLocationsFetch(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n      null, // activityCodes\n      false, // fetchAll\n      true, // withOrgCode\n      false, // withTypeDescription\n    );\n\n    this.debouncedDestinationLocationsFetch = debounceLocationsFetch(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n      null,\n      true,\n    );\n  }\n\n  componentDidMount() {\n    if (orderId) {\n      const url = `/api/combineShipments/${orderId}`;\n      apiClient\n        .get(url)\n        .then((resp) => {\n          const { data } = resp.data;\n          this.setInitialValues(data.origin, data.destination);\n        })\n        .catch((err) => err);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      !this.props.match.params.stockMovementId &&\n      this.state.setInitialValues &&\n      nextProps.location.id &&\n      !orderId &&\n      !this.props.hasCentralPurchasingEnabled\n    ) {\n      this.setInitialValues(null, nextProps.location);\n    }\n  }\n\n  setInitialValues(origin, destination) {\n    let originLocation = [];\n    let destinationLocation = [];\n    if (origin) {\n      originLocation = {\n        id: origin.id,\n        type: origin.locationType ? origin.locationType.locationTypeCode : null,\n        name: origin.name,\n        label: `${origin.organizationCode ? `${origin.organizationCode} - ` : \"\"}${origin.name}`,\n      };\n    }\n    if (destination) {\n      destinationLocation = {\n        id: destination.id,\n        type: destination.locationType\n          ? destination.locationType.locationTypeCode\n          : null,\n        name: destination.name,\n        label: `${destination.name} [${destination.locationType ? destination.locationType.description : null}]`,\n      };\n    }\n    this.setState({\n      values: {\n        destination: destinationLocation,\n        origin: originLocation,\n      },\n      setInitialValues: false,\n    });\n  }\n\n  /**\n   * Creates or updates stock movement with given data\n   * @param {object} values\n   * @public\n   */\n  saveStockMovement(values) {\n    if (values.origin && values.destination && values.description) {\n      this.props.showSpinner();\n\n      let payload = {\n        description: values.description,\n        origin: { id: values.origin.id },\n        destination: { id: values.destination.id },\n      };\n      let stockMovementUrl = \"\";\n\n      if (values.stockMovementId) {\n        stockMovementUrl = `/api/stockMovements/${values.stockMovementId}/updateRequisition`;\n        payload = {\n          description: values.description,\n          destination: { id: values.destination.id },\n        };\n      } else {\n        stockMovementUrl = \"/api/stockMovements/createCombinedShipments\";\n      }\n\n      apiClient\n        .post(stockMovementUrl, payload)\n        .then((response) => {\n          if (response.data) {\n            const resp = response.data.data;\n            this.props.history.push(\n              STOCK_MOVEMENT_URL.editCombinedShipments(resp.id),\n            );\n            this.props.nextPage({\n              ...values,\n              dateRequested: resp.dateRequested,\n              stockMovementId: resp.id,\n              lineItems: resp.lineItems,\n              movementNumber: resp.identifier,\n              name: resp.name,\n            });\n          }\n        })\n        .catch(() => {\n          this.props.hideSpinner();\n          return Promise.reject(\n            new Error(\n              this.props.translate(\n                \"react.stockMovement.error.createStockMovement.label\",\n                \"Could not create stock movement\",\n              ),\n            ),\n          );\n        });\n    }\n  }\n\n  render() {\n    return (\n      <Form\n        onSubmit={(values) => this.saveStockMovement(values)}\n        validate={validate}\n        initialValues={this.state.values}\n        render={({ handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <div className=\"classic-form with-description\">\n              {_.map(FIELDS, (fieldConfig, fieldName) =>\n                renderFormField(fieldConfig, fieldName, {\n                  isSuperuser: this.props.isSuperuser,\n                  debouncedDestinationLocationsFetch:\n                    this.debouncedDestinationLocationsFetch,\n                  debouncedOriginLocationsFetch:\n                    this.debouncedOriginLocationsFetch,\n                  stockMovementId: values.stockMovementId,\n                  hasCentralPurchasingEnabled:\n                    this.props.hasCentralPurchasingEnabled,\n                }),\n              )}\n            </div>\n            <div className=\"submit-buttons\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-outline-primary float-right btn-xs\"\n              >\n                <Translate\n                  id=\"react.default.button.next.label\"\n                  defaultMessage=\"Next\"\n                />\n              </button>\n            </div>\n          </form>\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  location: state.session.currentLocation,\n  isSuperuser: state.session.isSuperuser,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  debounceTime: state.session.searchConfig.debounceTime,\n  minSearchLength: state.session.searchConfig.minSearchLength,\n  hasCentralPurchasingEnabled:\n    state.session.currentLocation.hasCentralPurchasingEnabled,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    showSpinner,\n    hideSpinner,\n  })(CreateStockMovement),\n);\n\nCreateStockMovement.propTypes = {\n  /** React router's object which contains information about url varaiables and params */\n  match: PropTypes.shape({\n    params: PropTypes.shape({ stockMovementId: PropTypes.string }),\n  }).isRequired,\n  /** Initial component's data */\n  initialValues: PropTypes.shape({\n    origin: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n    destination: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n    stocklist: PropTypes.shape({}),\n  }).isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  /**\n   * Function called with the form data when the handleSubmit()\n   * is fired from within the form component.\n   */\n  nextPage: PropTypes.func.isRequired,\n  /** React router's object used to manage session history */\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  /** Current location */\n  location: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    locationType: PropTypes.shape({\n      description: PropTypes.string,\n      locationTypeCode: PropTypes.string,\n    }),\n  }).isRequired,\n  /** Return true if current user is superuser */\n  isSuperuser: PropTypes.bool.isRequired,\n  translate: PropTypes.func.isRequired,\n  debounceTime: PropTypes.number.isRequired,\n  minSearchLength: PropTypes.number.isRequired,\n  /** Is true when currently selected location has central purchasing enabled */\n  hasCentralPurchasingEnabled: PropTypes.bool.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport arrayMutators from \"final-form-arrays\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport Dropzone from \"react-dropzone\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport { hideSpinner, showSpinner } from \"actions\";\nimport DocumentButton from \"components/DocumentButton\";\nimport ArrayField from \"components/form-elements/ArrayField\";\nimport DateField from \"components/form-elements/DateField\";\nimport LabelField from \"components/form-elements/LabelField\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TextField from \"components/form-elements/TextField\";\nimport { STOCK_MOVEMENT_URL } from \"consts/applicationUrls\";\nimport apiClient from \"utils/apiClient\";\nimport { renderFormField } from \"utils/form-utils\";\nimport {\n  formatProductDisplayName,\n  formatProductSupplierSubtext,\n} from \"utils/form-values-utils\";\nimport { debounceLocationsFetch } from \"utils/option-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\nimport splitTranslation from \"utils/translation-utils\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst SHIPMENT_FIELDS = {\n  \"origin.name\": {\n    label: \"react.stockMovement.origin.label\",\n    defaultMessage: \"Origin\",\n    type: (params) => <TextField {...params} />,\n    attributes: {\n      disabled: true,\n    },\n  },\n  destination: {\n    label: \"react.stockMovement.destination.label\",\n    defaultMessage: \"Destination\",\n    fieldKey: \"\",\n    type: (params) => {\n      if (params.canBeEdited && !params.hasStockList) {\n        return <SelectField {...params} />;\n      }\n      return null;\n    },\n    getDynamicAttr: ({\n      canBeEdited,\n      hasStockList,\n      debouncedLocationsFetch,\n    }) => {\n      if (canBeEdited && !hasStockList) {\n        return {\n          required: true,\n          async: true,\n          showValueTooltip: true,\n          openOnClick: false,\n          autoload: false,\n          loadOptions: debouncedLocationsFetch,\n          cache: false,\n          options: [],\n          filterOptions: (options) => options,\n        };\n      }\n      return { formatValue: (fieldValue) => _.get(fieldValue, \"name\") };\n    },\n  },\n  \"destination.name\": {\n    label: \"react.stockMovement.destination.label\",\n    defaultMessage: \"Destination\",\n    type: (params) => {\n      if (params.canBeEdited && !params.hasStockList) {\n        return null;\n      }\n      return <TextField {...params} />;\n    },\n    getDynamicAttr: ({ canBeEdited, hasStockList }) => ({\n      disabled: !canBeEdited || hasStockList,\n    }),\n  },\n  dateShipped: {\n    type: DateField,\n    label: \"react.stockMovement.shipDate.label\",\n    defaultMessage: \"Shipment date\",\n    attributes: {\n      dateFormat: \"MM/DD/YYYY HH:mm Z\",\n      required: true,\n      showTimeSelect: true,\n      autoComplete: \"off\",\n      showError: true,\n    },\n    getDynamicAttr: ({ issued, showOnly }) => ({\n      disabled: issued || showOnly,\n    }),\n  },\n  shipmentType: {\n    type: SelectField,\n    label: \"react.stockMovement.shipmentType.label\",\n    defaultMessage: \"Shipment type\",\n    attributes: {\n      required: true,\n      showValueTooltip: true,\n      valueKey: \"id\",\n      labelKey: \"name\",\n    },\n    getDynamicAttr: ({ shipmentTypes, received, showOnly }) => ({\n      options: shipmentTypes,\n      disabled: showOnly || received,\n    }),\n  },\n  trackingNumber: {\n    type: TextField,\n    label: \"react.stockMovement.trackingNumber.label\",\n    defaultMessage: \"Tracking number\",\n    getDynamicAttr: ({ received, showOnly }) => ({\n      disabled: showOnly || received,\n    }),\n  },\n  driverName: {\n    type: TextField,\n    label: \"react.stockMovement.driverName.label\",\n    defaultMessage: \"Driver name\",\n    getDynamicAttr: ({ received, showOnly }) => ({\n      disabled: showOnly || received,\n    }),\n  },\n  comments: {\n    type: TextField,\n    label: \"react.stockMovement.comments.label\",\n    defaultMessage: \"Comments\",\n    getDynamicAttr: ({ received, showOnly }) => ({\n      disabled: showOnly || received,\n    }),\n  },\n  expectedDeliveryDate: {\n    type: DateField,\n    label: \"react.stockMovement.expectedDeliveryDate.label\",\n    defaultMessage: \"Expected receipt date\",\n    attributes: {\n      dateFormat: \"MM/DD/YYYY\",\n      required: true,\n      showTimeSelect: false,\n      autoComplete: \"off\",\n    },\n  },\n};\n\nconst SUPPLIER_FIELDS = {\n  tableItems: {\n    type: ArrayField,\n    virtualized: true,\n    totalCount: ({ totalCount }) => totalCount,\n    isRowLoaded: ({ isRowLoaded }) => isRowLoaded,\n    loadMoreRows: ({ loadMoreRows }) => loadMoreRows(),\n    isFirstPageLoaded: ({ isFirstPageLoaded }) => isFirstPageLoaded,\n    fields: {\n      palletName: {\n        type: LabelField,\n        label: \"react.stockMovement.packLevel1.label\",\n        defaultMessage: \"Pack level 1\",\n        flexWidth: \"3\",\n        getDynamicAttr: ({ isPalletNameEmpty }) => ({\n          hide: isPalletNameEmpty,\n        }),\n      },\n      boxName: {\n        type: LabelField,\n        label: \"react.stockMovement.packLevel2.label\",\n        defaultMessage: \"Pack level 2\",\n        flexWidth: \"3\",\n        getDynamicAttr: ({ isBoxNameEmpty }) => ({ hide: isBoxNameEmpty }),\n      },\n      productCode: {\n        type: LabelField,\n        label: \"react.stockMovement.code.label\",\n        defaultMessage: \"Code\",\n        flexWidth: \"3.5\",\n      },\n      product: {\n        type: LabelField,\n        label: \"react.stockMovement.product.label\",\n        defaultMessage: \"Product\",\n        headerAlign: \"left\",\n        flexWidth: \"7\",\n        getDynamicAttr: ({\n          isBoxNameEmpty,\n          isPalletNameEmpty,\n          tableItems,\n          rowIndex,\n        }) => {\n          const row = tableItems[rowIndex] || {};\n          const productDisplayNameLabel = row?.product?.displayNames?.default\n            ? row?.product?.name\n            : null;\n          const productSupplierNameLabel = formatProductSupplierSubtext(\n            row?.productSupplier,\n          );\n          const tooltipValue = [\n            productDisplayNameLabel,\n            productSupplierNameLabel,\n          ]\n            .join(\" \")\n            .trim();\n          return {\n            showValueTooltip: Boolean(tooltipValue),\n            tooltipValue,\n            flexWidth:\n              7 + (isBoxNameEmpty ? 3 : 0) + (isPalletNameEmpty ? 3 : 0),\n          };\n        },\n        attributes: {\n          className: \"text-left\",\n          formatValue: formatProductDisplayName,\n        },\n      },\n      lotNumber: {\n        type: LabelField,\n        label: \"react.stockMovement.lot.label\",\n        defaultMessage: \"Lot\",\n        flexWidth: \"3.5\",\n      },\n      expirationDate: {\n        type: LabelField,\n        label: \"react.stockMovement.expiry.label\",\n        defaultMessage: \"Expiry\",\n        flexWidth: \"3.5\",\n      },\n      quantityPickedPerUom: {\n        type: LabelField,\n        label: \"react.stockMovement.quantityPickedPOUom.label\",\n        defaultMessage: \"Qty Picked (in PO UoM)\",\n        multilineHeader: true,\n        fixedWidth: \"100px\",\n        attributes: {\n          disabled: true,\n        },\n        getDynamicAttr: ({ rowIndex, tableItems }) => ({\n          formatValue: () => {\n            const row = tableItems[rowIndex] || {};\n            return `${row.packsRequested} ${row.unitOfMeasure}`;\n          },\n        }),\n      },\n      quantityRequested: {\n        type: LabelField,\n        fixedWidth: \"150px\",\n        label: \"react.stockMovement.quantityPickedEach.label\",\n        defaultMessage: \"Qty Picked (each)\",\n      },\n      \"recipient.name\": {\n        type: LabelField,\n        label: \"react.stockMovement.recipient.label\",\n        defaultMessage: \"Recipient\",\n        flexWidth: \"3.5\",\n      },\n    },\n  },\n};\n\n/**\n * The last step of stock movement where user can see the whole movement,\n * print documents, upload documents, add additional information and send it.\n */\nclass SendMovementPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shipmentTypes: [],\n      documents: [],\n      files: [],\n      values: { ...this.props.initialValues, tableItems: [] },\n      totalCount: 0,\n      isFirstPageLoaded: false,\n    };\n    this.props.showSpinner();\n    this.onDrop = this.onDrop.bind(this);\n    this.isRowLoaded = this.isRowLoaded.bind(this);\n    this.loadMoreRows = this.loadMoreRows.bind(this);\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n    this.validate = this.validate.bind(this);\n\n    this.debouncedLocationsFetch = debounceLocationsFetch(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n    );\n  }\n\n  componentDidMount() {\n    this.props.showSpinner();\n    if (this.props.stockMovementTranslationsFetched) {\n      this.dataFetched = true;\n\n      this.fetchStockMovementData();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.stockMovementTranslationsFetched && !this.dataFetched) {\n      this.dataFetched = true;\n\n      this.fetchStockMovementData();\n    }\n  }\n\n  /**\n   * Updates files' array after dropping them to dropzone area.\n   * @param {object} newFiles\n   * @public\n   */\n  onDrop(newFiles) {\n    const { files } = this.state;\n    const difference = _.differenceBy(files, newFiles, \"name\");\n    this.setState({\n      files: _.concat(difference, newFiles),\n    });\n  }\n\n  onSave(values) {\n    this.props.showSpinner();\n\n    this.saveValues(values)\n      .then(() => {\n        this.props.hideSpinner();\n\n        if (values.statusCode === \"ISSUED\") {\n          this.fetchStockMovementData();\n        }\n        Alert.success(\n          this.props.translate(\n            \"react.stockMovement.alert.saveSuccess.label\",\n            \"Changes saved successfully\",\n          ),\n          { timeout: 3000 },\n        );\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  dataFetched = false;\n\n  saveValues(values) {\n    const payload = {\n      destination: { id: values.destination.id },\n      dateShipped: values.dateShipped,\n      shipmentType: { id: values.shipmentType.id },\n      trackingNumber: values.trackingNumber || \"\",\n      driverName: values.driverName || \"\",\n      comments: values.comments || \"\",\n      expectedDeliveryDate: values.expectedDeliveryDate || \"\",\n    };\n\n    return this.saveShipment(payload);\n  }\n\n  /**\n   * Removes a file by name from files array\n   * @param {string} name\n   * @public\n   */\n  removeFile(name) {\n    const { files } = this.state;\n    _.remove(files, (file) => file.name === name);\n    this.setState({ files });\n  }\n\n  /**\n   * Removes a bulk of files by name from files array\n   * @param {Array} names\n   * @public\n   */\n  removeFiles(names) {\n    const { files } = this.state;\n    _.forEach(names, (name) => {\n      _.remove(files, (file) => file.name === name);\n    });\n    this.setState({ files });\n  }\n\n  /**\n   * Fetches available shipment types from API.\n   * @public\n   */\n  fetchShipmentTypes() {\n    const url = \"/api/generic/shipmentType\";\n\n    return apiClient\n      .get(url)\n      .then((response) => {\n        const shipmentTypes = _.map(response.data.data, (type) => {\n          const [en, fr] = _.split(type.name, \"|fr:\");\n          return {\n            ...type,\n            label: this.props.locale === \"fr\" && fr ? fr : en,\n          };\n        });\n\n        this.setState({ shipmentTypes }, () => this.props.hideSpinner());\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  fetchStockMovementItems() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?stepNumber=6`;\n    apiClient.get(url).then((response) => {\n      const { data } = response.data;\n      const tableItems = data;\n      this.setState((prev) => ({\n        values: {\n          ...prev.values,\n          tableItems,\n        },\n      }));\n    });\n  }\n\n  loadMoreRows({ startIndex }) {\n    if (this.state.totalCount) {\n      const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?offset=${startIndex}&max=${this.props.pageSize}&stepNumber=6`;\n      apiClient.get(url).then((response) => {\n        const { data } = response.data;\n        const tableItemsData = _.map(data, (val) => ({\n          ...val,\n          productName: val.productName ? val.productName : val.product.name,\n        }));\n\n        this.setState(\n          (prev) => ({\n            values: {\n              ...prev.values,\n              tableItems: _.uniqBy(\n                _.concat(prev.values.tableItems, tableItemsData),\n                \"id\",\n              ),\n            },\n            isFirstPageLoaded: true,\n          }),\n          () => {\n            if (this.state.values.tableItems.length !== this.state.totalCount) {\n              this.loadMoreRows({\n                startIndex: startIndex + this.props.pageSize,\n              });\n            }\n          },\n        );\n      });\n    }\n  }\n\n  isRowLoaded({ index }) {\n    return !!this.state.values.tableItems[index];\n  }\n\n  /**\n   * Fetches 5th step data from current stock movement.\n   * @public\n   */\n  fetchStockMovementData() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}?stepNumber=6`;\n\n    return apiClient\n      .get(url)\n      .then((response) => {\n        const stockMovementData = response.data.data;\n        const { associations } = response.data.data;\n        const { totalCount } = response.data;\n\n        const documents = _.filter(\n          associations.documents,\n          (doc) => doc.stepNumber === 5,\n        );\n        const destinationType = stockMovementData.destination.locationType;\n        this.setState(\n          (prev) => ({\n            documents,\n            totalCount,\n            values: {\n              ...prev.values,\n              dateShipped: stockMovementData.dateShipped,\n              shipmentType: {\n                ...stockMovementData.shipmentType,\n                label: splitTranslation(\n                  stockMovementData.shipmentType.name,\n                  this.props.locale,\n                ),\n              },\n              trackingNumber: stockMovementData.trackingNumber,\n              driverName: stockMovementData.driverName,\n              comments: stockMovementData.comments,\n              expectedDeliveryDate: stockMovementData.expectedDeliveryDate,\n              // Below values are reassigned in case of editing destination or description\n              name: stockMovementData.name,\n              description: stockMovementData.description,\n              destination: {\n                id: stockMovementData.destination.id,\n                type: destinationType ? destinationType.locationTypeCode : null,\n                name: stockMovementData.destination.name,\n                label: `${stockMovementData.destination.name}\n                [${destinationType ? destinationType.description : null}]`,\n              },\n              shipmentStatus: stockMovementData.shipmentStatus,\n            },\n          }),\n          () => {\n            this.props.nextPage(this.state.values);\n            this.fetchShipmentTypes();\n            if (!this.props.isPaginated) {\n              this.fetchStockMovementItems();\n            }\n          },\n        );\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Sends files uploaded by user to backend.\n   * @param {object} file\n   * @public\n   */\n  sendFile(file) {\n    const url = `/stockMovement/uploadDocument/${this.state.values.stockMovementId}`;\n\n    const data = new FormData();\n    data.append(\"fileContents\", file);\n\n    return apiClient.post(url, data);\n  }\n\n  /**\n   * Bulk send of files uploaded by user to backend.\n   * @param {Array} files\n   * @public\n   */\n  sendFiles(files) {\n    const url = `/stockMovement/uploadDocuments/${this.state.values.stockMovementId}`;\n\n    const data = new FormData();\n    _.forEach(files, (file, idx) => {\n      data.append(`filesContents[${idx}]`, file);\n    });\n\n    return apiClient.post(url, data);\n  }\n\n  /**\n   * Saves data with shipment details.\n   * @param {object} payload\n   * @public\n   */\n  saveShipment(payload) {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/updateShipment`;\n\n    return apiClient.post(url, payload);\n  }\n\n  /**\n   * Updates stock movement status to ISSUED with post method.\n   * @public\n   */\n  stateTransitionToIssued() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/status`;\n    const payload = { status: \"ISSUED\" };\n\n    return apiClient.post(url, payload);\n  }\n\n  /**\n   * Uploads files and sends the whole stock movement.\n   * @param {object} values\n   * @public\n   */\n  sendFilesAndSave(values) {\n    const errors = this.validate(values);\n    if (_.isEmpty(errors)) {\n      this.props.showSpinner();\n      const { files } = this.state;\n      if (files.length > 1) {\n        this.sendFiles(files)\n          .then(() => {\n            Alert.success(\n              this.props.translate(\n                \"react.stockMovement.alert.filesSuccess.label\",\n                \"Files uploaded successfuly!\",\n              ),\n              { timeout: 3000 },\n            );\n            this.removeFiles(_.map(files, (file) => file.name));\n            this.prepareRequestAndSubmitStockMovement(values);\n          })\n          .catch(() =>\n            Alert.error(\n              this.props.translate(\n                \"react.stockMovement.alert.filesError.label\",\n                \"Error occured during files upload!\",\n              ),\n            ),\n          )\n          .finally(() => this.props.hideSpinner());\n      } else if (files.length === 1) {\n        this.sendFile(files[0])\n          .then(() => {\n            Alert.success(\n              this.props.translate(\n                \"react.stockMovement.alert.fileSuccess.label\",\n                \"File uploaded successfuly!\",\n              ),\n              { timeout: 3000 },\n            );\n            this.removeFile(files[0].name);\n            this.prepareRequestAndSubmitStockMovement(values);\n          })\n          .catch(() =>\n            Alert.error(\n              this.props.translate(\n                \"react.stockMovement.alert.fileError.label\",\n                \"Error occured during file upload!\",\n              ),\n            ),\n          )\n          .finally(() => this.props.hideSpinner());\n      } else {\n        this.prepareRequestAndSubmitStockMovement(values);\n      }\n    }\n  }\n\n  prepareRequestAndSubmitStockMovement(values) {\n    const payload = {\n      destination: { id: values.destination.id },\n      dateShipped: values.dateShipped,\n      shipmentType: { id: values.shipmentType.id },\n      trackingNumber: values.trackingNumber || \"\",\n      driverName: values.driverName || \"\",\n      comments: values.comments || \"\",\n      expectedDeliveryDate: values.expectedDeliveryDate || \"\",\n    };\n\n    if (\n      this.props.currentLocationId !== values.origin.id &&\n      values.origin.type !== \"SUPPLIER\" &&\n      values.hasManageInventory\n    ) {\n      Alert.error(\n        this.props.translate(\n          \"react.stockMovement.alert.sendStockMovement.label\",\n          \"You are not able to send shipment from a location other than origin. Change your current location.\",\n        ),\n      );\n      this.props.hideSpinner();\n    } else if (\n      values.shipmentType.id ===\n      _.find(\n        this.state.shipmentTypes,\n        (shipmentType) => shipmentType.label === \"Default\",\n      ).id\n    ) {\n      Alert.error(\n        this.props.translate(\n          \"react.stockMovement.alert.populateShipmentType.label\",\n          \"Please populate shipment type before continuing\",\n        ),\n      );\n      this.props.hideSpinner();\n    } else {\n      this.saveShipment(payload)\n        .then(() => {\n          this.stateTransitionToIssued()\n            .then(() => {\n              window.location = STOCK_MOVEMENT_URL.show(\n                this.state.values.stockMovementId,\n              );\n            })\n            .catch(() => this.props.hideSpinner());\n        })\n        .catch(() => this.props.hideSpinner());\n    }\n  }\n\n  /**\n   * Saves changes made by user in this step and go back to previous page\n   * @param {object} values\n   * @param {boolean} invalid\n   * @public\n   */\n  previousPage(values, invalid) {\n    if (!invalid) {\n      this.saveValues(values).then(() => this.props.previousPage(values));\n    } else {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.confirmPreviousPage.label\",\n          \"Validation error\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmPreviousPage.message.label\",\n          \"Cannot save due to validation error on page\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\n              \"react.stockMovement.confirmPreviousPage.correctError.label\",\n              \"Correct error\",\n            ),\n          },\n          {\n            label: this.props.translate(\n              \"react.stockMovement.confirmPreviousPage.continue.label\",\n              \"Continue (lose unsaved work)\",\n            ),\n            onClick: () => this.props.previousPage(values),\n          },\n        ],\n      });\n    }\n  }\n\n  /**\n   * Saves changes made by user in this step and redirects to the shipment view page\n   * @param {object} values\n   * @public\n   */\n  saveAndExit(values) {\n    const errors = this.validate(values);\n    if (_.isEmpty(errors)) {\n      this.saveValues(values).then(() => {\n        window.location = STOCK_MOVEMENT_URL.show(values.stockMovementId);\n      });\n    } else {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.confirmExit.label\",\n          \"Confirm save\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmExit.message\",\n          \"Validation errors occurred. Are you sure you want to exit and lose unsaved data?\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n            onClick: () => {\n              window.location = STOCK_MOVEMENT_URL.show(values.stockMovementId);\n            },\n          },\n          {\n            label: this.props.translate(\"react.default.no.label\", \"No\"),\n          },\n        ],\n      });\n    }\n  }\n\n  /**\n   * Rollback stock movement if it has been shipped\n   * @public\n   */\n  rollbackStockMovement(values) {\n    this.props.showSpinner();\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/status`;\n    const payload = { rollback: true };\n\n    const isOrigin = this.props.currentLocationId === values.origin.id;\n    const isDestination =\n      this.props.currentLocationId === values.destination.id;\n\n    if (\n      (values.hasManageInventory && isOrigin) ||\n      (!values.hasManageInventory && isDestination) ||\n      this.props.hasCentralPurchasingEnabled\n    ) {\n      apiClient.delete(url, payload).then(() => {\n        this.props.hideSpinner();\n        window.location.reload();\n      });\n    } else {\n      this.props.hideSpinner();\n      Alert.error(\n        this.props.translate(\n          \"react.stockMovement.alert.rollbackShipment.label\",\n          \"You are not able to rollback shipment from your location.\",\n        ),\n      );\n    }\n  }\n\n  /**\n   * Toggle the downloadable files\n   */\n  toggleDropdown() {\n    this.setState((prev) => ({\n      isDropdownVisible: !prev.isDropdownVisible,\n    }));\n  }\n\n  validate(values) {\n    const errors = {};\n    const date = moment(this.props.minimumExpirationDate, \"MM/DD/YYYY\");\n    const dateShipped = moment(values.dateShipped, \"MM/DD/YYYY\");\n    const expectedDeliveryDate = moment(\n      values.expectedDeliveryDate,\n      \"MM/DD/YYYY\",\n    );\n\n    if (date.diff(dateShipped) > 0) {\n      errors.dateShipped = \"react.stockMovement.error.invalidDate.label\";\n    }\n    if (!values.dateShipped) {\n      errors.dateShipped = \"react.default.error.requiredField.label\";\n    }\n    if (!values.shipmentType) {\n      errors.shipmentType = \"react.default.error.requiredField.label\";\n    }\n    if (!values.expectedDeliveryDate) {\n      errors.expectedDeliveryDate = \"react.default.error.requiredField.label\";\n    }\n    if (moment(dateShipped).diff(expectedDeliveryDate) > 0) {\n      errors.expectedDeliveryDate =\n        \"react.stockMovement.error.deliveryDateBeforeShipDate.label\";\n      errors.dateShipped =\n        \"react.stockMovement.error.deliveryDateBeforeShipDate.label\";\n    }\n\n    return errors;\n  }\n\n  render() {\n    return (\n      <div>\n        <Form\n          onSubmit={() => {}}\n          validate={this.validate}\n          mutators={{ ...arrayMutators }}\n          initialValues={this.state.values}\n          render={({ handleSubmit, values, invalid }) => (\n            <form onSubmit={handleSubmit}>\n              <div className=\"classic-form classic-form-condensed\">\n                <span className=\"buttons-container classic-form-buttons\">\n                  <div\n                    className={`dropzone float-right mb-1 btn btn-outline-secondary ${values.statusCode === \"ISSUED\" ? \"disabled\" : \"\"} align-self-end btn-xs mr-1`}\n                  >\n                    <Dropzone\n                      disabled={values.statusCode === \"ISSUED\"}\n                      onDrop={this.onDrop}\n                      multiple\n                    >\n                      {({ getRootProps }) => (\n                        <div {...getRootProps()}>\n                          <span>\n                            <i className=\"fa fa-upload pr-2\" />\n                            <Translate\n                              id=\"react.stockMovement.uploadDocuments.label\"\n                              defaultMessage=\"Upload Documents\"\n                            />\n                          </span>\n                          {_.map(this.state.files, (file) => (\n                            <div\n                              key={file.name}\n                              className=\"chosen-file d-flex justify-content-center align-items-center\"\n                            >\n                              <div className=\"text-truncate\">{file.name}</div>\n                              <a\n                                href=\"#\"\n                                className=\"remove-button\"\n                                onClick={(event) => {\n                                  this.removeFile(file.name);\n                                  event.stopPropagation();\n                                }}\n                              >\n                                <span className=\"fa fa-remove\" />\n                              </a>\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                    </Dropzone>\n                  </div>\n                  <div className=\"dropdown\">\n                    <button\n                      type=\"button\"\n                      onClick={this.toggleDropdown}\n                      className=\"dropdown-button float-right mb-1 btn btn-outline-secondary align-self-end btn-xs mr-1\"\n                    >\n                      <span>\n                        <i className=\"fa fa-sign-out pr-2\" />\n                        <Translate\n                          id=\"react.default.button.download.label\"\n                          defaultMessage=\"Download\"\n                        />\n                      </span>\n                    </button>\n                    <div\n                      className={`dropdown-content print-buttons-container col-md-3 flex-grow-1 \n                      ${this.state.isDropdownVisible ? \"visible\" : \"\"}`}\n                    >\n                      {this.state.documents.length &&\n                        _.map(this.state.documents, (document, idx) => {\n                          if (document.hidden) {\n                            return null;\n                          }\n                          return (\n                            <DocumentButton\n                              link={document.uri}\n                              buttonTitle={document.name}\n                              {...document}\n                              key={idx}\n                              onClick={() => this.saveValues(values)}\n                            />\n                          );\n                        })}\n                    </div>\n                  </div>\n                  <span>\n                    <button\n                      type=\"button\"\n                      onClick={() => this.onSave(values)}\n                      className=\"btn btn-outline-secondary float-right btn-form btn-xs ml-1\"\n                      disabled={invalid}\n                    >\n                      <span>\n                        <i className=\"fa fa-save pr-2\" />\n                        <Translate\n                          id=\"react.default.button.save.label\"\n                          defaultMessage=\"Save\"\n                        />\n                      </span>\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => this.saveAndExit(values)}\n                      className=\"float-right mb-1 btn btn-outline-secondary align-self-end btn-xs\"\n                    >\n                      <span>\n                        <i className=\"fa fa-sign-out pr-2\" />\n                        <Translate\n                          id=\"react.default.button.saveAndExit.label\"\n                          defaultMessage=\"Save and exit\"\n                        />\n                      </span>\n                    </button>\n                  </span>\n                </span>\n                <div className=\"form-title\">\n                  <Translate\n                    id=\"react.attribute.options.label\"\n                    defaultMessage=\"Sending options\"\n                  />\n                </div>\n                {_.map(SHIPMENT_FIELDS, (fieldConfig, fieldName) =>\n                  renderFormField(fieldConfig, fieldName, {\n                    shipmentTypes: this.state.shipmentTypes,\n                    issued: values.statusCode === \"ISSUED\",\n                    received: values.received,\n                    canBeEdited: !values.received,\n                    debouncedLocationsFetch: this.debouncedLocationsFetch,\n                  }),\n                )}\n              </div>\n              <div>\n                <div className=\"submit-buttons\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-form btn-xs\"\n                    disabled={values.statusCode === \"ISSUED\"}\n                    onClick={() => this.previousPage(values, invalid)}\n                  >\n                    <Translate\n                      id=\"react.default.button.previous.label\"\n                      defaultMessage=\"Previous\"\n                    />\n                  </button>\n                  <button\n                    type=\"submit\"\n                    onClick={() => {\n                      this.sendFilesAndSave(values);\n                    }}\n                    className={`${values.shipped ? \"btn btn-outline-secondary\" : \"btn btn-outline-success\"} float-right btn-form btn-xs`}\n                    disabled={values.statusCode === \"ISSUED\"}\n                  >\n                    <Translate\n                      id=\"react.stockMovement.sendShipment.label\"\n                      defaultMessage=\"Send shipment\"\n                    />\n                  </button>\n                  {values.shipped && this.props.isUserAdmin ? (\n                    <button\n                      type=\"submit\"\n                      onClick={() => {\n                        this.rollbackStockMovement(values);\n                      }}\n                      className=\"btn btn-outline-success float-right btn-xs\"\n                      disabled={invalid || values.statusCode !== \"ISSUED\"}\n                    >\n                      <span>\n                        <i className=\"fa fa-undo pr-2\" />\n                        <Translate\n                          id=\"react.default.button.rollback.label\"\n                          defaultMessage=\"Rollback\"\n                        />\n                      </span>\n                    </button>\n                  ) : null}\n                </div>\n                <div className=\"my-2 table-form\">\n                  {_.map(SUPPLIER_FIELDS, (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName, {\n                      hasBinLocationSupport: this.props.hasBinLocationSupport,\n                      totalCount: this.state.totalCount,\n                      loadMoreRows: this.loadMoreRows,\n                      isRowLoaded: this.isRowLoaded,\n                      isPaginated: this.props.isPaginated,\n                      isFirstPageLoaded: this.state.isFirstPageLoaded,\n                      // eslint-disable-next-line max-len\n                      isBoxNameEmpty: _.every(\n                        this.state.values.tableItems,\n                        ({ boxName }) => !boxName,\n                      ),\n                      // eslint-disable-next-line max-len\n                      isPalletNameEmpty: _.every(\n                        this.state.values.tableItems,\n                        ({ palletName }) => !palletName,\n                      ),\n                      tableItems: values.tableItems,\n                    }),\n                  )}\n                </div>\n              </div>\n            </form>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  currentLocationId: state.session.currentLocation.id,\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  debounceTime: state.session.searchConfig.debounceTime,\n  minSearchLength: state.session.searchConfig.minSearchLength,\n  locale: state.session.activeLanguage,\n  isUserAdmin: state.session.isUserAdmin,\n  hasBinLocationSupport: state.session.currentLocation.hasBinLocationSupport,\n  isPaginated: state.session.isPaginated,\n  pageSize: state.session.pageSize,\n  minimumExpirationDate: state.session.minimumExpirationDate,\n  hasCentralPurchasingEnabled:\n    state.session.currentLocation.hasCentralPurchasingEnabled,\n});\n\nexport default connect(mapStateToProps, { showSpinner, hideSpinner })(\n  SendMovementPage,\n);\n\nSendMovementPage.propTypes = {\n  /** Initial component's data */\n  initialValues: PropTypes.shape({}).isRequired,\n  /** Function returning user to the previous page */\n  previousPage: PropTypes.func.isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  nextPage: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  /** Name of the currently selected location */\n  currentLocationId: PropTypes.string.isRequired,\n  stockMovementTranslationsFetched: PropTypes.bool.isRequired,\n  debounceTime: PropTypes.number.isRequired,\n  minSearchLength: PropTypes.number.isRequired,\n  locale: PropTypes.string.isRequired,\n  isUserAdmin: PropTypes.bool.isRequired,\n  /** Is true when currently selected location supports bins */\n  hasBinLocationSupport: PropTypes.bool.isRequired,\n  /** Return true if pagination is enabled */\n  isPaginated: PropTypes.bool.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  minimumExpirationDate: PropTypes.string.isRequired,\n  /** Is true when currently selected location has central purchasing enabled */\n  hasCentralPurchasingEnabled: PropTypes.bool.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport { fetchTranslations, hideSpinner, showSpinner } from \"actions\";\nimport AddItemsPage from \"components/stock-movement-wizard/combined-shipments/AddItemsPage\";\nimport CreateStockMovement from \"components/stock-movement-wizard/combined-shipments/CreateStockMovement\";\nimport SendMovementPage from \"components/stock-movement-wizard/combined-shipments/SendMovementPage\";\nimport Wizard from \"components/wizard/Wizard\";\nimport apiClient from \"utils/apiClient\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"components/stock-movement-wizard/StockMovement.scss\";\n\n/** Main combined shipments stock movement form's wizard component. */\nclass StockMovementCombinedShipments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      values: this.props.initialValues,\n      currentPage: 1,\n    };\n\n    this.updateWizardValues = this.updateWizardValues.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTranslations(\"\", \"stockMovement\");\n\n    if (this.props.stockMovementTranslationsFetched) {\n      this.dataFetched = true;\n      this.fetchInitialValues();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.locale && this.props.locale !== nextProps.locale) {\n      this.props.fetchTranslations(nextProps.locale, \"stockMovement\");\n    }\n\n    if (nextProps.stockMovementTranslationsFetched && !this.dataFetched) {\n      this.dataFetched = true;\n      this.fetchInitialValues();\n    }\n  }\n\n  get wizardTitle() {\n    const { values } = this.state;\n    if (!values.movementNumber && !values.trackingNumber) {\n      return [];\n    }\n    return [\n      {\n        text: this.props.translate(\n          \"react.stockMovement.label\",\n          \"Stock Movement\",\n        ),\n        color: \"#000000\",\n        delimeter: \" | \",\n      },\n      {\n        text: values.movementNumber,\n        color: \"#000000\",\n        delimeter: \" - \",\n      },\n      {\n        text: values.origin.name,\n        color: \"#004d40\",\n        delimeter: \" to \",\n      },\n      {\n        text: values.destination.name,\n        color: \"#01579b\",\n        delimeter: \", \",\n      },\n      {\n        text: values.dateRequested,\n        color: \"#4a148c\",\n        delimeter: \", \",\n      },\n      {\n        text: values.description,\n        color: \"#770838\",\n        delimeter: \"\",\n      },\n    ];\n  }\n\n  get additionalWizardTitle() {\n    const { currentPage, values } = this.state;\n    const shipped = values.shipped ? \"SHIPPED\" : \"\";\n    const received = values.received ? \"RECEIVED\" : \"\";\n    if (currentPage === 3) {\n      return (\n        <span className=\"shipment-status float-right\">\n          {`${shipped || received || \"PENDING\"}`}\n        </span>\n      );\n    }\n    return null;\n  }\n\n  /**\n   * Returns array of form steps.\n   * @public\n   */\n  get stepList() {\n    return [\n      this.props.translate(\"react.stockMovement.create.label\", \"Create\"),\n      this.props.translate(\"react.stockMovement.addItems.label\", \"Add items\"),\n      this.props.translate(\"react.stockMovement.send.label\", \"Send\"),\n    ];\n  }\n\n  updateWizardValues(currentPage, values) {\n    this.setState({ currentPage, values });\n  }\n\n  /**\n   * Returns array of form's components.\n   * @public\n   */\n  pageList = [CreateStockMovement, AddItemsPage, SendMovementPage];\n\n  dataFetched = false;\n\n  /**\n   * Fetches initial values from API.\n   * @public\n   */\n  fetchInitialValues() {\n    if (this.props.match.params.stockMovementId) {\n      this.props.showSpinner();\n      const url = `/api/stockMovements/${this.props.match.params.stockMovementId}`;\n      apiClient\n        .get(url)\n        .then((response) => {\n          const resp = response.data.data;\n          const originType = resp.origin.locationType;\n          const destinationType = resp.destination.locationType;\n          const values = {\n            ...resp,\n            stockMovementId: resp.id,\n            movementNumber: resp.identifier,\n            origin: {\n              id: resp.origin.id,\n              type: originType ? originType.locationTypeCode : null,\n              name: resp.origin.name,\n              label: `${resp.origin.organizationCode ? `${resp.origin.organizationCode} - ` : \"\"}${resp.origin.name}`,\n            },\n            destination: {\n              id: resp.destination.id,\n              type: destinationType ? destinationType.locationTypeCode : null,\n              name: resp.destination.name,\n              label: `${resp.destination.name} [${destinationType ? destinationType.description : null}]`,\n            },\n          };\n\n          let currentPage = 1;\n          switch (values.statusCode) {\n            case \"NEW\":\n              break;\n            case \"PENDING\":\n              currentPage = 2;\n              break;\n            default:\n              currentPage = 3;\n              break;\n          }\n\n          this.setState({ values, currentPage });\n        })\n        .catch(() => this.props.hideSpinner());\n    }\n  }\n\n  render() {\n    const { values, currentPage } = this.state;\n\n    return (\n      <Wizard\n        pageList={this.pageList}\n        stepList={this.stepList}\n        initialValues={values}\n        title={this.wizardTitle}\n        additionalTitle={this.additionalWizardTitle}\n        currentPage={currentPage}\n        prevPage={currentPage === 1 ? 1 : currentPage - 1}\n        updateWizardValues={this.updateWizardValues}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n});\n\nexport default connect(mapStateToProps, {\n  showSpinner,\n  hideSpinner,\n  fetchTranslations,\n})(StockMovementCombinedShipments);\n\nStockMovementCombinedShipments.propTypes = {\n  /** React router's object which contains information about url variables and params */\n  match: PropTypes.shape({\n    params: PropTypes.shape({ stockMovementId: PropTypes.string }),\n  }).isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  /** Initial components' data */\n  initialValues: PropTypes.shape({\n    shipmentStatus: PropTypes.string,\n  }),\n  locale: PropTypes.string.isRequired,\n  stockMovementTranslationsFetched: PropTypes.bool.isRequired,\n  fetchTranslations: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n};\n\nStockMovementCombinedShipments.defaultProps = {\n  initialValues: {},\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Translate from \"utils/Translate\";\n\nconst Checkbox = ({\n  value,\n  indeterminate,\n  custom,\n  fieldRef,\n  withLabel,\n  label,\n  defaultMessage,\n  ...props\n}) => {\n  const onChange = (event) => {\n    const { checked } = event.target;\n\n    if (props.onChange) {\n      props.onChange(checked);\n    }\n  };\n\n  if (custom) {\n    return (\n      <div data-testid=\"custom-checkbox\" className=\"custom-checkbox\">\n        <label htmlFor={props.id}>\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            ref={fieldRef}\n            checked={value}\n            {...props}\n            onChange={onChange}\n          />\n        </label>\n      </div>\n    );\n  }\n\n  if (withLabel) {\n    return (\n      <div\n        data-testid=\"with-label-checkbox\"\n        className=\"d-flex align-items-center\"\n      >\n        <input\n          type=\"checkbox\"\n          ref={(elem) => {\n            if (elem) {\n              // eslint-disable-next-line no-param-reassign\n              elem.indeterminate = indeterminate;\n            }\n            if (fieldRef) {\n              fieldRef(elem);\n            }\n          }}\n          checked={value}\n          {...props}\n          onChange={onChange}\n        />\n        <label htmlFor={props.id} style={{ margin: \"0 0 0 5px\" }}>\n          <Translate id={label} defaultMessage={defaultMessage || label} />\n        </label>\n      </div>\n    );\n  }\n\n  return (\n    <input\n      data-testid=\"checkbox\"\n      type=\"checkbox\"\n      ref={(elem) => {\n        if (elem) {\n          // eslint-disable-next-line no-param-reassign\n          elem.indeterminate = indeterminate;\n        }\n        if (fieldRef) {\n          fieldRef(elem);\n        }\n      }}\n      checked={value}\n      {...props}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Checkbox;\n\nCheckbox.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n  custom: PropTypes.bool,\n  id: PropTypes.string,\n  fieldRef: PropTypes.func,\n  withLabel: PropTypes.bool,\n  label: PropTypes.string,\n  defaultMessage: PropTypes.string,\n};\n\nCheckbox.defaultProps = {\n  onChange: null,\n  value: null,\n  indeterminate: false,\n  custom: false,\n  id: \"\",\n  fieldRef: undefined,\n  withLabel: false,\n  label: \"\",\n  defaultMessage: \"\",\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nfunction handleClick(onClick, event, link) {\n  event.preventDefault();\n  const newWindow = window.open(\"\", \"_blank\");\n  if (onClick) {\n    onClick().then(() => {\n      newWindow.location.href = link;\n    });\n  } else {\n    newWindow.location.href = link;\n  }\n}\n\nconst DocumentButton = ({\n  buttonIcon,\n  buttonTitle,\n  link,\n  target,\n  disabled,\n  onClick,\n}) => (\n  <a\n    href={link}\n    className={`py-1 mb-1 btn btn-outline-secondary ${disabled ? \"disabled\" : \"\"}`}\n    target={target}\n    rel=\"noopener noreferrer\"\n    onClick={(event) => handleClick(onClick, event, link)}\n  >\n    <span>\n      <i className={`pr-2 fa ${buttonIcon}`} />\n      {buttonTitle}\n    </span>\n  </a>\n);\n\nexport default DocumentButton;\n\nDocumentButton.propTypes = {\n  /** String with font awesome icon class name */\n  buttonIcon: PropTypes.string,\n  /** String button title */\n  buttonTitle: PropTypes.string,\n  /** Link to document that will be set in href */\n  link: PropTypes.string.isRequired,\n  /** Target attribute, that specifies where to open the linked document (_blank by default) */\n  target: PropTypes.string,\n  disabled: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nDocumentButton.defaultProps = {\n  buttonIcon: \"fa-download\",\n  buttonTitle: \"Print Document\",\n  target: \"_blank\",\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { Tooltip } from \"react-tippy\";\n\nimport Translate from \"utils/Translate\";\n\nconst ButtonField = (props) => {\n  const {\n    fieldName,\n    fieldConfig: {\n      buttonLabel: ButtonLabel,\n      buttonDefaultMessage,\n      getDynamicAttr,\n      attributes = { className: \"btn-outline-primary\" },\n    },\n  } = props;\n  const dynamicAttr = getDynamicAttr ? getDynamicAttr(props) : {};\n  const attr = { ...attributes, ...dynamicAttr };\n\n  return (\n    <button\n      type=\"button\"\n      key={fieldName}\n      {...attr}\n      className={`text-truncate btn btn-xs ${attr.className}`}\n    >\n      {typeof ButtonLabel === \"string\" ? (\n        <Tooltip\n          html={\n            ButtonLabel && (\n              <Translate\n                id={ButtonLabel}\n                defaultMessage={buttonDefaultMessage}\n              />\n            )\n          }\n          theme=\"transparent\"\n          arrow=\"true\"\n          delay=\"150\"\n          duration=\"250\"\n          hideDelay=\"50\"\n        >\n          {\" \"}\n          <Translate id={ButtonLabel} defaultMessage={buttonDefaultMessage} />\n        </Tooltip>\n      ) : (\n        <ButtonLabel />\n      )}\n    </button>\n  );\n};\n\nexport default ButtonField;\n\nButtonField.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  fieldConfig: PropTypes.shape({\n    getDynamicAttr: PropTypes.func,\n  }).isRequired,\n};\n"],"names":["productOptionLabel","_ref","productCode","displayName","displayNames","name","concat","Option","option","_option$displayNames","React","Tooltip","html","className","theme","disabled","position","style","color","label","renderHandlingIcons","handlingIcons","SelectedValue","showSelectedOptionColor","ProductSelect","_ref2","onExactProductSelected","locationId","fieldRef","includeUom","props","_objectWithoutProperties","_excluded","selectRef","useRef","_useState2","_slicedToArray","useState","isExactMatch","setIsExactMatch","_useState4","loadedOptions","setLoadedOptions","_useState6","searchTerm","setSearchTerm","_useSelector","useSelector","state","debounceTime","session","searchConfig","minSearchLength","debouncedProductsFetch","debounceProductsFetch","useEffect","length","exactMatches","filter","product","exactMatch","exactMatchProduct","_exactMatches","matchedByProductCode","find","_ref3","current","select","setValue","setTimeout","Select","_extends","el","async","options","loadOptions","searchString","callback","resultOptions","onMenuClose","filterOption","item","onEnterPress","event","preventDefault","stopPropagation","optionRenderer","valueRenderer","defaultProps","openOnClick","autoload","cache","showValueTooltip","undefined","propTypes","PropTypes","isRequired","ModalWrapper","_Component","_this","_classCallCheck","_callSuper","showModal","openModal","bind","closeModal","save","_inherits","key","value","this","onOpen","setState","onClose","values","onSave","_this2","Title","title","defaultTitleMessage","wrapperClassName","renderButton","type","btnOpenClassName","btnOpenStyle","btnOpenDisabled","onClick","btnOpenIcon","btnOpenText","btnOpenAsIcon","Translate","id","defaultMessage","btnOpenDefaultText","Modal","isOpen","onRequestClose","shouldCloseOnOverlayClick","bodyContainerClassName","bodyContainerStyle","Form","onSubmit","initialValues","validate","mutators","_objectSpread","arrayMutators","render","handleSubmit","children","renderBodyWithValues","_","fields","fieldConfig","fieldName","renderFormField","formProps","btnContainerClassName","role","btnContainerStyle","btnCancelClassName","btnCancelStyle","btnCancelText","btnCancelDefaultText","btnSaveClassName","btnSaveStyle","btnSaveDisabled","btnSaveText","btnSaveDefaultText","Component","AlertMessage","show","message","danger","close","getMessageElement","useMemo","Array","isArray","map","msg","cursor","whiteSpace","BaseField","renderInput","attributes","classNamePrefix","getInvoiceDescription","rowValue","_rowValue$displayName","_rowValue$displayName2","orderAdjustment","isAdjustment","description","productName","delay","duration","hideDelay","formatProductSupplierSubtext","productSupplier","formatProductDisplayName","_rowValue$displayName3","getReceivingPayloadContainers","formValues","containers","container","shipmentItems","recipient","matchesProductCodeOrName","_productCode$toLowerC","_name$toLowerCase","_displayNames$default","filterValue","toLowerCase","includes","showOutboundEditValidationErrors","translate","errors","errorMessage","errorDetails","reduce","acc","val","notification","NotificationType","ERROR_OUTLINED","detailsArray","omitEmptyValues","Date","mapStringToLimitedList","elementsSeparator","lengthLimit","join","split","FIELDS","orderItems","ArrayField","arrowsNavigation","maxTableHeight","checked","fieldKey","flexWidth","headerAlign","getDynamicAttr","selectAllItems","allItemsSelected","headerHtml","rowIndex","fieldValue","selectRow","Checkbox","toString","marginLeft","onChange","orderNumber","LabelField","url","orderId","ORDER_URL","formatValue","_ref4","_join","orderItem","productSupplierName","tooltipValue","trim","supplierCode","budgetCode","quantityAvailable","quantityToShip","TextField","_ref5","updateRow","uom","INITIAL_STATE","orderNumberOptions","selectedOrders","selectedProductId","selectedOrderItems","sortOrder","CombinedShipmentItemsModal","debounceProductsInOrders","vendor","destination","then","getOrderNumberOptions","fetchOrderItems","_this3","showSpinner","shipment","payload","itemsToAdd","orderItemId","apiClient","post","hideSpinner","onResponse","overrideFormValue","prev","_this4","_this$props","get","resp","data","_this5","selectedProduct","_this6","_this7","_this$state","_this$props2","orderIds","o","productId","getSortOrder","_this$state2","newState","idx","_defineProperty","index","update","$set","every","_this8","updateAllSelectedItems","updatedSelectedOrderItems","curr","_this9","_this$state3","_this$props3","placeholder","multi","setSelectedOrders","valueKey","labelKey","classes","setSelectedProduct","connect","translateWithDefaultMessage","getTranslate","localize","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","Promise","keys","reverse","pop","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","apply","arguments","getOwnPropertyDescriptors","defineProperties","_defineProperties","_toPropertyKey","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_getPrototypeOf","_setPrototypeOf","toPrimitive","String","_toPrimitive","DELETE_BUTTON_FIELD","ButtonField","buttonLabel","buttonDefaultMessage","removeItem","removeRow","updateTotalCount","statusCode","lineItems","virtualized","isRowLoaded","loadMoreRows","isFirstPageLoaded","addButton","saveItems","invalid","stockMovementId","origin","_ref6","ProductSelectField","required","_ref7","_row$product","row","productSupplierNameLabel","lotNumber","_ref8","fetchInventoryItem","debouncedInventoryItemFetch","onBlur","expirationDate","DateField","dateFormat","autoComplete","placeholderText","_ref9","validateExpirationDate","packsRequested","fixedWidth","headerTooltip","multilineHeader","showError","unitOfMeasure","calculatedQuantityRequested","_ref10","packSize","palletName","_ref11","autoFocus","rowCount","boxName","SelectField","_ref12","recipients","setRecipientValue","_ref13","addRow","referenceId","deleteButton","LOT_AND_EXPIRY_ERROR","isModalOpen","AddItemsPage","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_ref14","mutateTableData","formData","FormData","file","target","files","append","size","COMBINED_SHIPMENT_ITEMS_IMPORT_TEMPLATE","headers","fetchLineItems","totalCount","showAlert","alertMessage","confirmSave","validateWithAlertMessage","isValidForSave","saveRequisitionItemsInCurrentStep","importTemplate","toggleDropdown","cancelSavingRequisitionItem","changeExpirationDate","stockMovementTranslationsFetched","dataFetched","fetchAllData","nextProps","items","updateSortOrder","quantityRequested","_ref15","response","setTableData","lineItemsData","ignoreLotAndExpiry","date","moment","minimumExpirationDate","dateRequested","diff","startOf","splitItems","lineItem","sum","lineItemKey","splitItem","lotAndExpiryControl","error","onConfirm","confirmAlert","buttons","onReject","afterClose","fetchUsers","fetchAddItemsPageData","isPaginated","STOCK_MOVEMENT_ITEMS","setLineItems","err","STOCK_MOVEMENT_BY_ID","hasManageInventory","_resp$data$data","sortedLineItems","saveAndTransitionToNextStep","saveRequisitionItemsAndTransitionToNextStep","_callee","_values$lineItems$row","_values$lineItems$row2","_yield$ProductApi$get","mappedLineItems","_context","cancel","ProductApi","getInventoryItem","fetchedInventoryItem","inventoryItem","quantity","quantityOnHand","previousState","_values$lineItems","_data$inventoryItem","_fetchInventoryItem","_next","_throw","_x","_x2","_lineItem$fetchedInve","_lineItem$fetchedInve2","_lineItem$inventoryIt","confirmInventoryItemExpirationDateUpdate","saveRequisitionItems","newDate","updatedLineItem","_previousState$values","_item$fetchedInventor","_item$inventoryItem","itemsToSave","getLineItemsToBeSaved","STOCK_MOVEMENT_UPDATE_ITEMS","reject","transitionToNextStep","nextPage","itemCandidatesToSave","lineItemsBackendData","_this10","Alert","timeout","window","location","STOCK_MOVEMENT_URL","_this11","itemId","_this12","STOCK_MOVEMENT_ITEM_REMOVE","_this13","STOCK_MOVEMENT_REMOVE_ALL_ITEMS","_this14","STOCK_MOVEMENT_STATUS","status","_this15","previousPage","blank","_this16","COMBINED_SHIPMENT_ITEMS_EXPORT_TEMPLATE","responseType","fileDownload","isDropdownVisible","_this17","override","_ref16","_ref17","_ref18","field","changeValue","setColumnValue","_ref19","form","htmlFor","display","accept","href","exportTemplate","refresh","saveAndExit","removeAll","_this17$state$values","stocklist","isFromOrder","users","fetchedTranslations","stockMovement","hasPackingSupport","currentLocation","pageSize","queryString","parse","search","filterOptions","debouncedOriginLocationsFetch","debouncedDestinationLocationsFetch","isSuperuser","hasCentralPurchasingEnabled","CreateStockMovement","setInitialValues","debounceLocationsFetch","match","params","originLocation","destinationLocation","locationType","locationTypeCode","organizationCode","stockMovementUrl","history","editCombinedShipments","movementNumber","identifier","saveStockMovement","withRouter","SHIPMENT_FIELDS","canBeEdited","hasStockList","debouncedLocationsFetch","dateShipped","showTimeSelect","issued","showOnly","shipmentType","shipmentTypes","received","trackingNumber","driverName","comments","expectedDeliveryDate","SUPPLIER_FIELDS","tableItems","hide","isPalletNameEmpty","isBoxNameEmpty","_row$product2","quantityPickedPerUom","SendMovementPage","documents","onDrop","fetchStockMovementData","newFiles","difference","saveValues","saveShipment","names","_$split2","en","fr","locale","startIndex","tableItemsData","stockMovementData","associations","doc","stepNumber","destinationType","splitTranslation","shipmentStatus","fetchShipmentTypes","fetchStockMovementItems","sendFiles","removeFiles","prepareRequestAndSubmitStockMovement","sendFile","removeFile","currentLocationId","stateTransitionToIssued","isOrigin","isDestination","rollback","reload","Dropzone","multiple","getRootProps","document","hidden","DocumentButton","link","uri","buttonTitle","sendFilesAndSave","shipped","isUserAdmin","rollbackStockMovement","hasBinLocationSupport","_ref20","_ref21","activeLanguage","StockMovementCombinedShipments","currentPage","updateWizardValues","fetchTranslations","fetchInitialValues","text","delimeter","originType","Wizard","pageList","stepList","wizardTitle","additionalTitle","additionalWizardTitle","prevPage","indeterminate","custom","withLabel","ref","elem","margin","buttonIcon","rel","newWindow","open","handleClick","_props$fieldConfig","ButtonLabel","_props$fieldConfig$at","dynamicAttr","attr","arrow"],"sourceRoot":""}