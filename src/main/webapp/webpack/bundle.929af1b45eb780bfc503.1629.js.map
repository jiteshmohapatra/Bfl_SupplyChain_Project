{"version":3,"file":"bundle.929af1b45eb780bfc503.1629.js","mappings":"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","sources":["webpack://openboxes/./src/js/components/dashboard/StockRequestDashboard.jsx","webpack://openboxes/./src/js/utils/list-utils.jsx"],"sourcesContent":["import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { RiStickyNoteFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport ReactTable from \"react-table\";\nimport { Tooltip } from \"react-tippy\";\nimport './DashboardTable.css';\n\nimport { fetchTranslations } from \"actions\";\nimport { STOCK_MOVEMENT_URL } from \"consts/applicationUrls\";\nimport apiClient from \"utils/apiClient\";\nimport { getCurrentEventComment } from \"utils/list-utils\";\nimport Translate from \"utils/Translate\";\n\n\nimport \"./StockRequestDashboard.scss\";\n\nconst COLUMNS = [\n  {\n    Header: \"Request Number\",\n    accessor: \"identifier\",\n    headerClassName: \"text-left font-weight-bold px-4 py-3\",\n    className: \"px-4 py-2 btn-link\",\n    Cell: (row) => (\n      <a href={STOCK_MOVEMENT_URL.show(row.original.id)}>\n        {row.original.identifier}\n      </a>\n    ),\n  },\n  {\n    Header: \"Current Status\",\n    accessor: \"displayStatus\",\n    headerClassName: \"text-left font-weight-bold px-4 py-3\",\n    className: \"px-4 py-2\",\n    maxWidth: 200,\n    Cell: (row) => {\n      const comment = getCurrentEventComment(\n        row.original.currentEvent,\n        row.original.statusCode,\n      );\n      return (\n        <span className=\"d-flex align-items-center\">\n          <span className=\"d-inline-block text-overflow-ellipsis\">\n            {row.original.displayStatus?.label}\n          </span>\n          {comment && (\n            <Tooltip\n              html={comment}\n              theme=\"transparent\"\n              delay=\"150\"\n              duration=\"250\"\n              hideDelay=\"50\"\n            >\n              <RiStickyNoteFill className=\"text-warning mr-1\" />\n            </Tooltip>\n          )}\n        </span>\n      );\n    },\n  },\n  {\n    Header: \"Description\",\n    accessor: \"description\",\n    headerClassName: \"text-left font-weight-bold px-4 py-3\",\n    className: \"px-4 py-2 btn-link\",\n    Cell: (row) => (\n      <a href={STOCK_MOVEMENT_URL.show(row.original.id)}>\n        {row.original.description}\n      </a>\n    ),\n  },\n  {\n    Header: \"Fulfiling Depot\",\n    accessor: \"origin.name\",\n    headerClassName: \"text-left font-weight-bold px-4 py-3\",\n    className: \"px-4 py-2\",\n  },\n  {\n    Header: \"Requested By\",\n    accessor: \"requestedBy.name\",\n    headerClassName: \"text-left font-weight-bold px-4 py-3\",\n    className: \"px-4 py-2\",\n  },\n  {\n    Header: \"Date Requested\",\n    accessor: \"dateRequested\",\n    headerClassName: \"text-left font-weight-bold px-4 py-3\",\n    className: \"px-4 py-2\",\n    maxWidth: 180,\n  },\n];\n\nclass StockRequestDashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockRequests: [],\n      isLoading: true,\n      pageCount: 0,\n    };\n    this.fetchStockMovementItems = this.fetchStockMovementItems.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTranslations(\"\", \"stockMovement\");\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.locale && this.props.locale !== nextProps.locale) {\n      this.props.fetchTranslations(nextProps.locale, \"stockMovement\");\n    }\n  }\n\n  fetchStockMovementItems(page, pageSize) {\n    const url = \"/api/stockMovements\";\n    const params = {\n      destination: this.props.currentLocation.id,\n      direction: \"INBOUND\",\n      offset: page * pageSize,\n      max: pageSize,\n      sort: \"dateRequested\",\n    };\n\n    this.setState({ isLoading: true });\n    apiClient\n      .get(url, { params })\n      .then((response) => {\n        const { data, totalCount } = response.data;\n        this.setState({\n          pageCount: Math.ceil(totalCount / pageSize),\n          stockRequests: data,\n        });\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"p-3\">\n        <div className=\"d-flex justify-content-between my-3\">\n          <h3 className=\"font-weight-bold\">\n            <Translate\n              id=\"react.stockMovement.stockRequests.label\"\n              defaultMessage=\"Stock Requests\"\n            />\n          </h3>\n          <Link\n            to={STOCK_MOVEMENT_URL.createRequest()}\n            className=\"btn btn-primary d-flex justify-content-center align-items-center font-weight-bold\"\n          >\n            <i className=\"fa fa-plus mr-1\" />\n            <Translate\n              id=\"react.stockMovement.createNewRequest.label\"\n              defaultMessage=\"Create New Request\"\n            />\n          </Link>\n        </div>\n        <ReactTable\n          data={this.state.stockRequests}\n          columns={COLUMNS}\n          defaultPageSize={10}\n          loading={this.state.isLoading}\n          sortable={false}\n          pages={this.state.pageCount}\n          manual\n          resizable={false}\n          className=\"-striped -highlight stock-request-table \"\n          previousText={<i className=\"fa fa-chevron-left\" aria-hidden=\"true\" />}\n          nextText={<i className=\"fa fa-chevron-right\" aria-hidden=\"true\" />}\n          pageText=\"\"\n          onFetchData={(tableState) => {\n            this.fetchStockMovementItems(tableState.page, tableState.pageSize);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  currentLocation: state.session.currentLocation,\n});\n\nexport default connect(mapStateToProps, { fetchTranslations })(\n  StockRequestDashboard,\n);\n\nStockRequestDashboard.propTypes = {\n  fetchTranslations: PropTypes.func.isRequired,\n  locale: PropTypes.string.isRequired,\n  currentLocation: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    locationType: PropTypes.shape({\n      description: PropTypes.string,\n      locationTypeCode: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","import _ from \"lodash\";\nimport queryString from \"query-string\";\n// Temporary 'hard-coded' checking for role to display an action in dropdown or not\nexport const hasMinimumRequiredRole = (role, highestUserRole) => {\n  // TODO: Figure out better way to check roles\n  const roles = [\n    \"Superuser\",\n    \"Admin\",\n    \"Manager\",\n    \"Assistant\",\n    \"Browser\",\n    \"Authenticated\",\n    \"Anonymous\",\n  ];\n  const userRoleIndex = roles.indexOf(role);\n  const highestUserRoleIndex = roles.indexOf(highestUserRole);\n  return (\n    userRoleIndex !== -1 &&\n    highestUserRoleIndex !== -1 &&\n    highestUserRoleIndex <= userRoleIndex\n  );\n};\n\nexport const findActions = (actionList, row, props) => {\n  const { supportedActivities = [], highestRole, customFilter } = props;\n  // Filter out by status if any provided\n  const filteredByStatus = actionList.filter((action) => {\n    if (action.statuses) {\n      return action.statuses.includes(row.original.status);\n    }\n    return true;\n  });\n  // Filter by activity code if any provided\n  const filteredByActivityCode = filteredByStatus.filter((action) =>\n    action.activityCode\n      ? action.activityCode.every((code) =>\n          supportedActivities.some((activity) => activity === code),\n        )\n      : true,\n  );\n  // Filter by required user's role if provided\n  const filteredByMinimumRequiredRole = filteredByActivityCode.filter(\n    (action) => {\n      if (action.minimumRequiredRole) {\n        return hasMinimumRequiredRole(action.minimumRequiredRole, highestRole);\n      }\n      return true;\n    },\n  );\n  // Use custom filter callback\n  if (customFilter && typeof customFilter === \"function\") {\n    return filteredByMinimumRequiredRole.filter((action) =>\n      customFilter(action, row),\n    );\n  }\n  return filteredByMinimumRequiredRole;\n};\n\nexport const transformFilterParams = (filterValues, filterAccessors) =>\n  Object.keys(filterValues)\n    .filter((key) => filterAccessors[key] && !!filterValues[key])\n    .reduce((acc, key) => {\n      const { name, accessor } = filterAccessors[key];\n\n      if (!accessor) {\n        return { ...acc, [key]: filterValues[name] };\n      }\n      if (Array.isArray(filterValues[name])) {\n        return { ...acc, [key]: _.map(filterValues[name], accessor) };\n      }\n      return { ...acc, [key]: _.get(filterValues[name], accessor) };\n    }, {});\n\n// Transforms value into an Array\nexport const getParamList = (value) => [].concat(value);\n\nexport const getShipmentTypeTooltip = (translate, shipmentType) =>\n  `${translate(\"react.stockMovement.shipmentType.label\", \"Shipment type\")}: ${shipmentType ?? \"Default\"}`;\n\nexport const getCurrentEventComment = (event, currentStatus) => {\n  if (\n    event?.eventType?.eventCode &&\n    event?.eventType?.eventCode !== currentStatus\n  ) {\n    return null;\n  }\n  return event?.comment;\n};\n\n// Clears query params keeping the ones that are included in fieldsToIgnore,\n// and returns stringified query params\nexport const clearQueryParams = ({ fieldsToIgnore, queryParams }) => {\n  const resultParams = Object.entries(queryParams).reduce(\n    (acc, [key, value]) => {\n      if (fieldsToIgnore.includes(key)) {\n        return {\n          ...acc,\n          [key]: value,\n        };\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return queryString.stringify(resultParams);\n};\n\nexport const splitPreferenceTypes = (data) =>\n  data.reduce(\n    (acc, preferenceType) => {\n      if (preferenceType?.destinationParty) {\n        return {\n          ...acc,\n          preferenceTypes: [...acc.preferenceTypes, preferenceType],\n        };\n      }\n\n      return { ...acc, defaultPreferenceType: preferenceType };\n    },\n    { preferenceTypes: [], defaultPreferenceType: {} },\n  );\n"],"names":["COLUMNS","Header","accessor","headerClassName","className","Cell","row","React","href","STOCK_MOVEMENT_URL","show","original","id","identifier","maxWidth","_row$original$display","comment","getCurrentEventComment","currentEvent","statusCode","displayStatus","label","Tooltip","html","theme","delay","duration","hideDelay","RiStickyNoteFill","description","StockRequestDashboard","_Component","props","_this","_classCallCheck","_callSuper","state","stockRequests","isLoading","pageCount","fetchStockMovementItems","bind","_inherits","key","value","this","fetchTranslations","nextProps","locale","page","pageSize","_this2","params","destination","currentLocation","direction","offset","max","sort","setState","apiClient","get","then","response","_response$data","data","totalCount","Math","ceil","_this3","Translate","defaultMessage","Link","to","createRequest","ReactTable","columns","defaultPageSize","loading","sortable","pages","manual","resizable","previousText","nextText","pageText","onFetchData","tableState","Component","connect","session","activeLanguage","propTypes","PropTypes","isRequired","name","locationType","locationTypeCode","findActions","actionList","_props$supportedActiv","supportedActivities","highestRole","customFilter","filteredByMinimumRequiredRole","filter","action","statuses","includes","status","activityCode","every","code","some","activity","minimumRequiredRole","role","highestUserRole","userRoleIndex","roles","indexOf","highestUserRoleIndex","transformFilterParams","filterValues","filterAccessors","Object","keys","reduce","acc","_filterAccessors$key","Array","isArray","_objectSpread","_defineProperty","_","getParamList","concat","getShipmentTypeTooltip","translate","shipmentType","event","currentStatus","_event$eventType","_event$eventType2","eventType","eventCode","clearQueryParams","_ref","fieldsToIgnore","queryParams","resultParams","entries","_ref2","_ref3","queryString","stringify","splitPreferenceTypes","preferenceType","destinationParty","preferenceTypes","defaultPreferenceType"],"sourceRoot":""}