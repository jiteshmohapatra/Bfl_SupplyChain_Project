{"version":3,"file":"bundle.929af1b45eb780bfc503.8667.js","mappings":"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","sources":["webpack://openboxes/./node_modules/cwait/dist/umd/index.js","webpack://openboxes/./src/js/utils/featureBarUtils.jsx","webpack://openboxes/./src/js/consts/saveStatusIcons.jsx","webpack://openboxes/./src/js/utils/RowSaveIconIndicator.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/outbound/AddItemsPage.jsx","webpack://openboxes/./src/js/utils/requestsQueue.js","webpack://openboxes/./src/js/components/stock-movement-wizard/modals/AddDestinationModal.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/outbound/CreateStockMovement.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/outbound/EditPage.jsx","webpack://openboxes/./src/js/components/stock-movement-wizard/StockMovement.jsx"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.cwait = {})));\n}(this, (function (exports) { 'use strict';\n\n  // This file is part of cwait, copyright (c) 2015- BusFaster Ltd.\n  // Released under the MIT license, see LICENSE.\n  /** Call func and return a promise for its result.\n    * Optionally call given resolve or reject handler when the promise settles. */\n  function tryFinally(func, onFinish, Promise, resolve, reject) {\n      var promise;\n      try {\n          promise = Promise.resolve(func());\n      }\n      catch (err) {\n          // If func threw an error, return a rejected promise.\n          promise = Promise.reject(err);\n      }\n      promise.then(onFinish, onFinish);\n      if (resolve)\n          promise.then(resolve, reject);\n      return (promise);\n  }\n  /** Task wraps a promise, delaying it until some resource gets less busy. */\n  var Task = /** @class */ (function () {\n      function Task(func, Promise, stamp) {\n          this.func = func;\n          this.Promise = Promise;\n          this.stamp = stamp;\n      }\n      /** Wrap task result in a new promise so it can be resolved later. */\n      Task.prototype.delay = function () {\n          var _this = this;\n          if (!this.promise) {\n              this.promise = new this.Promise(function (resolve, reject) {\n                  _this.resolve = resolve;\n                  _this.reject = reject;\n              });\n          }\n          return (this.promise);\n      };\n      /** Start the task and call onFinish when done. */\n      Task.prototype.resume = function (onFinish) {\n          return (tryFinally(this.func, onFinish, this.Promise, this.resolve, this.reject));\n      };\n      return Task;\n  }());\n\n  // This file is part of cdata, copyright (c) 2017- BusFaster Ltd.\n  // Released under the MIT license, see LICENSE.\n  var BinaryHeap = /** @class */ (function () {\n      /** @param compare Compare two items, as used with Array.sort. */\n      function BinaryHeap(compare, _a) {\n          var _b = _a === void 0 ? {} : _a, getPos = _b.getPos, setPos = _b.setPos;\n          this.compare = compare;\n          this.heap = [];\n          this.last = 0;\n          this.getPos = getPos;\n          this.setPos = setPos || (function (item, pos) { });\n      }\n      /** Erase all contents of the heap. */\n      BinaryHeap.prototype.clear = function () {\n          this.heap = [];\n          this.last = 0;\n      };\n      BinaryHeap.prototype.isEmpty = function () { return (!this.last); };\n      /** Insert a new item in the heap.\n        * @return Index of the inserted item in the heap's internal array. */\n      BinaryHeap.prototype.insert = function (item) {\n          return (this.bubble(item, this.last++));\n      };\n      /** Update the position of an item in the heap. */\n      BinaryHeap.prototype.update = function (item) {\n          var getPos = this.getPos;\n          if (!getPos)\n              throw (new Error('Cannot get index of item in the heap'));\n          var pos = getPos(item);\n          var posParent = (pos - 1) >>> 1;\n          var delta = this.compare(this.heap[posParent], item);\n          if (delta > 0)\n              this.bubble(item, pos);\n          else if (delta < 0)\n              this.sink(item, pos);\n          return (item);\n      };\n      /** Get the top item of the heap without removing it. */\n      BinaryHeap.prototype.peekTop = function () {\n          return (!this.last ? null : this.heap[0]);\n      };\n      /** Remove and return the top item of the heap. */\n      BinaryHeap.prototype.extractTop = function () {\n          if (!this.last)\n              return (null);\n          var top = this.heap[0];\n          var bottom = this.heap[--this.last];\n          // Erase last item.\n          this.heap[this.last] = void 0;\n          this.sink(bottom, 0);\n          return (top);\n      };\n      /** Move an item upwards in the heap, to its correct position.\n        * @param item Item to move.\n        * @param pos Index of the item in the heap's internal array. */\n      BinaryHeap.prototype.bubble = function (item, pos) {\n          var heap = this.heap;\n          var compare = this.compare;\n          var setPos = this.setPos;\n          var posParent;\n          var parent;\n          while (pos > 0) {\n              posParent = (pos - 1) >>> 1;\n              parent = heap[posParent];\n              if (compare(parent, item) <= 0)\n                  break;\n              heap[pos] = parent;\n              setPos(parent, pos);\n              pos = posParent;\n          }\n          heap[pos] = item;\n          setPos(item, pos);\n      };\n      /** Move an item downwards in the heap, to its correct position.\n        * @param item Item to move.\n        * @param pos Index of the item in the heap's internal array. */\n      BinaryHeap.prototype.sink = function (item, pos) {\n          var heap = this.heap;\n          var last = this.last;\n          var compare = this.compare;\n          var setPos = this.setPos;\n          var posLeft;\n          var posRight;\n          var posNext;\n          var left;\n          var right;\n          while (1) {\n              posLeft = pos * 2 + 1;\n              posRight = pos * 2 + 2;\n              if (posRight < last) {\n                  left = heap[posLeft];\n                  right = heap[posRight];\n                  if (compare(left, right) < 0) {\n                      if (compare(left, item) < 0)\n                          posNext = posLeft;\n                      else\n                          break;\n                  }\n                  else {\n                      if (compare(right, item) < 0)\n                          posNext = posRight;\n                      else\n                          break;\n                  }\n              }\n              else {\n                  if (posLeft < last && compare(heap[posLeft], item) < 0)\n                      posNext = posLeft;\n                  else\n                      break;\n              }\n              heap[pos] = heap[posNext];\n              setPos(heap[pos], pos);\n              pos = posNext;\n          }\n          heap[pos] = item;\n          setPos(item, pos);\n      };\n      return BinaryHeap;\n  }());\n\n  // This file is part of cwait, copyright (c) 2015- BusFaster Ltd.\n  var TaskQueue = /** @class */ (function () {\n      function TaskQueue(Promise, \n      /** Number of promises allowed to resolve concurrently. */\n      concurrency) {\n          var _this = this;\n          this.Promise = Promise;\n          this.concurrency = concurrency;\n          this.busyCount = 0;\n          this.backlog = new BinaryHeap(function (a, b) { return a.stamp - b.stamp; });\n          this.Promise = Promise;\n          this.concurrency = concurrency;\n          this.nextBound = function () { return _this.next(1); };\n          this.nextTickBound = function () {\n              _this.timerStamp = 0;\n              _this.next(0);\n          };\n      }\n      /** Add a new task to the queue.\n        * It will start when the number of other concurrent tasks is low enough.\n        * @param func Function to call.\n        * @param delay Initial delay in milliseconds before making the call. */\n      TaskQueue.prototype.add = function (func, delay) {\n          if (delay === void 0) { delay = 0; }\n          if (this.busyCount < this.concurrency && !delay) {\n              // Start the task immediately.\n              ++this.busyCount;\n              return (tryFinally(func, this.nextBound, this.Promise));\n          }\n          else {\n              // Schedule the task and return a promise resolving\n              // to the result of task.start().\n              var stamp = new Date().getTime() + delay;\n              var task = new Task(func, this.Promise, stamp);\n              this.backlog.insert(task);\n              return (task.delay());\n          }\n      };\n      /** Consider current function idle until promise resolves.\n        * Useful for making recursive calls. */\n      TaskQueue.prototype.unblock = function (promise) {\n          var _this = this;\n          this.next(1);\n          var onFinish = function () { return ++_this.busyCount; };\n          promise.then(onFinish, onFinish);\n          return (promise);\n      };\n      TaskQueue.prototype.wrap = function (func, thisObject) {\n          var _this = this;\n          return (function () {\n              var args = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                  args[_i] = arguments[_i];\n              }\n              return _this.add(function () { return func.apply(thisObject, args); });\n          });\n      };\n      /** Start the next task from the backlog. */\n      TaskQueue.prototype.next = function (ended) {\n          var stamp = new Date().getTime();\n          var task = null;\n          this.busyCount -= ended;\n          // If another task is eligible to run, get the next scheduled task.\n          if (this.busyCount < this.concurrency)\n              task = this.backlog.peekTop();\n          if (!task)\n              return;\n          if (task.stamp <= stamp) {\n              // A task remains, scheduled to start already. Resume it.\n              ++this.busyCount;\n              task = this.backlog.extractTop();\n              task.resume(this.nextBound);\n          }\n          else if (!this.timerStamp || task.stamp + 1 < this.timerStamp) {\n              // There is a task scheduled after a delay,\n              // and no current timer firing before the delay.\n              if (this.timerStamp) {\n                  // There is a timer firing too late. Remove it.\n                  clearTimeout(this.timer);\n              }\n              // Start a timer to clear timerStamp and call this function.\n              this.timer = setTimeout(this.nextTickBound, ~~(task.stamp - stamp + 1));\n              this.timerStamp = task.stamp;\n          }\n      };\n      return TaskQueue;\n  }());\n\n  // This file is part of cwait, copyright (c) 2015- BusFaster Ltd.\n\n  exports.Task = Task;\n  exports.TaskQueue = TaskQueue;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import { InfoBar } from \"consts/infoBar\";\n\n// Create the feature bar if it has not been yet created\nexport const shouldCreateFullOutboundImportFeatureBar = (bars) =>\n  !bars?.[InfoBar.FULL_OUTBOUND_IMPORT];\n\n// Show the full outbound import feature bar if it has been created (added to store)\n// and has not yet been closed by a user\nexport const shouldShowFullOutboundImportFeatureBar = (bars) =>\n  bars?.[InfoBar.FULL_OUTBOUND_IMPORT] &&\n  !bars[InfoBar.FULL_OUTBOUND_IMPORT].closed;\n","import React from \"react\";\n\nimport {\n  RiCheckFill,\n  RiErrorWarningFill,\n  RiSubtractFill,\n} from \"react-icons/ri\";\n\nimport Spinner from \"components/spinner/Spinner\";\nimport RowSaveStatus from \"consts/rowSaveStatus\";\n\nconst SaveStatusIcons = {\n  [RowSaveStatus.SAVED]: {\n    icon: <RiCheckFill />,\n    id: \"react.stockMovement.tooltip.itemSaved.label\",\n    defaultMessage: \"Item saved\",\n  },\n  [RowSaveStatus.PENDING]: {\n    icon: <RiSubtractFill />,\n    id: \"react.stockMovement.tooltip.itemNotSaved.label\",\n    defaultMessage: \"Item not saved. Fill in the line item details\",\n  },\n  [RowSaveStatus.ERROR]: {\n    icon: <RiErrorWarningFill />,\n    id: \"react.stockMovement.tooltip.saveError.label\",\n    defaultMessage: \"Item not saved. Correct the error\",\n  },\n  [RowSaveStatus.SAVING]: {\n    icon: <Spinner />,\n    id: \"react.stockMovement.tooltip.pendingSave.label\",\n    defaultMessage: \"Saving in progress\",\n  },\n};\n\nexport default SaveStatusIcons;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { useSelector } from \"react-redux\";\nimport { Tooltip } from \"react-tippy\";\n\nimport RowSaveStatus from \"consts/rowSaveStatus\";\nimport SaveStatusIcons from \"consts/saveStatusIcons\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\n\nconst RowSaveIconIndicator = ({ lineItemSaveStatus }) => {\n  const { icon, id, defaultMessage } = SaveStatusIcons[lineItemSaveStatus];\n  const translate = useSelector((state) =>\n    translateWithDefaultMessage(getTranslate(state.localize)),\n  );\n\n  return (\n    <Tooltip\n      html={<span className=\"p-1\">{translate(id, defaultMessage)}</span>}\n      delay=\"150\"\n      duration=\"250\"\n    >\n      <div\n        className={`${lineItemSaveStatus?.toLowerCase()} line-item-icon-save-indicator`}\n      >\n        {icon}\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default RowSaveIconIndicator;\n\nRowSaveIconIndicator.propTypes = {\n  lineItemSaveStatus: PropTypes.string,\n};\n\nRowSaveIconIndicator.defaultProps = {\n  lineItemSaveStatus: RowSaveStatus.SAVED,\n};\n","import React, { Component } from \"react\";\n\nimport arrayMutators from \"final-form-arrays\";\nimport update from \"immutability-helper\";\nimport fileDownload from \"js-file-download\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport Alert from \"react-s-alert\";\n\nimport {\n  addStockMovementDraft,\n  closeInfoBar,\n  createInfoBar,\n  fetchUsers,\n  hideInfoBar,\n  hideSpinner,\n  removeStockMovementDraft,\n  showInfoBar,\n  showSpinner,\n} from \"actions\";\nimport ArrayField from \"components/form-elements/ArrayField\";\nimport ButtonField from \"components/form-elements/ButtonField\";\nimport LabelField from \"components/form-elements/LabelField\";\nimport ProductSelectField from \"components/form-elements/ProductSelectField\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TextField from \"components/form-elements/TextField\";\nimport notification from \"components/Layout/notifications/notification\";\nimport Spinner from \"components/spinner/Spinner\";\nimport { STOCK_MOVEMENT_URL } from \"consts/applicationUrls\";\nimport { InfoBar, InfoBarConfigs } from \"consts/infoBar\";\nimport NotificationType from \"consts/notificationTypes\";\nimport RowSaveStatus from \"consts/rowSaveStatus\";\nimport apiClient from \"utils/apiClient\";\nimport {\n  shouldCreateFullOutboundImportFeatureBar,\n  shouldShowFullOutboundImportFeatureBar,\n} from \"utils/featureBarUtils\";\nimport { renderFormField, setColumnValue } from \"utils/form-utils\";\nimport requestsQueue from \"utils/requestsQueue\";\nimport RowSaveIconIndicator from \"utils/RowSaveIconIndicator\";\nimport Select from \"utils/Select\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst DELETE_BUTTON_FIELD = {\n  type: ButtonField,\n  defaultMessage: \"Delete\",\n  flexWidth: \"1\",\n  fieldKey: \"\",\n  buttonLabel: \"react.default.button.delete.label\",\n  buttonDefaultMessage: \"Delete\",\n  getDynamicAttr: ({\n    fieldValue,\n    removeItem,\n    removeRow,\n    showOnly,\n    updateTotalCount,\n  }) => ({\n    // onClick -> onMouseDown, because we can't cancel\n    // function triggered in onBlur (request with items to save).\n    // onClick doesn't work in this case, because element on\n    // which we want to trigger this function has to have focus\n    // but if onBlur takes a little more time, onClick will not be executed\n    onMouseDown:\n      fieldValue && fieldValue.id\n        ? () => {\n            removeItem(fieldValue.id).then(() => {\n              updateTotalCount(-1);\n              removeRow();\n            });\n          }\n        : () => {\n            updateTotalCount(-1);\n            removeRow();\n          },\n    disabled:\n      (fieldValue && fieldValue.statusCode === \"SUBSTITUTED\") || showOnly,\n  }),\n  attributes: {\n    className: \"btn btn-outline-danger\",\n  },\n};\n\nconst ROW_SAVE_ICON_FIELD = {\n  type: (params) => (\n    <RowSaveIconIndicator lineItemSaveStatus={params.fieldValue} />\n  ),\n  flexWidth: \"0.2\",\n};\n\nconst NO_STOCKLIST_FIELDS = {\n  lineItems: {\n    type: ArrayField,\n    arrowsNavigation: true,\n    virtualized: true,\n    totalCount: ({ totalCount }) => totalCount,\n    isRowLoaded: ({ isRowLoaded }) => isRowLoaded,\n    loadMoreRows: ({ loadMoreRows }) => loadMoreRows(),\n    isFirstPageLoaded: ({ isFirstPageLoaded }) => isFirstPageLoaded,\n    addButton: ({\n      // eslint-disable-next-line react/prop-types\n      addRow,\n      getSortOrder,\n      showOnly,\n      updateTotalCount,\n      getStockMovementDraft,\n      isDraftAvailable,\n    }) => (\n      <>\n        <button\n          type=\"button\"\n          id=\"addButton\"\n          className=\"btn btn-outline-success btn-xs\"\n          disabled={showOnly}\n          // onClick -> onMouseDown (see comment for DELETE_BUTTON_FIELD)\n          onMouseDown={() => {\n            updateTotalCount(1);\n            addRow({\n              sortOrder: getSortOrder(),\n              rowSaveStatus: RowSaveStatus.PENDING,\n            });\n          }}\n        >\n          <span>\n            <i className=\"fa fa-plus pr-2\" />\n            <Translate\n              id=\"react.default.button.addLine.label\"\n              defaultMessage=\"Add line\"\n            />\n          </span>\n        </button>\n        {isDraftAvailable && (\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary btn-xs draft-button ml-1\"\n            onMouseDown={() => getStockMovementDraft()}\n          >\n            <Translate\n              id=\"react.default.button.availableDraft.label\"\n              defaultMessage=\"Available draft\"\n            />\n          </button>\n        )}\n      </>\n    ),\n    fields: {\n      product: {\n        type: ProductSelectField,\n        fieldKey: \"disabled\",\n        label: \"react.stockMovement.requestedProduct.label\",\n        defaultMessage: \"Requested product\",\n        headerAlign: \"left\",\n        flexWidth: \"9.5\",\n        attributes: {\n          showSelectedOptionColor: true,\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          rowCount,\n          originId,\n          focusField,\n        }) => ({\n          disabled: !!fieldValue,\n          autoFocus: rowIndex === rowCount - 1,\n          locationId: originId,\n          onExactProductSelected: ({ product }) => {\n            if (focusField && product) {\n              focusField(rowIndex, \"quantityRequested\");\n            }\n          },\n        }),\n      },\n      quantityRequested: {\n        type: TextField,\n        label: \"react.stockMovement.quantity.label\",\n        defaultMessage: \"Quantity\",\n        flexWidth: \"2.5\",\n        attributes: {\n          type: \"number\",\n        },\n        fieldKey: \"\",\n        getDynamicAttr: ({\n          fieldValue,\n          updateRow,\n          values,\n          rowIndex,\n          saveProgress,\n        }) => ({\n          disabled:\n            fieldValue?.rowSaveStatus === RowSaveStatus.SAVING ||\n            (fieldValue && fieldValue.statusCode === \"SUBSTITUTED\") ||\n            _.isNil(fieldValue && fieldValue.product),\n          onBlur: () => {\n            updateRow(values, rowIndex);\n            saveProgress({ values });\n          },\n          onChange: (value) => {\n            saveProgress({\n              values,\n              rowIndex,\n              fieldValue: { ...fieldValue, quantityRequested: value },\n            });\n          },\n        }),\n      },\n      recipient: {\n        type: SelectField,\n        label: \"react.stockMovement.recipient.label\",\n        defaultMessage: \"Recipient\",\n        flexWidth: \"2.5\",\n        fieldKey: \"\",\n        getDynamicAttr: ({\n          fieldValue,\n          recipients,\n          addRow,\n          rowCount,\n          rowIndex,\n          getSortOrder,\n          updateTotalCount,\n          updateRow,\n          values,\n          saveProgress,\n          setRecipientValue,\n          translate,\n        }) => ({\n          headerHtml: () => (\n            <Select\n              placeholder={translate(\n                \"react.stockMovement.recipient.label\",\n                \"Recipient\",\n              )}\n              className=\"select-xs my-2\"\n              classNamePrefix=\"react-select\"\n              options={recipients}\n              onChange={(val) => {\n                if (val) {\n                  setRecipientValue(val);\n                  saveProgress({\n                    editAll: true,\n                    values: update(values, {\n                      lineItems: {\n                        $set: values.lineItems.map((item) =>\n                          update(item, { recipient: { $set: val } }),\n                        ),\n                      },\n                    }),\n                  });\n                }\n              }}\n            />\n          ),\n          options: recipients,\n          disabled:\n            fieldValue?.rowSaveStatus === RowSaveStatus.SAVING ||\n            (fieldValue && fieldValue.statusCode === \"SUBSTITUTED\") ||\n            _.isNil(fieldValue && fieldValue.product),\n          onTabPress:\n            rowCount === rowIndex + 1\n              ? () => {\n                  updateTotalCount(1);\n                  addRow({\n                    sortOrder: getSortOrder(),\n                    rowSaveStatus: RowSaveStatus.PENDING,\n                  });\n                }\n              : null,\n          arrowRight:\n            rowCount === rowIndex + 1\n              ? () => {\n                  updateTotalCount(1);\n                  addRow({\n                    sortOrder: getSortOrder(),\n                    rowSaveStatus: RowSaveStatus.PENDING,\n                  });\n                }\n              : null,\n          arrowDown:\n            rowCount === rowIndex + 1\n              ? () => () => {\n                  updateTotalCount(1);\n                  addRow({\n                    sortOrder: getSortOrder(),\n                    rowSaveStatus: RowSaveStatus.PENDING,\n                  });\n                }\n              : null,\n          onBlur: () => {\n            updateRow(values, rowIndex);\n            saveProgress({ values });\n          },\n          onChange: (event) => {\n            saveProgress({\n              values,\n              rowIndex,\n              fieldValue: { ...fieldValue, recipient: event },\n            });\n          },\n        }),\n        attributes: {\n          labelKey: \"name\",\n          openOnClick: false,\n        },\n      },\n      deleteButton: DELETE_BUTTON_FIELD,\n    },\n  },\n};\n\nconst STOCKLIST_FIELDS = {\n  lineItems: {\n    type: ArrayField,\n    arrowsNavigation: true,\n    virtualized: true,\n    showRowSaveIndicator: true,\n    totalCount: ({ totalCount }) => totalCount,\n    isRowLoaded: ({ isRowLoaded }) => isRowLoaded,\n    loadMoreRows: ({ loadMoreRows }) => loadMoreRows(),\n    isFirstPageLoaded: ({ isFirstPageLoaded }) => isFirstPageLoaded,\n    addButton: ({\n      // eslint-disable-next-line react/prop-types\n      addRow,\n      getSortOrder,\n      newItemAdded,\n      updateTotalCount,\n      isDraftAvailable,\n      getStockMovementDraft,\n    }) => (\n      <>\n        <button\n          type=\"button\"\n          id=\"addButton\"\n          className=\"btn btn-outline-success btn-xs\"\n          // onClick -> onMouseDown (see comment for DELETE_BUTTON_FIELD)\n          onMouseDown={() => {\n            updateTotalCount(1);\n            addRow({\n              sortOrder: getSortOrder(),\n              rowSaveStatus: RowSaveStatus.PENDING,\n            });\n            newItemAdded();\n          }}\n        >\n          <span>\n            <i className=\"fa fa-plus pr-2\" />\n            <Translate\n              id=\"react.default.button.addLine.label\"\n              defaultMessage=\"Add line\"\n            />\n          </span>\n        </button>\n        {isDraftAvailable && (\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary btn-xs draft-button ml-1\"\n            onMouseDown={() => getStockMovementDraft()}\n          >\n            <Translate\n              id=\"react.default.button.availableDraft.label\"\n              defaultMessage=\"Available draft\"\n            />\n          </button>\n        )}\n      </>\n    ),\n    fields: {\n      product: {\n        fieldKey: \"disabled\",\n        type: ProductSelectField,\n        label: \"react.stockMovement.requestedProduct.label\",\n        defaultMessage: \"Requested product\",\n        headerAlign: \"left\",\n        flexWidth: \"9\",\n        attributes: {\n          showSelectedOptionColor: true,\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          rowCount,\n          newItem,\n          originId,\n          focusField,\n        }) => ({\n          disabled: !!fieldValue,\n          autoFocus: newItem && rowIndex === rowCount - 1,\n          locationId: originId,\n          onExactProductSelected: ({ product }) => {\n            if (focusField && product) {\n              focusField(rowIndex, \"quantityRequested\");\n            }\n          },\n        }),\n      },\n      quantityAllowed: {\n        type: LabelField,\n        label: \"react.stockMovement.maxQuantity.label\",\n        defaultMessage: \"Max Qty\",\n        flexWidth: \"1.7\",\n        attributes: {\n          type: \"number\",\n        },\n      },\n      quantityRequested: {\n        type: TextField,\n        label: \"react.stockMovement.neededQuantity.label\",\n        defaultMessage: \"Needed Qty\",\n        flexWidth: \"1.7\",\n        attributes: {\n          type: \"number\",\n        },\n        getDynamicAttr: ({\n          addRow,\n          rowCount,\n          rowIndex,\n          getSortOrder,\n          updateTotalCount,\n          updateRow,\n          values,\n          saveProgress,\n        }) => ({\n          disabled:\n            values.lineItems[rowIndex]?.rowSaveStatus === RowSaveStatus.SAVING,\n          onTabPress:\n            rowCount === rowIndex + 1\n              ? () => {\n                  updateTotalCount(1);\n                  addRow({\n                    sortOrder: getSortOrder(),\n                    rowSaveStatus: RowSaveStatus.PENDING,\n                  });\n                }\n              : null,\n          arrowRight:\n            rowCount === rowIndex + 1\n              ? () => {\n                  updateTotalCount(1);\n                  addRow({\n                    sortOrder: getSortOrder(),\n                    rowSaveStatus: RowSaveStatus.PENDING,\n                  });\n                }\n              : null,\n          arrowDown:\n            rowCount === rowIndex + 1\n              ? () => () => {\n                  updateTotalCount(1);\n                  addRow({\n                    sortOrder: getSortOrder(),\n                    rowSaveStatus: RowSaveStatus.PENDING,\n                  });\n                }\n              : null,\n          onBlur: () => {\n            updateRow(values, rowIndex);\n            saveProgress({ values });\n          },\n          onChange: (event) => {\n            saveProgress({\n              values,\n              rowIndex,\n              fieldValue: {\n                ...values.lineItems[rowIndex],\n                quantityRequested: event,\n              },\n            });\n          },\n        }),\n      },\n      deleteButton: DELETE_BUTTON_FIELD,\n    },\n  },\n};\n\n// This variable is an indicator\n// if action is in progress to avoid\n// triggering the same transaction twice\n// for example triggering save button during the autosave\nlet actionInProgress = false;\n\n/**\n * The second step of stock movement where user can add items to stock list.\n * This component supports three different cases: with or without stocklist\n * when movement is from a depot and when movement is from a vendor.\n */\nclass AddItemsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentLineItems: [],\n      sortOrder: 0,\n      values: { ...this.props.initialValues, lineItems: [] },\n      newItem: false,\n      totalCount: 0,\n      isFirstPageLoaded: false,\n      isDraftAvailable: false,\n    };\n\n    this.props.showSpinner();\n    this.removeItem = this.removeItem.bind(this);\n    this.importTemplate = this.importTemplate.bind(this);\n    this.getSortOrder = this.getSortOrder.bind(this);\n    this.confirmSave = this.confirmSave.bind(this);\n    this.confirmTransition = this.confirmTransition.bind(this);\n    this.newItemAdded = this.newItemAdded.bind(this);\n    this.validate = this.validate.bind(this);\n    this.isRowLoaded = this.isRowLoaded.bind(this);\n    this.loadMoreRows = this.loadMoreRows.bind(this);\n    this.updateTotalCount = this.updateTotalCount.bind(this);\n    this.updateRow = this.updateRow.bind(this);\n    this.getStockMovementDraft = this.getStockMovementDraft.bind(this);\n    this.transitionToNextStep = this.transitionToNextStep.bind(this);\n    this.saveAndTransitionToNextStep =\n      this.saveAndTransitionToNextStep.bind(this);\n    this.didUserConfirmAlert = false;\n    this.debouncedSave = _.debounce(() => {\n      this.saveRequisitionItemsInCurrentStep(\n        this.state.values.lineItems,\n        false,\n      );\n    }, 1000);\n    this.requestsQueue = requestsQueue();\n  }\n\n  componentDidMount() {\n    if (this.props.stockMovementTranslationsFetched) {\n      this.dataFetched = true;\n      this.fetchAllData();\n    }\n    const { bars } = this.props;\n    // If the feature bar has not yet been triggered, try to add it to the redux store\n    if (shouldCreateFullOutboundImportFeatureBar(bars)) {\n      this.props.createInfoBar(InfoBarConfigs[InfoBar.FULL_OUTBOUND_IMPORT]);\n    }\n    // If the feature bar has not yet been closed by the user, show it\n    if (shouldShowFullOutboundImportFeatureBar(bars)) {\n      this.props.showInfoBar(InfoBar.FULL_OUTBOUND_IMPORT);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.stockMovementTranslationsFetched && !this.dataFetched) {\n      this.dataFetched = true;\n\n      this.fetchAllData();\n    }\n  }\n\n  componentWillUnmount() {\n    // We want to hide the feature bar when unmounting the component\n    // not to show it on any other page\n    this.props.hideInfoBar(InfoBar.FULL_OUTBOUND_IMPORT);\n  }\n\n  /**\n   * Returns proper fields depending on origin type or if stock list is chosen.\n   * @public\n   */\n  getFields() {\n    const fields = _.get(this.state.values.stocklist, \"id\")\n      ? STOCKLIST_FIELDS\n      : NO_STOCKLIST_FIELDS;\n    const fieldsWithRowSaveIcon = {\n      lineItems: {\n        ...fields.lineItems,\n        fields: {\n          ...fields.lineItems.fields,\n          rowSaveStatus: ROW_SAVE_ICON_FIELD,\n        },\n      },\n    };\n    return this.props.isAutosaveEnabled ? fieldsWithRowSaveIcon : fields;\n  }\n\n  /**\n   * Returns an array of new stock movement's items and items to be\n   * updated (comparing to previous state of line items).\n   * @param {object} lineItems\n   * @public\n   */\n\n  getLineItemsToBeSaved(lineItems) {\n    const lineItemsToBeAdded = _.filter(\n      lineItems,\n      (item) =>\n        !item.statusCode &&\n        parseInt(item.quantityRequested, 10) > 0 &&\n        item.product,\n    );\n    const lineItemsWithStatus = _.filter(lineItems, (item) => item.statusCode);\n    const lineItemsToBeUpdated = [];\n    _.forEach(lineItemsWithStatus, (item) => {\n      // We wouldn't update items with quantity requested < 0\n      if (\n        (item.quantityRequested !== 0 && !item.quantityRequested) ||\n        parseInt(item.quantityRequested, 10) < 0\n      ) {\n        return; // lodash continue\n      }\n      const oldItem = _.find(\n        this.state.currentLineItems,\n        (old) => old.id === item.id,\n      );\n      const oldQty = parseInt(oldItem?.quantityRequested, 10);\n      const newQty = parseInt(item?.quantityRequested, 10);\n      const oldRecipient =\n        oldItem?.recipient && _.isObject(oldItem?.recipient)\n          ? oldItem?.recipient.id\n          : oldItem?.recipient;\n      const newRecipient =\n        item?.recipient && _.isObject(item?.recipient)\n          ? item?.recipient.id\n          : item?.recipient;\n\n      // Intersection of keys common to both objects (excluding product key)\n      const keyIntersection = _.remove(\n        _.intersection(_.keys(oldItem), _.keys(item)),\n        (key) => key !== \"product\",\n      );\n\n      if (\n        newQty === oldQty &&\n        newRecipient === oldRecipient &&\n        this.props.isAutosaveEnabled\n      ) {\n        this.setState((prev) => ({\n          values: {\n            ...prev.values,\n            lineItems: prev.values.lineItems.map((lineItem) => {\n              if (lineItem.id === item.id) {\n                return { ...lineItem, rowSaveStatus: RowSaveStatus.SAVED };\n              }\n              return lineItem;\n            }),\n          },\n        }));\n      }\n\n      // We want to delete items with 0 qty after first save using stock list\n      if (item.id && newQty === oldQty && oldQty === 0) {\n        lineItemsToBeUpdated.push(item);\n        return;\n      }\n\n      if (\n        (this.state.values.origin.type === \"SUPPLIER\" ||\n          !this.state.values.hasManageInventory) &&\n        (!_.isEqual(\n          _.pick(item, keyIntersection),\n          _.pick(oldItem, keyIntersection),\n        ) ||\n          item.product.id !== oldItem.product.id) &&\n        item.id\n      ) {\n        lineItemsToBeUpdated.push(item);\n      } else if (\n        (newQty !== oldQty || newRecipient !== oldRecipient) &&\n        item.id\n      ) {\n        lineItemsToBeUpdated.push(item);\n      }\n    });\n\n    const lineItemsToSave = [].concat(\n      _.map(lineItemsToBeAdded, (item) => ({\n        product: { id: item.product.id },\n        quantityRequested: item.quantityRequested,\n        recipient: {\n          id: _.isObject(item.recipient)\n            ? item.recipient.id || \"\"\n            : item.recipient || \"\",\n        },\n        sortOrder: item.sortOrder,\n      })),\n      _.map(lineItemsToBeUpdated, (item) => ({\n        id: item.id,\n        product: { id: item.product.id },\n        quantityRequested: item.quantityRequested,\n        recipient: {\n          id: _.isObject(item.recipient)\n            ? item.recipient.id || \"\"\n            : item.recipient || \"\",\n        },\n        sortOrder: item.sortOrder,\n      })),\n    );\n\n    if (this.props.isAutosaveEnabled && lineItemsToSave.length) {\n      // Here I am changing rowSaveStatus from PENDING to SAVING\n      // because all of these lines were sent to save\n      this.setState((previousState) => ({\n        values: {\n          ...previousState.values,\n          lineItems: previousState.values.lineItems.map((item) => {\n            if (\n              item.rowSaveStatus === RowSaveStatus.PENDING &&\n              item.product &&\n              item.quantityRequested\n            ) {\n              return { ...item, rowSaveStatus: RowSaveStatus.SAVING };\n            }\n            return item;\n          }),\n        },\n      }));\n    }\n\n    return lineItemsToSave;\n  }\n\n  getSortOrder() {\n    this.setState((prev) => ({\n      sortOrder: prev.sortOrder + 100,\n    }));\n\n    return this.state.sortOrder;\n  }\n\n  setLineItems(response, startIndex) {\n    const { data } = response.data;\n    const lineItemsData = data.length\n      ? _.map(data, (val) => ({ ...val, disabled: true }))\n      : new Array(1).fill({\n          sortOrder: 100,\n          rowSaveStatus: RowSaveStatus.PENDING,\n        });\n    const sortOrder = _.toInteger(_.last(lineItemsData).sortOrder) + 100;\n    // check if stock list has items with qty 0\n    if (\n      this.props.isAutosaveEnabled &&\n      _.get(this.state.values.stocklist, \"id\") &&\n      !this.state.isDraftAvailable\n    ) {\n      this.saveRequisitionItemsInCurrentStep(data, false);\n    }\n    this.setState(\n      (prev) => ({\n        currentLineItems:\n          startIndex !== null && this.props.isPaginated\n            ? _.uniqBy(_.concat(prev.currentLineItems, data), \"id\")\n            : data,\n        values: {\n          ...prev.values,\n          lineItems:\n            startIndex !== null && this.props.isPaginated\n              ? _.uniqBy(_.concat(prev.values.lineItems, lineItemsData), \"id\")\n              : lineItemsData,\n        },\n        sortOrder,\n      }),\n      () => {\n        if (\n          !_.isNull(startIndex) &&\n          this.state.values.lineItems.length !== this.state.totalCount\n        ) {\n          this.loadMoreRows({ startIndex: startIndex + this.props.pageSize });\n        }\n        this.props.hideSpinner();\n      },\n    );\n  }\n\n  getStockMovementDraft() {\n    this.setState((prev) => ({\n      values: {\n        ...prev.values,\n        lineItems: this.props.savedStockMovement.lineItems.map((item) => ({\n          ...item,\n          rowSaveStatus: RowSaveStatus.PENDING,\n        })),\n      },\n      totalCount: this.props.savedStockMovement.lineItems.length,\n      isDraftAvailable: false,\n    }));\n    this.saveRequisitionItemsInCurrentStep(\n      this.props.savedStockMovement.lineItems,\n      true,\n    );\n    this.props.hideSpinner();\n  }\n\n  updateTotalCount(value) {\n    this.setState((prev) => ({\n      totalCount: prev.totalCount + value === 0 ? 1 : prev.totalCount + value,\n    }));\n  }\n\n  dataFetched = false;\n\n  validate(values) {\n    const errors = {};\n    errors.lineItems = [];\n    const date = moment(this.props.minimumExpirationDate, \"MM/DD/YYYY\");\n\n    _.forEach(values.lineItems, (item, key) => {\n      if (\n        !_.isNil(item.product) &&\n        ((item.quantityRequested !== 0 && !item.quantityRequested) ||\n          item?.quantityRequested < 0)\n      ) {\n        errors.lineItems[key] = {\n          quantityRequested: \"react.stockMovement.error.enterQuantity.label\",\n        };\n      }\n      if (!_.isEmpty(item.boxName) && _.isEmpty(item.palletName)) {\n        errors.lineItems[key] = {\n          boxName: \"react.stockMovement.error.boxWithoutPallet.label\",\n        };\n      }\n      const dateRequested = moment(item.expirationDate, \"MM/DD/YYYY\");\n      if (date.diff(dateRequested) > 0) {\n        errors.lineItems[key] = {\n          expirationDate: \"react.stockMovement.error.invalidDate.label\",\n        };\n      }\n    });\n    return errors;\n  }\n\n  updateRow(values, index) {\n    const item = values.lineItems[index];\n    this.setState({\n      values: update(values, {\n        lineItems: { [index]: { $set: item } },\n      }),\n    });\n  }\n\n  newItemAdded() {\n    this.setState({\n      newItem: true,\n    });\n  }\n\n  /**\n   * Shows save confirmation dialog.\n   * @param {function} onConfirm\n   * @public\n   */\n  confirmSave(onConfirm) {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.message.confirmSave.label\",\n        \"Confirm save\",\n      ),\n      message: this.props.translate(\n        \"react.stockMovement.confirmSave.message\",\n        \"Are you sure you want to save? There are some lines with empty or zero quantity, those lines will be deleted.\",\n      ),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: () => {\n            this.didUserConfirmAlert = true;\n          },\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n      afterClose: () => {\n        if (this.didUserConfirmAlert) {\n          onConfirm();\n          this.didUserConfirmAlert = false;\n        }\n      },\n    });\n  }\n\n  /**\n   * Shows transition confirmation dialog if there are items with the same code.\n   * @param {function} onConfirm\n   * @param {object} items\n   * @public\n   */\n  confirmTransition(onConfirm, items) {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.confirmTransition.label\",\n        \"You have entered the same code twice. Do you want to continue?\",\n      ),\n      message: _.map(items, (item) => (\n        <p key={item.sortOrder}>\n          {`${item.product.productCode} ${item.product.displayNames?.default || item.product.name} ${item.quantityRequested}`}\n        </p>\n      )),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: onConfirm,\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  }\n\n  /**\n   * Fetches all required data.\n   * @public\n   */\n  fetchAllData() {\n    this.props.fetchUsers();\n    this.fetchAddItemsPageData();\n    if (!this.props.isPaginated) {\n      this.fetchLineItems();\n    }\n  }\n\n  /**\n   * Fetches 2nd step data from current stock movement.\n   * @public\n   */\n  fetchLineItems() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?stepNumber=2`;\n\n    return apiClient\n      .get(url)\n      .then((response) => {\n        this.setState(\n          {\n            totalCount: response.data.data.length || 1,\n          },\n          () => this.setLineItems(response, null),\n        );\n      })\n      .catch((err) => err);\n  }\n\n  /**\n   * Fetches stock movement's line items and sets them in redux form and in\n   * state as current line items.\n   * @public\n   */\n  fetchAddItemsPageData() {\n    this.props.showSpinner();\n    const {\n      lastUpdated: lastSaved,\n      statusCode: savedStatusCode,\n      id,\n    } = this.props.savedStockMovement;\n    const { stockMovementId } = this.state.values;\n\n    const url = `/api/stockMovements/${stockMovementId}`;\n    apiClient.get(url).then((resp) => {\n      const { hasManageInventory, statusCode, lastUpdated } = resp.data.data;\n      const { totalCount } = resp.data;\n      // if data from backend is older than the version from local storage\n      // we want to allow users use their version\n      const isDraftAvailable =\n        this.props.isAutosaveEnabled &&\n        stockMovementId === id &&\n        lastUpdated < lastSaved &&\n        savedStatusCode === statusCode;\n\n      this.setState(\n        (prev) => ({\n          values: {\n            ...prev.values,\n            hasManageInventory,\n            statusCode,\n          },\n          totalCount: totalCount === 0 ? 1 : totalCount,\n          isDraftAvailable,\n        }),\n        () => this.props.hideSpinner(),\n      );\n    });\n  }\n\n  loadMoreRows({ startIndex }) {\n    this.setState({\n      isFirstPageLoaded: true,\n    });\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?offset=${startIndex}&max=${this.props.pageSize}&stepNumber=2`;\n    apiClient.get(url).then((response) => {\n      this.setLineItems(response, startIndex);\n    });\n  }\n\n  /**\n   * Saves current stock movement progress (line items) and goes to the next stock movement step.\n   * @param {object} formValues\n   * @public\n   */\n  nextPage(formValues) {\n    const lineItems = _.filter(\n      formValues.lineItems,\n      (val) => !_.isEmpty(val) && val.product,\n    );\n\n    if (\n      _.some(\n        lineItems,\n        (item) => !item.quantityRequested || item.quantityRequested === \"0\",\n      )\n    ) {\n      this.confirmSave(() =>\n        this.checkDuplicatesAndTransitionToNextStep(lineItems, formValues),\n      );\n    } else {\n      this.checkDuplicatesAndTransitionToNextStep(lineItems, formValues);\n    }\n  }\n\n  checkDuplicatesAndTransitionToNextStep(lineItems, formValues) {\n    const transitionFunction = this.props.isAutosaveEnabled\n      ? this.transitionToNextStep\n      : this.saveAndTransitionToNextStep;\n    const itemsMap = {};\n    _.forEach(lineItems, (item) => {\n      if (parseInt(item.quantityRequested, 10) === 0) {\n        return;\n      }\n      if (itemsMap[item.product.productCode]) {\n        itemsMap[item.product.productCode].push(item);\n      } else {\n        itemsMap[item.product.productCode] = [item];\n      }\n    });\n    const itemsWithSameCode = _.filter(itemsMap, (item) => item.length > 1);\n    if (\n      _.some(itemsMap, (item) => item.length > 1) &&\n      !(\n        this.state.values.origin.type === \"SUPPLIER\" ||\n        !this.state.values.hasManageInventory\n      )\n    ) {\n      this.confirmTransition(\n        () => transitionFunction(formValues, lineItems),\n        _.reduce(itemsWithSameCode, (a, b) => a.concat(b), []),\n      );\n    } else {\n      transitionFunction(formValues, lineItems);\n    }\n  }\n\n  saveAndTransitionToNextStep(formValues, lineItems) {\n    this.props.showSpinner();\n\n    this.saveRequisitionItems(lineItems)\n      .then((resp) => {\n        if (resp) {\n          this.transitionToNextStep({\n            values: { ...formValues, lineItems: resp.data.data.lineItems },\n          });\n          return;\n        }\n        this.transitionToNextStep({ values: formValues });\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Saves list of stock movement items with post method.\n   * @param {object} lineItems\n   * @public\n   */\n  saveRequisitionItems(lineItems) {\n    const itemsToSave = this.getLineItemsToBeSaved(lineItems);\n    const updateItemsUrl = `/api/stockMovements/${this.state.values.stockMovementId}/updateItems`;\n    const payload = {\n      id: this.state.values.stockMovementId,\n      lineItems: itemsToSave,\n    };\n\n    if (payload.lineItems.length) {\n      return apiClient\n        .post(updateItemsUrl, payload)\n        .catch(() =>\n          Promise.reject(\n            new Error(\"react.stockMovement.error.saveRequisitionItems.label\"),\n          ),\n        );\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Saves list of requisition items in current step (without step change). Used to export template.\n   * @param {object} itemCandidatesToSave\n   * @param {boolean} withStateChange\n   * @public\n   */\n  async saveRequisitionItemsInCurrentStep(\n    itemCandidatesToSave,\n    withStateChange = true,\n  ) {\n    // We filter out items which were already sent to save\n    const filteredCandidates = itemCandidatesToSave.filter(\n      (item) => item.rowSaveStatus !== RowSaveStatus.SAVING,\n    );\n    const itemsToSave = this.getLineItemsToBeSaved(filteredCandidates);\n    const updateItemsUrl = `/api/stockMovements/${this.state.values.stockMovementId}/updateItems`;\n    const payload = {\n      id: this.state.values.stockMovementId,\n      lineItems: itemsToSave,\n    };\n\n    if (payload.lineItems.length) {\n      if (!this.props.isOnline && this.props.isAutosaveEnabled) {\n        this.props.addStockMovementDraft({\n          lineItems: itemCandidatesToSave,\n          id: this.state.values.stockMovementId,\n          statusCode: this.state.values.statusCode,\n        });\n      }\n\n      const saveItemsRequest = (data) => () =>\n        apiClient\n          .post(updateItemsUrl, data)\n          .then((resp) => {\n            const { lineItems } = resp.data.data;\n            const lineItemsBackendData = _.map(lineItems, (val) => ({\n              ...val,\n              disabled: true,\n            }));\n            // In autosave, we don't modify the state, because\n            // lines which have not passed the validation will be\n            // deleted during users work\n            if (!withStateChange) {\n              // We want to disable saved line, so I am looking for product with the same\n              // code and quantity higher than 0 in response\n              // (to avoid disabling new line with the same productCode)\n\n              // TODO: Add new api endpoints in StockMovementItemApiController\n              // for POST and PUT (create and update) that returns only updated items data\n              // and separate autosave logic from save button logic\n              const savedItemsIds = data?.lineItems?.map((item) => item.id);\n              const backendResponseIds = lineItemsBackendData.map(\n                (item) => item.id,\n              );\n              const backendResponseProductCodes = lineItemsBackendData.map(\n                (item) => item.productCode,\n              );\n              // We are sending item by item to API. Here we have to find\n              // newly saved item to replace its equivalent in state\n              const itemToChange = _.last(\n                _.differenceBy(\n                  lineItemsBackendData,\n                  itemCandidatesToSave,\n                  \"id\",\n                ),\n              );\n              const lineItemsAfterSave = this.state.values.lineItems.map(\n                (item) => {\n                  if (\n                    parseInt(item.quantityRequested, 10) === 0 &&\n                    (item.rowSaveStatus === RowSaveStatus.SAVING ||\n                      item.rowSaveStatus === RowSaveStatus.SAVED ||\n                      !item.rowSaveStatus) &&\n                    _.includes(savedItemsIds, item.id)\n                  ) {\n                    return {\n                      ..._.omit(item, [\"id\", \"statusCode\"]),\n                      disabled: true,\n                      rowSaveStatus: RowSaveStatus.SAVED,\n                    };\n                  }\n                  // In this case we check if we're editing item\n                  // We don't have to disable edited item, because this\n                  // line is disabled by default\n                  const savedIds = item?.id\n                    ? savedItemsIds\n                    : backendResponseIds;\n                  if (\n                    _.includes(savedIds, item.id) &&\n                    item.rowSaveStatus !== RowSaveStatus.ERROR\n                  ) {\n                    const editedItem = lineItemsBackendData.find(\n                      (savedItem) => savedItem.id === item.id,\n                    );\n                    return {\n                      ...editedItem,\n                      rowSaveStatus: RowSaveStatus.SAVED,\n                    };\n                  }\n\n                  if (\n                    itemToChange &&\n                    _.includes(\n                      backendResponseProductCodes,\n                      item.product?.productCode,\n                    ) &&\n                    parseInt(item.quantityRequested, 10) > 0 &&\n                    item.rowSaveStatus === RowSaveStatus.SAVING\n                  ) {\n                    return {\n                      ...itemToChange,\n                      disabled: true,\n                      rowSaveStatus: RowSaveStatus.SAVED,\n                    };\n                  }\n\n                  return item;\n                },\n              );\n\n              this.setState((prev) => ({\n                values: { ...prev.values, lineItems: lineItemsAfterSave },\n                currentLineItems: lineItemsBackendData,\n              }));\n              return;\n            }\n\n            this.setState((prev) => ({\n              values: { ...prev.values, lineItems: lineItemsBackendData },\n              currentLineItems: lineItemsBackendData,\n            }));\n          })\n          .then(() => {\n            if (this.props.isAutosaveEnabled) {\n              // There is no need for creating draft\n              // if all of my items are saved correctly\n              // (it means that we have internet connection)\n              this.props.removeStockMovementDraft(\n                this.state.values.stockMovementId,\n              );\n            }\n          })\n          .catch(() => {\n            if (this.props.isAutosaveEnabled) {\n              // When there is an error during saving we have to find products which\n              // caused the error. These items are not saved, so we don't have line ID,\n              // and we have to find these items by product ID and SaveStatus\n              const notSavedItemsIds = payload.lineItems.map(\n                (item) => item.product.id,\n              );\n              const lineItemsWithErrors = this.state.values.lineItems.map(\n                (item) => {\n                  if (\n                    item.product &&\n                    item.rowSaveStatus === RowSaveStatus.SAVING &&\n                    _.includes(notSavedItemsIds, item.product.id)\n                  ) {\n                    return { ...item, rowSaveStatus: RowSaveStatus.ERROR };\n                  }\n                  return item;\n                },\n              );\n              this.setState((prev) => ({\n                values: {\n                  ...prev.values,\n                  lineItems: lineItemsWithErrors,\n                },\n              }));\n\n              if (!this.props.isOnline) {\n                // When there is an error, we are adding items to\n                // state for draft\n                this.props.addStockMovementDraft({\n                  lineItems: this.state.values.lineItems,\n                  id: this.state.values.stockMovementId,\n                  statusCode: this.state.values.statusCode,\n                });\n              }\n            }\n            return Promise.reject(\n              new Error(\n                this.props.translate(\n                  \"react.stockMovement.error.saveRequisitionItems.label\",\n                  \"Could not save requisition items\",\n                ),\n              ),\n            );\n          });\n\n      if (this.props.isAutosaveEnabled) {\n        this.requestsQueue.enqueueRequest(saveItemsRequest(payload));\n      } else {\n        await saveItemsRequest(payload)();\n      }\n    }\n\n    this.setState((previousState) => ({\n      values: {\n        ...previousState.values,\n        lineItems: previousState.values.lineItems.map((item) => {\n          if (parseInt(item.quantityRequested, 10) === 0 && !item?.id) {\n            return {\n              ...item,\n              disabled: true,\n              rowSaveStatus: RowSaveStatus.SAVED,\n            };\n          }\n          return item;\n        }),\n      },\n    }));\n\n    return Promise.resolve();\n  }\n\n  // if rowIndex is passed, it means that we are editing row\n  // not adding new one\n  saveProgress = ({ values, rowIndex, fieldValue, editAll }) => {\n    if (!this.props.isAutosaveEnabled) {\n      return;\n    }\n\n    if (actionInProgress) {\n      return;\n    }\n    // I can't check !!rowIndex, because it can be 0,\n    // so there is possibility to return false when the\n    // rowIndex is present\n    const isEdited = rowIndex !== undefined;\n    const itemsWithStatuses = values.lineItems.map((item) => {\n      if (editAll) {\n        return { ...item, rowSaveStatus: RowSaveStatus.PENDING };\n      }\n\n      if (isEdited && rowIndex === values.lineItems.indexOf(item)) {\n        return { ...fieldValue, rowSaveStatus: RowSaveStatus.PENDING };\n      }\n\n      if (\n        item.product &&\n        ((item.quantityRequested !== 0 && !item.quantityRequested) ||\n          parseInt(item.quantityRequested, 10) < 0)\n      ) {\n        return { ...item, rowSaveStatus: RowSaveStatus.ERROR };\n      }\n\n      return item;\n    });\n\n    this.setState({ values: { ...values, lineItems: itemsWithStatuses } });\n\n    // We don't want to save the item during editing or\n    // when there is an error in line\n    if (isEdited || editAll) {\n      this.debouncedSave();\n      return;\n    }\n\n    this.debouncedSave.cancel();\n\n    this.saveRequisitionItemsInCurrentStep(itemsWithStatuses, false);\n  };\n\n  /**\n   * Saves list of requisition items in current step (without step change).\n   * @param {object} formValues\n   * @public\n   */\n  save(formValues) {\n    actionInProgress = true;\n    const lineItems = _.filter(\n      formValues.lineItems,\n      (item) => !_.isEmpty(item),\n    );\n\n    if (\n      _.some(\n        lineItems,\n        (item) => !item.quantityRequested || item.quantityRequested === \"0\",\n      )\n    ) {\n      this.confirmSave(() => {\n        this.saveItems(lineItems);\n      });\n    } else {\n      this.saveItems(lineItems);\n    }\n  }\n\n  /**\n   * Saves changes made by user in this step and redirects to the shipment view page\n   * @param {object} formValues\n   * @public\n   */\n  saveAndExit(formValues) {\n    actionInProgress = true;\n    const errors = this.validate(formValues).lineItems;\n    if (!errors.length) {\n      this.saveRequisitionItemsInCurrentStep(formValues.lineItems).then(() => {\n        window.location = STOCK_MOVEMENT_URL.show(formValues.stockMovementId);\n      });\n    } else {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.confirmExit.label\",\n          \"Confirm save\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmExit.message\",\n          \"Validation errors occurred. Are you sure you want to exit and lose unsaved data?\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n            onClick: () => {\n              window.location = STOCK_MOVEMENT_URL.show(\n                formValues.stockMovementId,\n              );\n            },\n          },\n          {\n            label: this.props.translate(\"react.default.no.label\", \"No\"),\n          },\n        ],\n      });\n    }\n  }\n\n  /**\n   * Saves list of requisition items in current step (without step change).\n   * @param {object} lineItems\n   * @public\n   */\n  saveItems(lineItems) {\n    this.props.showSpinner();\n\n    this.saveRequisitionItemsInCurrentStep(lineItems)\n      .then(() => {\n        this.fetchLineItems();\n        this.props.removeStockMovementDraft(this.state.values.stockMovementId);\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.stockMovement.alert.saveSuccess.label\",\n            \"Changes saved successfully\",\n          ),\n          { timeout: 3000 },\n        );\n      })\n      .catch(() => this.props.hideSpinner())\n      .finally(() => {\n        actionInProgress = false;\n      });\n  }\n\n  /**\n   * Refetch the data, all not saved changes will be lost.\n   * @public\n   */\n  refresh() {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.message.confirmRefresh.label\",\n        \"Confirm refresh\",\n      ),\n      message: this.props.translate(\n        \"react.stockMovement.confirmRefresh.message\",\n        \"Are you sure you want to refresh? Your progress since last save will be lost.\",\n      ),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: () => this.fetchAllData(),\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  }\n\n  /**\n   * Removes chosen item from requisition's items list.\n   * @param {string} itemId\n   * @public\n   */\n  removeItem(itemId) {\n    const removeItemsUrl = `/api/stockMovementItems/${itemId}/removeItem`;\n    const payload = { stockMovementId: this.state.values.stockMovementId };\n\n    return apiClient\n      .delete(removeItemsUrl, { data: payload })\n      .then(() => {\n        if (!this.props.isOnline) {\n          this.props.addStockMovementDraft({\n            lineItems: this.state.values.lineItems,\n            id: this.state.values.stockMovementId,\n            statusCode: this.state.values.statusCode,\n          });\n        }\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n        return Promise.reject(\n          new Error(\"react.stockMovement.error.deleteRequisitionItem.label\"),\n        );\n      });\n  }\n\n  /**\n   * Removes all items from requisition's items list.\n   * @public\n   */\n  removeAll() {\n    actionInProgress = true;\n    const removeItemsUrl = `/api/stockMovements/${this.state.values.stockMovementId}/removeAllItems`;\n\n    return apiClient\n      .delete(removeItemsUrl)\n      .then(() => {\n        this.props.removeStockMovementDraft(this.state.values.stockMovementId);\n        this.setState((prev) => ({\n          totalCount: 1,\n          currentLineItems: [],\n          values: {\n            ...prev.values,\n            lineItems: new Array(1).fill({\n              sortOrder: 100,\n              rowSaveStatus: RowSaveStatus.PENDING,\n            }),\n          },\n        }));\n      })\n      .catch(() => {\n        this.fetchLineItems();\n        return Promise.reject(\n          new Error(\"react.stockMovement.error.deleteRequisitionItem.label\"),\n        );\n      })\n      .finally(() => {\n        actionInProgress = false;\n      });\n  }\n\n  /**\n   * Transition to next stock movement status:\n   * - 'CHECKING' if origin type is supplier.\n   * - 'VERIFYING' if origin type is other than supplier.\n   * @public\n   */\n  transitionToNextStep({ values }) {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/status`;\n    const payload = { status: \"REQUESTED\" };\n\n    this.props.showSpinner();\n    new Promise((resolve) => {\n      if (this.state.values.statusCode === \"CREATED\") {\n        resolve(apiClient.post(url, payload));\n      }\n      return resolve();\n    })\n      .then(this.props.nextPage(values || this.state.values))\n      .finally(this.props.hideSpinner());\n  }\n\n  /**\n   * Exports current state of stock movement's to csv file.\n   * @param {object} formValues\n   * @public\n   */\n  exportTemplate(formValues) {\n    const lineItems = _.filter(\n      formValues.lineItems,\n      (item) => !_.isEmpty(item),\n    );\n\n    this.saveItemsAndExportTemplate(formValues, lineItems);\n  }\n\n  isRowLoaded({ index }) {\n    return !!this.state.values.lineItems[index];\n  }\n\n  /**\n   * Exports current state of stock movement's to csv file.\n   * @param {object} formValues\n   * @param {object} lineItems\n   * @public\n   */\n  saveItemsAndExportTemplate(formValues, lineItems) {\n    this.props.showSpinner();\n\n    const { movementNumber, stockMovementId } = formValues;\n    const url = `/stockMovement/exportCsv/${stockMovementId}`;\n    this.saveRequisitionItemsInCurrentStep(lineItems).then(() => {\n      apiClient\n        .get(url, { responseType: \"blob\" })\n        .then((response) => {\n          fileDownload(\n            response.data,\n            `ItemList${movementNumber ? `-${movementNumber}` : \"\"}.csv`,\n            \"text/csv\",\n          );\n          this.props.hideSpinner();\n        })\n        .catch(() => this.props.hideSpinner());\n    });\n  }\n\n  showPendingSaveNotification() {\n    notification(NotificationType.INFO)({\n      message: this.props.translate(\n        \"react.notification.autosave.pending.label\",\n        \"Please wait while your line items are being saved.\",\n      ),\n    });\n  }\n\n  /**\n   * Imports chosen file to backend and then fetches line items.\n   * @param {object} event\n   * @public\n   */\n  importTemplate(event) {\n    this.props.showSpinner();\n    const formData = new FormData();\n    const file = event.target.files[0];\n    const { stockMovementId } = this.state.values;\n\n    formData.append(\"importFile\", file.slice(0, file.size, \"text/csv\"));\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n\n    const url = `/stockMovement/importCsv/${stockMovementId}`;\n\n    return apiClient\n      .post(url, formData, config)\n      .then(() => {\n        this.fetchLineItems();\n        if (_.isNil(_.last(this.state.values.lineItems).product)) {\n          this.setState((prev) => ({\n            values: {\n              ...prev.values,\n              lineItems: [],\n            },\n          }));\n        }\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n      });\n  }\n\n  /**\n   * Saves changes made by user in this step and go back to previous page\n   * @param {object} values\n   * @param {boolean} invalid\n   * @public\n   */\n  previousPage(values, invalid) {\n    if (!invalid) {\n      this.saveRequisitionItemsInCurrentStep(values.lineItems).then(() =>\n        this.props.previousPage(values),\n      );\n    } else {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.confirmPreviousPage.label\",\n          \"Validation error\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmPreviousPage.message.label\",\n          \"Cannot save due to validation error on page\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\n              \"react.stockMovement.confirmPreviousPage.correctError.label\",\n              \"Correct error\",\n            ),\n          },\n          {\n            label: this.props.translate(\n              \"react.stockMovement.confirmPreviousPage.continue.label\",\n              \"Continue (lose unsaved work)\",\n            ),\n            onClick: () => this.props.previousPage(values),\n          },\n        ],\n      });\n    }\n  }\n\n  render() {\n    const { showOnly } = this.props;\n\n    return (\n      <>\n        <Form\n          onSubmit={() => {}}\n          validate={this.validate}\n          mutators={{\n            ...arrayMutators,\n            setColumnValue,\n          }}\n          initialValues={this.state.values}\n          render={({ handleSubmit, values, invalid, form: { mutators } }) => (\n            <div className=\"d-flex flex-column\">\n              {!showOnly ? (\n                <span className=\"buttons-container\">\n                  <label\n                    htmlFor=\"csvInput\"\n                    className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n                  >\n                    <span>\n                      <i className=\"fa fa-download pr-2\" />\n                      <Translate\n                        id=\"react.default.button.importTemplate.label\"\n                        defaultMessage=\"Import template\"\n                      />\n                    </span>\n                    <input\n                      id=\"csvInput\"\n                      type=\"file\"\n                      style={{ display: \"none\" }}\n                      onChange={this.importTemplate}\n                      onClick={(event) => {\n                        // eslint-disable-next-line no-param-reassign\n                        event.target.value = null;\n                      }}\n                      accept=\".csv\"\n                    />\n                  </label>\n                  <button\n                    type=\"button\"\n                    onClick={() => this.exportTemplate(values)}\n                    className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n                  >\n                    <span>\n                      <i className=\"fa fa-upload pr-2\" />\n                      <Translate\n                        id=\"react.default.button.exportTemplate.label\"\n                        defaultMessage=\"Export template\"\n                      />\n                    </span>\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => this.refresh()}\n                    className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n                  >\n                    <span>\n                      <i className=\"fa fa-refresh pr-2\" />\n                      <Translate\n                        id=\"react.default.button.refresh.label\"\n                        defaultMessage=\"Reload\"\n                      />\n                    </span>\n                  </button>\n                  <button\n                    type=\"button\"\n                    disabled={invalid}\n                    onClick={() => this.removeAll()}\n                    className=\"float-right mb-1 btn btn-outline-danger align-self-end ml-1 btn-xs\"\n                  >\n                    <span>\n                      <i className=\"fa fa-remove pr-2\" />\n                      <Translate\n                        id=\"react.default.button.deleteAll.label\"\n                        defaultMessage=\"Delete all\"\n                      />\n                    </span>\n                  </button>\n                  <button\n                    type=\"button\"\n                    disabled={invalid}\n                    // onClick -> onMouseDown (see comment for DELETE_BUTTON_FIELD)\n                    onMouseDown={() => this.save(values)}\n                    className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n                  >\n                    <span className=\"saving-button\">\n                      {_.some(\n                        values.lineItems,\n                        (item) => item.rowSaveStatus === RowSaveStatus.SAVING,\n                      ) ? (\n                        <Spinner />\n                      ) : (\n                        <i className=\"fa fa-save pr-2\" />\n                      )}\n                      <Translate\n                        id=\"react.default.button.save.label\"\n                        defaultMessage=\"Save\"\n                      />\n                    </span>\n                  </button>\n                  <button\n                    type=\"button\"\n                    disabled={invalid}\n                    // onClick -> onMouseDown (see comment for DELETE_BUTTON_FIELD)\n                    onMouseDown={() => this.saveAndExit(values)}\n                    className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-1 btn-xs\"\n                  >\n                    <span>\n                      <i className=\"fa fa-sign-out pr-2\" />\n                      <Translate\n                        id=\"react.default.button.saveAndExit.label\"\n                        defaultMessage=\"Save and exit\"\n                      />\n                    </span>\n                  </button>\n                </span>\n              ) : (\n                <button\n                  type=\"button\"\n                  disabled={invalid}\n                  onClick={() => {\n                    this.props.history(STOCK_MOVEMENT_URL.listOutbound());\n                  }}\n                  className=\"float-right mb-1 btn btn-outline-danger align-self-end btn-xs mr-2\"\n                >\n                  <span>\n                    <i className=\"fa fa-sign-out pr-2\" />\n                    <Translate\n                      id=\"react.default.button.exit.label\"\n                      defaultMessage=\"Exit\"\n                    />\n                  </span>\n                </button>\n              )}\n              <form onSubmit={handleSubmit}>\n                <div className=\"table-form\">\n                  {_.map(this.getFields(), (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName, {\n                      stocklist: values.stocklist,\n                      recipients: this.props.recipients,\n                      removeItem: this.removeItem,\n                      originId: this.props.initialValues.origin.id,\n                      getSortOrder: this.getSortOrder,\n                      newItemAdded: this.newItemAdded,\n                      newItem: this.state.newItem,\n                      totalCount: this.state.totalCount,\n                      loadMoreRows: this.loadMoreRows,\n                      isRowLoaded: this.isRowLoaded,\n                      updateTotalCount: this.updateTotalCount,\n                      isPaginated: this.props.isPaginated,\n                      isFromOrder: this.state.values.isFromOrder,\n                      showOnly,\n                      updateRow: this.updateRow,\n                      values,\n                      isFirstPageLoaded: this.state.isFirstPageLoaded,\n                      saveProgress: this.saveProgress,\n                      getStockMovementDraft: this.getStockMovementDraft,\n                      isDraftAvailable: this.state.isDraftAvailable,\n                      isAutosaveEnabled: this.props.isAutosaveEnabled,\n                      setRecipientValue: (val) =>\n                        mutators.setColumnValue(\"lineItems\", \"recipient\", val),\n                      translate: this.props.translate,\n                    }),\n                  )}\n                </div>\n                <div className=\"submit-buttons\">\n                  <button\n                    type=\"button\"\n                    disabled={\n                      invalid ||\n                      showOnly ||\n                      _.some(\n                        values.lineItems,\n                        (item) => item.quantityRequested < 0,\n                      )\n                    }\n                    // onClick -> onMouseDown (see comment for DELETE_BUTTON_FIELD)\n                    onMouseDown={() => {\n                      if (\n                        this.props.isAutosaveEnabled &&\n                        _.some(\n                          values.lineItems,\n                          (lineItem) =>\n                            (lineItem.rowSaveStatus === RowSaveStatus.PENDING ||\n                              lineItem.rowSaveStatus ===\n                                RowSaveStatus.SAVING) &&\n                            lineItem.product,\n                        )\n                      ) {\n                        this.showPendingSaveNotification();\n                        return;\n                      }\n                      this.previousPage(values, invalid);\n                    }}\n                    className=\"btn btn-outline-primary btn-form btn-xs\"\n                  >\n                    <Translate\n                      id=\"react.default.button.previous.label\"\n                      defaultMessage=\"Previous\"\n                    />\n                  </button>\n                  <button\n                    type=\"submit\"\n                    // onClick -> onMouseDown (see comment for DELETE_BUTTON_FIELD)\n                    onMouseDown={() => {\n                      if (\n                        this.props.isAutosaveEnabled &&\n                        _.some(\n                          values.lineItems,\n                          (lineItem) =>\n                            lineItem.rowSaveStatus === RowSaveStatus.PENDING ||\n                            lineItem.rowSaveStatus === RowSaveStatus.SAVING,\n                        )\n                      ) {\n                        this.showPendingSaveNotification();\n                        return;\n                      }\n                      if (!invalid) {\n                        this.nextPage(values);\n                      }\n                    }}\n                    className=\"btn btn-outline-primary btn-form float-right btn-xs\"\n                    disabled={\n                      values.lineItems.length === 0 ||\n                      (values.lineItems.length === 1 &&\n                        !(\"product\" in values.lineItems[0])) ||\n                      invalid ||\n                      showOnly ||\n                      _.some(\n                        values.lineItems,\n                        (item) => item.quantityRequested < 0,\n                      ) ||\n                      _.every(\n                        values.lineItems,\n                        (item) => parseInt(item.quantityRequested, 10) === 0,\n                      )\n                    }\n                  >\n                    <Translate\n                      id=\"react.default.button.next.label\"\n                      defaultMessage=\"Next\"\n                    />\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  recipients: state.users.data,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  minimumExpirationDate: state.session.minimumExpirationDate,\n  hasPackingSupport: state.session.currentLocation.hasPackingSupport,\n  isPaginated: state.session.isPaginated,\n  pageSize: state.session.pageSize,\n  savedStockMovement: state.stockMovementDraft[ownProps.initialValues.id],\n  isOnline: state.connection.online,\n  isAutosaveEnabled: state.session.isAutosaveEnabled,\n  supportedActivities: state.session.supportedActivities,\n  bars: state.infoBar.bars,\n});\n\nconst mapDispatchToProps = {\n  showSpinner,\n  hideSpinner,\n  fetchUsers,\n  addStockMovementDraft,\n  removeStockMovementDraft,\n  createInfoBar,\n  hideInfoBar,\n  closeInfoBar,\n  showInfoBar,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItemsPage);\n\nAddItemsPage.propTypes = {\n  /** Initial component's data */\n  initialValues: PropTypes.shape({\n    origin: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n    hasManageInventory: PropTypes.bool,\n  }).isRequired,\n  /** Function returning user to the previous page */\n  previousPage: PropTypes.func.isRequired,\n  /**\n   * Function called with the form data when the handleSubmit()\n   * is fired from within the form component.\n   */\n  nextPage: PropTypes.func.isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  /** Function fetching users */\n  fetchUsers: PropTypes.func.isRequired,\n  /** Array of available recipients  */\n  recipients: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  translate: PropTypes.func.isRequired,\n  stockMovementTranslationsFetched: PropTypes.bool.isRequired,\n  minimumExpirationDate: PropTypes.string.isRequired,\n  /** Return true if pagination is enabled */\n  isPaginated: PropTypes.bool.isRequired,\n  /** Return true if show only */\n  showOnly: PropTypes.bool,\n  pageSize: PropTypes.number.isRequired,\n  addStockMovementDraft: PropTypes.func.isRequired,\n  removeStockMovementDraft: PropTypes.func.isRequired,\n  savedStockMovement: PropTypes.shape({\n    id: PropTypes.string,\n    lineItems: PropTypes.arrayOf(PropTypes.shape({})),\n    lastUpdated: PropTypes.string,\n    statusCode: null,\n  }),\n  isOnline: PropTypes.bool,\n  isAutosaveEnabled: PropTypes.bool,\n  createInfoBar: PropTypes.func.isRequired,\n  bars: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      show: PropTypes.bool.isRequired,\n      closed: PropTypes.bool,\n      title: PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        defaultLabel: PropTypes.string.isRequired,\n      }),\n      versionLabel: PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        defaultLabel: PropTypes.string.isRequired,\n      }),\n    }),\n  ).isRequired,\n  showInfoBar: PropTypes.func.isRequired,\n  hideInfoBar: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nAddItemsPage.defaultProps = {\n  showOnly: false,\n  savedStockMovement: {\n    id: null,\n    lineItems: [],\n    lastUpdated: null,\n    statusCode: null,\n  },\n  isOnline: true,\n  isAutosaveEnabled: false,\n};\n","import { TaskQueue } from 'cwait';\n\nconst MAX_SIMULTANEOUS_REQUESTS = 1;\n\nconst requestsQueue = () => {\n  const queue = new TaskQueue(Promise, MAX_SIMULTANEOUS_REQUESTS);\n\n  // when tasks amount is equal to MAX_SIMULTANEOUS_REQUESTS\n  // then the requests are processed automatically,\n  // so we don't have to start processing manually\n  const enqueueRequest = (request) => {\n    queue.add(request);\n  };\n\n  return {\n    enqueueRequest,\n  };\n};\n\nexport default requestsQueue;\n","import React, { Component } from \"react\";\n\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport Modal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Alert from \"react-s-alert\";\n\nimport {\n  fetchLocationTypes,\n  fetchTranslations,\n  hideSpinner,\n  showSpinner,\n} from \"actions\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TextField from \"components/form-elements/TextField\";\nimport ActivityCode from \"consts/activityCode\";\nimport apiClient, { flattenRequest } from \"utils/apiClient\";\nimport { renderFormField } from \"utils/form-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\nimport splitTranslation from \"utils/translation-utils\";\n\nimport \"components/locations-configuration/modals/ConfigurationModal.scss\";\nimport \"./AddDestinationModal.scss\";\n\nfunction validate(values) {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"react.default.error.requiredField.label\";\n  }\n\n  if (!values.locationType) {\n    errors.locationType = \"react.default.error.requiredField.label\";\n  }\n\n  // \"address\" field is required when any of these fields are not empty\n  const addressFields = [\n    \"address\",\n    \"address2\",\n    \"city\",\n    \"stateOrProvince\",\n    \"postalCode\",\n    \"country\",\n  ];\n  const hasAnyAddressFields = addressFields.reduce(\n    (acc, addressField) => acc || !!values[addressField],\n    false,\n  );\n  if (hasAnyAddressFields && !values.address) {\n    errors.address = \"react.default.error.requiredField.label\";\n  }\n  return errors;\n}\n\nconst FIELDS = {\n  name: {\n    type: TextField,\n    label: \"react.locationsConfiguration.name.label\",\n    defaultMessage: \"Name\",\n    attributes: {\n      required: true,\n    },\n  },\n  locationType: {\n    type: SelectField,\n    label: \"react.locationsConfiguration.locationType.label\",\n    defaultMessage: \"Location Type\",\n    attributes: {\n      className: \"multi-select location-select\",\n      required: true,\n      valueKey: \"id\",\n    },\n    getDynamicAttr: ({ locationTypes }) => ({\n      options: locationTypes,\n    }),\n  },\n};\n\nconst ADDRESS_FIELDS = {\n  address: {\n    type: TextField,\n    label: \"react.locationsConfiguration.address.street.label\",\n    defaultMessage: \"Street address\",\n  },\n  address2: {\n    type: TextField,\n    label: \"react.locationsConfiguration.address.street2.label\",\n    defaultMessage: \"Street address 2\",\n  },\n  city: {\n    type: TextField,\n    label: \"react.locationsConfiguration.address.city.label\",\n    defaultMessage: \"City\",\n  },\n  stateOrProvince: {\n    type: TextField,\n    label: \"react.locationsConfiguration.address.stateOrProvince.label\",\n    defaultMessage: \"State/Province\",\n  },\n  postalCode: {\n    type: TextField,\n    label: \"react.locationsConfiguration.address.postalCode.label\",\n    defaultMessage: \"Postal code\",\n  },\n  country: {\n    type: TextField,\n    label: \"react.locationsConfiguration.address.country.label\",\n    defaultMessage: \"Country\",\n  },\n};\n\nclass AddDestinationModal extends Component {\n  constructor(props) {\n    super(props);\n    this.mapToOptionsList = this.mapToOptionsList.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchLocationTypes({\n      params: { activityCode: ActivityCode.DYNAMIC_CREATION },\n    });\n  }\n\n  mapToOptionsList(list) {\n    return _.map(list, (locationType) => ({\n      ...locationType,\n      label: splitTranslation(locationType.name, this.props.locale),\n    }));\n  }\n\n  save(values) {\n    this.props.showSpinner();\n    const url = \"/api/locations?useDefaultActivities=true\";\n\n    const { name, locationType, ...address } = values;\n    const payload = { name, locationType: _.get(locationType, \"id\") || \"\" };\n\n    apiClient\n      .post(url, payload)\n      .then((response) => {\n        Alert.success(\n          this.props.translate(\n            \"react.stockMovement.success.createDestination.label\",\n            \"Destination was successfully created!\",\n          ),\n          { timeout: 3000 },\n        );\n        return response.data.data;\n      })\n      .then((destination) => {\n        this.props.onResponse(destination);\n\n        if (!_.isEmpty(address)) {\n          const addressUrl = `/api/locations/${destination.id}`;\n          return apiClient.post(addressUrl, flattenRequest({ address }));\n        }\n        return Promise.resolve();\n      })\n      .then(() => {\n        this.props.hideSpinner();\n        this.props.onClose();\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n        return Promise.reject(\n          new Error(\n            this.props.translate(\n              \"react.stockMovement.error.createDestination.label\",\n              \"Could not create destination\",\n            ),\n          ),\n        );\n      });\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n        className=\"modal-content\"\n        shouldCloseOnOverlayClick={false}\n      >\n        <div>\n          <h4>\n            <Translate\n              id=\"react.stockMovement.addDestination.label\"\n              defaultMessage=\"Add Destination\"\n            />\n          </h4>\n          <Form\n            onSubmit={(values) => this.save(values)}\n            validate={validate}\n            render={({ handleSubmit, values }) => (\n              <form id=\"modalForm\" onSubmit={handleSubmit}>\n                <div className=\"classic-form location-field-rows\">\n                  {_.map(FIELDS, (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName, {\n                      values,\n                      locationTypes: this.mapToOptionsList(\n                        this.props.locationTypes,\n                      ),\n                    }),\n                  )}\n                  {_.map(ADDRESS_FIELDS, (fieldConfig, fieldName) =>\n                    renderFormField(fieldConfig, fieldName),\n                  )}\n                </div>\n                <div className=\"btn-toolbar justify-content-between pt-3\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-primary ml-1\"\n                    onClick={() => this.props.onClose()}\n                  >\n                    <Translate\n                      id=\"react.default.button.cancel.label\"\n                      defaultMessage=\"Cancel\"\n                    />\n                  </button>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary align-self-end\"\n                  >\n                    <Translate\n                      id=\"react.default.button.save.label\"\n                      defaultMessage=\"Save\"\n                    />\n                  </button>\n                </div>\n              </form>\n            )}\n          />\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  locationTypes: state.location.locationTypes,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    showSpinner,\n    hideSpinner,\n    fetchTranslations,\n    fetchLocationTypes,\n  })(AddDestinationModal),\n);\n\nAddDestinationModal.propTypes = {\n  locale: PropTypes.string.isRequired,\n  hideSpinner: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onResponse: PropTypes.func.isRequired,\n  showSpinner: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  fetchLocationTypes: PropTypes.func.isRequired,\n  locationTypes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport update from \"immutability-helper\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n  closeInfoBar,\n  createInfoBar,\n  hideInfoBar,\n  hideSpinner,\n  showInfoBar,\n  showSpinner,\n} from \"actions\";\nimport DateField from \"components/form-elements/DateField\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TextField from \"components/form-elements/TextField\";\nimport AddDestinationModal from \"components/stock-movement-wizard/modals/AddDestinationModal\";\nimport { STOCK_MOVEMENT_URL } from \"consts/applicationUrls\";\nimport { InfoBar, InfoBarConfigs } from \"consts/infoBar\";\nimport apiClient from \"utils/apiClient\";\nimport {\n  shouldCreateFullOutboundImportFeatureBar,\n  shouldShowFullOutboundImportFeatureBar,\n} from \"utils/featureBarUtils\";\nimport { renderFormField } from \"utils/form-utils\";\nimport {\n  debounceLocationsFetch,\n  debouncePeopleFetch,\n} from \"utils/option-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nfunction validate(values) {\n  const errors = {};\n  if (!values.description) {\n    errors.description = \"react.default.error.requiredField.label\";\n  }\n  if (!values.origin) {\n    errors.origin = \"react.default.error.requiredField.label\";\n  }\n  if (!values.destination) {\n    errors.destination = \"react.default.error.requiredField.label\";\n  }\n  if (!values.requestedBy) {\n    errors.requestedBy = \"react.default.error.requiredField.label\";\n  }\n  if (!values.requestType) {\n    errors.requestType = \"react.default.error.requiredField.label\";\n  }\n  if (!values.dateRequested) {\n    errors.dateRequested = \"react.default.error.requiredField.label\";\n  } else {\n    const dateRequested = moment(values.dateRequested, \"MM/DD/YYYY\");\n    if (moment().diff(dateRequested) < 0) {\n      errors.dateRequested = \"react.stockMovement.error.futureDate.label\";\n    }\n  }\n  return errors;\n}\n\nconst FIELDS = {\n  description: {\n    type: TextField,\n    label: \"react.stockMovement.description.label\",\n    defaultMessage: \"Description\",\n    attributes: {\n      required: true,\n      autoFocus: true,\n    },\n  },\n  origin: {\n    type: SelectField,\n    label: \"react.stockMovement.origin.label\",\n    defaultMessage: \"Origin\",\n    attributes: {\n      required: true,\n      async: true,\n      showValueTooltip: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      options: [],\n      filterOptions: (options) => options,\n    },\n    getDynamicAttr: (props) => ({\n      loadOptions: props.debouncedLocationsFetch,\n      onChange: (value) => {\n        if (value && props.destination && props.destination.id) {\n          props.fetchStockLists(value, props.destination);\n        }\n      },\n      disabled: !props.isSuperuser,\n    }),\n  },\n  destination: {\n    type: SelectField,\n    label: \"react.stockMovement.destination.label\",\n    defaultMessage: \"Destination\",\n    attributes: {\n      createNewFromModal: true,\n      createNewFromModalLabel: \"react.stockMovement.addDestination.label\",\n      defaultMessage: \"Add Destination\",\n      required: true,\n      async: true,\n      showValueTooltip: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      options: [],\n      filterOptions: (options) => options,\n    },\n    getDynamicAttr: ({\n      debouncedLocationsFetch,\n      origin,\n      fetchStockLists,\n      openNewLocationModal,\n      locationTypes,\n    }) => ({\n      loadOptions: debouncedLocationsFetch,\n      newOptionModalOpen: openNewLocationModal,\n      createNewFromModal: !!locationTypes.length,\n      onChange: (value) => {\n        if (value && origin && origin.id) {\n          fetchStockLists(origin, value);\n        }\n      },\n    }),\n  },\n  requestedBy: {\n    type: SelectField,\n    label: \"react.stockMovement.requestedBy.label\",\n    defaultMessage: \"Requested by\",\n    attributes: {\n      async: true,\n      required: true,\n      showValueTooltip: true,\n      openOnClick: false,\n      autoload: false,\n      cache: false,\n      options: [],\n      labelKey: \"name\",\n      filterOptions: (options) => options,\n    },\n    getDynamicAttr: (props) => ({\n      loadOptions: props.debouncedPeopleFetch,\n    }),\n  },\n  dateRequested: {\n    type: DateField,\n    label: \"react.stockMovement.dateRequested.label\",\n    defaultMessage: \"Date requested\",\n    attributes: {\n      required: true,\n      localizeDate: true,\n      autoComplete: \"off\",\n    },\n  },\n  requestType: {\n    type: SelectField,\n    label: \"react.stockMovement.requestType.label\",\n    defaultMessage: \"Request type\",\n    attributes: {\n      required: true,\n      showValueTooltip: true,\n    },\n    getDynamicAttr: ({ requestTypes }) => ({\n      options: requestTypes,\n    }),\n  },\n  stocklist: {\n    label: \"react.stockMovement.stocklist.label\",\n    defaultMessage: \"Stocklist\",\n    type: SelectField,\n    getDynamicAttr: ({\n      origin,\n      destination,\n      stocklists,\n      setRequestType,\n      values,\n    }) => ({\n      disabled: !(origin && destination && origin.id && destination.id),\n      options: stocklists,\n      showValueTooltip: true,\n      valueKey: \"id\",\n      labelKey: \"name\",\n      onChange: (value) => {\n        if (value) {\n          setRequestType(values, value);\n        }\n      },\n    }),\n  },\n};\n\n/** The first step of stock movement where user can add all the basic information. */\nclass CreateStockMovement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stocklists: [],\n      setInitialValues: true,\n      values: this.props.initialValues,\n      requestTypes: [],\n      showDestinationModal: false,\n    };\n    this.fetchStockLists = this.fetchStockLists.bind(this);\n    this.setRequestType = this.setRequestType.bind(this);\n\n    this.debouncedPeopleFetch = debouncePeopleFetch(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n    );\n\n    this.debouncedLocationsFetch = debounceLocationsFetch(\n      this.props.debounceTime,\n      this.props.minSearchLength,\n    );\n\n    this.openAddDestinationModal = this.openAddDestinationModal.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.values.origin && this.state.values.destination) {\n      this.fetchStockLists(\n        this.state.values.origin,\n        this.state.values.destination,\n      );\n    }\n    this.fetchRequisitionTypes();\n\n    const { bars } = this.props;\n    // If the feature bar has not yet been triggered, try to add it to the redux store\n    if (shouldCreateFullOutboundImportFeatureBar(bars)) {\n      this.props.createInfoBar(InfoBarConfigs[InfoBar.FULL_OUTBOUND_IMPORT]);\n    }\n    // If the feature bar has not yet been closed by the user, show it\n    if (shouldShowFullOutboundImportFeatureBar(bars)) {\n      this.props.showInfoBar(InfoBar.FULL_OUTBOUND_IMPORT);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      !this.props.match.params.stockMovementId &&\n      this.state.setInitialValues &&\n      nextProps.location.id\n    ) {\n      this.setInitialValues(nextProps.location);\n    }\n  }\n\n  componentWillUnmount() {\n    // We want to hide the feature bar when unmounting the component\n    // not to show it on any other page\n    this.props.hideInfoBar(InfoBar.FULL_OUTBOUND_IMPORT);\n  }\n\n  setRequestType(values, stocklist) {\n    const { requestTypes } = this.state;\n    const requestType = _.find(requestTypes, (type) => type.value === \"STOCK\");\n\n    this.setState({\n      values: update(values, {\n        requestType: { $set: requestType },\n        stocklist: { $set: stocklist },\n      }),\n    });\n  }\n\n  setInitialValues(location) {\n    const { id, locationType, name } = location;\n\n    const values = {\n      origin: {\n        id,\n        type: locationType ? locationType.locationTypeCode : null,\n        name,\n        label: `${name} [${locationType ? locationType.description : null}]`,\n      },\n    };\n    this.setState({ values, setInitialValues: false });\n  }\n\n  openAddDestinationModal() {\n    this.setState({ showDestinationModal: true });\n  }\n\n  /**\n   * Fetches available shipment types from API.\n   * @public\n   */\n  fetchRequisitionTypes() {\n    const url = \"/api/getRequestTypes\";\n\n    return apiClient\n      .get(url)\n      .then((response) => {\n        const requestTypes = _.map(response.data.data, (type) => ({\n          value: type.id,\n          label: type.name,\n        }));\n\n        this.setState({ requestTypes }, () => this.props.hideSpinner());\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  checkStockMovementChange(newValues) {\n    const { origin, destination, stocklist } = this.props.initialValues;\n\n    const originLocs = newValues.origin && origin;\n    const isOldSupplier = origin && origin.type === \"SUPPLIER\";\n    const isNewSupplier = newValues.origin && newValues.type === \"SUPPLIER\";\n    const checkOrigin =\n      originLocs && (!isOldSupplier || (isOldSupplier && !isNewSupplier))\n        ? newValues.origin.id !== origin.id\n        : false;\n\n    const checkDest =\n      stocklist && newValues.destination && destination\n        ? newValues.destination.id !== destination.id\n        : false;\n    const checkStockList = newValues.stockMovementId\n      ? _.get(newValues.stocklist, \"id\", null) !== _.get(stocklist, \"id\", null)\n      : false;\n\n    return checkOrigin || checkDest || checkStockList;\n  }\n\n  /**\n   * Fetches available stock lists from API with given origin and destination.\n   * @param {object} origin\n   * @param {object} destination\n   * @param {function} clearStocklist\n   * @public\n   */\n  fetchStockLists(origin, destination, clearStocklist) {\n    this.props.showSpinner();\n    const url = `/api/stocklists?origin=${origin.id}&destination=${destination.id}`;\n\n    return apiClient\n      .get(url)\n      .then((response) => {\n        const stocklists = _.map(response.data.data, (stocklist) => ({\n          id: stocklist.id,\n          name: stocklist.name,\n          value: stocklist.id,\n          label: stocklist.name,\n        }));\n\n        const stocklistChanged = !_.find(\n          stocklists,\n          (item) => item.value.id === _.get(this.state.values, \"stocklist.id\"),\n        );\n\n        if (stocklistChanged && clearStocklist) {\n          clearStocklist();\n        }\n\n        this.setState({ stocklists }, () => this.props.hideSpinner());\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Creates or updates stock movement with given data\n   * @param {object} values\n   * @public\n   */\n  saveStockMovement(values) {\n    if (\n      values.origin &&\n      values.destination &&\n      values.requestedBy &&\n      values.dateRequested &&\n      values.description\n    ) {\n      this.props.showSpinner();\n\n      let stockMovementUrl = \"\";\n      if (values.stockMovementId) {\n        stockMovementUrl = `/api/stockMovements/${values.stockMovementId}/updateRequisition`;\n      } else {\n        stockMovementUrl = \"/api/stockMovements\";\n      }\n\n      const payload = {\n        name: \"\",\n        description: values.description,\n        dateRequested: values.dateRequested,\n        origin: { id: values.origin.id },\n        destination: { id: values.destination.id },\n        requestedBy: { id: values.requestedBy.id },\n        stocklist: { id: _.get(values.stocklist, \"id\") || \"\" },\n        requestType: values.requestType.value,\n      };\n\n      apiClient\n        .post(stockMovementUrl, payload)\n        .then((response) => {\n          if (response.data) {\n            const resp = response.data.data;\n            this.props.history.push(STOCK_MOVEMENT_URL.editOutbound(resp.id));\n            this.props.nextPage({\n              ...values,\n              stockMovementId: resp.id,\n              lineItems: resp.lineItems,\n              movementNumber: resp.identifier,\n              name: resp.name,\n              stocklist: resp.stocklist,\n              requestType: {\n                name: resp.requestType.name,\n                label: resp.requestType.name,\n              },\n            });\n          }\n        })\n        .catch(() => {\n          this.props.hideSpinner();\n          return Promise.reject(\n            new Error(\n              this.props.translate(\n                \"react.stockMovement.error.createStockMovement.label\",\n                \"Could not create stock movement\",\n              ),\n            ),\n          );\n        });\n    }\n  }\n\n  resetToInitialValues() {\n    this.setState(\n      {\n        values: {},\n      },\n      () =>\n        this.setState({\n          values: this.props.initialValues,\n        }),\n    );\n  }\n\n  /**\n   * Calls method creating or saving stock movement and moves user to the next page.\n   * @param {object} values\n   * @public\n   */\n  nextPage(values) {\n    const showModal = this.checkStockMovementChange(values);\n    if (!showModal) {\n      this.saveStockMovement(values);\n    } else {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.message.confirmChange.label\",\n          \"Confirm change\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmChange.message\",\n          \"Do you want to change stock movement data? Changing origin, destination or stock list can cause loss of your current work\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\"react.default.no.label\", \"No\"),\n            onClick: () => this.resetToInitialValues(),\n          },\n          {\n            label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n            onClick: () => this.saveStockMovement(values),\n          },\n        ],\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Form\n        onSubmit={(values) => this.nextPage(values)}\n        validate={validate}\n        initialValues={this.state.values}\n        mutators={{\n          clearStocklist: (args, state, utils) => {\n            utils.changeValue(state, \"stocklist\", () => null);\n          },\n          setDestinationValues: (\n            [{ id, name, locationType }],\n            state,\n            utils,\n          ) => {\n            const data = {\n              id,\n              value: id,\n              label: `${name} [${locationType ? locationType.description : null}]`,\n            };\n            utils.changeValue(state, \"destination\", () => data);\n          },\n        }}\n        render={({ form: { mutators }, handleSubmit, values }) => (\n          <>\n            <AddDestinationModal\n              isOpen={this.state.showDestinationModal}\n              onClose={() => this.setState({ showDestinationModal: false })}\n              onResponse={mutators.setDestinationValues}\n            />\n            <form onSubmit={handleSubmit}>\n              <div className=\"classic-form with-description\">\n                {_.map(FIELDS, (fieldConfig, fieldName) =>\n                  renderFormField(fieldConfig, fieldName, {\n                    stocklists: this.state.stocklists,\n                    fetchStockLists: (origin, destination) =>\n                      this.fetchStockLists(\n                        origin,\n                        destination,\n                        mutators.clearStocklist,\n                      ),\n                    origin: values.origin,\n                    destination: values.destination,\n                    isSuperuser: this.props.isSuperuser,\n                    debouncedPeopleFetch: this.debouncedPeopleFetch,\n                    debouncedLocationsFetch: this.debouncedLocationsFetch,\n                    requestTypes: this.state.requestTypes,\n                    setRequestType: this.setRequestType,\n                    openNewLocationModal: this.openAddDestinationModal,\n                    locationTypes: this.props.locationTypes,\n                    values,\n                  }),\n                )}\n              </div>\n              <div className=\"submit-buttons\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-outline-primary float-right btn-xs\"\n                >\n                  <Translate\n                    id=\"react.default.button.next.label\"\n                    defaultMessage=\"Next\"\n                  />\n                </button>\n              </div>\n            </form>\n          </>\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  location: state.session.currentLocation,\n  isSuperuser: state.session.isSuperuser,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  debounceTime: state.session.searchConfig.debounceTime,\n  minSearchLength: state.session.searchConfig.minSearchLength,\n  locationTypes: state.location.locationTypes,\n  bars: state.infoBar.bars,\n});\n\nconst mapDispatchToProps = {\n  showSpinner,\n  hideSpinner,\n  createInfoBar,\n  hideInfoBar,\n  closeInfoBar,\n  showInfoBar,\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CreateStockMovement),\n);\n\nCreateStockMovement.propTypes = {\n  /** React router's object which contains information about url varaiables and params */\n  match: PropTypes.shape({\n    params: PropTypes.shape({ stockMovementId: PropTypes.string }),\n  }).isRequired,\n  /** Initial component's data */\n  initialValues: PropTypes.shape({\n    origin: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n    destination: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n    stocklist: PropTypes.shape({}),\n  }).isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  /**\n   * Function called with the form data when the handleSubmit()\n   * is fired from within the form component.\n   */\n  nextPage: PropTypes.func.isRequired,\n  /** React router's object used to manage session history */\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  /** Current location */\n  location: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    locationType: PropTypes.shape({\n      description: PropTypes.string,\n      locationTypeCode: PropTypes.string,\n    }),\n  }).isRequired,\n  /** Return true if current user is superuser */\n  isSuperuser: PropTypes.bool.isRequired,\n  translate: PropTypes.func.isRequired,\n  debounceTime: PropTypes.number.isRequired,\n  minSearchLength: PropTypes.number.isRequired,\n  locationTypes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  createInfoBar: PropTypes.func.isRequired,\n  bars: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      show: PropTypes.bool.isRequired,\n      closed: PropTypes.bool,\n      title: PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        defaultLabel: PropTypes.string.isRequired,\n      }),\n      versionLabel: PropTypes.shape({\n        label: PropTypes.string.isRequired,\n        defaultLabel: PropTypes.string.isRequired,\n      }),\n    }),\n  ).isRequired,\n  showInfoBar: PropTypes.func.isRequired,\n  hideInfoBar: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport arrayMutators from \"final-form-arrays\";\nimport update from \"immutability-helper\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { Form } from \"react-final-form\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Alert from \"react-s-alert\";\n\nimport { fetchReasonCodes, hideSpinner, showSpinner } from \"actions\";\nimport ArrayField from \"components/form-elements/ArrayField\";\nimport ButtonField from \"components/form-elements/ButtonField\";\nimport FilterInput from \"components/form-elements/FilterInput\";\nimport LabelField from \"components/form-elements/LabelField\";\nimport SelectField from \"components/form-elements/SelectField\";\nimport TableRowWithSubfields from \"components/form-elements/TableRowWithSubfields\";\nimport TextField from \"components/form-elements/TextField\";\nimport DetailsModal from \"components/stock-movement-wizard/modals/DetailsModal\";\nimport SubstitutionsModal from \"components/stock-movement-wizard/modals/SubstitutionsModal\";\nimport { STOCK_MOVEMENT_URL } from \"consts/applicationUrls\";\nimport apiClient from \"utils/apiClient\";\nimport { renderFormField } from \"utils/form-utils\";\nimport {\n  formatProductDisplayName,\n  matchesProductCodeOrName,\n  showOutboundEditValidationErrors,\n} from \"utils/form-values-utils\";\nimport Translate, { translateWithDefaultMessage } from \"utils/Translate\";\n\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst BTN_CLASS_MAPPER = {\n  YES: \"btn btn-outline-success\",\n  NO: \"btn btn-outline-secondary\",\n  EARLIER: \"btn btn-outline-warning\",\n  HIDDEN: \"btn invisible\",\n};\n\nconst FIELDS = {\n  editPageItems: {\n    type: ArrayField,\n    arrowsNavigation: true,\n    virtualized: true,\n    totalCount: ({ totalCount }) => totalCount,\n    isRowLoaded: ({ isRowLoaded }) => isRowLoaded,\n    isFirstPageLoaded: ({ isFirstPageLoaded }) => isFirstPageLoaded,\n    loadMoreRows: ({ loadMoreRows }) => loadMoreRows(),\n    rowComponent: TableRowWithSubfields,\n    getDynamicRowAttr: ({\n      rowValues,\n      subfield,\n      showOnlyErroredItems,\n      itemFilter,\n    }) => {\n      let className =\n        rowValues.statusCode === \"SUBSTITUTED\" ? \"crossed-out \" : \"\";\n      if (rowValues.quantityAvailable < rowValues.quantityRequested) {\n        className += \"font-weight-bold\";\n      }\n      const filterOutItems =\n        itemFilter &&\n        !matchesProductCodeOrName({\n          product: rowValues?.product,\n          filterValue: itemFilter,\n        });\n      const hideRow =\n        ((showOnlyErroredItems && !rowValues.hasError) || filterOutItems) &&\n        !subfield;\n      return { className, hideRow };\n    },\n    subfieldKey: \"substitutionItems\",\n    fields: {\n      productCode: {\n        type: LabelField,\n        headerAlign: \"left\",\n        flexWidth: \"0.6\",\n        getDynamicAttr: ({ subfield }) => ({\n          className: subfield ? \"text-center\" : \"text-left ml-1\",\n        }),\n        label: \"react.stockMovement.code.label\",\n        defaultMessage: \"Code\",\n        attributes: {\n          showValueTooltip: true,\n        },\n      },\n      product: {\n        type: LabelField,\n        headerAlign: \"left\",\n        flexWidth: \"3.5\",\n        label: \"react.stockMovement.productName.label\",\n        defaultMessage: \"Product name\",\n        attributes: {\n          formatValue: formatProductDisplayName,\n        },\n        getDynamicAttr: ({ subfield, fieldValue }) => ({\n          color: fieldValue?.color,\n          className: subfield ? \"text-center\" : \"text-left ml-1\",\n          showValueTooltip: !!fieldValue?.displayNames?.default,\n          tooltipValue: fieldValue?.name,\n        }),\n      },\n      quantityRequested: {\n        type: LabelField,\n        label: \"react.stockMovement.requested.label\",\n        defaultMessage: \"Requested\",\n        flexWidth: \"1.1\",\n        headerAlign: \"right\",\n        attributes: {\n          className: \"text-right\",\n          formatValue: (value) =>\n            value ? value.toLocaleString(\"en-US\") : value,\n        },\n      },\n      quantityOnHand: {\n        type: LabelField,\n        label: \"react.stockMovement.onHand.label\",\n        defaultMessage: \"On Hand\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        getDynamicAttr: ({ fieldValue }) => {\n          let className = \"text-right\";\n          if (\n            fieldValue &&\n            (!fieldValue.quantityOnHand ||\n              fieldValue.quantityOnHand < fieldValue.quantityRequested)\n          ) {\n            className = `${className} text-danger`;\n          }\n          return {\n            className,\n          };\n        },\n        headerAlign: \"right\",\n        attributes: {\n          formatValue: (value) =>\n            value.quantityOnHand\n              ? value.quantityOnHand.toLocaleString(\"en-US\")\n              : value.quantityOnHand,\n        },\n      },\n      quantityAvailable: {\n        type: LabelField,\n        label: \"react.stockMovement.available.label\",\n        defaultMessage: \"Available\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        getDynamicAttr: ({ fieldValue }) => {\n          let className = \"text-right\";\n          if (\n            fieldValue &&\n            (!fieldValue.quantityAvailable ||\n              fieldValue.quantityAvailable < fieldValue.quantityRequested)\n          ) {\n            className = `${className} text-danger`;\n          }\n          return {\n            className,\n          };\n        },\n        headerAlign: \"right\",\n        attributes: {\n          formatValue: (value) =>\n            value.quantityAvailable\n              ? value.quantityAvailable.toLocaleString(\"en-US\")\n              : value.quantityAvailable,\n        },\n      },\n      quantityDemandFulfilling: {\n        type: LabelField,\n        label: \"react.stockMovement.demandPerMonth.label\",\n        defaultMessage: \"Demand per Month\",\n        flexWidth: \"1.5\",\n        getDynamicAttr: () => ({\n          formatValue: (value) => {\n            if (value && value !== \"0\") {\n              return value.toLocaleString(\"en-US\");\n            }\n\n            return \"0\";\n          },\n          showValueTooltip: true,\n        }),\n        headerAlign: \"right\",\n        attributes: {\n          className: \"text-right\",\n        },\n      },\n      detailsButton: {\n        label: \"react.stockMovement.details.label\",\n        defaultMessage: \"Details\",\n        type: DetailsModal,\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        attributes: {\n          title: \"react.stockMovement.pendingRequisitionDetails.label\",\n          defaultTitleMessage: \"Pending Requisition Details\",\n        },\n        getDynamicAttr: ({ fieldValue, stockMovementId, values }) => ({\n          productId: fieldValue && fieldValue.product && fieldValue.product.id,\n          productCode:\n            fieldValue && fieldValue.product && fieldValue.product.productCode,\n          productName:\n            fieldValue && fieldValue.product && fieldValue.product.name,\n          displayName: fieldValue?.product?.displayNames?.default,\n          originId: values && values.origin && values.origin.id,\n          stockMovementId,\n          quantityRequested: fieldValue && fieldValue.quantityRequested,\n          quantityOnHand: fieldValue && fieldValue.quantityOnHand,\n          quantityAvailable: fieldValue && fieldValue.quantityAvailable,\n          btnOpenText: \"react.stockMovement.details.label\",\n          btnOpenDefaultText: \"Details\",\n          btnCancelText: \"Close\",\n          btnSaveStyle: { display: \"none\" },\n          btnContainerClassName: \"float-right\",\n          btnOpenAsIcon: true,\n          btnOpenStyle: { border: \"none\", cursor: \"pointer\" },\n          btnOpenIcon: \"fa-search\",\n        }),\n      },\n      substituteButton: {\n        label: \"react.stockMovement.substitution.label\",\n        defaultMessage: \"Substitution\",\n        type: SubstitutionsModal,\n        fieldKey: \"\",\n        flexWidth: \"1\",\n        attributes: {\n          title: \"react.stockMovement.substitutes.label\",\n          defaultTitleMessage: \"Substitutes\",\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          rowIndex,\n          stockMovementId,\n          onResponse,\n          reviseRequisitionItems,\n          values,\n          reasonCodes,\n          showOnly,\n        }) => ({\n          onOpen: () => reviseRequisitionItems(values),\n          productCode: fieldValue && fieldValue.productCode,\n          btnOpenText: `react.stockMovement.${fieldValue && fieldValue.substitutionStatus}.label`,\n          btnOpenDefaultText: `${fieldValue && fieldValue.substitutionStatus}`,\n          btnOpenDisabled:\n            (fieldValue && fieldValue.statusCode === \"SUBSTITUTED\") || showOnly,\n          btnOpenClassName:\n            BTN_CLASS_MAPPER[\n              (fieldValue && fieldValue.substitutionStatus) || \"HIDDEN\"\n            ],\n          rowIndex,\n          lineItem: fieldValue,\n          stockMovementId,\n          onResponse,\n          reasonCodes,\n        }),\n      },\n      quantityRevised: {\n        label: \"react.stockMovement.quantityRevised.label\",\n        defaultMessage: \"Qty revised\",\n        type: TextField,\n        fieldKey: \"statusCode\",\n        flexWidth: \"1\",\n        attributes: {\n          type: \"number\",\n        },\n        getDynamicAttr: ({\n          fieldValue,\n          subfield,\n          showOnly,\n          updateRow,\n          values,\n          rowIndex,\n        }) => ({\n          disabled:\n            (fieldValue && fieldValue === \"SUBSTITUTED\") ||\n            subfield ||\n            showOnly,\n          onBlur: () => updateRow(values, rowIndex),\n        }),\n      },\n      reasonCode: {\n        type: SelectField,\n        label: \"react.stockMovement.reasonCode.label\",\n        defaultMessage: \"Reason code\",\n        flexWidth: \"1.4\",\n        fieldKey: \"quantityRevised\",\n        getDynamicAttr: ({\n          fieldValue,\n          subfield,\n          reasonCodes,\n          updateRow,\n          values,\n          rowIndex,\n        }) => {\n          const isSubstituted =\n            fieldValue && fieldValue.statusCode === \"SUBSTITUTED\";\n          return {\n            disabled:\n              fieldValue === null ||\n              fieldValue === undefined ||\n              subfield ||\n              isSubstituted,\n            options: reasonCodes,\n            showValueTooltip: true,\n            onBlur: () => updateRow(values, rowIndex),\n          };\n        },\n      },\n      revert: {\n        type: ButtonField,\n        label: \"react.default.button.undo.label\",\n        defaultMessage: \"Undo\",\n        flexWidth: \"1\",\n        fieldKey: \"\",\n        buttonLabel: \"react.default.button.undo.label\",\n        buttonDefaultMessage: \"Undo\",\n        getDynamicAttr: ({ fieldValue, revertItem, values, showOnly }) => ({\n          onClick:\n            fieldValue && fieldValue.requisitionItemId\n              ? () => revertItem(values, fieldValue.requisitionItemId)\n              : () => null,\n          hidden:\n            fieldValue && fieldValue.statusCode\n              ? !_.includes([\"CHANGED\", \"CANCELED\"], fieldValue.statusCode)\n              : false,\n          disabled: showOnly,\n        }),\n        attributes: {\n          className: \"btn btn-outline-danger\",\n        },\n      },\n    },\n  },\n};\n\nfunction validateForSave(values) {\n  const errors = {};\n  errors.editPageItems = [];\n\n  _.forEach(values.editPageItems, (item, key) => {\n    if (!_.isEmpty(item.quantityRevised) && _.isEmpty(item.reasonCode)) {\n      errors.editPageItems[key] = {\n        reasonCode: \"react.stockMovement.errors.reasonCodeRequired.label\",\n      };\n    } else if (\n      _.isNil(item.quantityRevised) &&\n      !_.isEmpty(item.reasonCode) &&\n      item.statusCode !== \"SUBSTITUTED\"\n    ) {\n      errors.editPageItems[key] = {\n        quantityRevised:\n          \"react.stockMovement.errors.revisedQuantityRequired.label\",\n      };\n    }\n    if (parseInt(item.quantityRevised, 10) === item.quantityRequested) {\n      errors.editPageItems[key] = {\n        quantityRevised: \"react.stockMovement.errors.sameRevisedQty.label\",\n      };\n    }\n    if (\n      !_.isEmpty(item.quantityRevised) &&\n      item.quantityAvailable >= 0 &&\n      item.quantityRevised > item.quantityAvailable\n    ) {\n      errors.editPageItems[key] = {\n        quantityRevised: \"react.stockMovement.errors.higherQty.label\",\n      };\n    }\n    if (!_.isEmpty(item.quantityRevised) && item.quantityRevised < 0) {\n      errors.editPageItems[key] = {\n        quantityRevised: \"react.stockMovement.errors.negativeQty.label\",\n      };\n    }\n  });\n  return errors;\n}\n\n/**\n * The third step of stock movement(for movements from a depot) where user can see the\n * stock available and adjust quantities or make substitutions based on that information.\n */\nclass EditItemsPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      statusCode: \"\",\n      revisedItems: [],\n      values: { ...this.props.initialValues, editPageItems: [] },\n      hasItemsLoaded: false,\n      totalCount: 0,\n      isFirstPageLoaded: false,\n      showOnlyErroredItems: false,\n      itemFilter: \"\",\n    };\n\n    this.revertItem = this.revertItem.bind(this);\n    this.fetchEditPageItems = this.fetchEditPageItems.bind(this);\n    this.reviseRequisitionItems = this.reviseRequisitionItems.bind(this);\n    this.isRowLoaded = this.isRowLoaded.bind(this);\n    this.loadMoreRows = this.loadMoreRows.bind(this);\n    this.updateRow = this.updateRow.bind(this);\n    this.markErroredLines = this.markErroredLines.bind(this);\n    this.validate = this.validate.bind(this);\n    this.props.showSpinner();\n  }\n\n  componentDidMount() {\n    if (this.props.stockMovementTranslationsFetched) {\n      this.dataFetched = true;\n      this.fetchAllData(false);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.stockMovementTranslationsFetched && !this.dataFetched) {\n      this.dataFetched = true;\n\n      this.fetchAllData(false);\n    }\n\n    // If we change the language, refetch the reason codes\n    if (nextProps.currentLocale !== this.props.currentLocale) {\n      this.props.fetchReasonCodes();\n    }\n  }\n\n  setEditPageItems(response, startIndex) {\n    this.props.showSpinner();\n    const { data } = response.data;\n    const editPageItems = _.map(data, (val) => ({\n      ...val,\n      disabled: true,\n      quantityOnHand: val.quantityOnHand > 0 ? val.quantityOnHand : 0,\n      quantityAvailable: val.quantityAvailable > 0 ? val.quantityAvailable : 0,\n      product: {\n        ...val.product,\n        label: `${val.productCode} ${val.productName}`,\n      },\n      // eslint-disable-next-line max-len\n      reasonCode: _.find(this.props.reasonCodes, ({ value }) =>\n        _.includes(val.reasonCode, value),\n      ),\n      substitutionItems: _.map(val.substitutionItems, (sub) => ({\n        ...sub,\n        // eslint-disable-next-line max-len\n        reasonCode: _.find(this.props.reasonCodes, ({ value }) =>\n          _.includes(val.reasonCode, value),\n        ),\n        requisitionItemId: val.requisitionItemId,\n        product: {\n          ...sub.product,\n          label: `${sub.productCode} ${sub.productName}`,\n        },\n      })),\n    }));\n\n    this.setState(\n      (prev) => ({\n        revisedItems: _.filter(\n          editPageItems,\n          (item) => item.statusCode === \"CHANGED\",\n        ),\n        values: {\n          ...prev.values,\n          editPageItems: _.uniqBy(\n            _.concat(prev.values.editPageItems, editPageItems),\n            \"requisitionItemId\",\n          ),\n        },\n        hasItemsLoaded:\n          prev.hasItemsLoaded ||\n          prev.totalCount ===\n            _.uniqBy(\n              _.concat(prev.values.editPageItems, editPageItems),\n              \"requisitionItemId\",\n            ).length,\n      }),\n      () => {\n        // eslint-disable-next-line max-len\n        if (\n          !_.isNull(startIndex) &&\n          this.state.values.editPageItems.length !== this.state.totalCount\n        ) {\n          this.loadMoreRows({ startIndex: startIndex + this.props.pageSize });\n        }\n        this.props.hideSpinner();\n      },\n    );\n  }\n\n  validate(values) {\n    const errors = validateForSave(values);\n\n    _.forEach(values.editPageItems, (item, key) => {\n      if (\n        _.isNil(item.quantityRevised) &&\n        item.quantityRequested > item.quantityAvailable &&\n        item.statusCode !== \"SUBSTITUTED\"\n      ) {\n        errors.editPageItems[key] = {\n          quantityRevised: \"react.stockMovement.errors.lowerQty.label\",\n        };\n      }\n    });\n\n    this.markErroredLines(values, errors);\n\n    return errors;\n  }\n\n  markErroredLines(values, errors) {\n    let updatedValues = values;\n\n    _.forEach(this.state.values.editPageItems, (item, itemIdx) => {\n      updatedValues = update(updatedValues, {\n        editPageItems: {\n          [itemIdx]: {\n            hasError: {\n              $set: !!_.find(\n                errors.editPageItems,\n                (error, errorIdx) => itemIdx === errorIdx,\n              ),\n            },\n          },\n        },\n      });\n    });\n\n    this.setState((prev) => ({\n      values: updatedValues,\n      showOnlyErroredItems: !errors.editPageItems.length\n        ? false\n        : prev.showOnlyErroredItems,\n    }));\n  }\n\n  dataFetched = false;\n\n  /**\n   * Fetches all required data.\n   * @param {boolean} forceFetch\n   * @public\n   */\n  fetchAllData(forceFetch) {\n    this.props.showSpinner();\n    this.props.fetchReasonCodes();\n\n    this.fetchEditPageData()\n      .then((resp) => {\n        const { statusCode } = resp.data.data;\n        const { totalCount } = resp.data;\n\n        this.setState(\n          {\n            statusCode,\n            totalCount,\n          },\n          () => {\n            if (!this.props.isPaginated || forceFetch) {\n              this.fetchItems();\n            }\n          },\n        );\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n      });\n  }\n\n  fetchItems() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?stepNumber=3`;\n    apiClient.get(url).then((response) => {\n      this.setEditPageItems(response, null);\n      this.setState({\n        hasItemsLoaded: true,\n      });\n    });\n  }\n\n  /**\n   * Saves changes made in subsitution modal and updates data.\n   * @public\n   */\n  fetchEditPageItems() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?stepNumber=3`;\n    apiClient\n      .get(url)\n      .then((response) => {\n        const { data } = response.data;\n        this.setState(\n          (prev) => ({\n            hasItemsLoaded: true,\n            values: {\n              ...prev.values,\n              editPageItems: _.map(data, (item) => ({\n                ...item,\n                quantityOnHand: item.quantityOnHand || 0,\n                // eslint-disable-next-line max-len\n                reasonCode: _.find(this.props.reasonCodes, ({ value }) =>\n                  _.includes(item.reasonCode, value),\n                ),\n                substitutionItems: _.map(item.substitutionItems, (sub) => ({\n                  ...sub,\n                  // eslint-disable-next-line max-len\n                  reasonCode: _.find(this.props.reasonCodes, ({ value }) =>\n                    _.includes(item.reasonCode, value),\n                  ),\n                  requisitionItemId: item.requisitionItemId,\n                })),\n              })),\n            },\n          }),\n          () => {\n            this.fetchAllData(false);\n            this.props.hideSpinner();\n          },\n        );\n      })\n      .catch(() => {\n        this.props.hideSpinner();\n      });\n  }\n\n  loadMoreRows({ startIndex }) {\n    if (this.state.totalCount) {\n      this.setState({\n        isFirstPageLoaded: true,\n      });\n      const url = `/api/stockMovements/${this.state.values.stockMovementId}/stockMovementItems?offset=${startIndex}&max=${this.props.pageSize}&stepNumber=3`;\n      apiClient.get(url).then((response) => {\n        this.setEditPageItems(response, startIndex);\n      });\n    }\n  }\n\n  isRowLoaded({ index }) {\n    return !!this.state.values.editPageItems[index];\n  }\n\n  /**\n   * Sends data of revised items with post method.\n   * @param {object} values\n   * @public\n   */\n  reviseRequisitionItems(values) {\n    const itemsToRevise = _.filter(values.editPageItems, (item) => {\n      if (item.quantityRevised && item.reasonCode) {\n        const oldRevision = _.find(\n          this.state.revisedItems,\n          (revision) => revision.requisitionItemId === item.requisitionItemId,\n        );\n        return _.isEmpty(oldRevision)\n          ? true\n          : _.toInteger(oldRevision.quantityRevised) !==\n              _.toInteger(item.quantityRevised) ||\n              oldRevision.reasonCode !== item.reasonCode;\n      }\n      return false;\n    });\n\n    let updatedValues = values;\n\n    _.forEach(itemsToRevise, (item) => {\n      const editPageItemIndex = _.findIndex(\n        this.state.values.editPageItems,\n        (editPageItem) =>\n          item.requisitionItemId === editPageItem.requisitionItemId,\n      );\n\n      updatedValues = update(updatedValues, {\n        editPageItems: {\n          [editPageItemIndex]: {\n            statusCode: {\n              $set: \"CHANGED\",\n            },\n          },\n        },\n      });\n    });\n\n    this.setState({\n      values: updatedValues,\n    });\n\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/reviseItems`;\n    const payload = {\n      lineItems: _.map(itemsToRevise, (item) => ({\n        id: item.requisitionItemId,\n        quantityRevised: item.quantityRevised,\n        reasonCode: item.reasonCode.value,\n      })),\n    };\n\n    if (payload.lineItems.length) {\n      return apiClient.post(url, payload);\n    }\n\n    return Promise.resolve();\n  }\n\n  updateRow(values, index) {\n    const item = values.editPageItems[index];\n    let val = values;\n    val = update(values, {\n      editPageItems: { [index]: { $set: item } },\n    });\n    this.setState({\n      values: val,\n    });\n  }\n\n  /**\n   * Saves list of requisition items in current step (without step change).\n   * @param {object} formValues\n   * @public\n   */\n  save(formValues) {\n    this.props.showSpinner();\n\n    const errors = validateForSave(formValues).editPageItems;\n\n    if (errors.length) {\n      showOutboundEditValidationErrors({\n        translate: this.props.translate,\n        errors,\n      });\n\n      this.props.hideSpinner();\n      return null;\n    }\n\n    return this.reviseRequisitionItems(formValues)\n      .then((resp) => {\n        // If reponse 200, then save revise items taken from the payload\n        const payload = JSON.parse(resp.config.data);\n        if (payload.lineItems && payload.lineItems.length) {\n          const savedItemIds = payload.lineItems.map((item) => item.id);\n          // Map to have the required field\n          // (requisitionItemId, quantityRevised and reasonCode as obj)\n          const savedItems = payload.lineItems.map((item) => ({\n            ...item,\n            requisitionItemId: item.id,\n            reasonCode: _.find(this.props.reasonCodes, ({ value }) =>\n              _.includes(item.reasonCode, value),\n            ),\n          }));\n          // Get old revise items, that were not changed in this request\n          const oldItems = _.filter(\n            this.state.values.editPageItems,\n            (item) => savedItemIds.indexOf(item.requisitionItemId) < 0,\n          );\n          this.setState({\n            revisedItems: [...oldItems, ...savedItems],\n          });\n        }\n\n        this.props.hideSpinner();\n        Alert.success(\n          this.props.translate(\n            \"react.stockMovement.alert.saveSuccess.label\",\n            \"Changes saved successfully\",\n          ),\n          { timeout: 3000 },\n        );\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Reload the data, all not saved changes will be lost.\n   * @public\n   */\n  reload() {\n    this.setState({\n      revisedItems: [],\n      values: { ...this.props.initialValues, editPageItems: [] },\n      hasItemsLoaded: false,\n      totalCount: 0,\n      isFirstPageLoaded: false,\n    });\n    this.fetchAllData(true);\n  }\n\n  /**\n   * Refetch the data, all not saved changes will be lost.\n   * @public\n   */\n  refresh() {\n    confirmAlert({\n      title: this.props.translate(\n        \"react.stockMovement.message.confirmRefresh.label\",\n        \"Confirm refresh\",\n      ),\n      message: this.props.translate(\n        \"react.stockMovement.confirmRefresh.message\",\n        \"Are you sure you want to refresh? Your progress since last save will be lost.\",\n      ),\n      buttons: [\n        {\n          label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n          onClick: () => this.reload(),\n        },\n        {\n          label: this.props.translate(\"react.default.no.label\", \"No\"),\n        },\n      ],\n    });\n  }\n\n  /**\n   * Transition to next stock movement status (PICKING)\n   * after sending createPicklist: 'true' to backend autopick functionality is invoked.\n   * @public\n   */\n  transitionToNextStep() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}/status`;\n    const payload = {\n      status: \"PICKING\",\n      createPicklist: this.state.statusCode === \"REQUESTED\" ? \"true\" : \"false\",\n    };\n\n    return apiClient.post(url, payload);\n  }\n\n  /**\n   * Fetches 3rd step data from current stock movement.\n   * @public\n   */\n  fetchEditPageData() {\n    const url = `/api/stockMovements/${this.state.values.stockMovementId}`;\n\n    return apiClient\n      .get(url)\n      .then((resp) => resp)\n      .catch((err) => err);\n  }\n\n  /**\n   * Saves current stock movement progress (line items) and goes to the next stock movement step.\n   * @param {object} formValues\n   * @public\n   */\n  nextPage(formValues) {\n    this.props.showSpinner();\n    this.reviseRequisitionItems(formValues)\n      .then(() => {\n        this.transitionToNextStep()\n          .then(() => this.props.nextPage(formValues))\n          .catch(() => this.reload());\n      })\n      .catch(() => this.props.hideSpinner());\n  }\n\n  /**\n   * Saves changes made when item reverted.\n   * @param {object} editPageItem\n   * @public\n   */\n  updateEditPageItem(values, editPageItem) {\n    const editPageItemIndex = _.findIndex(\n      this.state.values.editPageItems,\n      (item) => item.requisitionItemId === editPageItem.requisitionItemId,\n    );\n    const revisedItemIndex = _.findIndex(\n      this.state.revisedItems,\n      (item) => item.requisitionItemId === editPageItem.requisitionItemId,\n    );\n\n    this.setState((prev) => ({\n      values: {\n        ...values,\n        editPageItems: update(values.editPageItems, {\n          [editPageItemIndex]: {\n            $set: {\n              ...editPageItem,\n              quantityOnHand: editPageItem.quantityOnHand || 0,\n              quantityAvailable: editPageItem.quantityAvailable || 0,\n              substitutionItems: _.map(\n                editPageItem.substitutionItems,\n                (sub) => ({\n                  ...sub,\n                  requisitionItemId: editPageItem.requisitionItemId,\n                }),\n              ),\n            },\n          },\n        }),\n      },\n      revisedItems: update(\n        prev.revisedItems,\n        revisedItemIndex > -1\n          ? {\n              $splice: [[revisedItemIndex, 1]],\n            }\n          : {},\n      ),\n    }));\n  }\n\n  /**\n   * Saves changes made by user in this step and redirects to the shipment view page\n   * @param {object} formValues\n   * @public\n   */\n  saveAndExit(formValues) {\n    const errors = validateForSave(formValues).editPageItems;\n\n    if (errors.length) {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.confirmExit.label\",\n          \"Confirm save\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmExit.message\",\n          \"Validation errors occurred. Are you sure you want to exit and lose unsaved data?\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\"react.default.yes.label\", \"Yes\"),\n            onClick: () => {\n              window.location = STOCK_MOVEMENT_URL.show(\n                formValues.stockMovementId,\n              );\n            },\n          },\n          {\n            label: this.props.translate(\"react.default.no.label\", \"No\"),\n          },\n        ],\n      });\n      this.props.hideSpinner();\n    } else {\n      this.reviseRequisitionItems(formValues).then(() => {\n        window.location = STOCK_MOVEMENT_URL.show(formValues.stockMovementId);\n      });\n    }\n  }\n\n  /**\n   * Reverts to previous state of requisition item (reverts substitutions and quantity revisions)\n   * @param {string} itemId\n   * @public\n   */\n  revertItem(values, itemId) {\n    this.props.showSpinner();\n    const revertItemsUrl = `/api/stockMovementItems/${itemId}/revertItem`;\n    const itemsUrl = `/api/stockMovementItems/${itemId}?stepNumber=3`;\n\n    return apiClient\n      .post(revertItemsUrl)\n      .then(() =>\n        apiClient\n          .get(itemsUrl)\n          .then((response) => {\n            const editPageItem = response.data.data;\n            this.updateEditPageItem(values, editPageItem);\n            this.props.hideSpinner();\n          })\n          .catch(() => {\n            this.props.hideSpinner();\n            return Promise.reject(\n              new Error(\n                this.props.translate(\n                  \"react.stockMovement.error.revertRequisitionItem.label\",\n                  \"Could not revert requisition items\",\n                ),\n              ),\n            );\n          }),\n      )\n      .catch(() => {\n        this.props.hideSpinner();\n        return Promise.reject(\n          new Error(\n            this.props.translate(\n              \"react.stockMovement.error.revertRequisitionItem.label\",\n              \"Could not revert requisition items\",\n            ),\n          ),\n        );\n      });\n  }\n\n  /**\n   * Saves changes made by user in this step and go back to previous page\n   * @param {object} values\n   * @param {boolean} invalid\n   * @public\n   */\n  previousPage(values, invalid) {\n    if (!invalid) {\n      this.reviseRequisitionItems(values).then(() =>\n        this.props.previousPage(values),\n      );\n    } else {\n      confirmAlert({\n        title: this.props.translate(\n          \"react.stockMovement.confirmPreviousPage.label\",\n          \"Validation error\",\n        ),\n        message: this.props.translate(\n          \"react.stockMovement.confirmPreviousPage.message.label\",\n          \"Cannot save due to validation error on page\",\n        ),\n        buttons: [\n          {\n            label: this.props.translate(\n              \"react.stockMovement.confirmPreviousPage.correctError.label\",\n              \"Correct error\",\n            ),\n          },\n          {\n            label: this.props.translate(\n              \"react.stockMovement.confirmPreviousPage.continue.label\",\n              \"Continue (lose unsaved work)\",\n            ),\n            onClick: () => this.props.previousPage(values),\n          },\n        ],\n      });\n    }\n  }\n\n  render() {\n    const { showOnlyErroredItems, itemFilter } = this.state;\n    const { showOnly } = this.props;\n    const erroredItemsCount =\n      this.state.values && this.state.values.editPageItems.length > 0\n        ? _.filter(this.state.values.editPageItems, (item) => item.hasError)\n            .length\n        : \"0\";\n    return (\n      <Form\n        onSubmit={() => {}}\n        validate={this.validate}\n        mutators={{ ...arrayMutators }}\n        initialValues={this.state.values}\n        render={({ handleSubmit, values, invalid }) => (\n          <div className=\"d-flex flex-column\">\n            {!showOnly ? (\n              <span className=\"buttons-container\">\n                <FilterInput\n                  itemFilter={itemFilter}\n                  onChange={(e) =>\n                    this.setState({ itemFilter: e.target.value })\n                  }\n                  onClear={() => this.setState({ itemFilter: \"\" })}\n                />\n                <button\n                  type=\"button\"\n                  onClick={() =>\n                    this.setState({\n                      showOnlyErroredItems: !showOnlyErroredItems,\n                    })\n                  }\n                  className={`float-right mb-1 btn btn-outline-secondary align-self-end btn-xs ml-3 ${showOnlyErroredItems ? \"active\" : \"\"}`}\n                >\n                  <span>\n                    {erroredItemsCount}{\" \"}\n                    <Translate\n                      id=\"react.stockMovement.erroredItemsCount.label\"\n                      defaultMessage=\"item(s) require your attention\"\n                    />\n                  </span>\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => this.refresh()}\n                  className=\"float-right mb-1 btn btn-outline-secondary align-self-end btn-xs ml-3\"\n                >\n                  <span>\n                    <i className=\"fa fa-refresh pr-2\" />\n                    <Translate\n                      id=\"react.default.button.refresh.label\"\n                      defaultMessage=\"Reload\"\n                    />\n                  </span>\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => this.save(values)}\n                  className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-3 btn-xs ml-3\"\n                >\n                  <span>\n                    <i className=\"fa fa-save pr-2\" />\n                    <Translate\n                      id=\"react.default.button.save.label\"\n                      defaultMessage=\"Save\"\n                    />\n                  </span>\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => this.saveAndExit(values)}\n                  className=\"float-right mb-1 btn btn-outline-secondary align-self-end ml-3 btn-xs ml-3\"\n                >\n                  <span>\n                    <i className=\"fa fa-sign-out pr-2\" />\n                    <Translate\n                      id=\"react.default.button.saveAndExit.label\"\n                      defaultMessage=\"Save and exit\"\n                    />\n                  </span>\n                </button>\n              </span>\n            ) : (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.props.history.push(STOCK_MOVEMENT_URL.listOutbound());\n                }}\n                className=\"float-right mb-1 btn btn-outline-danger align-self-end btn-xs mr-2\"\n              >\n                <span>\n                  <i className=\"fa fa-sign-out pr-2\" />{\" \"}\n                  <Translate\n                    id=\"react.default.button.exit.label\"\n                    defaultMessage=\"Exit\"\n                  />{\" \"}\n                </span>\n              </button>\n            )}\n            <form onSubmit={handleSubmit}>\n              <div className=\"table-form\">\n                {_.map(FIELDS, (fieldConfig, fieldName) =>\n                  renderFormField(fieldConfig, fieldName, {\n                    stockMovementId: values.stockMovementId,\n                    translate: this.props.translate,\n                    reasonCodes: this.props.reasonCodes,\n                    onResponse: this.fetchEditPageItems,\n                    revertItem: this.revertItem,\n                    reviseRequisitionItems: this.reviseRequisitionItems,\n                    totalCount: this.state.totalCount,\n                    loadMoreRows: this.loadMoreRows,\n                    isRowLoaded: this.isRowLoaded,\n                    isPaginated: this.props.isPaginated,\n                    updateRow: this.updateRow,\n                    isFirstPageLoaded: this.state.isFirstPageLoaded,\n                    values,\n                    showOnly,\n                    showOnlyErroredItems,\n                    itemFilter,\n                  }),\n                )}\n              </div>\n              <div className=\"submit-buttons\">\n                <button\n                  type=\"submit\"\n                  onClick={() => this.previousPage(values, invalid)}\n                  disabled={showOnly}\n                  className=\"btn btn-outline-primary btn-form btn-xs\"\n                >\n                  <Translate\n                    id=\"react.default.button.previous.label\"\n                    defaultMessage=\"Previous\"\n                  />\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={!this.state.hasItemsLoaded || showOnly}\n                  onClick={() => {\n                    if (!invalid) {\n                      this.nextPage(values);\n                    }\n                  }}\n                  className=\"btn btn-outline-primary btn-form float-right btn-xs\"\n                >\n                  <Translate\n                    id=\"react.default.button.next.label\"\n                    defaultMessage=\"Next\"\n                  />\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  reasonCodes: state.reasonCodes.data,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  isPaginated: state.session.isPaginated,\n  pageSize: state.session.pageSize,\n  currentLocale: state.session.activeLanguage,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    fetchReasonCodes,\n    showSpinner,\n    hideSpinner,\n  })(EditItemsPage),\n);\n\nEditItemsPage.propTypes = {\n  /** Initial component's data */\n  initialValues: PropTypes.shape({}).isRequired,\n  /** Function returning user to the previous page */\n  previousPage: PropTypes.func.isRequired,\n  /**\n   * Function called with the form data when the handleSubmit()\n   * is fired from within the form component.\n   */\n  nextPage: PropTypes.func.isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  /** Function fetching reason codes */\n  fetchReasonCodes: PropTypes.func.isRequired,\n  /** Array of available reason codes */\n  reasonCodes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  translate: PropTypes.func.isRequired,\n  stockMovementTranslationsFetched: PropTypes.bool.isRequired,\n  /** Return true if pagination is enabled */\n  isPaginated: PropTypes.bool.isRequired,\n  /** Return true if show only */\n  showOnly: PropTypes.bool.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { getTranslate } from \"react-localize-redux\";\nimport { connect } from \"react-redux\";\n\nimport { fetchTranslations, hideSpinner, showSpinner } from \"actions\";\nimport AddItemsPage from \"components/stock-movement-wizard/outbound/AddItemsPage\";\nimport CreateStockMovement from \"components/stock-movement-wizard/outbound/CreateStockMovement\";\nimport EditPage from \"components/stock-movement-wizard/outbound/EditPage\";\nimport PackingPage from \"components/stock-movement-wizard/outbound/PackingPage\";\nimport PickPage from \"components/stock-movement-wizard/outbound/PickPage\";\nimport SendMovementPage from \"components/stock-movement-wizard/outbound/SendMovementPage\";\nimport Wizard from \"components/wizard/Wizard\";\nimport DateFormat from \"consts/dateFormat\";\nimport apiClient from \"utils/apiClient\";\nimport { translateWithDefaultMessage } from \"utils/Translate\";\nimport { formatDate } from \"utils/translation-utils\";\n\nimport \"components/stock-movement-wizard/StockMovement.scss\";\n\n// TODO: check docs for SM wizard and Wizard related components\n\n/** Main outbound stock movement form's wizard component. */\nclass StockMovements extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      values: this.props.initialValues,\n      currentPage: 1,\n    };\n\n    this.updateWizardValues = this.updateWizardValues.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTranslations(\"\", \"stockMovement\");\n\n    if (this.props.stockMovementTranslationsFetched) {\n      this.dataFetched = true;\n\n      this.fetchInitialValues();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.locale && this.props.locale !== nextProps.locale) {\n      this.props.fetchTranslations(nextProps.locale, \"stockMovement\");\n    }\n\n    if (nextProps.stockMovementTranslationsFetched && !this.dataFetched) {\n      this.dataFetched = true;\n\n      this.fetchInitialValues();\n    }\n  }\n\n  /**\n   * Returns array of form steps.\n   * @public\n   */\n  get stepList() {\n    let stepList = [];\n    if (this.props.hasPackingSupport) {\n      stepList = [\n        this.props.translate(\"react.stockMovement.create.label\", \"Create\"),\n        this.props.translate(\"react.stockMovement.addItems.label\", \"Add items\"),\n        this.props.translate(\"react.stockMovement.edit.label\", \"Edit\"),\n        this.props.translate(\"react.stockMovement.pick.label\", \"Pick\"),\n        this.props.translate(\"react.stockMovement.pack.label\", \"Pack\"),\n        this.props.translate(\"react.stockMovement.send.label\", \"Send\"),\n      ];\n    } else {\n      stepList = [\n        this.props.translate(\"react.stockMovement.create.label\", \"Create\"),\n        this.props.translate(\"react.stockMovement.addItems.label\", \"Add items\"),\n        this.props.translate(\"react.stockMovement.edit.label\", \"Edit\"),\n        this.props.translate(\"react.stockMovement.pick.label\", \"Pick\"),\n        this.props.translate(\"react.stockMovement.send.label\", \"Send\"),\n      ];\n    }\n    return stepList;\n  }\n\n  /**\n   * Returns array of form's components.\n   * @public\n   */\n  get pageList() {\n    let formList = [];\n    if (this.props.hasPackingSupport) {\n      formList = [\n        CreateStockMovement,\n        AddItemsPage,\n        EditPage,\n        PickPage,\n        PackingPage,\n        SendMovementPage,\n      ];\n    } else {\n      formList = [\n        CreateStockMovement,\n        AddItemsPage,\n        EditPage,\n        PickPage,\n        SendMovementPage,\n      ];\n    }\n    return formList;\n  }\n\n  /**\n   * Returns shipment's name containing shipment's origin, destination, requisition date,\n   * tracking number given by user on the last step, description and stock list if chosen.\n   * @public\n   */\n  get wizardTitle() {\n    const { values } = this.state;\n    if (!values.movementNumber && !values.trackingNumber) {\n      return [];\n    }\n    return [\n      {\n        text: this.props.translate(\n          \"react.stockMovement.label\",\n          \"Stock Movement\",\n        ),\n        color: \"#000000\",\n        delimeter: \" | \",\n      },\n      {\n        text: values.movementNumber,\n        color: \"#000000\",\n        delimeter: \" - \",\n      },\n      {\n        text: values.origin.name,\n        color: \"#004d40\",\n        delimeter: ` ${this.props.translate(\"react.default.to.label\", \"to\")} `,\n      },\n      {\n        text: values.destination.name,\n        color: \"#01579b\",\n        delimeter: \", \",\n      },\n      {\n        text: this.props.formatLocalizedDate(\n          values.dateRequested,\n          DateFormat.COMMON,\n        ),\n        color: \"#4a148c\",\n        delimeter: \", \",\n      },\n      {\n        text: values.description,\n        color: \"#770838\",\n        delimeter: \"\",\n      },\n    ];\n  }\n\n  get additionalWizardTitle() {\n    const { currentPage, values } = this.state;\n    const shipped = values.shipped\n      ? this.props.translate(\n          \"react.stockMovement.status.shipped.label\",\n          \"SHIPPED\",\n        )\n      : \"\";\n    const received = values.received\n      ? this.props.translate(\n          \"react.stockMovement.status.received.label\",\n          \"RECEIVED\",\n        )\n      : \"\";\n    if (\n      (this.props.hasPackingSupport && currentPage === 6) ||\n      (!this.props.hasPackingSupport && currentPage === 5)\n    ) {\n      return (\n        <span className=\"shipment-status float-right\">\n          {`${shipped || received || this.props.translate(\"react.stockMovement.status.pending.label\", \"PENDING\")}`}\n        </span>\n      );\n    }\n    return null;\n  }\n\n  updateWizardValues(currentPage, values) {\n    this.setState({ currentPage, values });\n  }\n\n  dataFetched = false;\n\n  /**\n   * Fetches initial values from API.\n   * @public\n   */\n  fetchInitialValues() {\n    if (this.props.match.params.stockMovementId) {\n      this.props.showSpinner();\n      const url = `/api/stockMovements/${this.props.match.params.stockMovementId}`;\n\n      apiClient\n        .get(url)\n        .then((response) => {\n          const resp = response.data.data;\n          const originType = resp.origin.locationType;\n          const destinationType = resp.destination.locationType;\n          const values = {\n            ...resp,\n            stockMovementId: resp.id,\n            movementNumber: resp.identifier,\n            origin: {\n              id: resp.origin.id,\n              type: originType ? originType.locationTypeCode : null,\n              name: resp.origin.name,\n              label: `${resp.origin.name} [${originType ? originType.description : null}]`,\n            },\n            destination: {\n              id: resp.destination.id,\n              type: destinationType ? destinationType.locationTypeCode : null,\n              name: resp.destination.name,\n              label: `${resp.destination.name} [${destinationType ? destinationType.description : null}]`,\n            },\n            requestedBy: {\n              id: resp.requestedBy.id,\n              name: resp.requestedBy.name,\n              label: resp.requestedBy.name,\n            },\n            requestType: {\n              name: resp.requestType.name,\n              label: resp.requestType.name,\n            },\n          };\n\n          let currentPage = 1;\n          switch (values.statusCode) {\n            case \"NEW\":\n              break;\n            case \"CREATED\":\n            case \"REQUESTING\":\n              currentPage = 2;\n              break;\n            case \"REQUESTED\":\n            case \"VALIDATING\":\n              currentPage = 3;\n              break;\n            case \"VALIDATED\":\n            case \"PICKING\":\n              currentPage = 4;\n              break;\n            case \"PICKED\":\n            case \"PACKING\":\n              currentPage = 5;\n              break;\n            default:\n              currentPage = this.props.hasPackingSupport ? 6 : 5;\n              break;\n          }\n\n          this.setState({ values, currentPage });\n        })\n        .catch(() => this.props.hideSpinner());\n    }\n  }\n\n  render() {\n    const { values, currentPage } = this.state;\n    const { currentLocation } = this.props;\n    const showOnly = values.origin && values.origin.id !== currentLocation.id;\n\n    return (\n      <Wizard\n        pageList={this.pageList}\n        stepList={this.stepList}\n        initialValues={values}\n        title={this.wizardTitle}\n        additionalTitle={this.additionalWizardTitle}\n        currentPage={currentPage}\n        prevPage={currentPage === 1 ? 1 : currentPage - 1}\n        updateWizardValues={this.updateWizardValues}\n        additionalProps={{ showOnly }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  locale: state.session.activeLanguage,\n  stockMovementTranslationsFetched:\n    state.session.fetchedTranslations.stockMovement,\n  translate: translateWithDefaultMessage(getTranslate(state.localize)),\n  hasPackingSupport: state.session.currentLocation.hasPackingSupport,\n  currentLocation: state.session.currentLocation,\n  formatLocalizedDate: formatDate(state.localize),\n});\n\nexport default connect(mapStateToProps, {\n  showSpinner,\n  hideSpinner,\n  fetchTranslations,\n})(StockMovements);\n\nStockMovements.propTypes = {\n  /** React router's object which contains information about url variables and params */\n  match: PropTypes.shape({\n    params: PropTypes.shape({ stockMovementId: PropTypes.string }),\n  }).isRequired,\n  /** Function called when data is loading */\n  showSpinner: PropTypes.func.isRequired,\n  /** Function called when data has loaded */\n  hideSpinner: PropTypes.func.isRequired,\n  locale: PropTypes.string.isRequired,\n  stockMovementTranslationsFetched: PropTypes.bool.isRequired,\n  fetchTranslations: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  /** Is true when currently selected location supports packing */\n  hasPackingSupport: PropTypes.bool.isRequired,\n  currentLocation: PropTypes.shape({\n    id: PropTypes.string,\n  }).isRequired,\n  /** Initial components' data */\n  initialValues: PropTypes.shape({\n    shipmentStatus: PropTypes.string,\n  }),\n  formatLocalizedDate: PropTypes.func.isRequired,\n};\n\nStockMovements.defaultProps = {\n  initialValues: {},\n};\n"],"names":["exports","tryFinally","func","onFinish","Promise","resolve","reject","promise","err","then","Task","stamp","this","prototype","delay","_this","resume","BinaryHeap","compare","_a","_b","getPos","setPos","heap","last","item","pos","clear","isEmpty","insert","bubble","update","Error","posParent","delta","sink","peekTop","extractTop","top","bottom","parent","posLeft","posRight","posNext","left","right","TaskQueue","concurrency","busyCount","backlog","a","b","nextBound","next","nextTickBound","timerStamp","add","Date","getTime","task","unblock","wrap","thisObject","args","_i","arguments","length","apply","ended","clearTimeout","timer","setTimeout","Object","defineProperty","value","factory","shouldCreateFullOutboundImportFeatureBar","bars","InfoBar","FULL_OUTBOUND_IMPORT","shouldShowFullOutboundImportFeatureBar","closed","_defineProperty","RowSaveStatus","SAVED","icon","React","RiCheckFill","id","defaultMessage","PENDING","RiSubtractFill","ERROR","RiErrorWarningFill","SAVING","Spinner","RowSaveIconIndicator","_ref","lineItemSaveStatus","_SaveStatusIcons$line","SaveStatusIcons","translate","useSelector","state","translateWithDefaultMessage","getTranslate","localize","Tooltip","html","className","duration","concat","toLowerCase","propTypes","PropTypes","defaultProps","_regeneratorRuntime","e","t","r","n","hasOwnProperty","o","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_defineProperties","_toPropertyKey","key","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_getPrototypeOf","bind","_setPrototypeOf","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","DELETE_BUTTON_FIELD","ButtonField","flexWidth","fieldKey","buttonLabel","buttonDefaultMessage","getDynamicAttr","fieldValue","removeItem","removeRow","showOnly","updateTotalCount","onMouseDown","disabled","statusCode","attributes","ROW_SAVE_ICON_FIELD","params","NO_STOCKLIST_FIELDS","lineItems","ArrayField","arrowsNavigation","virtualized","totalCount","_ref2","isRowLoaded","_ref3","loadMoreRows","_ref4","isFirstPageLoaded","_ref5","addButton","_ref6","addRow","getSortOrder","getStockMovementDraft","isDraftAvailable","sortOrder","rowSaveStatus","Translate","fields","product","ProductSelectField","label","headerAlign","showSelectedOptionColor","_ref7","rowIndex","rowCount","originId","focusField","autoFocus","locationId","onExactProductSelected","_ref8","quantityRequested","TextField","_ref9","updateRow","saveProgress","_","onBlur","onChange","recipient","SelectField","_ref10","recipients","setRecipientValue","headerHtml","Select","placeholder","classNamePrefix","options","val","editAll","$set","map","onTabPress","arrowRight","arrowDown","event","labelKey","openOnClick","deleteButton","STOCKLIST_FIELDS","showRowSaveIndicator","_ref11","_ref12","_ref13","_ref14","_ref15","newItemAdded","_ref16","newItem","_ref17","quantityAllowed","LabelField","_ref18","_values$lineItems$row","actionInProgress","AddItemsPage","_Component","props","queue","_classCallCheck","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_callSuper","_ref19","isAutosaveEnabled","isEdited","undefined","itemsWithStatuses","indexOf","parseInt","setState","debouncedSave","cancel","saveRequisitionItemsInCurrentStep","currentLineItems","initialValues","showSpinner","importTemplate","confirmSave","confirmTransition","validate","transitionToNextStep","saveAndTransitionToNextStep","didUserConfirmAlert","requestsQueue","enqueueRequest","request","_inherits","stockMovementTranslationsFetched","dataFetched","fetchAllData","createInfoBar","InfoBarConfigs","showInfoBar","nextProps","hideInfoBar","stocklist","fieldsWithRowSaveIcon","_this2","lineItemsToBeAdded","lineItemsWithStatus","lineItemsToBeUpdated","oldItem","old","oldQty","newQty","oldRecipient","newRecipient","keyIntersection","lineItem","origin","hasManageInventory","lineItemsToSave","previousState","response","startIndex","_this3","data","lineItemsData","Array","fill","isPaginated","pageSize","hideSpinner","_this4","savedStockMovement","errors","date","moment","minimumExpirationDate","boxName","palletName","dateRequested","expirationDate","diff","index","onConfirm","_this5","confirmAlert","title","message","buttons","onClick","afterClose","items","_item$product$display","productCode","displayNames","fetchUsers","fetchAddItemsPageData","fetchLineItems","_this6","url","stockMovementId","apiClient","get","setLineItems","_this7","_this$props$savedStoc","lastSaved","lastUpdated","savedStatusCode","resp","_resp$data$data","_ref20","_this8","formValues","_this9","checkDuplicatesAndTransitionToNextStep","transitionFunction","itemsMap","itemsWithSameCode","_this10","saveRequisitionItems","itemsToSave","getLineItemsToBeSaved","updateItemsUrl","payload","post","_callee","itemCandidatesToSave","withStateChange","filteredCandidates","saveItemsRequest","_this11","_args","_context","isOnline","addStockMovementDraft","lineItemsBackendData","_data$lineItems","savedItemsIds","backendResponseIds","backendResponseProductCodes","itemToChange","lineItemsAfterSave","_item$product","savedIds","find","savedItem","removeStockMovementDraft","notSavedItemsIds","lineItemsWithErrors","_saveRequisitionItemsInCurrentStep","_next","_throw","_x","_this12","saveItems","window","location","STOCK_MOVEMENT_URL","show","_this13","Alert","timeout","_this14","itemId","_this15","removeItemsUrl","_this16","_ref21","_this17","status","nextPage","saveItemsAndExportTemplate","_ref22","_this18","movementNumber","responseType","fileDownload","notification","NotificationType","INFO","_this19","formData","FormData","file","target","files","append","size","headers","invalid","_this20","previousPage","_this21","Form","onSubmit","mutators","arrayMutators","setColumnValue","render","_ref23","handleSubmit","form","history","listOutbound","htmlFor","style","display","accept","exportTemplate","refresh","removeAll","save","saveAndExit","getFields","fieldConfig","fieldName","renderFormField","isFromOrder","showPendingSaveNotification","Component","mapDispatchToProps","closeInfoBar","connect","ownProps","users","session","fetchedTranslations","stockMovement","hasPackingSupport","currentLocation","stockMovementDraft","connection","online","supportedActivities","infoBar","isRequired","defaultLabel","versionLabel","locationType","reduce","acc","addressField","address","FIELDS","required","valueKey","locationTypes","ADDRESS_FIELDS","address2","city","stateOrProvince","postalCode","country","AddDestinationModal","mapToOptionsList","fetchLocationTypes","activityCode","ActivityCode","DYNAMIC_CREATION","list","splitTranslation","locale","_objectWithoutProperties","_excluded","destination","onResponse","addressUrl","flattenRequest","onClose","Modal","isOpen","shouldCloseOnOverlayClick","withRouter","activeLanguage","fetchTranslations","description","requestedBy","requestType","showValueTooltip","autoload","cache","filterOptions","loadOptions","debouncedLocationsFetch","fetchStockLists","isSuperuser","createNewFromModal","createNewFromModalLabel","newOptionModalOpen","openNewLocationModal","debouncedPeopleFetch","DateField","localizeDate","autoComplete","requestTypes","stocklists","setRequestType","CreateStockMovement","setInitialValues","showDestinationModal","debouncePeopleFetch","debounceTime","minSearchLength","debounceLocationsFetch","openAddDestinationModal","fetchRequisitionTypes","match","locationTypeCode","newValues","_this$props$initialVa","originLocs","isOldSupplier","isNewSupplier","checkOrigin","checkDest","checkStockList","clearStocklist","stockMovementUrl","editOutbound","identifier","checkStockMovementChange","resetToInitialValues","saveStockMovement","utils","changeValue","setDestinationValues","_ref5$","_slicedToArray","searchConfig","BTN_CLASS_MAPPER","YES","NO","EARLIER","HIDDEN","editPageItems","rowComponent","TableRowWithSubfields","getDynamicRowAttr","rowValues","subfield","showOnlyErroredItems","itemFilter","quantityAvailable","filterOutItems","matchesProductCodeOrName","filterValue","hideRow","hasError","subfieldKey","formatValue","formatProductDisplayName","_fieldValue$displayNa","color","tooltipValue","toLocaleString","quantityOnHand","quantityDemandFulfilling","detailsButton","DetailsModal","defaultTitleMessage","_fieldValue$product","productId","productName","btnOpenText","btnOpenDefaultText","btnCancelText","btnSaveStyle","btnContainerClassName","btnOpenAsIcon","btnOpenStyle","border","cursor","btnOpenIcon","substituteButton","SubstitutionsModal","reviseRequisitionItems","reasonCodes","onOpen","substitutionStatus","btnOpenDisabled","btnOpenClassName","quantityRevised","reasonCode","isSubstituted","revert","revertItem","requisitionItemId","hidden","validateForSave","EditItemsPage","revisedItems","hasItemsLoaded","fetchEditPageItems","markErroredLines","currentLocale","fetchReasonCodes","substitutionItems","sub","updatedValues","itemIdx","error","errorIdx","forceFetch","fetchEditPageData","fetchItems","setEditPageItems","itemsToRevise","oldRevision","revision","editPageItemIndex","editPageItem","showOutboundEditValidationErrors","JSON","parse","config","savedItemIds","savedItems","oldItems","_toConsumableArray","reload","createPicklist","revisedItemIndex","$splice","revertItemsUrl","itemsUrl","updateEditPageItem","_this$state","erroredItemsCount","FilterInput","onClear","StockMovements","currentPage","updateWizardValues","fetchInitialValues","EditPage","PickPage","PackingPage","SendMovementPage","trackingNumber","text","delimeter","formatLocalizedDate","DateFormat","COMMON","shipped","received","originType","destinationType","_this$state2","Wizard","pageList","stepList","wizardTitle","additionalTitle","additionalWizardTitle","prevPage","additionalProps","formatDate","shipmentStatus"],"sourceRoot":""}